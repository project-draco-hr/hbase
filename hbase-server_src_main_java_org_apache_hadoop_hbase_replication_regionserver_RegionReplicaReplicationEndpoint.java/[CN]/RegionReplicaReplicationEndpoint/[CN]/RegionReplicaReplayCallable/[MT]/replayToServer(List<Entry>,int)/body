{
  if (entries.isEmpty() || skip) {
    skippedEntries.incrementAndGet();
    return ReplicateWALEntryResponse.newBuilder().build();
  }
  Entry[] entriesArray=new Entry[entries.size()];
  entriesArray=entries.toArray(entriesArray);
  Pair<AdminProtos.ReplicateWALEntryRequest,CellScanner> p=ReplicationProtbufUtil.buildReplicateWALEntryRequest(entriesArray,location.getRegionInfo().getEncodedNameAsBytes());
  try {
    PayloadCarryingRpcController controller=rpcControllerFactory.newController(p.getSecond());
    controller.setCallTimeout(timeout);
    controller.setPriority(tableName);
    return stub.replay(controller,p.getFirst());
  }
 catch (  ServiceException se) {
    throw ProtobufUtil.getRemoteException(se);
  }
}
