{
  final int COL_COUNT=10;
  final byte[] tableName=Bytes.toBytes("tablename");
  final byte[] row=Bytes.toBytes("row");
  HLog log=HLogFactory.createHLog(fs,hbaseDir,getName(),conf);
  try {
    DumbWALActionsListener visitor=new DumbWALActionsListener();
    log.registerWALActionsListener(visitor);
    long timestamp=System.currentTimeMillis();
    HTableDescriptor htd=new HTableDescriptor();
    htd.addFamily(new HColumnDescriptor("column"));
    HRegionInfo hri=new HRegionInfo(tableName,HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
    for (int i=0; i < COL_COUNT; i++) {
      WALEdit cols=new WALEdit();
      cols.add(new KeyValue(row,Bytes.toBytes("column"),Bytes.toBytes(Integer.toString(i)),timestamp,new byte[]{(byte)(i + '0')}));
      log.append(hri,tableName,cols,System.currentTimeMillis(),htd);
    }
    assertEquals(COL_COUNT,visitor.increments);
    log.unregisterWALActionsListener(visitor);
    WALEdit cols=new WALEdit();
    cols.add(new KeyValue(row,Bytes.toBytes("column"),Bytes.toBytes(Integer.toString(11)),timestamp,new byte[]{(byte)(11 + '0')}));
    log.append(hri,tableName,cols,System.currentTimeMillis(),htd);
    assertEquals(COL_COUNT,visitor.increments);
  }
  finally {
    if (log != null)     log.closeAndDelete();
  }
}
