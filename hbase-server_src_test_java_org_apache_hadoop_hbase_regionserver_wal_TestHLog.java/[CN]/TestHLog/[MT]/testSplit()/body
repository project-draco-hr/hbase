{
  final TableName tableName=TableName.valueOf(getName());
  final byte[] rowName=tableName.getName();
  Path logdir=new Path(hbaseDir,HConstants.HREGION_LOGDIR_NAME);
  HLog log=HLogFactory.createHLog(fs,hbaseDir,HConstants.HREGION_LOGDIR_NAME,conf);
  final int howmany=3;
  HRegionInfo[] infos=new HRegionInfo[3];
  Path tabledir=FSUtils.getTableDir(hbaseDir,tableName);
  fs.mkdirs(tabledir);
  for (int i=0; i < howmany; i++) {
    infos[i]=new HRegionInfo(tableName,Bytes.toBytes("" + i),Bytes.toBytes("" + (i + 1)),false);
    fs.mkdirs(new Path(tabledir,infos[i].getEncodedName()));
    LOG.info("allo " + new Path(tabledir,infos[i].getEncodedName()).toString());
  }
  HTableDescriptor htd=new HTableDescriptor(tableName);
  htd.addFamily(new HColumnDescriptor("column"));
  try {
    for (int ii=0; ii < howmany; ii++) {
      for (int i=0; i < howmany; i++) {
        for (int j=0; j < howmany; j++) {
          WALEdit edit=new WALEdit();
          byte[] family=Bytes.toBytes("column");
          byte[] qualifier=Bytes.toBytes(Integer.toString(j));
          byte[] column=Bytes.toBytes("column:" + Integer.toString(j));
          edit.add(new KeyValue(rowName,family,qualifier,System.currentTimeMillis(),column));
          LOG.info("Region " + i + ": "+ edit);
          log.append(infos[i],tableName,edit,System.currentTimeMillis(),htd);
        }
      }
      log.rollWriter();
    }
    log.close();
    List<Path> splits=HLogSplitter.split(hbaseDir,logdir,oldLogDir,fs,conf);
    verifySplits(splits,howmany);
    log=null;
  }
  finally {
    if (log != null) {
      log.closeAndDelete();
    }
  }
}
