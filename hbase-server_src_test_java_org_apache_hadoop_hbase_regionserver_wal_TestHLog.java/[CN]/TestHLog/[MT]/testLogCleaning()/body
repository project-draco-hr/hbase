{
  LOG.info("testLogCleaning");
  final byte[] tableName=Bytes.toBytes("testLogCleaning");
  final byte[] tableName2=Bytes.toBytes("testLogCleaning2");
  HLog log=HLogFactory.createHLog(fs,hbaseDir,getName(),conf);
  try {
    HRegionInfo hri=new HRegionInfo(tableName,HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
    HRegionInfo hri2=new HRegionInfo(tableName2,HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
    addEdits(log,hri,tableName,1);
    log.rollWriter();
    assertEquals(1,((FSHLog)log).getNumLogFiles());
    addEdits(log,hri,tableName,2);
    log.rollWriter();
    assertEquals(2,((FSHLog)log).getNumLogFiles());
    addEdits(log,hri,tableName,1);
    addEdits(log,hri2,tableName2,1);
    addEdits(log,hri,tableName,1);
    addEdits(log,hri2,tableName2,1);
    log.rollWriter();
    assertEquals(3,((FSHLog)log).getNumLogFiles());
    addEdits(log,hri2,tableName2,1);
    log.startCacheFlush(hri.getEncodedNameAsBytes());
    log.completeCacheFlush(hri.getEncodedNameAsBytes());
    log.rollWriter();
    assertEquals(2,((FSHLog)log).getNumLogFiles());
    addEdits(log,hri2,tableName2,1);
    log.startCacheFlush(hri2.getEncodedNameAsBytes());
    log.completeCacheFlush(hri2.getEncodedNameAsBytes());
    log.rollWriter();
    assertEquals(0,((FSHLog)log).getNumLogFiles());
  }
  finally {
    if (log != null)     log.closeAndDelete();
  }
}
