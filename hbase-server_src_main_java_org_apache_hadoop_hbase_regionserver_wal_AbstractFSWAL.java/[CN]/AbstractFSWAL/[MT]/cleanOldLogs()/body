{
  List<Pair<Path,Long>> logsToArchive=null;
  for (  Map.Entry<Path,WalProps> e : this.walFile2Props.entrySet()) {
    Path log=e.getKey();
    Map<byte[],Long> sequenceNums=e.getValue().encodedName2HighestSequenceId;
    if (this.sequenceIdAccounting.areAllLower(sequenceNums)) {
      if (logsToArchive == null) {
        logsToArchive=new ArrayList<>();
      }
      logsToArchive.add(Pair.newPair(log,e.getValue().logSize));
      if (LOG.isTraceEnabled()) {
        LOG.trace("WAL file ready for archiving " + log);
      }
    }
  }
  if (logsToArchive != null) {
    for (    Pair<Path,Long> logAndSize : logsToArchive) {
      this.totalLogSize.addAndGet(-logAndSize.getSecond());
      archiveLogFile(logAndSize.getFirst());
      this.walFile2Props.remove(logAndSize.getFirst());
    }
  }
}
