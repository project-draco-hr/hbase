{
  try {
    byte[] row=toBytes(rowb);
    HTable table=getTable(toBytes(tableName));
    HRegionLocation location=table.getRegionLocation(row,false);
    byte[] regionName=location.getRegionInfo().getRegionName();
    if (columns == null) {
      Get get=new Get(row);
      get.setTimeRange(Long.MIN_VALUE,timestamp);
      Result result=rs.get(regionName,get);
      return ThriftUtilities.rowResultFromHBase(result);
    }
    Get get=new Get(row);
    for (    ByteBuffer column : columns) {
      byte[][] famAndQf=KeyValue.parseColumn(toBytes(column));
      if (famAndQf.length == 1) {
        get.addFamily(famAndQf[0]);
      }
 else {
        get.addColumn(famAndQf[0],famAndQf[1]);
      }
    }
    get.setTimeRange(Long.MIN_VALUE,timestamp);
    Result result=rs.get(regionName,get);
    return ThriftUtilities.rowResultFromHBase(result);
  }
 catch (  NotServingRegionException e) {
    if (!redirect) {
      LOG.warn(e.getMessage(),e);
      throw new IOError(e.getMessage());
    }
    LOG.debug("ThriftServer redirecting getRowWithColumnsTs");
    return super.getRowWithColumnsTs(tableName,rowb,columns,timestamp,attributes);
  }
catch (  IOException e) {
    LOG.warn(e.getMessage(),e);
    throw new IOError(e.getMessage());
  }
}
