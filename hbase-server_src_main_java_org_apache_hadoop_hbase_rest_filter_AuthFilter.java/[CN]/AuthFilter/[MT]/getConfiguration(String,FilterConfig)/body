{
  Properties props=super.getConfiguration(configPrefix,filterConfig);
  props.setProperty(AuthenticationFilter.COOKIE_PATH,"/");
  Configuration conf=HBaseConfiguration.create();
  for (  Map.Entry<String,String> entry : conf) {
    String name=entry.getKey();
    if (name.startsWith(REST_PREFIX)) {
      String value=entry.getValue();
      if (name.equals(REST_AUTHENTICATION_PRINCIPAL)) {
        try {
          String machineName=Strings.domainNamePointerToHostName(DNS.getDefaultHost(conf.get(REST_DNS_INTERFACE,"default"),conf.get(REST_DNS_NAMESERVER,"default")));
          value=SecurityUtil.getServerPrincipal(value,machineName);
        }
 catch (        IOException ie) {
          throw new ServletException("Failed to retrieve server principal",ie);
        }
      }
      LOG.debug("Setting property " + name + "="+ value);
      name=name.substring(REST_PREFIX_LEN);
      props.setProperty(name,value);
    }
  }
  return props;
}
