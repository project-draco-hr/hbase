{
  long length=logfile.getLen();
  if (length <= 0) {
    LOG.warn("File " + logfile.getPath() + " might be still open, length is 0");
  }
  Path path=logfile.getPath();
  Reader in;
  int editsCount=0;
  try {
    in=HLog.getReader(fs,path,conf);
  }
 catch (  EOFException e) {
    if (length <= 0) {
      LOG.warn("Could not open " + path + " for reading. File is empty: "+ e);
      return;
    }
 else {
      throw e;
    }
  }
  try {
    Entry entry;
    while ((entry=in.next()) != null) {
      byte[] region=entry.getKey().getEncodedRegionName();
      LinkedList<Entry> queue=splitLogsMap.get(region);
      if (queue == null) {
        queue=new LinkedList<Entry>();
        splitLogsMap.put(region,queue);
      }
      queue.addLast(entry);
      editsCount++;
    }
  }
  finally {
    LOG.debug("Pushed=" + editsCount + " entries from "+ path);
    try {
      if (in != null) {
        in.close();
      }
    }
 catch (    IOException e) {
      LOG.warn("Close log reader in finally threw exception -- continuing",e);
    }
  }
}
