{
  Writer tempWriter;
synchronized (this.updateLock) {
    if (this.closed)     return;
    tempWriter=this.writer;
  }
  if (syncInfo.getLastSyncedTxId() >= txid) {
    return;
  }
  try {
    long now=System.currentTimeMillis();
    long flushedSeqId;
    try {
      flushedSeqId=logSyncerThread.flushWritesTo(tempWriter);
      tempWriter.sync();
    }
 catch (    IOException io) {
synchronized (this.updateLock) {
        tempWriter=this.writer;
        flushedSeqId=logSyncerThread.flushWritesTo(tempWriter);
        tempWriter.sync();
      }
    }
    syncInfo.notifySynced(flushedSeqId);
    syncTime.inc(System.currentTimeMillis() - now);
    if (!this.logRollRunning) {
      checkLowReplication();
      try {
        if (tempWriter.getLength() > this.logrollsize) {
          requestLogRoll();
        }
      }
 catch (      IOException x) {
        LOG.debug("Log roll failed and will be retried. (This is not an error)");
      }
    }
  }
 catch (  IOException e) {
    LOG.fatal("Could not sync. Requesting close of hlog",e);
    requestLogRoll();
    throw e;
  }
}
