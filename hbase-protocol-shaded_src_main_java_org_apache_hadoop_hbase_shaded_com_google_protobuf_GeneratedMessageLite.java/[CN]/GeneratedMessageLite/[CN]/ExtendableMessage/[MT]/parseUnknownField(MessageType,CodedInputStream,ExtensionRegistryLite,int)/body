{
  int wireType=WireFormat.getTagWireType(tag);
  int fieldNumber=WireFormat.getTagFieldNumber(tag);
  GeneratedExtension<MessageType,?> extension=extensionRegistry.findLiteExtensionByNumber(defaultInstance,fieldNumber);
  boolean unknown=false;
  boolean packed=false;
  if (extension == null) {
    unknown=true;
  }
 else   if (wireType == FieldSet.getWireFormatForFieldType(extension.descriptor.getLiteType(),false)) {
    packed=false;
  }
 else   if (extension.descriptor.isRepeated && extension.descriptor.type.isPackable() && wireType == FieldSet.getWireFormatForFieldType(extension.descriptor.getLiteType(),true)) {
    packed=true;
  }
 else {
    unknown=true;
  }
  if (unknown) {
    return parseUnknownField(tag,input);
  }
  if (packed) {
    int length=input.readRawVarint32();
    int limit=input.pushLimit(length);
    if (extension.descriptor.getLiteType() == WireFormat.FieldType.ENUM) {
      while (input.getBytesUntilLimit() > 0) {
        int rawValue=input.readEnum();
        Object value=extension.descriptor.getEnumType().findValueByNumber(rawValue);
        if (value == null) {
          return true;
        }
        extensions.addRepeatedField(extension.descriptor,extension.singularToFieldSetType(value));
      }
    }
 else {
      while (input.getBytesUntilLimit() > 0) {
        Object value=FieldSet.readPrimitiveField(input,extension.descriptor.getLiteType(),false);
        extensions.addRepeatedField(extension.descriptor,value);
      }
    }
    input.popLimit(limit);
  }
 else {
    Object value;
switch (extension.descriptor.getLiteJavaType()) {
case MESSAGE:
{
        MessageLite.Builder subBuilder=null;
        if (!extension.descriptor.isRepeated()) {
          MessageLite existingValue=(MessageLite)extensions.getField(extension.descriptor);
          if (existingValue != null) {
            subBuilder=existingValue.toBuilder();
          }
        }
        if (subBuilder == null) {
          subBuilder=extension.getMessageDefaultInstance().newBuilderForType();
        }
        if (extension.descriptor.getLiteType() == WireFormat.FieldType.GROUP) {
          input.readGroup(extension.getNumber(),subBuilder,extensionRegistry);
        }
 else {
          input.readMessage(subBuilder,extensionRegistry);
        }
        value=subBuilder.build();
        break;
      }
case ENUM:
    int rawValue=input.readEnum();
  value=extension.descriptor.getEnumType().findValueByNumber(rawValue);
if (value == null) {
  mergeVarintField(fieldNumber,rawValue);
  return true;
}
break;
default :
value=FieldSet.readPrimitiveField(input,extension.descriptor.getLiteType(),false);
break;
}
if (extension.descriptor.isRepeated()) {
extensions.addRepeatedField(extension.descriptor,extension.singularToFieldSetType(value));
}
 else {
extensions.setField(extension.descriptor,extension.singularToFieldSetType(value));
}
}
return true;
}
