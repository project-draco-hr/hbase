{
  if (decodingCtx.getHFileContext().isIncludesTags()) {
    int tagsLength=ByteBufferUtils.readCompressedInt(source);
    dest.put((byte)((tagsLength >> 8) & 0xff));
    dest.put((byte)(tagsLength & 0xff));
    if (tagsLength > 0) {
      TagCompressionContext tagCompressionContext=decodingCtx.getTagCompressionContext();
      if (tagCompressionContext != null) {
        tagCompressionContext.uncompressTags(source,dest,tagsLength);
      }
 else {
        ByteBufferUtils.copyFromStreamToBuffer(dest,source,tagsLength);
      }
    }
  }
  if (decodingCtx.getHFileContext().isIncludesMvcc()) {
    long memstoreTS=-1;
    try {
      memstoreTS=WritableUtils.readVLong(source);
      ByteBufferUtils.writeVLong(dest,memstoreTS);
    }
 catch (    IOException ex) {
      throw new RuntimeException("Unable to copy memstore timestamp " + memstoreTS + " after decoding a key/value");
    }
  }
}
