{
  if (blkDecodingCtx.getClass() != HFileBlockDefaultDecodingContext.class) {
    throw new IOException(this.getClass().getName() + " only accepts " + HFileBlockDefaultDecodingContext.class.getName()+ " as the decoding context.");
  }
  HFileBlockDefaultDecodingContext decodingCtx=(HFileBlockDefaultDecodingContext)blkDecodingCtx;
  if (decodingCtx.getHFileContext().isIncludesTags() && decodingCtx.getHFileContext().isCompressTags()) {
    if (decodingCtx.getTagCompressionContext() != null) {
      decodingCtx.getTagCompressionContext().clear();
    }
 else {
      try {
        TagCompressionContext tagCompressionContext=new TagCompressionContext(LRUDictionary.class,Byte.MAX_VALUE);
        decodingCtx.setTagCompressionContext(tagCompressionContext);
      }
 catch (      Exception e) {
        throw new IOException("Failed to initialize TagCompressionContext",e);
      }
    }
  }
  return internalDecodeKeyValues(source,0,0,decodingCtx);
}
