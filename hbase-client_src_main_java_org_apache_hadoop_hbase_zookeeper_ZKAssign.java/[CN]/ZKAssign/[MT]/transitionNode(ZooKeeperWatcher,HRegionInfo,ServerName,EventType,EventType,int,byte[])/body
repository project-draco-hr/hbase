{
  String encoded=region.getEncodedName();
  if (LOG.isDebugEnabled()) {
    LOG.debug(zkw.prefix("Attempting to transition node " + HRegionInfo.prettyPrint(encoded) + " from "+ beginState.toString()+ " to "+ endState.toString()));
  }
  String node=getNodeName(zkw,encoded);
  zkw.sync(node);
  Stat stat=new Stat();
  byte[] existingBytes=ZKUtil.getDataNoWatch(zkw,node,stat);
  if (existingBytes == null) {
    return -1;
  }
  RegionTransition rt=getRegionTransition(existingBytes);
  if (expectedVersion != -1 && stat.getVersion() != expectedVersion) {
    LOG.warn(zkw.prefix("Attempt to transition the " + "unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, "+ "the node existed but was version "+ stat.getVersion()+ " not the expected version "+ expectedVersion));
    return -1;
  }
 else   if (beginState.equals(EventType.M_ZK_REGION_OFFLINE) && endState.equals(EventType.RS_ZK_REGION_OPENING) && expectedVersion == -1 && stat.getVersion() != 0) {
    LOG.warn(zkw.prefix("Attempt to transition the " + "unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, "+ "the node existed but was version "+ stat.getVersion()+ " not the expected version "+ expectedVersion));
    return -1;
  }
  EventType et=rt.getEventType();
  if (!et.equals(beginState)) {
    String existingServer=(rt.getServerName() == null) ? "<unknown>" : rt.getServerName().toString();
    LOG.warn(zkw.prefix("Attempt to transition the unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, the node existed but"+ " was in the state "+ et+ " set by the server "+ existingServer));
    return -1;
  }
  try {
    rt=RegionTransition.createRegionTransition(endState,region.getRegionName(),serverName,payload);
    if (!ZKUtil.setData(zkw,node,rt.toByteArray(),stat.getVersion())) {
      LOG.warn(zkw.prefix("Attempt to transition the " + "unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, "+ "the node existed and was in the expected state but then when "+ "setting data we got a version mismatch"));
      return -1;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(zkw.prefix("Successfully transitioned node " + encoded + " from "+ beginState+ " to "+ endState));
    }
    return stat.getVersion() + 1;
  }
 catch (  KeeperException.NoNodeException nne) {
    LOG.warn(zkw.prefix("Attempt to transition the " + "unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, "+ "the node existed and was in the expected state but then when "+ "setting data it no longer existed"));
    return -1;
  }
}
