{
  try {
    Token<AuthenticationTokenIdentifier> token=user.doAs(new PrivilegedExceptionAction<Token<AuthenticationTokenIdentifier>>(){
      public Token<AuthenticationTokenIdentifier> run() throws Exception {
        return obtainToken(conf);
      }
    }
);
    if (token == null) {
      throw new IOException("No token returned for user " + user.getUserName());
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Obtained token " + token.getKind().toString() + " for user "+ user.getUserName());
    }
    user.addToken(token);
  }
 catch (  IOException ioe) {
    throw ioe;
  }
catch (  InterruptedException ie) {
    throw ie;
  }
catch (  RuntimeException re) {
    throw re;
  }
catch (  Exception e) {
    throw new UndeclaredThrowableException(e,"Unexpected exception obtaining token for user " + user.getUserName());
  }
}
