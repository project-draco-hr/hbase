{
  LOG.info("Starting testMetaScanner");
  setUp();
  final TableName TABLENAME=TableName.valueOf("testMetaScanner");
  final byte[] FAMILY=Bytes.toBytes("family");
  final byte[][] SPLIT_KEYS=new byte[][]{Bytes.toBytes("region_a"),Bytes.toBytes("region_b")};
  TEST_UTIL.createTable(TABLENAME,FAMILY,SPLIT_KEYS);
  HTable table=(HTable)connection.getTable(TABLENAME);
  TEST_UTIL.countRows(table);
  MetaScanner.MetaScannerVisitor visitor=mock(MetaScanner.MetaScannerVisitor.class);
  doReturn(true).when(visitor).processRow((Result)anyObject());
  MetaScanner.metaScan(connection,visitor,TABLENAME);
  verify(visitor,times(3)).processRow((Result)anyObject());
  reset(visitor);
  doReturn(true).when(visitor).processRow((Result)anyObject());
  MetaScanner.metaScan(connection,visitor,TABLENAME,HConstants.EMPTY_BYTE_ARRAY,1000);
  verify(visitor,times(3)).processRow((Result)anyObject());
  reset(visitor);
  doReturn(true).when(visitor).processRow((Result)anyObject());
  MetaScanner.metaScan(connection,visitor,TABLENAME,Bytes.toBytes("region_ac"),1000);
  verify(visitor,times(2)).processRow((Result)anyObject());
  reset(visitor);
  doReturn(true).when(visitor).processRow((Result)anyObject());
  MetaScanner.metaScan(connection,visitor,TABLENAME,Bytes.toBytes("region_ac"),1);
  verify(visitor,times(1)).processRow((Result)anyObject());
  table.close();
}
