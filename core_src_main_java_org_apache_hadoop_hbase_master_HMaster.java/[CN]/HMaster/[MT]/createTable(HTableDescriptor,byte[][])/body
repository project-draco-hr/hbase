{
  if (!isMasterRunning()) {
    throw new MasterNotRunningException();
  }
  HRegionInfo[] newRegions=null;
  if (splitKeys == null || splitKeys.length == 0) {
    newRegions=new HRegionInfo[]{new HRegionInfo(desc,null,null)};
  }
 else {
    int numRegions=splitKeys.length + 1;
    newRegions=new HRegionInfo[numRegions];
    byte[] startKey=null;
    byte[] endKey=null;
    for (int i=0; i < numRegions; i++) {
      endKey=(i == splitKeys.length) ? null : splitKeys[i];
      newRegions[i]=new HRegionInfo(desc,startKey,endKey);
      startKey=endKey;
    }
  }
  for (int tries=0; tries < this.numRetries; tries++) {
    try {
      if (!this.regionManager.areAllMetaRegionsOnline()) {
        throw new NotAllMetaRegionsOnlineException();
      }
      if (!this.serverManager.canAssignUserRegions()) {
        throw new IOException("not enough servers to create table yet");
      }
      createTable(newRegions);
      LOG.info("created table " + desc.getNameAsString());
      break;
    }
 catch (    TableExistsException e) {
      throw e;
    }
catch (    IOException e) {
      if (tries == this.numRetries - 1) {
        throw RemoteExceptionHandler.checkIOException(e);
      }
      this.sleeper.sleep();
    }
  }
}
