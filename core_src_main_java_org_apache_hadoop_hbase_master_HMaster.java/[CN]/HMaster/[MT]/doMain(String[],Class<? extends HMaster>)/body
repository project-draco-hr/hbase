{
  if (args.length < 1) {
    printUsageAndExit();
  }
  Configuration conf=HBaseConfiguration.create();
  for (  String cmd : args) {
    if (cmd.startsWith("--minServers=")) {
      conf.setInt("hbase.regions.server.count.min",Integer.valueOf(cmd.substring(13)));
      continue;
    }
    if (cmd.equalsIgnoreCase("start")) {
      try {
        RuntimeMXBean runtime=ManagementFactory.getRuntimeMXBean();
        if (runtime != null) {
          LOG.info("vmName=" + runtime.getVmName() + ", vmVendor="+ runtime.getVmVendor()+ ", vmVersion="+ runtime.getVmVersion());
          LOG.info("vmInputArguments=" + runtime.getInputArguments());
        }
        if (LocalHBaseCluster.isLocal(conf)) {
          MiniZooKeeperCluster zooKeeperCluster=new MiniZooKeeperCluster();
          File zkDataPath=new File(conf.get("hbase.zookeeper.property.dataDir"));
          int zkClientPort=conf.getInt("hbase.zookeeper.property.clientPort",0);
          if (zkClientPort == 0) {
            throw new IOException("No config value for hbase.zookeeper.property.clientPort");
          }
          zooKeeperCluster.setTickTime(conf.getInt("hbase.zookeeper.property.tickTime",3000));
          zooKeeperCluster.setClientPort(zkClientPort);
          int clientPort=zooKeeperCluster.startup(zkDataPath);
          if (clientPort != zkClientPort) {
            String errorMsg="Couldnt start ZK at requested address of " + zkClientPort + ", instead got: "+ clientPort+ ". Aborting. Why? "+ "Because clients (eg shell) wont be able to find this ZK quorum";
            System.err.println(errorMsg);
            throw new IOException(errorMsg);
          }
          conf.set("hbase.zookeeper.property.clientPort",Integer.toString(clientPort));
          (new LocalHBaseCluster(conf)).startup();
        }
 else {
          HMaster master=constructMaster(masterClass,conf);
          if (master.shutdownRequested.get()) {
            LOG.info("Won't bring the Master up as a shutdown is requested");
            return;
          }
          master.start();
        }
      }
 catch (      Throwable t) {
        LOG.error("Failed to start master",t);
        System.exit(-1);
      }
      break;
    }
    if (cmd.equalsIgnoreCase("stop")) {
      HBaseAdmin adm=null;
      try {
        adm=new HBaseAdmin(conf);
      }
 catch (      MasterNotRunningException e) {
        LOG.error("Master not running");
        System.exit(0);
      }
      try {
        adm.shutdown();
      }
 catch (      Throwable t) {
        LOG.error("Failed to stop master",t);
        System.exit(-1);
      }
      break;
    }
    printUsageAndExit();
  }
}
