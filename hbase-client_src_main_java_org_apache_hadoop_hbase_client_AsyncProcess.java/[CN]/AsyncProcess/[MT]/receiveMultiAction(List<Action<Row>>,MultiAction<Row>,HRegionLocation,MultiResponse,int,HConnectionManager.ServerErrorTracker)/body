{
  if (responses == null) {
    LOG.info("#" + id + ", attempt #"+ numAttempt+ "/"+ numTries+ " failed all ops, trying resubmit,"+ location);
    resubmitAll(initialActions,rsActions,location,numAttempt + 1,null,errorsByServer);
    return;
  }
  List<Action<Row>> toReplay=new ArrayList<Action<Row>>();
  Throwable throwable=null;
  int failureCount=0;
  boolean canRetry=true;
  for (  Map.Entry<byte[],List<Pair<Integer,Object>>> resultsForRS : responses.getResults().entrySet()) {
    boolean regionFailureRegistered=false;
    for (    Pair<Integer,Object> regionResult : resultsForRS.getValue()) {
      Object result=regionResult.getSecond();
      if (result == null || result instanceof Throwable) {
        throwable=(Throwable)result;
        Action<Row> correspondingAction=initialActions.get(regionResult.getFirst());
        Row row=correspondingAction.getAction();
        failureCount++;
        if (!regionFailureRegistered) {
          regionFailureRegistered=true;
          hConnection.updateCachedLocations(this.tableName,row.getRow(),result,location);
          if (failureCount == 1) {
            errorsByServer.reportServerError(location);
            canRetry=errorsByServer.canRetryMore(numAttempt);
          }
        }
        if (manageError(correspondingAction.getOriginalIndex(),row,canRetry,throwable,location)) {
          toReplay.add(correspondingAction);
        }
      }
 else {
        if (callback != null) {
          int index=regionResult.getFirst();
          Action<Row> correspondingAction=initialActions.get(index);
          Row row=correspondingAction.getAction();
          this.callback.success(index,resultsForRS.getKey(),row,(CResult)result);
        }
      }
    }
  }
  if (!toReplay.isEmpty()) {
    long backOffTime=errorsByServer.calculateBackoffTime(location,pause);
    if (numAttempt > startLogErrorsCnt) {
      LOG.info(createLog(numAttempt,failureCount,toReplay.size(),location.getServerName(),throwable,backOffTime,true,errorsByServer.getStartTrackingTime()));
    }
    try {
      Thread.sleep(backOffTime);
    }
 catch (    InterruptedException e) {
      LOG.warn("#" + id + ", not sent: "+ toReplay.size()+ " operations, "+ location,e);
      Thread.interrupted();
      return;
    }
    submit(initialActions,toReplay,numAttempt + 1,errorsByServer);
  }
 else {
    if (failureCount != 0) {
      LOG.warn(createLog(numAttempt,failureCount,toReplay.size(),location.getServerName(),throwable,-1,false,errorsByServer.getStartTrackingTime()));
    }
 else     if (numAttempt > startLogErrorsCnt + 1) {
      LOG.info(createLog(numAttempt,failureCount,toReplay.size(),location.getServerName(),throwable,-1,false,errorsByServer.getStartTrackingTime()));
    }
  }
}
