{
  boolean hasWait=cutoff != Long.MAX_VALUE;
  long lastLog=EnvironmentEdgeManager.currentTimeMillis();
  long currentInProgress;
  while (0 != (currentInProgress=actionsInProgress.get())) {
    long now=EnvironmentEdgeManager.currentTimeMillis();
    if (hasWait && (now * 1000L) > cutoff) {
      return false;
    }
    if (!hasWait) {
      if (now > lastLog + 10000) {
        lastLog=now;
        LOG.info("#" + id + ", waiting for "+ currentInProgress+ "  actions to finish");
      }
    }
synchronized (actionsInProgress) {
      if (actionsInProgress.get() == 0)       break;
      if (!hasWait) {
        actionsInProgress.wait(100);
      }
 else {
        long waitMicroSecond=Math.min(100000L,(cutoff - now * 1000L));
        TimeUnit.MICROSECONDS.timedWait(actionsInProgress,waitMicroSecond);
      }
    }
  }
  return true;
}
