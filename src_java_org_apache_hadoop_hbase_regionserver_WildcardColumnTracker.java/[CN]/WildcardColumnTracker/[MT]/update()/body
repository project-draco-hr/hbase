{
  if (this.columns == null || this.columns.size() == 0) {
    if (this.newColumns.size() > 0) {
      finalize(newColumns);
    }
    return;
  }
  if (this.newColumns.size() == 0) {
    this.index=0;
    this.column=this.columns.get(index);
    return;
  }
  List<ColumnCount> mergeColumns=new ArrayList<ColumnCount>(columns.size() + newColumns.size());
  index=0;
  newIndex=0;
  column=columns.get(0);
  newColumn=newColumns.get(0);
  while (true) {
    int ret=Bytes.compareTo(column.getBuffer(),column.getOffset(),column.getLength(),newColumn.getBuffer(),newColumn.getOffset(),newColumn.getLength());
    if (ret <= -1) {
      mergeColumns.add(column);
      if (++index == columns.size()) {
        mergeDown(mergeColumns,newColumns,newIndex);
        finalize(mergeColumns);
        return;
      }
      column=columns.get(index);
      continue;
    }
    mergeColumns.add(newColumn);
    if (++newIndex == newColumns.size()) {
      mergeDown(mergeColumns,columns,index);
      finalize(mergeColumns);
      return;
    }
    newColumn=newColumns.get(newIndex);
    continue;
  }
}
