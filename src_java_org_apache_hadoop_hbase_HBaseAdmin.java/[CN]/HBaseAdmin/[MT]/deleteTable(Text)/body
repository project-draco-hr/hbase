{
  if (this.master == null) {
    throw new MasterNotRunningException("master has been shut down");
  }
  checkReservedTableName(tableName);
  HRegionLocation firstMetaServer=getFirstMetaServerForTable(tableName);
  try {
    this.master.deleteTable(tableName);
  }
 catch (  RemoteException e) {
    throw RemoteExceptionHandler.decodeRemoteException(e);
  }
  HRegionInterface server=connection.getHRegionConnection(firstMetaServer.getServerAddress());
  HRegionInfo info=new HRegionInfo();
  for (int tries=0; tries < numRetries; tries++) {
    long scannerId=-1L;
    try {
      scannerId=server.openScanner(firstMetaServer.getRegionInfo().getRegionName(),COL_REGIONINFO_ARRAY,tableName,System.currentTimeMillis(),null);
      MapWritable values=server.next(scannerId);
      if (values == null || values.size() == 0) {
        break;
      }
      boolean found=false;
      for (      Map.Entry<Writable,Writable> e : values.entrySet()) {
        HStoreKey key=(HStoreKey)e.getKey();
        if (key.getColumn().equals(COL_REGIONINFO)) {
          info=(HRegionInfo)Writables.getWritable(((ImmutableBytesWritable)e.getValue()).get(),info);
          if (info.tableDesc.getName().equals(tableName)) {
            found=true;
          }
        }
      }
      if (!found) {
        break;
      }
    }
 catch (    IOException ex) {
      if (tries == numRetries - 1) {
        if (ex instanceof RemoteException) {
          ex=RemoteExceptionHandler.decodeRemoteException((RemoteException)ex);
        }
        throw ex;
      }
    }
 finally {
      if (scannerId != -1L) {
        try {
          server.close(scannerId);
        }
 catch (        Exception ex) {
          LOG.warn(ex);
        }
      }
    }
    try {
      Thread.sleep(pause);
    }
 catch (    InterruptedException e) {
    }
  }
  LOG.info("table " + tableName + " deleted");
}
