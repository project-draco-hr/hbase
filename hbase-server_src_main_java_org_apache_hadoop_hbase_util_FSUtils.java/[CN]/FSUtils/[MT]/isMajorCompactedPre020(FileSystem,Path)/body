{
  List<Path> tableDirs=getTableDirs(fs,hbaseRootDir);
  for (  Path d : tableDirs) {
    if (d.getName().equals(HConstants.HREGION_LOGDIR_NAME)) {
      continue;
    }
    FileStatus[] regionDirs=fs.listStatus(d,new DirFilter(fs));
    for (    FileStatus regionDir : regionDirs) {
      Path dd=regionDir.getPath();
      if (dd.getName().equals(HConstants.HREGION_COMPACTIONDIR_NAME)) {
        continue;
      }
      FileStatus[] familyDirs=fs.listStatus(dd,new DirFilter(fs));
      for (      FileStatus familyDir : familyDirs) {
        Path family=familyDir.getPath();
        FileStatus[] infoAndMapfile=fs.listStatus(family);
        if (infoAndMapfile.length != 0 && infoAndMapfile.length != 2) {
          LOG.debug(family.toString() + " has more than just info and mapfile: " + infoAndMapfile.length);
          return false;
        }
        for (int ll=0; ll < 2; ll++) {
          if (infoAndMapfile[ll].getPath().getName().equals("info") || infoAndMapfile[ll].getPath().getName().equals("mapfiles"))           continue;
          LOG.debug("Unexpected directory name: " + infoAndMapfile[ll].getPath());
          return false;
        }
        FileStatus[] familyStatus=fs.listStatus(new Path(family,"mapfiles"));
        if (familyStatus.length > 1) {
          LOG.debug(family.toString() + " has " + familyStatus.length+ " files.");
          return false;
        }
      }
    }
  }
  return true;
}
