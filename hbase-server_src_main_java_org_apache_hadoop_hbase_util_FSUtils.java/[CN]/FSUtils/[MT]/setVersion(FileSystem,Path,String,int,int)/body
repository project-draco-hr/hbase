{
  Path versionFile=new Path(rootdir,HConstants.VERSION_FILE_NAME);
  Path tempVersionFile=new Path(rootdir,HConstants.HBASE_TEMP_DIRECTORY + Path.SEPARATOR + HConstants.VERSION_FILE_NAME);
  while (true) {
    try {
      FSDataOutputStream s=fs.create(tempVersionFile);
      try {
        s.write(toVersionByteArray(version));
        s.close();
        s=null;
        if (!fs.rename(tempVersionFile,versionFile)) {
          throw new IOException("Unable to move temp version file to " + versionFile);
        }
      }
  finally {
        try {
          if (s != null)           s.close();
        }
 catch (        IOException ignore) {
        }
      }
      LOG.info("Created version file at " + rootdir.toString() + " with version="+ version);
      return;
    }
 catch (    IOException e) {
      if (retries > 0) {
        LOG.debug("Unable to create version file at " + rootdir.toString() + ", retrying",e);
        fs.delete(versionFile,false);
        try {
          if (wait > 0) {
            Thread.sleep(wait);
          }
        }
 catch (        InterruptedException ie) {
          throw (InterruptedIOException)new InterruptedIOException().initCause(ie);
        }
        retries--;
      }
 else {
        throw e;
      }
    }
  }
}
