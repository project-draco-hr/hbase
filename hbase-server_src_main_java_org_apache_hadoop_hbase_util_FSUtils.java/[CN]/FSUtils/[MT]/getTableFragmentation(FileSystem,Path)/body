{
  Map<String,Integer> frags=new HashMap<String,Integer>();
  int cfCountTotal=0;
  int cfFragTotal=0;
  DirFilter df=new DirFilter(fs);
  List<Path> tableDirs=getTableDirs(fs,hbaseRootDir);
  for (  Path d : tableDirs) {
    int cfCount=0;
    int cfFrag=0;
    FileStatus[] regionDirs=fs.listStatus(d,df);
    for (    FileStatus regionDir : regionDirs) {
      Path dd=regionDir.getPath();
      if (dd.getName().equals(HConstants.HREGION_COMPACTIONDIR_NAME)) {
        continue;
      }
      FileStatus[] familyDirs=fs.listStatus(dd,df);
      for (      FileStatus familyDir : familyDirs) {
        cfCount++;
        cfCountTotal++;
        Path family=familyDir.getPath();
        FileStatus[] familyStatus=fs.listStatus(family);
        if (familyStatus.length > 1) {
          cfFrag++;
          cfFragTotal++;
        }
      }
    }
    frags.put(FSUtils.getTableName(d).getNameAsString(),Math.round((float)cfFrag / cfCount * 100));
  }
  frags.put("-TOTAL-",Math.round((float)cfFragTotal / cfCountTotal * 100));
  return frags;
}
