{
  servlet.getMetrics().incrementRequests(1);
  byte[] endRow=model.hasEndRow() ? model.getEndRow() : null;
  RowSpec spec=new RowSpec(model.getStartRow(),endRow,model.getColumns(),model.getStartTime(),model.getEndTime(),1);
  try {
    Filter filter=ScannerResultGenerator.buildFilterFromModel(model);
    ScannerResultGenerator gen=new ScannerResultGenerator(actualTableName,spec,filter);
    String id=gen.getID();
    ScannerInstanceResource instance=new ScannerInstanceResource(user,actualTableName,id,gen,model.getBatch());
synchronized (scanners) {
      scanners.put(id,instance);
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("new scanner: " + id);
    }
    UriBuilder builder=uriInfo.getAbsolutePathBuilder();
    URI uri=builder.path(id).build();
    return Response.created(uri).build();
  }
 catch (  IOException e) {
    throw new WebApplicationException(e,Response.Status.SERVICE_UNAVAILABLE);
  }
catch (  Exception e) {
    throw new WebApplicationException(e,Response.Status.BAD_REQUEST);
  }
}
