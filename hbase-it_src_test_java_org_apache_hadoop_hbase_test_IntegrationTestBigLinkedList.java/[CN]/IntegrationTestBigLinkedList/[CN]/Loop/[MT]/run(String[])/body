{
  if (args.length < 5) {
    System.err.println(USAGE);
    return 1;
  }
  try {
    int numIterations=Integer.parseInt(args[0]);
    int numMappers=Integer.parseInt(args[1]);
    long numNodes=Long.parseLong(args[2]);
    String outputDir=args[3];
    int numReducers=Integer.parseInt(args[4]);
    Integer width=(args.length < 6) ? null : Integer.parseInt(args[5]);
    Integer wrapMultiplier=(args.length < 7) ? null : Integer.parseInt(args[6]);
    Integer numWalkers=(args.length < 8) ? 0 : Integer.parseInt(args[7]);
    long expectedNumNodes=0;
    if (numIterations < 0) {
      numIterations=Integer.MAX_VALUE;
    }
    LOG.info("Running Loop with args:" + Arrays.deepToString(args));
    for (int i=0; i < numIterations; i++) {
      LOG.info("Starting iteration = " + i);
      runGenerator(numMappers,numNodes,outputDir,width,wrapMultiplier,numWalkers);
      expectedNumNodes+=numMappers * numNodes;
      runVerify(outputDir,numReducers,expectedNumNodes);
    }
    return 0;
  }
 catch (  NumberFormatException e) {
    System.err.println("Parsing loop arguments failed: " + e.getMessage());
    System.err.println(USAGE);
    return 1;
  }
}
