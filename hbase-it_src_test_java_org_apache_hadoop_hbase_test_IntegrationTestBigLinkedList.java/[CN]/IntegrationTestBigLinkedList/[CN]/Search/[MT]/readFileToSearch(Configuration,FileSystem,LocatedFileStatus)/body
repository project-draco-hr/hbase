{
  SortedSet<byte[]> result=new TreeSet<byte[]>(Bytes.BYTES_COMPARATOR);
  TaskAttemptContext context=new TaskAttemptContextImpl(conf,new TaskAttemptID());
  try (SequenceFileAsBinaryInputFormat.SequenceFileAsBinaryRecordReader rr=new SequenceFileAsBinaryInputFormat.SequenceFileAsBinaryRecordReader()){
    InputSplit is=new FileSplit(keyFileStatus.getPath(),0,keyFileStatus.getLen(),new String[]{});
    rr.initialize(is,context);
    while (rr.nextKeyValue()) {
      rr.getCurrentKey();
      BytesWritable bw=rr.getCurrentValue();
switch (Verify.VerifyReducer.whichType(bw.getBytes())) {
case UNDEFINED:
        byte[] key=new byte[rr.getCurrentKey().getLength()];
      System.arraycopy(rr.getCurrentKey().getBytes(),0,key,0,rr.getCurrentKey().getLength());
    result.add(key);
  break;
}
}
}
 return result;
}
