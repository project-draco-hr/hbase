{
  LOG.info("Running Generator with numMappers=" + numMappers + ", numNodes="+ numNodes);
  createSchema();
  Job job=Job.getInstance(getConf());
  job.setJobName("Link Generator");
  job.setNumReduceTasks(0);
  job.setJarByClass(getClass());
  FileInputFormat.setInputPaths(job,tmpOutput);
  job.setInputFormatClass(OneFilePerMapperSFIF.class);
  job.setOutputKeyClass(NullWritable.class);
  job.setOutputValueClass(NullWritable.class);
  setJobConf(job,numMappers,numNodes,width,wrapMuplitplier);
  setMapperForGenerator(job);
  job.setOutputFormatClass(NullOutputFormat.class);
  job.getConfiguration().setBoolean("mapreduce.map.speculative",false);
  String multipleUnevenColumnFamiliesStr=System.getProperty(MULTIPLE_UNEVEN_COLUMNFAMILIES_KEY);
  if (multipleUnevenColumnFamiliesStr != null) {
    job.getConfiguration().setBoolean(MULTIPLE_UNEVEN_COLUMNFAMILIES_KEY,Boolean.parseBoolean(multipleUnevenColumnFamiliesStr));
  }
  TableMapReduceUtil.addDependencyJars(job);
  TableMapReduceUtil.addDependencyJars(job.getConfiguration(),AbstractHBaseTool.class);
  TableMapReduceUtil.initCredentials(job);
  boolean success=jobCompletion(job);
  return success ? 0 : 1;
}
