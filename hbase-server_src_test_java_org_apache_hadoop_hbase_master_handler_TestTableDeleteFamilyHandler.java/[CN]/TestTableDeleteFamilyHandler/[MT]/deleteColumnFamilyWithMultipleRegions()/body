{
  HBaseAdmin admin=TEST_UTIL.getHBaseAdmin();
  HTableDescriptor beforehtd=admin.getTableDescriptor(TABLENAME);
  FileSystem fs=TEST_UTIL.getDFSCluster().getFileSystem();
  assertTrue(admin.isTableAvailable(TABLENAME));
  assertEquals(3,beforehtd.getColumnFamilies().length);
  HColumnDescriptor[] families=beforehtd.getColumnFamilies();
  for (int i=0; i < families.length; i++) {
    assertTrue(families[i].getNameAsString().equals("cf" + (i + 1)));
  }
  Path tableDir=FSUtils.getTableDir(TEST_UTIL.getDefaultRootDirPath(),TABLENAME);
  assertTrue(fs.exists(tableDir));
  FileStatus[] fileStatus=fs.listStatus(tableDir);
  for (int i=0; i < fileStatus.length; i++) {
    if (fileStatus[i].isDirectory() == true) {
      FileStatus[] cf=fs.listStatus(fileStatus[i].getPath());
      int k=1;
      for (int j=0; j < cf.length; j++) {
        if (cf[j].isDirectory() == true && cf[j].getPath().getName().startsWith(".") == false) {
          assertEquals(cf[j].getPath().getName(),"cf" + k);
          k++;
        }
      }
    }
  }
  admin.disableTable(TABLENAME);
  admin.deleteColumn(TABLENAME.getName(),"cf2");
  HTableDescriptor afterhtd=admin.getTableDescriptor(TABLENAME);
  assertEquals(2,afterhtd.getColumnFamilies().length);
  HColumnDescriptor[] newFamilies=afterhtd.getColumnFamilies();
  assertTrue(newFamilies[0].getNameAsString().equals("cf1"));
  assertTrue(newFamilies[1].getNameAsString().equals("cf3"));
  fileStatus=fs.listStatus(tableDir);
  for (int i=0; i < fileStatus.length; i++) {
    if (fileStatus[i].isDirectory() == true) {
      FileStatus[] cf=fs.listStatus(fileStatus[i].getPath());
      for (int j=0; j < cf.length; j++) {
        if (cf[j].isDirectory() == true) {
          assertFalse(cf[j].getPath().getName().equals("cf2"));
        }
      }
    }
  }
}
