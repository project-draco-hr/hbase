{
  if (isSystemTable) {
    return ReturnCode.INCLUDE;
  }
  if (prevFam.getBytes() == null || !(CellUtil.matchingFamily(cell,prevFam.getBytes(),prevFam.getOffset(),prevFam.getLength()))) {
    prevFam.set(cell.getFamilyArray(),cell.getFamilyOffset(),cell.getFamilyLength());
    familyMaxVersions=cfVsMaxVersions.get(prevFam);
    prevQual.unset();
  }
  if (prevQual.getBytes() == null || !(CellUtil.matchingQualifier(cell,prevQual.getBytes(),prevQual.getOffset(),prevQual.getLength()))) {
    prevQual.set(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());
    currentVersions=0;
  }
  currentVersions++;
  if (currentVersions > familyMaxVersions) {
    return ReturnCode.SKIP;
  }
  byte[] family=CellUtil.cloneFamily(cell);
  byte[] qualifier=CellUtil.cloneQualifier(cell);
switch (strategy) {
case CHECK_TABLE_AND_CF_ONLY:
{
      if (authManager.authorize(user,table,family,qualifier,Permission.Action.READ)) {
        return ReturnCode.INCLUDE;
      }
    }
  break;
case CHECK_CELL_DEFAULT:
{
  if (authManager.authorize(user,table,family,qualifier,Permission.Action.READ) || authManager.authorize(user,table,cell,Permission.Action.READ)) {
    return ReturnCode.INCLUDE;
  }
}
break;
default :
throw new RuntimeException("Unhandled strategy " + strategy);
}
return ReturnCode.SKIP;
}
