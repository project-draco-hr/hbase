{
  LOG.info("testAcquireMultiTasks");
  SplitLogCounters.resetCounters();
  final String TATAS="tatas";
  final ServerName RS=ServerName.valueOf("rs,1,1");
  final int maxTasks=3;
  Configuration testConf=HBaseConfiguration.create(TEST_UTIL.getConfiguration());
  testConf.setInt("hbase.regionserver.wal.max.splitters",maxTasks);
  RegionServerServices mockedRS=getRegionServer(RS);
  for (int i=0; i < maxTasks; i++) {
    zkw.getRecoverableZooKeeper().create(ZKSplitLog.getEncodedNodeName(zkw,TATAS + i),new SplitLogTask.Unassigned(ServerName.valueOf("mgr,1,1")).toByteArray(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  }
  SplitLogWorker slw=new SplitLogWorker(zkw,testConf,mockedRS,neverEndingTask);
  slw.start();
  try {
    waitForCounter(SplitLogCounters.tot_wkr_task_acquired,0,maxTasks,3000);
    for (int i=0; i < maxTasks; i++) {
      byte[] bytes=ZKUtil.getData(zkw,ZKSplitLog.getEncodedNodeName(zkw,TATAS + i));
      SplitLogTask slt=SplitLogTask.parseFrom(bytes);
      assertTrue(slt.isOwned(RS));
    }
  }
  finally {
    stopSplitLogWorker(slw);
  }
}
