{
  LOG.info("testRaceForTask");
  SplitLogCounters.resetCounters();
  final String TRFT="trft";
  final ServerName SVR1=new ServerName("svr1,1,1");
  final ServerName SVR2=new ServerName("svr2,1,1");
  zkw.getRecoverableZooKeeper().create(ZKSplitLog.getEncodedNodeName(zkw,TRFT),new SplitLogTask.Unassigned(MANAGER).toByteArray(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  SplitLogWorker slw1=new SplitLogWorker(zkw,TEST_UTIL.getConfiguration(),SVR1,neverEndingTask);
  SplitLogWorker slw2=new SplitLogWorker(zkw,TEST_UTIL.getConfiguration(),SVR2,neverEndingTask);
  slw1.start();
  slw2.start();
  try {
    waitForCounter(SplitLogCounters.tot_wkr_task_acquired,0,1,1000);
    assertTrue(waitForCounterBoolean(SplitLogCounters.tot_wkr_failed_to_grab_task_owned,0,1,1000) || SplitLogCounters.tot_wkr_failed_to_grab_task_lost_race.get() == 1);
    byte[] bytes=ZKUtil.getData(zkw,ZKSplitLog.getEncodedNodeName(zkw,TRFT));
    SplitLogTask slt=SplitLogTask.parseFrom(bytes);
    assertTrue(slt.isOwned(SVR1) || slt.isOwned(SVR2));
  }
  finally {
    stopSplitLogWorker(slw1);
    stopSplitLogWorker(slw2);
  }
}
