{
  boolean result=false;
  if (filesToCompact == null || filesToCompact.isEmpty() || majorCompactionTime == 0) {
    return result;
  }
  long lowTimestamp=getLowestTimestamp(fs,filesToCompact.get(0).getPath().getParent());
  long now=System.currentTimeMillis();
  if (lowTimestamp > 0l && lowTimestamp < (now - this.majorCompactionTime)) {
    long elapsedTime=now - lowTimestamp;
    if (filesToCompact.size() == 1 && filesToCompact.get(0).isMajorCompaction() && (this.ttl == HConstants.FOREVER || elapsedTime < this.ttl)) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Skipping major compaction of " + this.storeNameStr + " because one (major) compacted file only and elapsedTime "+ elapsedTime+ "ms is < ttl="+ this.ttl);
      }
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Major compaction triggered on store " + this.storeNameStr + "; time since last major compaction "+ (now - lowTimestamp)+ "ms");
      }
      result=true;
    }
  }
  return result;
}
