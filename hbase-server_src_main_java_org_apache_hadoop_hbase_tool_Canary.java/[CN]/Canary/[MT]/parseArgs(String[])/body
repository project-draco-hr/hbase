{
  int index=-1;
  for (int i=0; i < args.length; i++) {
    String cmd=args[i];
    if (cmd.startsWith("-")) {
      if (index >= 0) {
        System.err.println("Invalid command line options");
        printUsageAndExit();
      }
      if (cmd.equals("-help")) {
        printUsageAndExit();
      }
 else       if (cmd.equals("-daemon") && interval == 0) {
        interval=DEFAULT_INTERVAL;
      }
 else       if (cmd.equals("-interval")) {
        i++;
        if (i == args.length) {
          System.err.println("-interval needs a numeric value argument.");
          printUsageAndExit();
        }
        try {
          interval=Long.parseLong(args[i]) * 1000;
        }
 catch (        NumberFormatException e) {
          System.err.println("-interval needs a numeric value argument.");
          printUsageAndExit();
        }
      }
 else       if (cmd.equals("-zookeeper")) {
        this.zookeeperMode=true;
      }
 else       if (cmd.equals("-regionserver")) {
        this.regionServerMode=true;
      }
 else       if (cmd.equals("-allRegions")) {
        this.regionServerAllRegions=true;
      }
 else       if (cmd.equals("-writeSniffing")) {
        this.writeSniffing=true;
      }
 else       if (cmd.equals("-treatFailureAsError")) {
        this.treatFailureAsError=true;
      }
 else       if (cmd.equals("-e")) {
        this.useRegExp=true;
      }
 else       if (cmd.equals("-t")) {
        i++;
        if (i == args.length) {
          System.err.println("-t needs a numeric value argument.");
          printUsageAndExit();
        }
        try {
          this.timeout=Long.parseLong(args[i]);
        }
 catch (        NumberFormatException e) {
          System.err.println("-t needs a numeric value argument.");
          printUsageAndExit();
        }
      }
 else       if (cmd.equals("-writeTable")) {
        i++;
        if (i == args.length) {
          System.err.println("-writeTable needs a string value argument.");
          printUsageAndExit();
        }
        this.writeTableName=TableName.valueOf(args[i]);
      }
 else       if (cmd.equals("-f")) {
        i++;
        if (i == args.length) {
          System.err.println("-f needs a boolean value argument (true|false).");
          printUsageAndExit();
        }
        this.failOnError=Boolean.parseBoolean(args[i]);
      }
 else {
        System.err.println(cmd + " options is invalid.");
        printUsageAndExit();
      }
    }
 else     if (index < 0) {
      index=i;
    }
  }
  if (this.regionServerAllRegions && !this.regionServerMode) {
    System.err.println("-allRegions can only be specified in regionserver mode.");
    printUsageAndExit();
  }
  if (this.zookeeperMode) {
    if (this.regionServerMode || this.regionServerAllRegions || this.writeSniffing) {
      System.err.println("-zookeeper is exclusive and cannot be combined with " + "other modes.");
      printUsageAndExit();
    }
  }
  return index;
}
