{
  servlet.getMetrics().incrementRequests(1);
  final int rowsToSend=userRequestedLimit;
  servlet.getMetrics().incrementSucessfulScanRequests(1);
  final Iterator<Result> itr=results.iterator();
  return new CellSetModelStream(new ArrayList<RowModel>(){
    public Iterator<RowModel> iterator(){
      return new Iterator<RowModel>(){
        int count=rowsToSend;
        @Override public boolean hasNext(){
          if (count > 0) {
            return itr.hasNext();
          }
 else {
            return false;
          }
        }
        @Override public void remove(){
          throw new UnsupportedOperationException("Remove method cannot be used in CellSetModelStream");
        }
        @Override public RowModel next(){
          Result rs=itr.next();
          if ((rs == null) || (count <= 0)) {
            return null;
          }
          byte[] rowKey=rs.getRow();
          RowModel rModel=new RowModel(rowKey);
          List<Cell> kvs=rs.listCells();
          for (          Cell kv : kvs) {
            rModel.addCell(new CellModel(CellUtil.cloneFamily(kv),CellUtil.cloneQualifier(kv),kv.getTimestamp(),CellUtil.cloneValue(kv)));
          }
          count--;
          return rModel;
        }
      }
;
    }
  }
);
}
