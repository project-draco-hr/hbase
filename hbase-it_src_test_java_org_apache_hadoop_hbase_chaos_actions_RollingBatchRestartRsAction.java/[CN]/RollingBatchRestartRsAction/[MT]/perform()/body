{
  LOG.info(String.format("Performing action: Rolling batch restarting %d%% of region servers",(int)(ratio * 100)));
  List<ServerName> selectedServers=selectServers();
  Queue<ServerName> serversToBeKilled=new LinkedList<ServerName>(selectedServers);
  Queue<ServerName> deadServers=new LinkedList<ServerName>();
  while ((!serversToBeKilled.isEmpty() || !deadServers.isEmpty()) && !context.isStopping()) {
    KillOrStart action=KillOrStart.KILL;
    if (serversToBeKilled.isEmpty()) {
      action=KillOrStart.START;
    }
 else     if (deadServers.isEmpty()) {
      action=KillOrStart.KILL;
    }
 else     if (deadServers.size() >= maxDeadServers) {
      action=KillOrStart.START;
    }
 else {
      action=RandomUtils.nextBoolean() ? KillOrStart.KILL : KillOrStart.START;
    }
    ServerName server;
switch (action) {
case KILL:
      server=serversToBeKilled.remove();
    try {
      killRs(server);
    }
 catch (    org.apache.hadoop.util.Shell.ExitCodeException e) {
      LOG.info("Problem killing but presume successful; code=" + e.getExitCode(),e);
    }
  deadServers.add(server);
break;
case START:
try {
server=deadServers.remove();
startRs(server);
}
 catch (org.apache.hadoop.util.Shell.ExitCodeException e) {
LOG.info("Problem starting, will retry; code=" + e.getExitCode(),e);
}
break;
}
sleep(RandomUtils.nextInt((int)sleepTime));
}
}
