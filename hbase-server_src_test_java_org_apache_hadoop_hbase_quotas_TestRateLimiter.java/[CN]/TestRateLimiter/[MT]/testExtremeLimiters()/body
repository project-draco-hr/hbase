{
  ManualEnvironmentEdge testEdge=new ManualEnvironmentEdge();
  EnvironmentEdgeManager.injectEdge(testEdge);
  long limit=Long.MAX_VALUE - 1;
  RateLimiter avgLimiter=new AverageIntervalRateLimiter();
  avgLimiter.set(limit,TimeUnit.SECONDS);
  RateLimiter fixLimiter=new FixedIntervalRateLimiter();
  fixLimiter.set(limit,TimeUnit.SECONDS);
  assertEquals(limit,avgLimiter.getAvailable());
  assertEquals(limit,fixLimiter.getAvailable());
  assertTrue(avgLimiter.canExecute(limit / 2));
  avgLimiter.consume(limit / 2);
  assertTrue(fixLimiter.canExecute(limit / 2));
  fixLimiter.consume(limit / 2);
  assertTrue((limit - (limit / 2)) == avgLimiter.getAvailable());
  assertTrue((limit - (limit / 2)) == fixLimiter.getAvailable());
  testEdge.incValue(100);
  assertFalse(avgLimiter.canExecute(limit));
  assertFalse(fixLimiter.canExecute(limit));
  testEdge.incValue(500);
  assertTrue(avgLimiter.canExecute(limit));
  assertFalse(fixLimiter.canExecute(limit));
  assertTrue(limit == avgLimiter.getAvailable());
  assertTrue((limit - (limit / 2)) == fixLimiter.getAvailable());
  testEdge.incValue(500);
  assertTrue(avgLimiter.canExecute(limit));
  assertTrue(fixLimiter.canExecute(limit));
  assertTrue(limit == avgLimiter.getAvailable());
  assertTrue(limit == fixLimiter.getAvailable());
  EnvironmentEdgeManager.reset();
}
