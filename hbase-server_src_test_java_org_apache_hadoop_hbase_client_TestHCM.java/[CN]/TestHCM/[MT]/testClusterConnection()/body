{
  ThreadPoolExecutor otherPool=new ThreadPoolExecutor(1,1,5,TimeUnit.SECONDS,new SynchronousQueue<Runnable>(),Threads.newDaemonThreadFactory("test-hcm"));
  HConnection con1=ConnectionManager.createConnection(TEST_UTIL.getConfiguration());
  HConnection con2=ConnectionManager.createConnection(TEST_UTIL.getConfiguration(),otherPool);
  assertTrue(otherPool == ((ConnectionImplementation)con2).getCurrentBatchPool());
  String tableName="testClusterConnection";
  TEST_UTIL.createTable(tableName.getBytes(),FAM_NAM).close();
  HTable t=(HTable)con1.getTable(tableName,otherPool);
  assertNull("Internal Thread pool should be null",((ConnectionImplementation)con1).getCurrentBatchPool());
  assertTrue(otherPool == t.getPool());
  t.close();
  t=(HTable)con2.getTable(tableName);
  assertTrue(otherPool == t.getPool());
  t.close();
  t=(HTable)con2.getTable(Bytes.toBytes(tableName));
  assertTrue(otherPool == t.getPool());
  t.close();
  t=(HTable)con2.getTable(TableName.valueOf(tableName));
  assertTrue(otherPool == t.getPool());
  t.close();
  t=(HTable)con1.getTable(tableName);
  ExecutorService pool=((ConnectionImplementation)con1).getCurrentBatchPool();
  assertNotNull("An internal Thread pool should have been created",pool);
  assertTrue(t.getPool() == pool);
  t.close();
  t=(HTable)con1.getTable(tableName);
  assertTrue(t.getPool() == pool);
  t.close();
  con1.close();
  assertTrue(pool.isShutdown());
  con2.close();
  assertFalse(otherPool.isShutdown());
  otherPool.shutdownNow();
}
