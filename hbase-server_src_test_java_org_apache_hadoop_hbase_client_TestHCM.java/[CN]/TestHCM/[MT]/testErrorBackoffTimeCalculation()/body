{
  final long ANY_PAUSE=100;
  ServerName location=ServerName.valueOf("127.0.0.1",1,0);
  ServerName diffLocation=ServerName.valueOf("127.0.0.1",2,0);
  ManualEnvironmentEdge timeMachine=new ManualEnvironmentEdge();
  EnvironmentEdgeManager.injectEdge(timeMachine);
  try {
    long largeAmountOfTime=ANY_PAUSE * 1000;
    ConnectionImplementation.ServerErrorTracker tracker=new ConnectionImplementation.ServerErrorTracker(largeAmountOfTime,100);
    assertEquals(0,tracker.calculateBackoffTime(location,ANY_PAUSE));
    tracker.reportServerError(location);
    assertEqualsWithJitter(ANY_PAUSE * HConstants.RETRY_BACKOFF[0],tracker.calculateBackoffTime(location,ANY_PAUSE));
    tracker.reportServerError(location);
    tracker.reportServerError(location);
    tracker.reportServerError(location);
    assertEqualsWithJitter(ANY_PAUSE * HConstants.RETRY_BACKOFF[3],tracker.calculateBackoffTime(location,ANY_PAUSE));
    assertEquals(0,tracker.calculateBackoffTime(diffLocation,ANY_PAUSE));
    tracker.reportServerError(diffLocation);
    assertEqualsWithJitter(ANY_PAUSE * HConstants.RETRY_BACKOFF[0],tracker.calculateBackoffTime(diffLocation,ANY_PAUSE));
    assertEqualsWithJitter(ANY_PAUSE * 2 * HConstants.RETRY_BACKOFF[3],tracker.calculateBackoffTime(location,ANY_PAUSE * 2));
  }
  finally {
    EnvironmentEdgeManager.reset();
  }
}
