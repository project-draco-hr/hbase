{
  ExecutorService executor=startupMasterExecutor("testSSHWhenDisableTableInProgress");
  CatalogTracker ct=Mockito.mock(CatalogTracker.class);
  LoadBalancer balancer=LoadBalancerFactory.getLoadBalancer(server.getConfiguration());
  ZKAssign.deleteAllNodes(this.watcher);
  AssignmentManager am=new AssignmentManager(this.server,this.serverManager,ct,balancer,executor,null,master.getTableLockManager());
  am.regionOnline(REGIONINFO,SERVERNAME_A);
  am.getRegionStates().updateRegionState(REGIONINFO,State.PENDING_CLOSE);
  if (state == Table.State.DISABLING) {
    am.getZKTable().setDisablingTable(REGIONINFO.getTableName());
  }
 else {
    am.getZKTable().setDisabledTable(REGIONINFO.getTableName());
  }
  RegionTransition data=RegionTransition.createRegionTransition(EventType.M_ZK_REGION_CLOSING,REGIONINFO.getRegionName(),SERVERNAME_A);
  String node=ZKAssign.getNodeName(this.watcher,REGIONINFO.getEncodedName());
  ZKUtil.createAndWatch(this.watcher,node,data.toByteArray());
  try {
    processServerShutdownHandler(ct,am,false);
    assertTrue("The znode should be deleted.",ZKUtil.checkExists(this.watcher,node) == -1);
    if (state == Table.State.DISABLED) {
      assertFalse("Region state of region in pending close should be removed from rit.",am.getRegionStates().isRegionsInTransition());
    }
  }
  finally {
    am.setEnabledTable(REGIONINFO.getTableName());
    executor.shutdown();
    am.shutdown();
    ZKAssign.deleteAllNodes(this.watcher);
  }
}
