{
  Mockito.when(this.serverManager.sendRegionClose(SERVERNAME_A,REGIONINFO,0,null,true)).thenReturn(true);
  AssignmentManagerWithExtrasForTesting am=setUpMockedAssignmentManager(this.server,this.serverManager);
  try {
    createRegionPlanAndBalance(am,SERVERNAME_A,SERVERNAME_B,REGIONINFO);
    startFakeFailedOverMasterAssignmentManager(am,this.watcher);
    while (!am.processRITInvoked)     Thread.sleep(1);
    am.addPlan(REGIONINFO.getEncodedName(),new RegionPlan(REGIONINFO,null,SERVERNAME_B));
    int versionid=ZKAssign.transitionNodeClosed(this.watcher,REGIONINFO,SERVERNAME_A,-1);
    assertNotSame(versionid,-1);
    am.gate.set(false);
    Mocking.waitForRegionPendingOpenInRIT(am,REGIONINFO.getEncodedName());
    versionid=ZKAssign.getVersion(this.watcher,REGIONINFO);
    assertNotSame(-1,versionid);
    versionid=ZKAssign.transitionNode(server.getZooKeeper(),REGIONINFO,SERVERNAME_B,EventType.M_ZK_REGION_OFFLINE,EventType.RS_ZK_REGION_OPENING,versionid);
    assertNotSame(-1,versionid);
    versionid=ZKAssign.transitionNodeOpened(this.watcher,REGIONINFO,SERVERNAME_B,versionid);
    assertNotSame(-1,versionid);
    ZKAssign.blockUntilNoRIT(watcher);
  }
  finally {
    am.getExecutorService().shutdown();
    am.shutdown();
  }
}
