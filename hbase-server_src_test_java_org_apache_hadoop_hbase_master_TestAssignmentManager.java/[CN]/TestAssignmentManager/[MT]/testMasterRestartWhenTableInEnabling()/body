{
  enabling=true;
  List<ServerName> destServers=new ArrayList<ServerName>(1);
  destServers.add(SERVERNAME_A);
  Mockito.when(this.serverManager.createDestinationServersList()).thenReturn(destServers);
  Mockito.when(this.serverManager.isServerOnline(SERVERNAME_A)).thenReturn(true);
  HTU.getConfiguration().setInt(HConstants.MASTER_PORT,0);
  CoordinatedStateManager csm=CoordinatedStateManagerFactory.getCoordinatedStateManager(HTU.getConfiguration());
  Server server=new HMaster(HTU.getConfiguration(),csm);
  Whitebox.setInternalState(server,"serverManager",this.serverManager);
  AssignmentManagerWithExtrasForTesting am=setUpMockedAssignmentManager(server,this.serverManager);
  try {
    am.getTableStateManager().setTableState(REGIONINFO.getTable(),Table.State.ENABLING);
    new EnableTableHandler(server,REGIONINFO.getTable(),am.getCatalogTracker(),am,new NullTableLockManager(),true).prepare().process();
    assertEquals("Number of assignments should be 1.",1,assignmentCount);
    assertTrue("Table should be enabled.",am.getTableStateManager().isTableState(REGIONINFO.getTable(),Table.State.ENABLED));
  }
  finally {
    enabling=false;
    assignmentCount=0;
    am.getTableStateManager().setTableState(REGIONINFO.getTable(),Table.State.ENABLED);
    am.shutdown();
    ZKAssign.deleteAllNodes(this.watcher);
  }
}
