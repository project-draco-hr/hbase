{
  AssignmentManagerWithExtrasForTesting am=setUpMockedAssignmentManager(this.server,this.serverManager);
  try {
    createRegionPlanAndBalance(am,SERVERNAME_A,SERVERNAME_B,REGIONINFO);
    startFakeFailedOverMasterAssignmentManager(am,this.watcher);
    while (!am.processRITInvoked)     Thread.sleep(1);
    int versionid=ZKAssign.transitionNodeClosed(this.watcher,REGIONINFO,SERVERNAME_A,-1);
    assertNotSame(versionid,-1);
    while (!Mocking.verifyRegionState(this.watcher,REGIONINFO,EventType.M_ZK_REGION_OFFLINE)) {
      Threads.sleep(1);
    }
    versionid=ZKAssign.getVersion(this.watcher,REGIONINFO);
    assertNotSame(-1,versionid);
    versionid=ZKAssign.transitionNode(server.getZooKeeper(),REGIONINFO,SERVERNAME_A,EventType.M_ZK_REGION_OFFLINE,EventType.RS_ZK_REGION_OPENING,versionid);
    assertNotSame(-1,versionid);
    versionid=ZKAssign.transitionNodeOpened(this.watcher,REGIONINFO,SERVERNAME_B,versionid);
    assertNotSame(-1,versionid);
    am.gate.set(false);
    ZKAssign.blockUntilNoRIT(watcher);
  }
  finally {
    am.getExecutorService().shutdown();
    am.shutdown();
  }
}
