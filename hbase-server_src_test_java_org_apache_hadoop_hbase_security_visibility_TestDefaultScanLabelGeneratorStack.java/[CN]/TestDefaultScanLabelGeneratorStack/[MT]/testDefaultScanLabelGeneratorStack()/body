{
  final TableName tableName=TableName.valueOf(TEST_NAME.getMethodName());
  SUPERUSER.runAs(new PrivilegedExceptionAction<Void>(){
    public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=TEST_UTIL.createTable(tableName,CF)){
        Put put=new Put(ROW_1);
        put.add(CF,Q1,HConstants.LATEST_TIMESTAMP,value1);
        put.setCellVisibility(new CellVisibility(SECRET));
        table.put(put);
        put=new Put(ROW_1);
        put.add(CF,Q2,HConstants.LATEST_TIMESTAMP,value2);
        put.setCellVisibility(new CellVisibility(CONFIDENTIAL));
        table.put(put);
        put=new Put(ROW_1);
        put.add(CF,Q3,HConstants.LATEST_TIMESTAMP,value3);
        table.put(put);
        return null;
      }
     }
  }
);
  SUPERUSER.runAs(new PrivilegedExceptionAction<Void>(){
    public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
        Scan s=new Scan();
        ResultScanner scanner=table.getScanner(s);
        Result[] next=scanner.next(1);
        assertTrue(next.length == 1);
        CellScanner cellScanner=next[0].cellScanner();
        cellScanner.advance();
        Cell current=cellScanner.current();
        assertTrue(Bytes.equals(current.getRowArray(),current.getRowOffset(),current.getRowLength(),ROW_1,0,ROW_1.length));
        assertTrue(Bytes.equals(current.getQualifier(),Q1));
        assertTrue(Bytes.equals(current.getValue(),value1));
        cellScanner.advance();
        current=cellScanner.current();
        assertTrue(Bytes.equals(current.getRowArray(),current.getRowOffset(),current.getRowLength(),ROW_1,0,ROW_1.length));
        assertTrue(Bytes.equals(current.getQualifier(),Q2));
        assertTrue(Bytes.equals(current.getValue(),value2));
        cellScanner.advance();
        current=cellScanner.current();
        assertTrue(Bytes.equals(current.getRowArray(),current.getRowOffset(),current.getRowLength(),ROW_1,0,ROW_1.length));
        assertTrue(Bytes.equals(current.getQualifier(),Q3));
        assertTrue(Bytes.equals(current.getValue(),value3));
        return null;
      }
     }
  }
);
  TESTUSER.runAs(new PrivilegedExceptionAction<Void>(){
    public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
        Scan s=new Scan();
        ResultScanner scanner=table.getScanner(s);
        Result[] next=scanner.next(1);
        assertTrue(next.length == 1);
        CellScanner cellScanner=next[0].cellScanner();
        cellScanner.advance();
        Cell current=cellScanner.current();
        assertTrue(Bytes.equals(current.getRowArray(),current.getRowOffset(),current.getRowLength(),ROW_1,0,ROW_1.length));
        assertTrue(Bytes.equals(current.getQualifier(),Q2));
        assertTrue(Bytes.equals(current.getValue(),value2));
        cellScanner.advance();
        current=cellScanner.current();
        assertTrue(Bytes.equals(current.getRowArray(),current.getRowOffset(),current.getRowLength(),ROW_1,0,ROW_1.length));
        assertTrue(Bytes.equals(current.getQualifier(),Q3));
        assertTrue(Bytes.equals(current.getValue(),value3));
        Scan s1=new Scan();
        s1.setAuthorizations(new Authorizations(new String[]{SECRET,CONFIDENTIAL}));
        ResultScanner scanner1=table.getScanner(s1);
        Result[] next1=scanner1.next(1);
        assertTrue(next1.length == 1);
        CellScanner cellScanner1=next1[0].cellScanner();
        cellScanner1.advance();
        Cell current1=cellScanner1.current();
        assertTrue(Bytes.equals(current1.getRowArray(),current1.getRowOffset(),current1.getRowLength(),ROW_1,0,ROW_1.length));
        assertTrue(Bytes.equals(current1.getQualifier(),Q2));
        assertTrue(Bytes.equals(current1.getValue(),value2));
        cellScanner1.advance();
        current1=cellScanner1.current();
        assertTrue(Bytes.equals(current1.getRowArray(),current1.getRowOffset(),current1.getRowLength(),ROW_1,0,ROW_1.length));
        assertTrue(Bytes.equals(current1.getQualifier(),Q3));
        assertTrue(Bytes.equals(current1.getValue(),value3));
        Scan s2=new Scan();
        s2.setAuthorizations(new Authorizations(new String[]{SECRET}));
        ResultScanner scanner2=table.getScanner(s2);
        Result next2=scanner2.next();
        CellScanner cellScanner2=next2.cellScanner();
        cellScanner2.advance();
        Cell current2=cellScanner2.current();
        assertTrue(Bytes.equals(current2.getRowArray(),current2.getRowOffset(),current2.getRowLength(),ROW_1,0,ROW_1.length));
        assertTrue(Bytes.equals(current2.getQualifier(),Q3));
        assertTrue(Bytes.equals(current2.getValue(),value3));
        assertFalse(cellScanner2.advance());
        return null;
      }
     }
  }
);
}
