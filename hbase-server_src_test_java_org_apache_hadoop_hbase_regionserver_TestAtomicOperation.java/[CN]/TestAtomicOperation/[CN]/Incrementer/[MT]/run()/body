{
  for (int i=0; i < numIncrements; i++) {
    try {
      Increment inc=new Increment(row);
      inc.addColumn(fam1,qual1,amount);
      inc.addColumn(fam1,qual2,amount * 2);
      inc.addColumn(fam2,qual3,amount * 3);
      inc.setDurability(Durability.ASYNC_WAL);
      Result result=region.increment(inc,HConstants.NO_NONCE,HConstants.NO_NONCE);
      if (result != null) {
        assertEquals(Bytes.toLong(result.getValue(fam1,qual1)) * 2,Bytes.toLong(result.getValue(fam1,qual2)));
        assertTrue(result.getValue(fam2,qual3) != null);
        assertEquals(Bytes.toLong(result.getValue(fam1,qual1)) * 3,Bytes.toLong(result.getValue(fam2,qual3)));
        assertEquals(Bytes.toLong(result.getValue(fam1,qual1)) * 2,Bytes.toLong(result.getValue(fam1,qual2)));
        long fam1Increment=Bytes.toLong(result.getValue(fam1,qual1)) * 3;
        long fam2Increment=Bytes.toLong(result.getValue(fam2,qual3));
        assertEquals("fam1=" + fam1Increment + ", fam2="+ fam2Increment,fam1Increment,fam2Increment);
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
  }
}
