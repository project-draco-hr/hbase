{
  final String tableName="testPutAndCheckAndPut";
  Configuration conf=TEST_UTIL.getConfiguration();
  conf.setClass(HConstants.REGION_IMPL,MockHRegion.class,HeapSize.class);
  HTableDescriptor htd=new HTableDescriptor(TableName.valueOf(tableName)).addFamily(new HColumnDescriptor(family));
  final Region region=TEST_UTIL.createLocalHRegion(htd,null,null);
  Put[] puts=new Put[1];
  Put put=new Put(Bytes.toBytes("r1"));
  put.add(Bytes.toBytes(family),Bytes.toBytes("q1"),Bytes.toBytes("10"));
  puts[0]=put;
  region.batchMutate(puts,HConstants.NO_NONCE,HConstants.NO_NONCE);
  MultithreadedTestUtil.TestContext ctx=new MultithreadedTestUtil.TestContext(conf);
  ctx.addThread(new PutThread(ctx,region));
  ctx.addThread(new CheckAndPutThread(ctx,region));
  ctx.startThreads();
  while (testStep != TestStep.CHECKANDPUT_COMPLETED) {
    Thread.sleep(100);
  }
  ctx.stop();
  Scan s=new Scan();
  RegionScanner scanner=region.getScanner(s);
  List<Cell> results=new ArrayList<Cell>();
  scanner.next(results,2);
  for (  Cell keyValue : results) {
    assertEquals("50",Bytes.toString(CellUtil.cloneValue(keyValue)));
  }
}
