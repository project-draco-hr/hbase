{
  ProcedureWALHeader header=ProcedureWALHeader.newBuilder().setVersion(ProcedureWALFormat.HEADER_VERSION).setType(ProcedureWALFormat.LOG_TYPE_STREAM).setMinProcId(storeTracker.getMinProcId()).setLogId(logId).build();
  FSDataOutputStream newStream=null;
  Path newLogFile=null;
  long startPos=-1;
  try {
    newLogFile=getLogFilePath(logId);
    newStream=fs.create(newLogFile,false);
    ProcedureWALFormat.writeHeader(newStream,header);
    startPos=newStream.getPos();
  }
 catch (  FileAlreadyExistsException e) {
    LOG.error("Log file with id=" + logId + " already exists",e);
    return false;
  }
  lock.lock();
  try {
    closeStream();
synchronized (storeTracker) {
      storeTracker.resetUpdates();
    }
    stream=newStream;
    flushLogId=logId;
    totalSynced.set(0);
    lastRollTs=System.currentTimeMillis();
    logs.add(new ProcedureWALFile(fs,newLogFile,header,startPos));
  }
  finally {
    lock.unlock();
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Roll new state log: " + logId);
  }
  return true;
}
