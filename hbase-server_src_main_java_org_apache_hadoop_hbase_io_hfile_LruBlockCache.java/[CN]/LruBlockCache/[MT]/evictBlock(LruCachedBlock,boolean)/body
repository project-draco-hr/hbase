{
  boolean found=map.remove(block.getCacheKey()) != null;
  if (!found) {
    return 0;
  }
  updateSizeMetrics(block,true);
  long val=elements.decrementAndGet();
  if (LOG.isTraceEnabled()) {
    long size=map.size();
    assertCounterSanity(size,val);
  }
  if (evictedByEvictionProcess) {
    stats.evicted(block.getCachedTime(),block.getCacheKey().isPrimary());
    if (victimHandler != null) {
      if (victimHandler instanceof BucketCache) {
        boolean wait=getCurrentSize() < acceptableSize();
        boolean inMemory=block.getPriority() == BlockPriority.MEMORY;
        ((BucketCache)victimHandler).cacheBlockWithWait(block.getCacheKey(),block.getBuffer(),inMemory,wait);
      }
 else {
        victimHandler.cacheBlock(block.getCacheKey(),block.getBuffer());
      }
    }
  }
  return block.heapSize();
}
