{
  map.remove(block.getCacheKey());
  updateSizeMetrics(block,true);
  long val=elements.decrementAndGet();
  if (LOG.isTraceEnabled()) {
    long size=map.size();
    assertCounterSanity(size,val);
  }
  stats.evicted(block.getCachedTime());
  if (evictedByEvictionProcess && victimHandler != null) {
    if (victimHandler instanceof BucketCache) {
      boolean wait=getCurrentSize() < acceptableSize();
      boolean inMemory=block.getPriority() == BlockPriority.MEMORY;
      ((BucketCache)victimHandler).cacheBlockWithWait(block.getCacheKey(),block.getBuffer(),inMemory,wait);
    }
 else {
      victimHandler.cacheBlock(block.getCacheKey(),block.getBuffer());
    }
  }
  return block.heapSize();
}
