{
  long startTime=System.currentTimeMillis();
  for (int k=FIRST_ROW; k <= NUM_VALS; k++) {
    BatchUpdate b=new BatchUpdate("row_" + k);
    b.put(CONTENTS_BASIC,Bytes.toBytes(CONTENTSTR + k));
    b.put(ANCHORNUM + k,Bytes.toBytes(ANCHORSTR + k));
    table.commit(b);
  }
  LOG.info("Write " + NUM_VALS + " rows. Elapsed time: "+ ((System.currentTimeMillis() - startTime) / 1000.0));
  startTime=System.currentTimeMillis();
  byte[] collabel=null;
  for (int k=FIRST_ROW; k <= NUM_VALS; k++) {
    String rowlabelStr="row_" + k;
    byte[] rowlabel=Bytes.toBytes(rowlabelStr);
    byte bodydata[]=table.get(rowlabel,CONTENTS_BASIC).getValue();
    assertNotNull("no data for row " + rowlabelStr + "/"+ CONTENTS_BASIC_STR,bodydata);
    String bodystr=new String(bodydata,HConstants.UTF8_ENCODING);
    String teststr=CONTENTSTR + k;
    assertTrue("Incorrect value for key: (" + rowlabelStr + "/"+ CONTENTS_BASIC_STR+ "), expected: '"+ teststr+ "' got: '"+ bodystr+ "'",teststr.compareTo(bodystr) == 0);
    String collabelStr=ANCHORNUM + k;
    collabel=Bytes.toBytes(collabelStr);
    bodydata=table.get(rowlabel,collabel).getValue();
    assertNotNull("no data for row " + rowlabelStr + "/"+ collabelStr,bodydata);
    bodystr=new String(bodydata,HConstants.UTF8_ENCODING);
    teststr=ANCHORSTR + k;
    assertTrue("Incorrect value for key: (" + rowlabelStr + "/"+ collabelStr+ "), expected: '"+ teststr+ "' got: '"+ bodystr+ "'",teststr.compareTo(bodystr) == 0);
  }
  LOG.info("Read " + NUM_VALS + " rows. Elapsed time: "+ ((System.currentTimeMillis() - startTime) / 1000.0));
}
