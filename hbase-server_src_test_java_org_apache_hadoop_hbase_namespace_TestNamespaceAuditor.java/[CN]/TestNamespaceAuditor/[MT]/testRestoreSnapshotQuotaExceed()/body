{
  String nsp=prefix + "_testRestoreSnapshotQuotaExceed";
  NamespaceDescriptor nspDesc=NamespaceDescriptor.create(nsp).addConfiguration(TableNamespaceManager.KEY_MAX_REGIONS,"10").build();
  ADMIN.createNamespace(nspDesc);
  NamespaceDescriptor ndesc=ADMIN.getNamespaceDescriptor(nsp);
  assertNotNull("Namespace descriptor found null.",ndesc);
  TableName tableName1=TableName.valueOf(nsp + TableName.NAMESPACE_DELIM + "table1");
  HTableDescriptor tableDescOne=new HTableDescriptor(tableName1);
  HColumnDescriptor fam1=new HColumnDescriptor("fam1");
  tableDescOne.addFamily(fam1);
  ADMIN.createTable(tableDescOne,Bytes.toBytes("AAA"),Bytes.toBytes("ZZZ"),4);
  NamespaceTableAndRegionInfo nstate=getNamespaceState(nsp);
  assertEquals("Intial region count should be 4.",4,nstate.getRegionCount());
  String snapshot="snapshot_testRestoreSnapshotQuotaExceed";
  ADMIN.snapshot(snapshot,tableName1);
  ADMIN.disableTable(tableName1);
  ADMIN.deleteTable(tableName1);
  ADMIN.createTable(tableDescOne);
  ndesc.setConfiguration(TableNamespaceManager.KEY_MAX_REGIONS,"3");
  ADMIN.modifyNamespace(ndesc);
  ADMIN.disableTable(tableName1);
  try {
    ADMIN.restoreSnapshot(snapshot);
    fail("Region quota is exceeded so QuotaExceededException should be thrown but HBaseAdmin" + " wraps IOException into RestoreSnapshotException");
  }
 catch (  RestoreSnapshotException ignore) {
    assertTrue(ignore.getCause() instanceof QuotaExceededException);
  }
  assertEquals(1,getNamespaceState(nsp).getRegionCount());
  ADMIN.enableTable(tableName1);
  ADMIN.deleteSnapshot(snapshot);
}
