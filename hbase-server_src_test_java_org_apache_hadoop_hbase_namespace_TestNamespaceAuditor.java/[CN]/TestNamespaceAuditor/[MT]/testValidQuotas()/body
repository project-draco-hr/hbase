{
  boolean exceptionCaught=false;
  FileSystem fs=UTIL.getHBaseCluster().getMaster().getMasterFileSystem().getFileSystem();
  Path rootDir=UTIL.getHBaseCluster().getMaster().getMasterFileSystem().getRootDir();
  NamespaceDescriptor nspDesc=NamespaceDescriptor.create(prefix + "vq1").addConfiguration(TableNamespaceManager.KEY_MAX_REGIONS,"hihdufh").addConfiguration(TableNamespaceManager.KEY_MAX_TABLES,"2").build();
  try {
    admin.createNamespace(nspDesc);
  }
 catch (  Exception exp) {
    LOG.warn(exp);
    exceptionCaught=true;
  }
 finally {
    assertTrue(exceptionCaught);
    assertFalse(fs.exists(FSUtils.getNamespaceDir(rootDir,nspDesc.getName())));
  }
  nspDesc=NamespaceDescriptor.create(prefix + "vq2").addConfiguration(TableNamespaceManager.KEY_MAX_REGIONS,"-456").addConfiguration(TableNamespaceManager.KEY_MAX_TABLES,"2").build();
  try {
    admin.createNamespace(nspDesc);
  }
 catch (  Exception exp) {
    LOG.warn(exp);
    exceptionCaught=true;
  }
 finally {
    assertTrue(exceptionCaught);
    assertFalse(fs.exists(FSUtils.getNamespaceDir(rootDir,nspDesc.getName())));
  }
  nspDesc=NamespaceDescriptor.create(prefix + "vq3").addConfiguration(TableNamespaceManager.KEY_MAX_REGIONS,"10").addConfiguration(TableNamespaceManager.KEY_MAX_TABLES,"sciigd").build();
  try {
    admin.createNamespace(nspDesc);
  }
 catch (  Exception exp) {
    LOG.warn(exp);
    exceptionCaught=true;
  }
 finally {
    assertTrue(exceptionCaught);
    assertFalse(fs.exists(FSUtils.getNamespaceDir(rootDir,nspDesc.getName())));
  }
  nspDesc=NamespaceDescriptor.create(prefix + "vq4").addConfiguration(TableNamespaceManager.KEY_MAX_REGIONS,"10").addConfiguration(TableNamespaceManager.KEY_MAX_TABLES,"-1500").build();
  try {
    admin.createNamespace(nspDesc);
  }
 catch (  Exception exp) {
    LOG.warn(exp);
    exceptionCaught=true;
  }
 finally {
    assertTrue(exceptionCaught);
    assertFalse(fs.exists(FSUtils.getNamespaceDir(rootDir,nspDesc.getName())));
  }
}
