{
  HTableDescriptor htd=new HTableDescriptor(tableName);
  htd.addFamily(new HColumnDescriptor(columnName));
  HBaseAdmin admin=new HBaseAdmin(conf);
  admin.createTable(htd);
  HTable table=new HTable(conf,tableName);
  byte[] k=new byte[3];
  int rowCount=0;
  for (byte b1='a'; b1 < 'z'; b1++) {
    for (byte b2='a'; b2 < 'z'; b2++) {
      for (byte b3='a'; b3 < 'z'; b3++) {
        k[0]=b1;
        k[1]=b2;
        k[2]=b3;
        Put put=new Put(k);
        byte[][] famAndQf=KeyValue.parseColumn(columnName);
        put.add(famAndQf[0],famAndQf[1],k);
        table.put(put);
        rowCount++;
      }
    }
  }
  Map<HRegionInfo,HServerAddress> m=table.getRegionsInfo();
  System.out.println("Initial regions (" + m.size() + "): "+ m);
  assertTrue(m.size() == 1);
  Scan scan=new Scan();
  ResultScanner scanner=table.getScanner(scan);
  int rows=0;
  for (  Result result : scanner) {
    rows++;
  }
  scanner.close();
  assertEquals(rowCount,rows);
  admin.split(Bytes.toString(tableName));
  Thread.sleep(15 * 1000);
  m=table.getRegionsInfo();
  System.out.println("Regions after split (" + m.size() + "): "+ m);
  assertTrue(m.size() == 2);
  scan=new Scan();
  scanner=table.getScanner(scan);
  rows=0;
  for (  Result result : scanner) {
    rows++;
    if (rows > rowCount) {
      scanner.close();
      assertTrue("Have already scanned more rows than expected (" + rowCount + ")",false);
    }
  }
  scanner.close();
  assertEquals(rowCount,rows);
}
