{
  final TableName tableName=TableName.valueOf("testEnableTableWithNoRegionServers");
  final MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
  final HMaster m=cluster.getMaster();
  final HBaseAdmin admin=TEST_UTIL.getHBaseAdmin();
  final HTableDescriptor desc=new HTableDescriptor(tableName);
  desc.addFamily(new HColumnDescriptor(FAMILYNAME));
  admin.createTable(desc);
  admin.disableTable(tableName);
  TEST_UTIL.waitTableDisabled(tableName.getName());
  admin.enableTable(tableName);
  TEST_UTIL.waitTableEnabled(tableName);
  admin.disableTable(tableName);
  JVMClusterUtil.RegionServerThread rs=cluster.getRegionServerThreads().get(0);
  rs.getRegionServer().stop("stop");
  cluster.waitForRegionServerToStop(rs.getRegionServer().getServerName(),10000);
  EnableTableHandler handler=new EnableTableHandler(m,tableName,m.getAssignmentManager(),m.getTableLockManager(),true);
  handler.prepare();
  handler.process();
  assertTrue(admin.isTableEnabled(tableName));
  JVMClusterUtil.RegionServerThread rs2=cluster.startRegionServer();
  m.getAssignmentManager().assign(admin.getTableRegions(tableName));
  TEST_UTIL.waitUntilAllRegionsAssigned(tableName);
  List<HRegionInfo> onlineRegions=admin.getOnlineRegions(rs2.getRegionServer().getServerName());
  assertEquals(1,onlineRegions.size());
  assertEquals(tableName,onlineRegions.get(0).getTable());
}
