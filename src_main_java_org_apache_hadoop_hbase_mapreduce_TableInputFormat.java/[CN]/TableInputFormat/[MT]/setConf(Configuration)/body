{
  this.conf=configuration;
  String tableName=conf.get(INPUT_TABLE);
  try {
    setHTable(new HTable(new Configuration(conf),tableName));
  }
 catch (  Exception e) {
    LOG.error(StringUtils.stringifyException(e));
  }
  Scan scan=null;
  if (conf.get(SCAN) != null) {
    try {
      scan=TableMapReduceUtil.convertStringToScan(conf.get(SCAN));
    }
 catch (    IOException e) {
      LOG.error("An error occurred.",e);
    }
  }
 else {
    try {
      scan=new Scan();
      if (conf.get(SCAN_COLUMNS) != null) {
        addColumns(scan,conf.get(SCAN_COLUMNS));
      }
      if (conf.get(SCAN_COLUMN_FAMILY) != null) {
        scan.addFamily(Bytes.toBytes(conf.get(SCAN_COLUMN_FAMILY)));
      }
      if (conf.get(SCAN_TIMESTAMP) != null) {
        scan.setTimeStamp(Long.parseLong(conf.get(SCAN_TIMESTAMP)));
      }
      if (conf.get(SCAN_TIMERANGE_START) != null && conf.get(SCAN_TIMERANGE_END) != null) {
        scan.setTimeRange(Long.parseLong(conf.get(SCAN_TIMERANGE_START)),Long.parseLong(conf.get(SCAN_TIMERANGE_END)));
      }
      if (conf.get(SCAN_MAXVERSIONS) != null) {
        scan.setMaxVersions(Integer.parseInt(conf.get(SCAN_MAXVERSIONS)));
      }
      if (conf.get(SCAN_CACHEDROWS) != null) {
        scan.setCaching(Integer.parseInt(conf.get(SCAN_CACHEDROWS)));
      }
      scan.setCacheBlocks((conf.getBoolean(SCAN_CACHEBLOCKS,false)));
    }
 catch (    Exception e) {
      LOG.error(StringUtils.stringifyException(e));
    }
  }
  setScan(scan);
}
