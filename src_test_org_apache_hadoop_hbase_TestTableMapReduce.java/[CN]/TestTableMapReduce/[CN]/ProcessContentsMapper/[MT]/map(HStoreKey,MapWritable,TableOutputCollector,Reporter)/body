{
  Text tKey=key.getRow();
  if (value.size() != 1) {
    throw new IOException("There should only be one input column");
  }
  Text[] keys=value.keySet().toArray(new Text[value.size()]);
  if (!keys[0].equals(TEXT_INPUT_COLUMN)) {
    throw new IOException("Wrong input column. Expected: " + INPUT_COLUMN + " but got: "+ keys[0]);
  }
  String originalValue=new String(((ImmutableBytesWritable)value.get(keys[0])).get());
  StringBuilder newValue=new StringBuilder();
  for (int i=originalValue.length() - 1; i >= 0; i--) {
    newValue.append(originalValue.charAt(i));
  }
  MapWritable outval=new MapWritable((Class)Text.class,(Class)ImmutableBytesWritable.class,(Map)new TreeMap<Text,ImmutableBytesWritable>());
  outval.put(TEXT_OUTPUT_COLUMN,new ImmutableBytesWritable(newValue.toString().getBytes()));
  output.collect(tKey,outval);
}
