{
  String logName=TestLogLevel.class.getName();
  Log testlog=LogFactory.getLog(logName);
  if (testlog instanceof Log4JLogger) {
    Logger log=((Log4JLogger)testlog).getLogger();
    log.debug("log.debug1");
    log.info("log.info1");
    log.error("log.error1");
    assertTrue(!Level.ERROR.equals(log.getEffectiveLevel()));
    HttpServer server=null;
    try {
      server=new HttpServer.Builder().setName("..").addEndpoint(new URI("http://localhost:0")).setFindPort(true).build();
      server.start();
      String authority=NetUtils.getHostPortString(server.getConnectorAddress(0));
      URL url=new URL("http://" + authority + "/logLevel?log="+ logName+ "&level="+ Level.ERROR);
      out.println("*** Connecting to " + url);
      HttpURLConnection connection=(HttpURLConnection)url.openConnection();
      connection.connect();
      BufferedReader in=new BufferedReader(new InputStreamReader(connection.getInputStream()));
      for (String line; (line=in.readLine()) != null; out.println(line))       ;
      in.close();
      connection.disconnect();
      log.debug("log.debug2");
      log.info("log.info2");
      log.error("log.error2");
      assertTrue(Level.ERROR.equals(log.getEffectiveLevel()));
      String[] args={"-setlevel",authority,logName,Level.DEBUG.toString()};
      LogLevel.main(args);
      log.debug("log.debug3");
      log.info("log.info3");
      log.error("log.error3");
      assertTrue(Level.DEBUG.equals(log.getEffectiveLevel()));
    }
  finally {
      if (server != null) {
        server.stop();
      }
    }
  }
 else {
    out.println(testlog.getClass() + " not tested.");
  }
}
