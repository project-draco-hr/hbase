{
  List<Put> puts=new ArrayList<Put>();
  Put put=new Put(ROW_1);
  put.addColumn(COLUMN_1,QUALIFIER_1,VALUE_1);
  puts.add(put);
  put=new Put(ROW_2);
  put.addColumn(COLUMN_1,QUALIFIER_1,VALUE_1);
  puts.add(put);
  put=new Put(ROW_3);
  put.addColumn(COLUMN_1,QUALIFIER_1,VALUE_1);
  puts.add(put);
  put=new Put(ROW_4);
  put.addColumn(COLUMN_1,QUALIFIER_1,VALUE_1);
  puts.add(put);
  remoteTable.put(puts);
  ResultScanner scanner=remoteTable.getScanner(new Scan());
  Result[] results=scanner.next(1);
  assertNotNull(results);
  assertEquals(1,results.length);
  assertTrue(Bytes.equals(ROW_1,results[0].getRow()));
  Result result=scanner.next();
  assertNotNull(result);
  assertTrue(Bytes.equals(ROW_2,result.getRow()));
  results=scanner.next(2);
  assertNotNull(results);
  assertEquals(2,results.length);
  assertTrue(Bytes.equals(ROW_3,results[0].getRow()));
  assertTrue(Bytes.equals(ROW_4,results[1].getRow()));
  results=scanner.next(1);
  assertNull(results);
  scanner.close();
  scanner=remoteTable.getScanner(COLUMN_1);
  results=scanner.next(4);
  assertNotNull(results);
  assertEquals(4,results.length);
  assertTrue(Bytes.equals(ROW_1,results[0].getRow()));
  assertTrue(Bytes.equals(ROW_2,results[1].getRow()));
  assertTrue(Bytes.equals(ROW_3,results[2].getRow()));
  assertTrue(Bytes.equals(ROW_4,results[3].getRow()));
  scanner.close();
  scanner=remoteTable.getScanner(COLUMN_1,QUALIFIER_1);
  results=scanner.next(4);
  assertNotNull(results);
  assertEquals(4,results.length);
  assertTrue(Bytes.equals(ROW_1,results[0].getRow()));
  assertTrue(Bytes.equals(ROW_2,results[1].getRow()));
  assertTrue(Bytes.equals(ROW_3,results[2].getRow()));
  assertTrue(Bytes.equals(ROW_4,results[3].getRow()));
  scanner.close();
  assertTrue(remoteTable.isAutoFlush());
}
