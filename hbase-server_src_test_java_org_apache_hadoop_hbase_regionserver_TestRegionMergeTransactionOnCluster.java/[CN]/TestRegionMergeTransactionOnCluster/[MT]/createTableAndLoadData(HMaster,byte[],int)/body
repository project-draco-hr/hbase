{
  assertTrue("ROWSIZE must > numregions:" + numRegions,ROWSIZE > numRegions);
  byte[][] splitRows=new byte[numRegions - 1][];
  for (int i=0; i < splitRows.length; i++) {
    splitRows[i]=ROWS[(i + 1) * ROWSIZE / numRegions];
  }
  HTable table=TEST_UTIL.createTable(tablename,FAMILYNAME,splitRows);
  loadData(table);
  verifyRowCount(table,ROWSIZE);
  long timeout=System.currentTimeMillis() + waitTime;
  List<Pair<HRegionInfo,ServerName>> tableRegions;
  while (System.currentTimeMillis() < timeout) {
    tableRegions=MetaReader.getTableRegionsAndLocations(master.getCatalogTracker(),Bytes.toString(tablename));
    if (tableRegions.size() == numRegions)     break;
    Thread.sleep(250);
  }
  tableRegions=MetaReader.getTableRegionsAndLocations(master.getCatalogTracker(),Bytes.toString(tablename));
  LOG.info("Regions after load: " + Joiner.on(',').join(tableRegions));
  assertEquals(numRegions,tableRegions.size());
  return table;
}
