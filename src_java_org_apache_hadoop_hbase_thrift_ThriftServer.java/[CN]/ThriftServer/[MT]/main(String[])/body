{
  Log LOG=LogFactory.getLog("ThriftServer");
  Options options=new Options();
  options.addOption("h","help",false,"print this message");
  options.addOption("p","port",true,"server listening port (default: 9090)");
  CommandLineParser parser=new GnuParser();
  CommandLine line;
  try {
    line=parser.parse(options,args);
  }
 catch (  ParseException e) {
    System.out.println("ERROR: " + e.getMessage());
    HelpFormatter formatter=new HelpFormatter();
    formatter.printHelp("ThriftServer [options]",options);
    return;
  }
  if (line.hasOption("h")) {
    HelpFormatter formatter=new HelpFormatter();
    formatter.printHelp("ThriftServer [options]",options);
    return;
  }
  int port=Integer.parseInt(line.getOptionValue("p","9090"));
  try {
    LOG.info("starting HBase Thrift server on port " + Integer.toString(port));
    HBaseHandler handler=new HBaseHandler();
    Hbase.Processor processor=new Hbase.Processor(handler);
    TServerTransport serverTransport=new TServerSocket(port);
    TProtocolFactory protFactory=new TBinaryProtocol.Factory(true,true);
    TServer server=new TThreadPoolServer(processor,serverTransport,protFactory);
    LOG.info("Starting the server...");
    server.serve();
  }
 catch (  Exception x) {
    x.printStackTrace();
  }
  LOG.info("done.");
}
