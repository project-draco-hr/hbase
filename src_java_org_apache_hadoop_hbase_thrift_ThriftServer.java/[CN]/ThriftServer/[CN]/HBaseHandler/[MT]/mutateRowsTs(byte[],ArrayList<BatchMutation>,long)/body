{
  ArrayList<BatchUpdate> batchUpdates=new ArrayList<BatchUpdate>();
  for (  BatchMutation batch : rowBatches) {
    byte[] row=batch.row;
    ArrayList<Mutation> mutations=batch.mutations;
    if (LOG.isDebugEnabled()) {
      LOG.debug("mutateRowTs: table=" + new String(tableName) + ", row="+ new String(row)+ ", ts="+ timestamp+ " mutations="+ mutations.size());
      for (      Mutation m : mutations) {
        if (m.isDelete) {
          LOG.debug("mutateRowTs:    : delete - " + getText(m.column));
        }
 else {
          LOG.debug("mutateRowTs:    : put - " + getText(m.column) + " => "+ m.value);
        }
      }
    }
    BatchUpdate batchUpdate=new BatchUpdate(getText(row),timestamp);
    for (    Mutation m : mutations) {
      if (m.isDelete) {
        batchUpdate.delete(getText(m.column));
      }
 else {
        batchUpdate.put(getText(m.column),m.value);
      }
    }
    batchUpdates.add(batchUpdate);
  }
  HTable table=null;
  try {
    table=getTable(tableName);
    table.commit(batchUpdates);
  }
 catch (  IOException e) {
    throw new IOError(e.getMessage());
  }
catch (  IllegalArgumentException e) {
    throw new IllegalArgument(e.getMessage());
  }
}
