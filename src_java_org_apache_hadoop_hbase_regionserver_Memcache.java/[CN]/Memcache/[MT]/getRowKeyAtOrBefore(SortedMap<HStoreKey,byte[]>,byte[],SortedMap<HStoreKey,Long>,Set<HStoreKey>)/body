{
  HStoreKey search_key=candidateKeys.isEmpty() ? new HStoreKey(row) : new HStoreKey(candidateKeys.firstKey().getRow());
  List<HStoreKey> victims=new ArrayList<HStoreKey>();
  long now=System.currentTimeMillis();
  SortedMap<HStoreKey,byte[]> tailMap=map.tailMap(search_key);
  if (!tailMap.isEmpty() && Bytes.compareTo(tailMap.firstKey().getRow(),search_key.getRow()) <= 0) {
    Iterator<HStoreKey> key_iterator=tailMap.keySet().iterator();
    HStoreKey deletedOrExpiredRow=null;
    for (HStoreKey found_key=null; key_iterator.hasNext() && (found_key == null || Bytes.compareTo(found_key.getRow(),row) <= 0); ) {
      found_key=key_iterator.next();
      if (Bytes.compareTo(found_key.getRow(),row) <= 0) {
        if (HLogEdit.isDeleted(tailMap.get(found_key))) {
          HStore.handleDeleted(found_key,candidateKeys,deletes);
          if (deletedOrExpiredRow == null) {
            deletedOrExpiredRow=found_key;
          }
        }
 else {
          if (HStore.notExpiredAndNotInDeletes(this.ttl,found_key,now,deletes)) {
            candidateKeys.put(stripTimestamp(found_key),new Long(found_key.getTimestamp()));
          }
 else {
            if (deletedOrExpiredRow == null) {
              deletedOrExpiredRow=new HStoreKey(found_key);
            }
            addVictim(victims,found_key);
          }
        }
      }
    }
    if (candidateKeys.isEmpty() && deletedOrExpiredRow != null) {
      getRowKeyBefore(map,deletedOrExpiredRow,candidateKeys,victims,deletes,now);
    }
  }
 else {
    getRowKeyBefore(map,search_key,candidateKeys,victims,deletes,now);
  }
  for (  HStoreKey victim : victims) {
    map.remove(victim);
  }
}
