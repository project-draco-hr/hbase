{
  String algorithm=conf.get(HConstants.CRYPTO_KEY_ALGORITHM_CONF_KEY,HConstants.CIPHER_AES);
  Cipher cipher=Encryption.getCipher(conf,algorithm);
  if (cipher == null) {
    throw new RuntimeException("Cipher '" + algorithm + "' not available");
  }
  EncryptionProtos.WrappedKey.Builder builder=EncryptionProtos.WrappedKey.newBuilder();
  builder.setAlgorithm(key.getAlgorithm());
  byte[] iv=null;
  if (cipher.getIvLength() > 0) {
    iv=new byte[cipher.getIvLength()];
    RNG.nextBytes(iv);
    builder.setIv(ByteStringer.wrap(iv));
  }
  byte[] keyBytes=key.getEncoded();
  builder.setLength(keyBytes.length);
  builder.setHash(ByteStringer.wrap(Encryption.hash128(keyBytes)));
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  Encryption.encryptWithSubjectKey(out,new ByteArrayInputStream(keyBytes),subject,conf,cipher,iv);
  builder.setData(ByteStringer.wrap(out.toByteArray()));
  out.reset();
  builder.build().writeDelimitedTo(out);
  return out.toByteArray();
}
