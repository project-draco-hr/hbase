{
  if (method.getService() != getDescriptor()) {
    throw new java.lang.IllegalArgumentException("Service.callMethod() given method descriptor for wrong " + "service type.");
  }
switch (method.getIndex()) {
case 0:
    this.addColumn(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AddColumnRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AddColumnResponse>specializeCallback(done));
  return;
case 1:
this.deleteColumn(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteColumnRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteColumnResponse>specializeCallback(done));
return;
case 2:
this.modifyColumn(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyColumnRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyColumnResponse>specializeCallback(done));
return;
case 3:
this.moveRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MoveRegionRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MoveRegionResponse>specializeCallback(done));
return;
case 4:
this.assignRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AssignRegionRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AssignRegionResponse>specializeCallback(done));
return;
case 5:
this.unassignRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.UnassignRegionRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.UnassignRegionResponse>specializeCallback(done));
return;
case 6:
this.offlineRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.OfflineRegionRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.OfflineRegionResponse>specializeCallback(done));
return;
case 7:
this.deleteTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteTableRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteTableResponse>specializeCallback(done));
return;
case 8:
this.enableTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableTableRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableTableResponse>specializeCallback(done));
return;
case 9:
this.disableTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DisableTableRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DisableTableResponse>specializeCallback(done));
return;
case 10:
this.modifyTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyTableRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyTableResponse>specializeCallback(done));
return;
case 11:
this.createTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateTableRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateTableResponse>specializeCallback(done));
return;
case 12:
this.isMasterRunning(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsMasterRunningRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsMasterRunningResponse>specializeCallback(done));
return;
case 13:
this.shutdown(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ShutdownRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ShutdownResponse>specializeCallback(done));
return;
case 14:
this.stopMaster(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.StopMasterRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.StopMasterResponse>specializeCallback(done));
return;
case 15:
this.balance(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.BalanceRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.BalanceResponse>specializeCallback(done));
return;
case 16:
this.setBalancerRunning(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetBalancerRunningRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetBalancerRunningResponse>specializeCallback(done));
return;
case 17:
this.getSchemaAlterStatus(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetSchemaAlterStatusRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetSchemaAlterStatusResponse>specializeCallback(done));
return;
case 18:
this.getTableDescriptors(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableDescriptorsRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableDescriptorsResponse>specializeCallback(done));
return;
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
