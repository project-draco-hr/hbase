{
  if (queue.isEmpty()) {
    return;
  }
  ByteBuf buf=null;
  try {
    ChannelPromise promise=ctx.newPromise();
    int readableBytes=queue.readableBytes();
    buf=queue.remove(readableBytes,promise);
    byte[] bytes=new byte[readableBytes];
    buf.readBytes(bytes);
    byte[] wrapperBytes=cryptoAES.wrap(bytes,0,bytes.length);
    ChannelPromise lenPromise=ctx.newPromise();
    ctx.write(ctx.alloc().buffer(4).writeInt(wrapperBytes.length),lenPromise);
    ChannelPromise contentPromise=ctx.newPromise();
    ctx.write(Unpooled.wrappedBuffer(wrapperBytes),contentPromise);
    PromiseCombiner combiner=new PromiseCombiner();
    combiner.addAll(lenPromise,contentPromise);
    combiner.finish(promise);
    ctx.flush();
  }
  finally {
    if (buf != null) {
      ReferenceCountUtil.safeRelease(buf);
    }
  }
}
