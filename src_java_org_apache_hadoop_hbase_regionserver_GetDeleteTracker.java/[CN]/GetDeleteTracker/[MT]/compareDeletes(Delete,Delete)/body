{
  int ret=Bytes.compareTo(oldDelete.buffer,oldDelete.qualifierOffset,oldDelete.qualifierLength,newDelete.buffer,newDelete.qualifierOffset,newDelete.qualifierLength);
  if (ret <= -1) {
    return DeleteCompare.INCLUDE_OLD_NEXT_OLD;
  }
 else   if (ret >= 1) {
    return DeleteCompare.INCLUDE_NEW_NEXT_NEW;
  }
  if (oldDelete.type == newDelete.type) {
    if (oldDelete.type == KeyValue.Type.Delete.getCode()) {
      if (oldDelete.timestamp > newDelete.timestamp) {
        return DeleteCompare.INCLUDE_OLD_NEXT_OLD;
      }
 else       if (oldDelete.timestamp < newDelete.timestamp) {
        return DeleteCompare.INCLUDE_NEW_NEXT_NEW;
      }
 else {
        return DeleteCompare.INCLUDE_OLD_NEXT_BOTH;
      }
    }
    if (oldDelete.timestamp < newDelete.timestamp) {
      return DeleteCompare.INCLUDE_NEW_NEXT_BOTH;
    }
    return DeleteCompare.INCLUDE_OLD_NEXT_BOTH;
  }
  if (oldDelete.type < newDelete.type) {
    if (oldDelete.timestamp > newDelete.timestamp) {
      return DeleteCompare.INCLUDE_OLD_NEXT_OLD;
    }
 else     if (oldDelete.timestamp < newDelete.timestamp) {
      return DeleteCompare.NEXT_OLD;
    }
 else {
      return DeleteCompare.NEXT_OLD;
    }
  }
  if (oldDelete.type > newDelete.type) {
    if (oldDelete.timestamp > newDelete.timestamp) {
      return DeleteCompare.NEXT_NEW;
    }
 else     if (oldDelete.timestamp < newDelete.timestamp) {
      return DeleteCompare.INCLUDE_NEW_NEXT_NEW;
    }
 else {
      return DeleteCompare.NEXT_NEW;
    }
  }
  throw new RuntimeException("GetDeleteTracker:compareDelete reached terminal state");
}
