{
  super.deserializeStateData(stream);
  MasterProcedureProtos.CloneSnapshotStateData cloneSnapshotMsg=MasterProcedureProtos.CloneSnapshotStateData.parseDelimitedFrom(stream);
  user=MasterProcedureUtil.toUserInfo(cloneSnapshotMsg.getUserInfo());
  snapshot=cloneSnapshotMsg.getSnapshot();
  hTableDescriptor=HTableDescriptor.convert(cloneSnapshotMsg.getTableSchema());
  if (cloneSnapshotMsg.getRegionInfoCount() == 0) {
    newRegions=null;
  }
 else {
    newRegions=new ArrayList<HRegionInfo>(cloneSnapshotMsg.getRegionInfoCount());
    for (    HBaseProtos.RegionInfo hri : cloneSnapshotMsg.getRegionInfoList()) {
      newRegions.add(HRegionInfo.convert(hri));
    }
  }
  if (cloneSnapshotMsg.getParentToChildRegionsPairListCount() > 0) {
    parentsToChildrenPairMap=new HashMap<String,Pair<String,String>>();
    for (    MasterProcedureProtos.RestoreParentToChildRegionsPair parentToChildrenPair : cloneSnapshotMsg.getParentToChildRegionsPairListList()) {
      parentsToChildrenPairMap.put(parentToChildrenPair.getParentRegionName(),new Pair<String,String>(parentToChildrenPair.getChild1RegionName(),parentToChildrenPair.getChild2RegionName()));
    }
  }
  getMonitorStatus();
}
