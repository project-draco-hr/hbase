{
  out.writeByte(GET_VERSION);
  Bytes.writeByteArray(out,this.row);
  out.writeLong(this.lockId);
  out.writeInt(this.maxVersions);
  if (this.filter == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    Bytes.writeByteArray(out,Bytes.toBytes(filter.getClass().getName()));
    filter.write(out);
  }
  out.writeBoolean(this.cacheBlocks);
  tr.write(out);
  out.writeInt(familyMap.size());
  for (  Map.Entry<byte[],NavigableSet<byte[]>> entry : familyMap.entrySet()) {
    Bytes.writeByteArray(out,entry.getKey());
    NavigableSet<byte[]> columnSet=entry.getValue();
    if (columnSet == null) {
      out.writeBoolean(false);
    }
 else {
      out.writeBoolean(true);
      out.writeInt(columnSet.size());
      for (      byte[] qualifier : columnSet) {
        Bytes.writeByteArray(out,qualifier);
      }
    }
  }
  if (this.attributes == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(this.attributes.size());
    for (    Map.Entry<String,byte[]> attr : this.attributes.entrySet()) {
      WritableUtils.writeString(out,attr.getKey());
      Bytes.writeByteArray(out,attr.getValue());
    }
  }
}
