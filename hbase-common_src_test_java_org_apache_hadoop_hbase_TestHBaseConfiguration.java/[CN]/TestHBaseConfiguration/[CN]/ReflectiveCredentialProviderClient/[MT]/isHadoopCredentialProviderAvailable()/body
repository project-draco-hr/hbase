{
  if (null != hadoopClassesAvailable) {
    if (hadoopClassesAvailable && null != getProvidersMethod && null != hadoopCredProviderFactory && null != getCredentialEntryMethod && null != getCredentialMethod) {
      return true;
    }
 else {
      return false;
    }
  }
  hadoopClassesAvailable=false;
  Class<?> hadoopCredProviderFactoryClz=null;
  try {
    hadoopCredProviderFactoryClz=Class.forName(HADOOP_CRED_PROVIDER_FACTORY_CLASS_NAME);
  }
 catch (  ClassNotFoundException e) {
    return false;
  }
  try {
    hadoopCredProviderFactory=hadoopCredProviderFactoryClz.newInstance();
  }
 catch (  InstantiationException e) {
    return false;
  }
catch (  IllegalAccessException e) {
    return false;
  }
  try {
    getProvidersMethod=loadMethod(hadoopCredProviderFactoryClz,HADOOP_CRED_PROVIDER_FACTORY_GET_PROVIDERS_METHOD_NAME,Configuration.class);
    Class<?> hadoopCredProviderClz=null;
    hadoopCredProviderClz=Class.forName(HADOOP_CRED_PROVIDER_CLASS_NAME);
    getCredentialEntryMethod=loadMethod(hadoopCredProviderClz,HADOOP_CRED_PROVIDER_GET_CREDENTIAL_ENTRY_METHOD_NAME,String.class);
    getAliasesMethod=loadMethod(hadoopCredProviderClz,HADOOP_CRED_PROVIDER_GET_ALIASES_METHOD_NAME);
    createCredentialEntryMethod=loadMethod(hadoopCredProviderClz,HADOOP_CRED_PROVIDER_CREATE_CREDENTIAL_ENTRY_METHOD_NAME,String.class,char[].class);
    flushMethod=loadMethod(hadoopCredProviderClz,HADOOP_CRED_PROVIDER_FLUSH_METHOD_NAME);
    Class<?> hadoopCredentialEntryClz=null;
    try {
      hadoopCredentialEntryClz=Class.forName(HADOOP_CRED_ENTRY_CLASS_NAME);
    }
 catch (    ClassNotFoundException e) {
      LOG.error("Failed to load class:" + e);
      return false;
    }
    getCredentialMethod=loadMethod(hadoopCredentialEntryClz,HADOOP_CRED_ENTRY_GET_CREDENTIAL_METHOD_NAME);
  }
 catch (  Exception e1) {
    return false;
  }
  hadoopClassesAvailable=true;
  LOG.info("Credential provider classes have been" + " loaded and initialized successfully through reflection.");
  return true;
}
