{
  Configuration conf=HBaseConfiguration.create();
  conf.set(ReflectiveCredentialProviderClient.CREDENTIAL_PROVIDER_PATH,"jceks://file" + new File(UTIL.getDataTestDir().toUri().getPath(),"foo.jks").getCanonicalPath());
  ReflectiveCredentialProviderClient client=new ReflectiveCredentialProviderClient();
  if (client.isHadoopCredentialProviderAvailable()) {
    char[] keyPass={'k','e','y','p','a','s','s'};
    char[] storePass={'s','t','o','r','e','p','a','s','s'};
    client.createEntry(conf,"ssl.keypass.alias",keyPass);
    client.createEntry(conf,"ssl.storepass.alias",storePass);
    String keypass=HBaseConfiguration.getPassword(conf,"ssl.keypass.alias",null);
    assertEquals(keypass,new String(keyPass));
    String storepass=HBaseConfiguration.getPassword(conf,"ssl.storepass.alias",null);
    assertEquals(storepass,new String(storePass));
  }
}
