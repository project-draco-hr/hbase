{
  WALProtos.WALKey.Builder builder=WALProtos.WALKey.newBuilder();
  if (compressionContext == null) {
    builder.setEncodedRegionName(UnsafeByteOperations.unsafeWrap(this.encodedRegionName));
    builder.setTableName(UnsafeByteOperations.unsafeWrap(this.tablename.getName()));
  }
 else {
    builder.setEncodedRegionName(compressor.compress(this.encodedRegionName,compressionContext.regionDict));
    builder.setTableName(compressor.compress(this.tablename.getName(),compressionContext.tableDict));
  }
  builder.setLogSequenceNumber(getSequenceId());
  builder.setWriteTime(writeTime);
  if (this.origLogSeqNum > 0) {
    builder.setOrigSequenceNumber(this.origLogSeqNum);
  }
  if (this.nonce != HConstants.NO_NONCE) {
    builder.setNonce(nonce);
  }
  if (this.nonceGroup != HConstants.NO_NONCE) {
    builder.setNonceGroup(nonceGroup);
  }
  HBaseProtos.UUID.Builder uuidBuilder=HBaseProtos.UUID.newBuilder();
  for (  UUID clusterId : clusterIds) {
    uuidBuilder.setLeastSigBits(clusterId.getLeastSignificantBits());
    uuidBuilder.setMostSigBits(clusterId.getMostSignificantBits());
    builder.addClusterIds(uuidBuilder.build());
  }
  if (replicationScope != null) {
    for (    Map.Entry<byte[],Integer> e : replicationScope.entrySet()) {
      ByteString family=(compressionContext == null) ? UnsafeByteOperations.unsafeWrap(e.getKey()) : compressor.compress(e.getKey(),compressionContext.familyDict);
      builder.addScopes(FamilyScope.newBuilder().setFamily(family).setScopeType(ScopeType.valueOf(e.getValue())));
    }
  }
  return builder;
}
