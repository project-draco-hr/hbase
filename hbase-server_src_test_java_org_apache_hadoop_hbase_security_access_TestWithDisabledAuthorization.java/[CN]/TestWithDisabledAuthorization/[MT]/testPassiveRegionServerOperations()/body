{
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preStopRegionServer(ObserverContext.createAndPrepare(RSCP_ENV,null));
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTableDescriptor htd=new HTableDescriptor(TEST_TABLE.getTableName());
      Region region_a=mock(Region.class);
      when(region_a.getTableDesc()).thenReturn(htd);
      Region region_b=mock(Region.class);
      when(region_b.getTableDesc()).thenReturn(htd);
      ACCESS_CONTROLLER.preMerge(ObserverContext.createAndPrepare(RSCP_ENV,null),region_a,region_b);
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      ACCESS_CONTROLLER.preRollWALWriterRequest(ObserverContext.createAndPrepare(RSCP_ENV,null));
      return null;
    }
  }
,SUPERUSER,USER_ADMIN,USER_RW,USER_RO,USER_OWNER,USER_CREATE,USER_QUAL,USER_NONE);
}
