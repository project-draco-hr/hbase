{
  final Configuration conf=TEST_UTIL.getConfiguration();
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table t=connection.getTable(TEST_TABLE.getTableName())){
        Put p;
        p=new Put(TEST_ROW).addColumn(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(USER_NONE.getShortName(),new Permission(Action.READ));
        t.put(p);
        p=new Put(TEST_ROW).addColumn(TEST_FAMILY,TEST_Q2,ZERO);
        p.setACL(USER_NONE.getShortName(),new Permission(Action.READ,Action.WRITE));
        t.put(p);
        p=new Put(TEST_ROW).addColumn(TEST_FAMILY,TEST_Q3,ZERO).addColumn(TEST_FAMILY,TEST_Q4,ZERO);
        t.put(p);
      }
       return null;
    }
  }
,USER_OWNER);
  final List<Cell> scanResults=Lists.newArrayList();
  AccessTestAction scanAction=new AccessTestAction(){
    @Override public List<Cell> run() throws Exception {
      Scan scan=new Scan();
      scan.setStartRow(TEST_ROW);
      scan.setStopRow(Bytes.add(TEST_ROW,new byte[]{0}));
      scan.addFamily(TEST_FAMILY);
      Connection connection=ConnectionFactory.createConnection(conf);
      Table t=connection.getTable(TEST_TABLE.getTableName());
      try {
        ResultScanner scanner=t.getScanner(scan);
        Result result=null;
        do {
          result=scanner.next();
          if (result != null) {
            scanResults.addAll(result.listCells());
          }
        }
 while (result != null);
      }
  finally {
        t.close();
        connection.close();
      }
      return scanResults;
    }
  }
;
  scanResults.clear();
  verifyAllowed(scanAction,USER_OWNER);
  assertEquals(4,scanResults.size());
  scanResults.clear();
  verifyAllowed(scanAction,USER_NONE);
  assertEquals(4,scanResults.size());
}
