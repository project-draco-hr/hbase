{
  AccessTestAction checkGlobalAdmin=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkGlobalPerms(TEST_UTIL,Permission.Action.ADMIN);
      return null;
    }
  }
;
  verifyAllowed(checkGlobalAdmin,SUPERUSER,USER_ADMIN);
  verifyDenied(checkGlobalAdmin,USER_OWNER,USER_CREATE,USER_RW,USER_RO,USER_QUAL,USER_NONE);
  AccessTestAction checkGlobalRead=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkGlobalPerms(TEST_UTIL,Permission.Action.READ);
      return null;
    }
  }
;
  verifyAllowed(checkGlobalRead,SUPERUSER,USER_ADMIN);
  verifyDenied(checkGlobalRead,USER_OWNER,USER_CREATE,USER_RW,USER_RO,USER_QUAL,USER_NONE);
  AccessTestAction checkGlobalReadWrite=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkGlobalPerms(TEST_UTIL,Permission.Action.READ,Permission.Action.WRITE);
      return null;
    }
  }
;
  verifyAllowed(checkGlobalReadWrite,SUPERUSER,USER_ADMIN);
  verifyDenied(checkGlobalReadWrite,USER_OWNER,USER_CREATE,USER_RW,USER_RO,USER_QUAL,USER_NONE);
  AccessTestAction checkTableAdmin=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),null,null,Permission.Action.ADMIN);
      return null;
    }
  }
;
  verifyAllowed(checkTableAdmin,SUPERUSER,USER_ADMIN,USER_OWNER);
  verifyDenied(checkTableAdmin,USER_CREATE,USER_RW,USER_RO,USER_QUAL,USER_NONE);
  AccessTestAction checkTableCreate=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),null,null,Permission.Action.CREATE);
      return null;
    }
  }
;
  verifyAllowed(checkTableCreate,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE);
  verifyDenied(checkTableCreate,USER_RW,USER_RO,USER_QUAL,USER_NONE);
  AccessTestAction checkTableRead=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),null,null,Permission.Action.READ);
      return null;
    }
  }
;
  verifyAllowed(checkTableRead,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE);
  verifyDenied(checkTableRead,USER_RW,USER_RO,USER_QUAL,USER_NONE);
  AccessTestAction checkTableReadWrite=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),null,null,Permission.Action.READ,Permission.Action.WRITE);
      return null;
    }
  }
;
  verifyAllowed(checkTableReadWrite,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE);
  verifyDenied(checkTableReadWrite,USER_RW,USER_RO,USER_QUAL,USER_NONE);
  AccessTestAction checkColumnRead=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),TEST_FAMILY,null,Permission.Action.READ);
      return null;
    }
  }
;
  verifyAllowed(checkColumnRead,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE,USER_RW,USER_RO);
  verifyDenied(checkColumnRead,USER_QUAL,USER_NONE);
  AccessTestAction checkColumnReadWrite=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),TEST_FAMILY,null,Permission.Action.READ,Permission.Action.WRITE);
      return null;
    }
  }
;
  verifyAllowed(checkColumnReadWrite,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE,USER_RW);
  verifyDenied(checkColumnReadWrite,USER_RO,USER_QUAL,USER_NONE);
  AccessTestAction checkQualifierRead=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),TEST_FAMILY,TEST_Q1,Permission.Action.READ);
      return null;
    }
  }
;
  verifyAllowed(checkQualifierRead,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE,USER_RW,USER_RO,USER_QUAL);
  verifyDenied(checkQualifierRead,USER_NONE);
  AccessTestAction checkQualifierReadWrite=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),TEST_FAMILY,TEST_Q1,Permission.Action.READ,Permission.Action.WRITE);
      return null;
    }
  }
;
  verifyAllowed(checkQualifierReadWrite,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE,USER_RW,USER_QUAL);
  verifyDenied(checkQualifierReadWrite,USER_RO,USER_NONE);
  AccessTestAction checkMultiQualifierRead=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),new Permission[]{new TablePermission(TEST_TABLE.getTableName(),TEST_FAMILY,TEST_Q1,Permission.Action.READ),new TablePermission(TEST_TABLE.getTableName(),TEST_FAMILY,TEST_Q2,Permission.Action.READ)});
      return null;
    }
  }
;
  verifyAllowed(checkMultiQualifierRead,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE,USER_RW,USER_RO);
  verifyDenied(checkMultiQualifierRead,USER_QUAL,USER_NONE);
  AccessTestAction checkMultiQualifierReadWrite=new AccessTestAction(){
    @Override public Void run() throws Exception {
      checkTablePerms(TEST_UTIL,TEST_TABLE.getTableName(),new Permission[]{new TablePermission(TEST_TABLE.getTableName(),TEST_FAMILY,TEST_Q1,Permission.Action.READ,Permission.Action.WRITE),new TablePermission(TEST_TABLE.getTableName(),TEST_FAMILY,TEST_Q2,Permission.Action.READ,Permission.Action.WRITE)});
      return null;
    }
  }
;
  verifyAllowed(checkMultiQualifierReadWrite,SUPERUSER,USER_ADMIN,USER_OWNER,USER_CREATE,USER_RW);
  verifyDenied(checkMultiQualifierReadWrite,USER_RO,USER_QUAL,USER_NONE);
}
