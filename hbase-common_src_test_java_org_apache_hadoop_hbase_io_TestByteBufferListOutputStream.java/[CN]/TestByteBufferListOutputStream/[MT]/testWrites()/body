{
  ByteBufferPool pool=new ByteBufferPool(10,3);
  ByteBufferListOutputStream bbos=new ByteBufferListOutputStream(pool);
  bbos.write(2);
  bbos.writeInt(100);
  byte[] b=Bytes.toBytes("row123");
  bbos.write(b);
  ByteBuffer bb1=pool.getBuffer();
  ByteBuffer bb=ByteBuffer.wrap(Bytes.toBytes("row123_cf1_q1"));
  bbos.write(bb,0,bb.capacity());
  pool.putbackBuffer(bb1);
  bbos.writeInt(123);
  bbos.writeInt(124);
  assertEquals(0,pool.getQueueSize());
  List<ByteBuffer> allBufs=bbos.getByteBuffers();
  assertEquals(4,allBufs.size());
  assertEquals(3,bbos.bufsFromPool.size());
  ByteBuffer b1=allBufs.get(0);
  assertEquals(10,b1.remaining());
  assertEquals(2,b1.get());
  assertEquals(100,b1.getInt());
  byte[] bActual=new byte[b.length];
  b1.get(bActual,0,5);
  ByteBuffer b2=allBufs.get(1);
  assertEquals(10,b2.remaining());
  b2.get(bActual,5,1);
  assertTrue(Bytes.equals(b,bActual));
  bActual=new byte[bb.capacity()];
  b2.get(bActual,0,9);
  ByteBuffer b3=allBufs.get(2);
  assertEquals(8,b3.remaining());
  b3.get(bActual,9,4);
  assertTrue(ByteBufferUtils.equals(bb,0,bb.capacity(),bActual,0,bActual.length));
  assertEquals(123,b3.getInt());
  ByteBuffer b4=allBufs.get(3);
  assertEquals(4,b4.remaining());
  assertEquals(124,b4.getInt());
  bbos.releaseResources();
  assertEquals(3,pool.getQueueSize());
}
