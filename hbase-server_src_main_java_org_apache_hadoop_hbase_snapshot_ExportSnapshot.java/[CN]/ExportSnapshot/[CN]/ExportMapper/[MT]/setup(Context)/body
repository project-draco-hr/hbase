{
  Configuration conf=context.getConfiguration();
  Configuration srcConf=HBaseConfiguration.createClusterConf(conf,null,CONF_SOURCE_PREFIX);
  Configuration destConf=HBaseConfiguration.createClusterConf(conf,null,CONF_DEST_PREFIX);
  verifyChecksum=conf.getBoolean(CONF_CHECKSUM_VERIFY,true);
  filesGroup=conf.get(CONF_FILES_GROUP);
  filesUser=conf.get(CONF_FILES_USER);
  filesMode=(short)conf.getInt(CONF_FILES_MODE,0);
  outputRoot=new Path(conf.get(CONF_OUTPUT_ROOT));
  inputRoot=new Path(conf.get(CONF_INPUT_ROOT));
  inputArchive=new Path(inputRoot,HConstants.HFILE_ARCHIVE_DIRECTORY);
  outputArchive=new Path(outputRoot,HConstants.HFILE_ARCHIVE_DIRECTORY);
  testFailures=conf.getBoolean(CONF_TEST_FAILURE,false);
  try {
    srcConf.setBoolean("fs." + inputRoot.toUri().getScheme() + ".impl.disable.cache",true);
    inputFs=FileSystem.get(inputRoot.toUri(),srcConf);
  }
 catch (  IOException e) {
    throw new IOException("Could not get the input FileSystem with root=" + inputRoot,e);
  }
  try {
    destConf.setBoolean("fs." + outputRoot.toUri().getScheme() + ".impl.disable.cache",true);
    outputFs=FileSystem.get(outputRoot.toUri(),destConf);
  }
 catch (  IOException e) {
    throw new IOException("Could not get the output FileSystem with root=" + outputRoot,e);
  }
  int defaultBlockSize=Math.max((int)outputFs.getDefaultBlockSize(outputRoot),BUFFER_SIZE);
  bufferSize=conf.getInt(CONF_BUFFER_SIZE,defaultBlockSize);
  LOG.info("Using bufferSize=" + StringUtils.humanReadableInt(bufferSize));
  for (  Counter c : Counter.values()) {
    context.getCounter(c).increment(0);
  }
}
