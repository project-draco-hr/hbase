{
  FileStatus stat;
  try {
    stat=outputFs.getFileStatus(path);
  }
 catch (  IOException e) {
    LOG.warn("Unable to get the status for file=" + path);
    return false;
  }
  try {
    if (filesMode > 0 && stat.getPermission().toShort() != filesMode) {
      outputFs.setPermission(path,new FsPermission(filesMode));
    }
 else     if (!stat.getPermission().equals(refStat.getPermission())) {
      outputFs.setPermission(path,refStat.getPermission());
    }
  }
 catch (  IOException e) {
    LOG.warn("Unable to set the permission for file=" + stat.getPath() + ": "+ e.getMessage());
    return false;
  }
  String user=stringIsNotEmpty(filesUser) ? filesUser : refStat.getOwner();
  String group=stringIsNotEmpty(filesGroup) ? filesGroup : refStat.getGroup();
  if (stringIsNotEmpty(user) || stringIsNotEmpty(group)) {
    try {
      if (!(user.equals(stat.getOwner()) && group.equals(stat.getGroup()))) {
        outputFs.setOwner(path,user,group);
      }
    }
 catch (    IOException e) {
      LOG.warn("Unable to set the owner/group for file=" + stat.getPath() + ": "+ e.getMessage());
      LOG.warn("The user/group may not exist on the destination cluster: user=" + user + " group="+ group);
      return false;
    }
  }
  return true;
}
