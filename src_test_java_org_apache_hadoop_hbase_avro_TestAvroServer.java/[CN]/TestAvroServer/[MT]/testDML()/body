{
  AvroServer.HBaseImpl impl=new AvroServer.HBaseImpl();
  ATableDescriptor tableA=new ATableDescriptor();
  tableA.name=tableAname;
  AFamilyDescriptor familyA=new AFamilyDescriptor();
  familyA.name=familyAname;
  Schema familyArraySchema=Schema.createArray(AFamilyDescriptor.SCHEMA$);
  GenericArray<AFamilyDescriptor> families=new GenericData.Array<AFamilyDescriptor>(1,familyArraySchema);
  families.add(familyA);
  tableA.families=families;
  impl.createTable(tableA);
  assertEquals(impl.describeTable(tableAname).families.size(),1);
  AGet getA=new AGet();
  getA.row=rowAname;
  Schema columnsSchema=Schema.createArray(AColumn.SCHEMA$);
  GenericArray<AColumn> columns=new GenericData.Array<AColumn>(1,columnsSchema);
  AColumn column=new AColumn();
  column.family=familyAname;
  column.qualifier=qualifierAname;
  columns.add(column);
  getA.columns=columns;
  assertFalse(impl.exists(tableAname,getA));
  APut putA=new APut();
  putA.row=rowAname;
  Schema columnValuesSchema=Schema.createArray(AColumnValue.SCHEMA$);
  GenericArray<AColumnValue> columnValues=new GenericData.Array<AColumnValue>(1,columnValuesSchema);
  AColumnValue acv=new AColumnValue();
  acv.family=familyAname;
  acv.qualifier=qualifierAname;
  acv.value=valueA;
  columnValues.add(acv);
  putA.columnValues=columnValues;
  impl.put(tableAname,putA);
  assertTrue(impl.exists(tableAname,getA));
  assertEquals(impl.get(tableAname,getA).entries.size(),1);
  impl.disableTable(tableAname);
  impl.deleteTable(tableAname);
}
