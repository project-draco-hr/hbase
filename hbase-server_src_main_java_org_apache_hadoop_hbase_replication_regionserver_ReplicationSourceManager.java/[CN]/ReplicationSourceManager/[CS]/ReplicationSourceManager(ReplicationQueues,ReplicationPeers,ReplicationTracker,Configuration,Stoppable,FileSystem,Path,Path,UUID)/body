{
  this.sources=new CopyOnWriteArrayList<ReplicationSourceInterface>();
  this.replicationQueues=replicationQueues;
  this.replicationPeers=replicationPeers;
  this.replicationTracker=replicationTracker;
  this.stopper=stopper;
  this.hlogsById=new HashMap<String,SortedSet<String>>();
  this.oldsources=new CopyOnWriteArrayList<ReplicationSourceInterface>();
  this.conf=conf;
  this.fs=fs;
  this.logDir=logDir;
  this.oldLogDir=oldLogDir;
  this.sleepBeforeFailover=conf.getLong("replication.sleep.before.failover",2000);
  this.clusterId=clusterId;
  this.replicationTracker.registerListener(this);
  this.replicationPeers.getAllPeerIds();
  int nbWorkers=conf.getInt("replication.executor.workers",1);
  this.executor=new ThreadPoolExecutor(nbWorkers,nbWorkers,100,TimeUnit.MILLISECONDS,new LinkedBlockingQueue<Runnable>());
  ThreadFactoryBuilder tfb=new ThreadFactoryBuilder();
  tfb.setNameFormat("ReplicationExecutor-%d");
  this.executor.setThreadFactory(tfb.build());
  this.rand=new Random();
}
