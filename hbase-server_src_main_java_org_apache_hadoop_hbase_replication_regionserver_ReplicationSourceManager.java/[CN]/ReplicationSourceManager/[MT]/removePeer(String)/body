{
  LOG.info("Closing the following queue " + id + ", currently have "+ sources.size()+ " and another "+ oldsources.size()+ " that were recovered");
  String terminateMessage="Replication stream was removed by a user";
  ReplicationSourceInterface srcToRemove=null;
  List<ReplicationSourceInterface> oldSourcesToDelete=new ArrayList<ReplicationSourceInterface>();
  for (  ReplicationSourceInterface src : oldsources) {
    if (id.equals(src.getPeerClusterId())) {
      oldSourcesToDelete.add(src);
    }
  }
  for (  ReplicationSourceInterface src : oldSourcesToDelete) {
    src.terminate(terminateMessage);
    closeRecoveredQueue((src));
  }
  LOG.info("Number of deleted recovered sources for " + id + ": "+ oldSourcesToDelete.size());
  for (  ReplicationSourceInterface src : this.sources) {
    if (id.equals(src.getPeerClusterId())) {
      srcToRemove=src;
      break;
    }
  }
  if (srcToRemove == null) {
    LOG.error("The queue we wanted to close is missing " + id);
    return;
  }
  srcToRemove.terminate(terminateMessage);
  this.sources.remove(srcToRemove);
  deleteSource(id,true);
}
