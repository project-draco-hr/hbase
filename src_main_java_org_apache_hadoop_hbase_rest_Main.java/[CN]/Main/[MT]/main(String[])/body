{
  Log LOG=LogFactory.getLog("RESTServer");
  VersionInfo.logVersion();
  Configuration conf=HBaseConfiguration.create();
  RESTServlet servlet=RESTServlet.getInstance(conf);
  Options options=new Options();
  options.addOption("p","port",true,"Port to bind to [default: 8080]");
  options.addOption("ro","readonly",false,"Respond only to GET HTTP " + "method requests [default: false]");
  CommandLine commandLine=null;
  try {
    commandLine=new PosixParser().parse(options,args);
  }
 catch (  ParseException e) {
    LOG.error("Could not parse: ",e);
    printUsageAndExit(options,-1);
  }
  if (commandLine != null && commandLine.hasOption("port")) {
    String val=commandLine.getOptionValue("port");
    servlet.getConfiguration().setInt("hbase.rest.port",Integer.valueOf(val));
    LOG.debug("port set to " + val);
  }
  if (commandLine != null && commandLine.hasOption("readonly")) {
    servlet.getConfiguration().setBoolean("hbase.rest.readonly",true);
    LOG.debug("readonly set to true");
  }
  @SuppressWarnings("unchecked") List<String> remainingArgs=commandLine != null ? commandLine.getArgList() : new ArrayList<String>();
  if (remainingArgs.size() != 1) {
    printUsageAndExit(options,1);
  }
  String command=remainingArgs.get(0);
  if ("start".equals(command)) {
  }
 else   if ("stop".equals(command)) {
    System.exit(1);
  }
 else {
    printUsageAndExit(options,1);
  }
  ServletHolder sh=new ServletHolder(ServletContainer.class);
  sh.setInitParameter("com.sun.jersey.config.property.resourceConfigClass",ResourceConfig.class.getCanonicalName());
  sh.setInitParameter("com.sun.jersey.config.property.packages","jetty");
  int port=servlet.getConfiguration().getInt("hbase.rest.port",8080);
  Server server=new Server(port);
  server.setSendServerVersion(false);
  server.setSendDateHeader(false);
  server.setStopAtShutdown(true);
  Context context=new Context(server,"/",Context.SESSIONS);
  context.addServlet(sh,"/*");
  context.addFilter(GzipFilter.class,"/*",0);
  server.start();
  server.join();
}
