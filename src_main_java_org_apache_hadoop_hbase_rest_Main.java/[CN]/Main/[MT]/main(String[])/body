{
  Log LOG=LogFactory.getLog("RESTServer");
  Options options=new Options();
  options.addOption("p","port",true,"Port to bind to [default:" + DEFAULT_LISTEN_PORT + "]");
  CommandLineParser parser=new PosixParser();
  CommandLine cmd=parser.parse(options,args);
  List<String> commandLine=Arrays.asList(args);
  boolean stop=commandLine.contains("stop");
  boolean start=commandLine.contains("start");
  if (cmd.hasOption("help") || !start || stop) {
    printUsageAndExit(options,1);
  }
  int port=0;
  try {
    port=Integer.parseInt(cmd.getOptionValue("port",DEFAULT_LISTEN_PORT));
  }
 catch (  NumberFormatException e) {
    LOG.error("Could not parse the value provided for the port option",e);
    printUsageAndExit(options,-1);
  }
  ServletHolder sh=new ServletHolder(ServletContainer.class);
  sh.setInitParameter("com.sun.jersey.config.property.resourceConfigClass",ResourceConfig.class.getCanonicalName());
  sh.setInitParameter("com.sun.jersey.config.property.packages","jetty");
  RESTServlet servlet=RESTServlet.getInstance();
  port=servlet.getConfiguration().getInt("hbase.rest.port",port);
  Server server=new Server(port);
  server.setSendServerVersion(false);
  server.setSendDateHeader(false);
  server.setStopAtShutdown(true);
  Context context=new Context(server,"/",Context.SESSIONS);
  context.addServlet(sh,"/*");
  server.start();
  server.join();
}
