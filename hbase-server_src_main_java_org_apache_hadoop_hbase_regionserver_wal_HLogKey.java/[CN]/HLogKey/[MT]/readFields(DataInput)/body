{
  Version version=Version.UNVERSIONED;
  this.scopes=null;
  int len=WritableUtils.readVInt(in);
  if (len < 0) {
    version=Version.fromCode(len);
    if (compressionContext == null || !version.atLeast(Version.COMPRESSED)) {
      len=WritableUtils.readVInt(in);
    }
  }
  if (compressionContext == null || !version.atLeast(Version.COMPRESSED)) {
    this.encodedRegionName=new byte[len];
    in.readFully(this.encodedRegionName);
    this.tablename=Bytes.readByteArray(in);
  }
 else {
    this.encodedRegionName=Compressor.readCompressed(in,compressionContext.regionDict);
    this.tablename=Compressor.readCompressed(in,compressionContext.tableDict);
  }
  this.logSeqNum=in.readLong();
  this.writeTime=in.readLong();
  this.clusterId=HConstants.DEFAULT_CLUSTER_ID;
  if (version.atLeast(Version.INITIAL)) {
    if (in.readBoolean()) {
      this.clusterId=new UUID(in.readLong(),in.readLong());
    }
  }
 else {
    try {
      in.readByte();
    }
 catch (    EOFException e) {
    }
  }
}
