{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(5);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.startRow=iprot.readBinary();
    struct.setStartRowIsSet(true);
  }
  if (incoming.get(2)) {
    struct.stopRow=iprot.readBinary();
    struct.setStopRowIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TList _list473=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list473.size);
      for (int _i474=0; _i474 < _list473.size; ++_i474) {
        ByteBuffer _elem475;
        _elem475=iprot.readBinary();
        struct.columns.add(_elem475);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map476=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map476.size);
      for (int _i477=0; _i477 < _map476.size; ++_i477) {
        ByteBuffer _key478;
        ByteBuffer _val479;
        _key478=iprot.readBinary();
        _val479=iprot.readBinary();
        struct.attributes.put(_key478,_val479);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
