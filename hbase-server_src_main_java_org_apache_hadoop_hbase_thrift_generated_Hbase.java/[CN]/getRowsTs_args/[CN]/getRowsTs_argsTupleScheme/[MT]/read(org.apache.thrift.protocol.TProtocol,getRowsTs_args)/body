{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list273=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.rows=new ArrayList<ByteBuffer>(_list273.size);
      for (int _i274=0; _i274 < _list273.size; ++_i274) {
        ByteBuffer _elem275;
        _elem275=iprot.readBinary();
        struct.rows.add(_elem275);
      }
    }
    struct.setRowsIsSet(true);
  }
  if (incoming.get(2)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map276=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map276.size);
      for (int _i277=0; _i277 < _map276.size; ++_i277) {
        ByteBuffer _key278;
        ByteBuffer _val279;
        _key278=iprot.readBinary();
        _val279=iprot.readBinary();
        struct.attributes.put(_key278,_val279);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
