{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.startRow=iprot.readBinary();
    struct.setStartRowIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list455=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list455.size);
      for (int _i456=0; _i456 < _list455.size; ++_i456) {
        ByteBuffer _elem457;
        _elem457=iprot.readBinary();
        struct.columns.add(_elem457);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map458=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map458.size);
      for (int _i459=0; _i459 < _map458.size; ++_i459) {
        ByteBuffer _key460;
        ByteBuffer _val461;
        _key460=iprot.readBinary();
        _val461=iprot.readBinary();
        struct.attributes.put(_key460,_val461);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
