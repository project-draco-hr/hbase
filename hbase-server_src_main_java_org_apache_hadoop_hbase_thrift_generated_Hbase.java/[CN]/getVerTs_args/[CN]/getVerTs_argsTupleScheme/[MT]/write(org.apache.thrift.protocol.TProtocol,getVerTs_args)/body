{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetTableName()) {
    optionals.set(0);
  }
  if (struct.isSetRow()) {
    optionals.set(1);
  }
  if (struct.isSetColumn()) {
    optionals.set(2);
  }
  if (struct.isSetTimestamp()) {
    optionals.set(3);
  }
  if (struct.isSetNumVersions()) {
    optionals.set(4);
  }
  if (struct.isSetAttributes()) {
    optionals.set(5);
  }
  oprot.writeBitSet(optionals,6);
  if (struct.isSetTableName()) {
    oprot.writeBinary(struct.tableName);
  }
  if (struct.isSetRow()) {
    oprot.writeBinary(struct.row);
  }
  if (struct.isSetColumn()) {
    oprot.writeBinary(struct.column);
  }
  if (struct.isSetTimestamp()) {
    oprot.writeI64(struct.timestamp);
  }
  if (struct.isSetNumVersions()) {
    oprot.writeI32(struct.numVersions);
  }
  if (struct.isSetAttributes()) {
{
      oprot.writeI32(struct.attributes.size());
      for (      Map.Entry<ByteBuffer,ByteBuffer> _iter101 : struct.attributes.entrySet()) {
        oprot.writeBinary(_iter101.getKey());
        oprot.writeBinary(_iter101.getValue());
      }
    }
  }
}
