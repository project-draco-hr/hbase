{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(5);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list304=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.rows=new ArrayList<ByteBuffer>(_list304.size);
      for (int _i305=0; _i305 < _list304.size; ++_i305) {
        ByteBuffer _elem306;
        _elem306=iprot.readBinary();
        struct.rows.add(_elem306);
      }
    }
    struct.setRowsIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list307=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list307.size);
      for (int _i308=0; _i308 < _list307.size; ++_i308) {
        ByteBuffer _elem309;
        _elem309=iprot.readBinary();
        struct.columns.add(_elem309);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map310=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map310.size);
      for (int _i311=0; _i311 < _map310.size; ++_i311) {
        ByteBuffer _key312;
        ByteBuffer _val313;
        _key312=iprot.readBinary();
        _val313=iprot.readBinary();
        struct.attributes.put(_key312,_val313);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
