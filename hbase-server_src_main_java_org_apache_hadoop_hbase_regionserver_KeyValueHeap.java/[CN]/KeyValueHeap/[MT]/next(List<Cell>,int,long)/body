{
  if (this.current == null) {
    return NextState.makeState(NextState.State.NO_MORE_VALUES);
  }
  InternalScanner currentAsInternal=(InternalScanner)this.current;
  NextState state=currentAsInternal.next(result,limit,remainingResultSize);
  if (!NextState.isValidState(state)) {
    throw new IOException("Invalid state returned from InternalScanner#next");
  }
  boolean mayContainMoreRows=NextState.hasMoreValues(state);
  Cell pee=this.current.peek();
  if (pee == null || !mayContainMoreRows) {
    this.current.close();
  }
 else {
    this.heap.add(this.current);
  }
  this.current=pollRealKV();
  if (this.current == null) {
    state=NextState.makeState(NextState.State.NO_MORE_VALUES,state.getResultSize());
  }
  return state;
}
