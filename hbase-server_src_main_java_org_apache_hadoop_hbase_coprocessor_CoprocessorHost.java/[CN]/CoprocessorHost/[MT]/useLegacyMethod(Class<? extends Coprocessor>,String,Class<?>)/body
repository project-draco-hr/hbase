{
  boolean useLegacy;
  try {
    clazz.getDeclaredMethod(methodName,parameterTypes);
    LOG.debug("Found an implementation of '" + methodName + "' that uses updated method "+ "signature. Skipping legacy support for invocations in '"+ clazz+ "'.");
    useLegacy=false;
  }
 catch (  NoSuchMethodException exception) {
    useLegacy=true;
  }
catch (  SecurityException exception) {
    LOG.warn("The Security Manager denied our attempt to detect if the coprocessor '" + clazz + "' requires legacy support; assuming it does. If you get later errors about legacy "+ "coprocessor use, consider updating your security policy to allow access to the package"+ " and declared members of your implementation.");
    LOG.debug("Details of Security Manager rejection.",exception);
    useLegacy=true;
  }
  return useLegacy;
}
