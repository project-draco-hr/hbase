{
  VisibilityLabelsResponse.Builder response=VisibilityLabelsResponse.newBuilder();
  List<VisibilityLabel> visLabels=request.getVisLabelList();
  if (!initialized) {
    setExceptionResults(visLabels.size(),new CoprocessorException("VisibilityController not yet initialized"),response);
  }
 else {
    try {
      checkCallingUserAuth();
      List<byte[]> labels=new ArrayList<byte[]>(visLabels.size());
      RegionActionResult successResult=RegionActionResult.newBuilder().build();
      for (      VisibilityLabel visLabel : visLabels) {
        byte[] label=visLabel.getLabel().toByteArray();
        labels.add(label);
        response.addResult(successResult);
      }
      if (!labels.isEmpty()) {
        OperationStatus[] opStatus=this.visibilityLabelService.addLabels(labels);
        int i=0;
        for (        OperationStatus status : opStatus) {
          while (response.getResult(i) != successResult)           i++;
          if (status.getOperationStatusCode() != SUCCESS) {
            RegionActionResult.Builder failureResultBuilder=RegionActionResult.newBuilder();
            failureResultBuilder.setException(ResponseConverter.buildException(new DoNotRetryIOException(status.getExceptionMsg())));
            response.setResult(i,failureResultBuilder.build());
          }
          i++;
        }
      }
    }
 catch (    IOException e) {
      LOG.error(e);
      setExceptionResults(visLabels.size(),e,response);
    }
  }
  done.run(response.build());
}
