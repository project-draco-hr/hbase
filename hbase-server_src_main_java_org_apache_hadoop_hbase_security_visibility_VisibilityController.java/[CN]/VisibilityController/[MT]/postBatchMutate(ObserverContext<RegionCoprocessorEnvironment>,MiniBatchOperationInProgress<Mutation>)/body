{
  if (this.labelsRegion) {
    Pair<Map<String,Integer>,Map<String,List<Integer>>> labelsAndUserAuths=extractLabelsAndAuths(getExistingLabelsWithAuths());
    Map<String,Integer> existingLabels=labelsAndUserAuths.getFirst();
    Map<String,List<Integer>> userAuths=labelsAndUserAuths.getSecond();
    boolean isNewLabels=false;
    boolean isUserAuthsChange=false;
    for (int i=0; i < miniBatchOp.size(); i++) {
      Mutation m=miniBatchOp.getOperation(i);
      if (miniBatchOp.getOperationStatus(i).getOperationStatusCode() == SUCCESS) {
        for (        List<Cell> cells : m.getFamilyCellMap().values()) {
          for (          Cell cell : cells) {
            int labelOrdinal=Bytes.toInt(cell.getRowArray(),cell.getRowOffset());
            if (Bytes.equals(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength(),LABEL_QUALIFIER,0,LABEL_QUALIFIER.length)) {
              if (m instanceof Put) {
                existingLabels.put(Bytes.toString(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength()),labelOrdinal);
                isNewLabels=true;
              }
            }
 else {
              String user=Bytes.toString(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());
              List<Integer> auths=userAuths.get(user);
              if (auths == null) {
                auths=new ArrayList<Integer>();
                userAuths.put(user,auths);
              }
              if (m instanceof Delete) {
                auths.remove(Integer.valueOf(labelOrdinal));
              }
 else {
                auths.add(labelOrdinal);
              }
              isUserAuthsChange=true;
            }
          }
        }
      }
    }
    if (isNewLabels) {
      byte[] serialized=VisibilityUtils.getDataToWriteToZooKeeper(existingLabels);
      this.visibilityManager.writeToZookeeper(serialized,true);
    }
    if (isUserAuthsChange) {
      byte[] serialized=VisibilityUtils.getUserAuthsDataToWriteToZooKeeper(userAuths);
      this.visibilityManager.writeToZookeeper(serialized,false);
    }
  }
}
