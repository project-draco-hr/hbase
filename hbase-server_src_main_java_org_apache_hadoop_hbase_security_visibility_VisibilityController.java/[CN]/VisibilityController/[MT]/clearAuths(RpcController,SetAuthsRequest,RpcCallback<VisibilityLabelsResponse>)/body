{
  VisibilityLabelsResponse.Builder response=VisibilityLabelsResponse.newBuilder();
  List<ByteString> auths=request.getAuthList();
  if (!initialized) {
    setExceptionResults(auths.size(),new CoprocessorException("VisibilityController not yet initialized"),response);
  }
 else {
    byte[] requestUser=request.getUser().toByteArray();
    List<byte[]> labelAuths=new ArrayList<byte[]>(auths.size());
    try {
      if (this.acOn && !isSystemOrSuperUser()) {
        User user=VisibilityUtils.getActiveUser();
        throw new AccessDeniedException("User '" + (user != null ? user.getShortName() : "null") + " is not authorized to perform this action.");
      }
      checkCallingUserAuth();
      for (      ByteString authBS : auths) {
        labelAuths.add(authBS.toByteArray());
      }
      OperationStatus[] opStatus=this.visibilityLabelService.clearAuths(requestUser,labelAuths);
      logResult(true,"clearAuths","Removing authorization for labels allowed",requestUser,labelAuths,null);
      RegionActionResult successResult=RegionActionResult.newBuilder().build();
      for (      OperationStatus status : opStatus) {
        if (status.getOperationStatusCode() == SUCCESS) {
          response.addResult(successResult);
        }
 else {
          RegionActionResult.Builder failureResultBuilder=RegionActionResult.newBuilder();
          failureResultBuilder.setException(ResponseConverter.buildException(new DoNotRetryIOException(status.getExceptionMsg())));
          response.addResult(failureResultBuilder.build());
        }
      }
    }
 catch (    AccessDeniedException e) {
      logResult(false,"clearAuths",e.getMessage(),requestUser,labelAuths,null);
      LOG.error("User is not having required permissions to clear authorization",e);
      setExceptionResults(auths.size(),e,response);
    }
catch (    IOException e) {
      LOG.error(e);
      setExceptionResults(auths.size(),e,response);
    }
  }
  done.run(response.build());
}
