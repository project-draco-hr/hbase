{
  if (node.isSingleNode()) {
    String identifier=null;
    int labelOrdinal=0;
    if (node instanceof LeafExpressionNode) {
      identifier=((LeafExpressionNode)node).getIdentifier();
      if (LOG.isTraceEnabled()) {
        LOG.trace("The identifier is " + identifier);
      }
      labelOrdinal=this.visibilityManager.getLabelOrdinal(identifier);
    }
 else {
      LeafExpressionNode lNode=(LeafExpressionNode)((NonLeafExpressionNode)node).getChildExps().get(0);
      identifier=lNode.getIdentifier();
      labelOrdinal=this.visibilityManager.getLabelOrdinal(identifier);
      labelOrdinal=-1 * labelOrdinal;
    }
    if (labelOrdinal == 0) {
      throw new InvalidLabelException("Invalid visibility label " + identifier);
    }
    StreamUtils.writeRawVInt32(dos,labelOrdinal);
  }
 else {
    List<ExpressionNode> childExps=((NonLeafExpressionNode)node).getChildExps();
    for (    ExpressionNode child : childExps) {
      writeLabelOrdinalsToStream(child,dos);
    }
  }
}
