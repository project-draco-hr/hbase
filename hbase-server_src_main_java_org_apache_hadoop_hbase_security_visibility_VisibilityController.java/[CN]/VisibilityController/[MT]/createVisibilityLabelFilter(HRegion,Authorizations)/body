{
  Map<ByteRange,Integer> cfVsMaxVersions=new HashMap<ByteRange,Integer>();
  for (  HColumnDescriptor hcd : region.getTableDesc().getFamilies()) {
    cfVsMaxVersions.put(new SimpleByteRange(hcd.getName()),hcd.getMaxVersions());
  }
  if (authorizations == null) {
    TableName table=region.getRegionInfo().getTable();
    if (table.isSystemTable() && !table.equals(LABELS_TABLE_NAME)) {
      return null;
    }
  }
 else {
    for (    String label : authorizations.getLabels()) {
      if (!VisibilityLabelsValidator.isValidLabel(label)) {
        throw new IllegalArgumentException("Invalid authorization label : " + label + ". Authorizations cannot contain '(', ')' ,'&' ,'|', '!'"+ " and cannot be empty");
      }
    }
  }
  Filter visibilityLabelFilter=null;
  if (this.scanLabelGenerators != null) {
    List<String> labels=null;
    for (    ScanLabelGenerator scanLabelGenerator : this.scanLabelGenerators) {
      try {
        labels=scanLabelGenerator.getLabels(getActiveUser(),authorizations);
        labels=(labels == null) ? new ArrayList<String>() : labels;
        authorizations=new Authorizations(labels);
      }
 catch (      Throwable t) {
        LOG.error(t);
        throw new IOException(t);
      }
    }
    int labelsCount=this.visibilityManager.getLabelsCount();
    BitSet bs=new BitSet(labelsCount + 1);
    if (labels != null) {
      for (      String label : labels) {
        int labelOrdinal=this.visibilityManager.getLabelOrdinal(label);
        if (labelOrdinal != 0) {
          bs.set(labelOrdinal);
        }
      }
    }
    visibilityLabelFilter=new VisibilityLabelFilter(bs,cfVsMaxVersions);
  }
  return visibilityLabelFilter;
}
