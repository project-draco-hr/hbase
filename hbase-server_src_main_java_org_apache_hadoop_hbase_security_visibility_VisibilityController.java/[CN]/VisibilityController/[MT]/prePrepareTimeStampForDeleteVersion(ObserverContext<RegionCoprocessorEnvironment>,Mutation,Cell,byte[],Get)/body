{
  if (!authorizationEnabled) {
    return;
  }
  CellVisibility cellVisibility=null;
  try {
    cellVisibility=delete.getCellVisibility();
  }
 catch (  DeserializationException de) {
    throw new IOException("Invalid cell visibility specified " + delete,de);
  }
  List<Tag> visibilityTags=new ArrayList<Tag>();
  if (cellVisibility != null) {
    String labelsExp=cellVisibility.getExpression();
    try {
      visibilityTags=this.visibilityLabelService.createVisibilityExpTags(labelsExp,false,false);
    }
 catch (    InvalidLabelException e) {
      throw new IOException("Invalid cell visibility specified " + labelsExp,e);
    }
  }
  get.setFilter(new DeleteVersionVisibilityExpressionFilter(visibilityTags,VisibilityConstants.SORTED_ORDINAL_SERIALIZATION_FORMAT));
  List<Cell> result=ctx.getEnvironment().getRegion().get(get,false);
  if (result.size() < get.getMaxVersions()) {
    CellUtil.updateLatestStamp(cell,Long.MIN_VALUE);
    return;
  }
  if (result.size() > get.getMaxVersions()) {
    throw new RuntimeException("Unexpected size: " + result.size() + ". Results more than the max versions obtained.");
  }
  Cell getCell=result.get(get.getMaxVersions() - 1);
  CellUtil.setTimestamp(cell,getCell.getTimestamp());
  ctx.bypass();
}
