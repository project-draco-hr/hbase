{
  this.cacheKey=cacheKey;
  this.buf=buf;
  this.accessTime=accessTime;
  this.size=ClassSize.align(cacheKey.heapSize()) + ClassSize.align(buf.heapSize()) + PER_BLOCK_OVERHEAD;
  if (inMemory) {
    this.priority=BlockPriority.MEMORY;
  }
 else {
    this.priority=BlockPriority.SINGLE;
  }
}
