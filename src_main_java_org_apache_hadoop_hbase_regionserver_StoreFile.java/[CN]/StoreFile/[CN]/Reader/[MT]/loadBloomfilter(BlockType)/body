{
  try {
    if (blockType == BlockType.GENERAL_BLOOM_META) {
      if (this.generalBloomFilter != null)       return;
      DataInput bloomMeta=reader.getGeneralBloomFilterMetadata();
      if (bloomMeta != null) {
        if (bloomFilterType == BloomType.NONE) {
          throw new IOException("valid bloom filter type not found in FileInfo");
        }
 else {
          generalBloomFilter=BloomFilterFactory.createFromMeta(bloomMeta,reader);
          LOG.info("Loaded " + bloomFilterType.toString() + " ("+ generalBloomFilter.getClass().getSimpleName()+ ") metadata for "+ reader.getName());
        }
      }
    }
 else     if (blockType == BlockType.DELETE_FAMILY_BLOOM_META) {
      if (this.deleteFamilyBloomFilter != null)       return;
      DataInput bloomMeta=reader.getDeleteBloomFilterMetadata();
      if (bloomMeta != null) {
        deleteFamilyBloomFilter=BloomFilterFactory.createFromMeta(bloomMeta,reader);
        LOG.info("Loaded Delete Family Bloom (" + deleteFamilyBloomFilter.getClass().getSimpleName() + ") metadata for "+ reader.getName());
      }
    }
 else {
      throw new RuntimeException("Block Type: " + blockType.toString() + "is not supported for Bloom filter");
    }
  }
 catch (  IOException e) {
    LOG.error("Error reading bloom filter meta for " + blockType + " -- proceeding without",e);
    setBloomFilterFaulty(blockType);
  }
catch (  IllegalArgumentException e) {
    LOG.error("Bad bloom filter meta " + blockType + " -- proceeding without",e);
    setBloomFilterFaulty(blockType);
  }
}
