{
  String EXPORT_TABLE="exportWithDeletes";
  HTableDescriptor desc=new HTableDescriptor(EXPORT_TABLE);
  desc.addFamily(new HColumnDescriptor(FAMILYA,HColumnDescriptor.DEFAULT_MIN_VERSIONS,5,true,HColumnDescriptor.DEFAULT_COMPRESSION,HColumnDescriptor.DEFAULT_ENCODE_ON_DISK,HColumnDescriptor.DEFAULT_DATA_BLOCK_ENCODING,HColumnDescriptor.DEFAULT_IN_MEMORY,HColumnDescriptor.DEFAULT_BLOCKCACHE,HColumnDescriptor.DEFAULT_BLOCKSIZE,HColumnDescriptor.DEFAULT_TTL,HColumnDescriptor.DEFAULT_BLOOMFILTER,HConstants.REPLICATION_SCOPE_LOCAL));
  UTIL.getHBaseAdmin().createTable(desc);
  HTable t=new HTable(UTIL.getConfiguration(),EXPORT_TABLE);
  Put p=new Put(ROW1);
  p.add(FAMILYA,QUAL,now,QUAL);
  p.add(FAMILYA,QUAL,now + 1,QUAL);
  p.add(FAMILYA,QUAL,now + 2,QUAL);
  p.add(FAMILYA,QUAL,now + 3,QUAL);
  p.add(FAMILYA,QUAL,now + 4,QUAL);
  t.put(p);
  Delete d=new Delete(ROW1,now + 3,null);
  t.delete(d);
  d=new Delete(ROW1);
  d.deleteColumns(FAMILYA,QUAL,now + 2);
  t.delete(d);
  String[] args=new String[]{"-D" + Export.RAW_SCAN + "=true",EXPORT_TABLE,OUTPUT_DIR,"1000"};
  GenericOptionsParser opts=new GenericOptionsParser(new Configuration(cluster.getConfiguration()),args);
  Configuration conf=opts.getConfiguration();
  args=opts.getRemainingArgs();
  Job job=Export.createSubmittableJob(conf,args);
  job.waitForCompletion(false);
  assertTrue(job.isSuccessful());
  String IMPORT_TABLE="importWithDeletes";
  desc=new HTableDescriptor(IMPORT_TABLE);
  desc.addFamily(new HColumnDescriptor(FAMILYA,HColumnDescriptor.DEFAULT_MIN_VERSIONS,5,true,HColumnDescriptor.DEFAULT_COMPRESSION,HColumnDescriptor.DEFAULT_ENCODE_ON_DISK,HColumnDescriptor.DEFAULT_DATA_BLOCK_ENCODING,HColumnDescriptor.DEFAULT_IN_MEMORY,HColumnDescriptor.DEFAULT_BLOCKCACHE,HColumnDescriptor.DEFAULT_BLOCKSIZE,HColumnDescriptor.DEFAULT_TTL,HColumnDescriptor.DEFAULT_BLOOMFILTER,HConstants.REPLICATION_SCOPE_LOCAL));
  UTIL.getHBaseAdmin().createTable(desc);
  t.close();
  t=new HTable(UTIL.getConfiguration(),IMPORT_TABLE);
  args=new String[]{IMPORT_TABLE,OUTPUT_DIR};
  opts=new GenericOptionsParser(new Configuration(cluster.getConfiguration()),args);
  conf=opts.getConfiguration();
  args=opts.getRemainingArgs();
  job=Import.createSubmittableJob(conf,args);
  job.waitForCompletion(false);
  assertTrue(job.isSuccessful());
  Scan s=new Scan();
  s.setMaxVersions();
  s.setRaw(true);
  ResultScanner scanner=t.getScanner(s);
  Result r=scanner.next();
  KeyValue[] res=r.raw();
  assertTrue(res[0].isDeleteFamily());
  assertEquals(now + 4,res[1].getTimestamp());
  assertEquals(now + 3,res[2].getTimestamp());
  assertTrue(res[3].isDelete());
  assertEquals(now + 2,res[4].getTimestamp());
  assertEquals(now + 1,res[5].getTimestamp());
  assertEquals(now,res[6].getTimestamp());
  t.close();
}
