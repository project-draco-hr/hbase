{
  while (true) {
    Pair<Integer,Integer> star=starInCol(path.getLast().getSecond());
    if (star != null) {
      path.offerLast(star);
    }
 else {
      break;
    }
    Pair<Integer,Integer> prime=primeInRow(path.getLast().getFirst());
    path.offerLast(prime);
  }
  for (  Pair<Integer,Integer> p : path) {
    if (mask[p.getFirst()][p.getSecond()] == STAR) {
      mask[p.getFirst()][p.getSecond()]=NONE;
    }
 else {
      mask[p.getFirst()][p.getSecond()]=STAR;
    }
  }
  Arrays.fill(rowsCovered,false);
  Arrays.fill(colsCovered,false);
  for (int r=0; r < rows; r++) {
    for (int c=0; c < cols; c++) {
      if (mask[r][c] == PRIME) {
        mask[r][c]=NONE;
      }
    }
  }
}
