{
  this.blockMeta=new PrefixTreeBlockMeta();
  this.rowRange=new SimpleByteRange();
  this.familyRange=new SimpleByteRange();
  this.qualifierRange=new SimpleByteRange();
  this.timestamps=new long[INITIAL_PER_CELL_ARRAY_SIZES];
  this.mvccVersions=new long[INITIAL_PER_CELL_ARRAY_SIZES];
  this.typeBytes=new byte[INITIAL_PER_CELL_ARRAY_SIZES];
  this.valueOffsets=new int[INITIAL_PER_CELL_ARRAY_SIZES];
  this.values=new byte[VALUE_BUFFER_INIT_SIZE];
  this.familyDeduplicator=USE_HASH_COLUMN_SORTER ? new ByteRangeHashSet() : new ByteRangeTreeSet();
  this.qualifierDeduplicator=USE_HASH_COLUMN_SORTER ? new ByteRangeHashSet() : new ByteRangeTreeSet();
  this.timestampEncoder=new LongEncoder();
  this.mvccVersionEncoder=new LongEncoder();
  this.cellTypeEncoder=new CellTypeEncoder();
  this.rowTokenizer=new Tokenizer();
  this.familyTokenizer=new Tokenizer();
  this.qualifierTokenizer=new Tokenizer();
  this.rowWriter=new RowSectionWriter();
  this.familyWriter=new ColumnSectionWriter();
  this.qualifierWriter=new ColumnSectionWriter();
  reset(outputStream,includeMvccVersion);
}
