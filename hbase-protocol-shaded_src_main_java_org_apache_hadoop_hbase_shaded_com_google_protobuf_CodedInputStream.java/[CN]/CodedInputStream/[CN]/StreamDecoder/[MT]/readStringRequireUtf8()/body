{
  final int size=readRawVarint32();
  final byte[] bytes;
  final int oldPos=pos;
  final int tempPos;
  if (size <= (bufferSize - oldPos) && size > 0) {
    bytes=buffer;
    pos=oldPos + size;
    tempPos=oldPos;
  }
 else   if (size == 0) {
    return "";
  }
 else   if (size <= bufferSize) {
    refillBuffer(size);
    bytes=buffer;
    tempPos=0;
    pos=tempPos + size;
  }
 else {
    bytes=readRawBytesSlowPath(size);
    tempPos=0;
  }
  if (!Utf8.isValidUtf8(bytes,tempPos,tempPos + size)) {
    throw InvalidProtocolBufferException.invalidUtf8();
  }
  return new String(bytes,tempPos,size,UTF_8);
}
