{
  fastpath: {
    int tempPos=pos;
    if (bufferSize == tempPos) {
      break fastpath;
    }
    final byte[] buffer=this.buffer;
    long x;
    int y;
    if ((y=buffer[tempPos++]) >= 0) {
      pos=tempPos;
      return y;
    }
 else     if (bufferSize - tempPos < 9) {
      break fastpath;
    }
 else     if ((y^=(buffer[tempPos++] << 7)) < 0) {
      x=y ^ (~0 << 7);
    }
 else     if ((y^=(buffer[tempPos++] << 14)) >= 0) {
      x=y ^ ((~0 << 7) ^ (~0 << 14));
    }
 else     if ((y^=(buffer[tempPos++] << 21)) < 0) {
      x=y ^ ((~0 << 7) ^ (~0 << 14) ^ (~0 << 21));
    }
 else     if ((x=y ^ ((long)buffer[tempPos++] << 28)) >= 0L) {
      x^=(~0L << 7) ^ (~0L << 14) ^ (~0L << 21)^ (~0L << 28);
    }
 else     if ((x^=((long)buffer[tempPos++] << 35)) < 0L) {
      x^=(~0L << 7) ^ (~0L << 14) ^ (~0L << 21)^ (~0L << 28)^ (~0L << 35);
    }
 else     if ((x^=((long)buffer[tempPos++] << 42)) >= 0L) {
      x^=(~0L << 7) ^ (~0L << 14) ^ (~0L << 21)^ (~0L << 28)^ (~0L << 35)^ (~0L << 42);
    }
 else     if ((x^=((long)buffer[tempPos++] << 49)) < 0L) {
      x^=(~0L << 7) ^ (~0L << 14) ^ (~0L << 21)^ (~0L << 28)^ (~0L << 35)^ (~0L << 42)^ (~0L << 49);
    }
 else {
      x^=((long)buffer[tempPos++] << 56);
      x^=(~0L << 7) ^ (~0L << 14) ^ (~0L << 21)^ (~0L << 28)^ (~0L << 35)^ (~0L << 42)^ (~0L << 49)^ (~0L << 56);
      if (x < 0L) {
        if (buffer[tempPos++] < 0L) {
          break fastpath;
        }
      }
    }
    pos=tempPos;
    return x;
  }
  return readRawVarint64SlowPath();
}
