{
  fastpath: {
    long tempPos=pos;
    if (limit == tempPos) {
      break fastpath;
    }
    int x;
    if ((x=UnsafeUtil.getByte(tempPos++)) >= 0) {
      pos=tempPos;
      return x;
    }
 else     if (limit - tempPos < 9) {
      break fastpath;
    }
 else     if ((x^=(UnsafeUtil.getByte(tempPos++) << 7)) < 0) {
      x^=(~0 << 7);
    }
 else     if ((x^=(UnsafeUtil.getByte(tempPos++) << 14)) >= 0) {
      x^=(~0 << 7) ^ (~0 << 14);
    }
 else     if ((x^=(UnsafeUtil.getByte(tempPos++) << 21)) < 0) {
      x^=(~0 << 7) ^ (~0 << 14) ^ (~0 << 21);
    }
 else {
      int y=UnsafeUtil.getByte(tempPos++);
      x^=y << 28;
      x^=(~0 << 7) ^ (~0 << 14) ^ (~0 << 21)^ (~0 << 28);
      if (y < 0 && UnsafeUtil.getByte(tempPos++) < 0 && UnsafeUtil.getByte(tempPos++) < 0 && UnsafeUtil.getByte(tempPos++) < 0 && UnsafeUtil.getByte(tempPos++) < 0 && UnsafeUtil.getByte(tempPos++) < 0) {
        break fastpath;
      }
    }
    pos=tempPos;
    return x;
  }
  return (int)readRawVarint64SlowPath();
}
