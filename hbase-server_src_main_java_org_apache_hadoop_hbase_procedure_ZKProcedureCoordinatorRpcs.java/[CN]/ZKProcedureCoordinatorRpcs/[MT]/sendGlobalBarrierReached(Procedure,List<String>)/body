{
  String procName=proc.getName();
  String reachedNode=zkProc.getReachedBarrierNode(procName);
  LOG.debug("Creating reached barrier zk node:" + reachedNode);
  try {
    ZKUtil.createWithParents(zkProc.getWatcher(),reachedNode);
    for (    String node : nodeNames) {
      String znode=ZKUtil.joinZNode(reachedNode,node);
      if (ZKUtil.watchAndCheckExists(zkProc.getWatcher(),znode)) {
        byte[] dataFromMember=ZKUtil.getData(zkProc.getWatcher(),znode);
        if (dataFromMember != null && dataFromMember.length > 0) {
          if (!ProtobufUtil.isPBMagicPrefix(dataFromMember)) {
            String msg="Failed to get data from finished node or data is illegally formatted: " + znode;
            LOG.error(msg);
            throw new IOException(msg);
          }
 else {
            dataFromMember=Arrays.copyOfRange(dataFromMember,ProtobufUtil.lengthOfPBMagic(),dataFromMember.length);
            coordinator.memberFinishedBarrier(procName,node,dataFromMember);
          }
        }
 else {
          coordinator.memberFinishedBarrier(procName,node,dataFromMember);
        }
      }
    }
  }
 catch (  KeeperException e) {
    String msg="Failed while creating reached node:" + reachedNode;
    LOG.error(msg,e);
    throw new IOException(msg,e);
  }
catch (  InterruptedException e) {
    String msg="Interrupted while creating reached node:" + reachedNode;
    LOG.error(msg,e);
    throw new InterruptedIOException(msg);
  }
}
