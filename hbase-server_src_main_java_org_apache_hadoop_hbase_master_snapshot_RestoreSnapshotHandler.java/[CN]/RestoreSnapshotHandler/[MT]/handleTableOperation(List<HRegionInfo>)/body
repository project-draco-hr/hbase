{
  MasterFileSystem fileSystemManager=masterServices.getMasterFileSystem();
  CatalogTracker catalogTracker=masterServices.getCatalogTracker();
  FileSystem fs=fileSystemManager.getFileSystem();
  Path rootDir=fileSystemManager.getRootDir();
  TableName tableName=hTableDescriptor.getTableName();
  try {
    this.masterServices.getTableDescriptors().add(hTableDescriptor);
    LOG.debug("Starting restore snapshot=" + ClientSnapshotDescriptionUtils.toString(snapshot));
    Path snapshotDir=SnapshotDescriptionUtils.getCompletedSnapshotDir(snapshot,rootDir);
    RestoreSnapshotHelper restoreHelper=new RestoreSnapshotHelper(masterServices.getConfiguration(),fs,snapshot,snapshotDir,hTableDescriptor,rootDir,monitor,status);
    RestoreSnapshotHelper.RestoreMetaChanges metaChanges=restoreHelper.restoreHdfsRegions();
    forceRegionsOffline(metaChanges);
    status.setStatus("Preparing to restore each region");
    List<HRegionInfo> hrisToRemove=new LinkedList<HRegionInfo>();
    if (metaChanges.hasRegionsToRemove())     hrisToRemove.addAll(metaChanges.getRegionsToRemove());
    if (metaChanges.hasRegionsToRestore())     hrisToRemove.addAll(metaChanges.getRegionsToRestore());
    MetaEditor.deleteRegions(catalogTracker,hrisToRemove);
    hris.clear();
    if (metaChanges.hasRegionsToAdd())     hris.addAll(metaChanges.getRegionsToAdd());
    if (metaChanges.hasRegionsToRestore())     hris.addAll(metaChanges.getRegionsToRestore());
    MetaEditor.addRegionsToMeta(catalogTracker,hris);
    metaChanges.updateMetaParentRegions(catalogTracker,hris);
    LOG.info("Restore snapshot=" + ClientSnapshotDescriptionUtils.toString(snapshot) + " on table="+ tableName+ " completed!");
  }
 catch (  IOException e) {
    String msg="restore snapshot=" + ClientSnapshotDescriptionUtils.toString(snapshot) + " failed. Try re-running the restore command.";
    LOG.error(msg,e);
    monitor.receive(new ForeignException(masterServices.getServerName().toString(),e));
    throw new RestoreSnapshotException(msg,e);
  }
}
