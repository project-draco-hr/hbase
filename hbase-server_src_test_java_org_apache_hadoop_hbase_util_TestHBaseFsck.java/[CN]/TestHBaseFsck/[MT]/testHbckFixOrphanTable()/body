{
  String table="tableInfo";
  FileSystem fs=null;
  Path tableinfo=null;
  try {
    setupTable(table);
    HBaseAdmin admin=TEST_UTIL.getHBaseAdmin();
    Path hbaseTableDir=HTableDescriptor.getTableDir(FSUtils.getRootDir(conf),Bytes.toBytes(table));
    fs=hbaseTableDir.getFileSystem(conf);
    FileStatus status=FSTableDescriptors.getTableInfoPath(fs,hbaseTableDir);
    tableinfo=status.getPath();
    fs.rename(tableinfo,new Path("/.tableinfo"));
    HBaseFsck hbck=doFsck(conf,false);
    assertErrors(hbck,new ERROR_CODE[]{ERROR_CODE.NO_TABLEINFO_FILE});
    hbck=doFsck(conf,true);
    assertNoErrors(hbck);
    status=null;
    status=FSTableDescriptors.getTableInfoPath(fs,hbaseTableDir);
    assertNotNull(status);
    HTableDescriptor htd=admin.getTableDescriptor(table.getBytes());
    htd.setValue("NOT_DEFAULT","true");
    admin.disableTable(table);
    admin.modifyTable(table.getBytes(),htd);
    admin.enableTable(table);
    fs.delete(status.getPath(),true);
    htd=admin.getTableDescriptor(table.getBytes());
    hbck=doFsck(conf,true);
    assertNoErrors(hbck);
    status=null;
    status=FSTableDescriptors.getTableInfoPath(fs,hbaseTableDir);
    assertNotNull(status);
    htd=admin.getTableDescriptor(table.getBytes());
    assertEquals(htd.getValue("NOT_DEFAULT"),"true");
  }
  finally {
    fs.rename(new Path("/.tableinfo"),tableinfo);
    deleteTable(table);
  }
}
