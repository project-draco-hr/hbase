{
  assertNoErrors(doFsck(conf,false));
  String table="tableBadMetaAssign";
  TEST_UTIL.createTable(Bytes.toBytes(table),FAM);
  assertNoErrors(doFsck(conf,false));
  Table meta=new HTable(conf,TableName.META_TABLE_NAME,executorService);
  Scan scan=new Scan();
  scan.setStartRow(Bytes.toBytes(table + ",,"));
  ResultScanner scanner=meta.getScanner(scan);
  HRegionInfo hri=null;
  Result res=scanner.next();
  ServerName currServer=ServerName.parseFrom(res.getValue(HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER));
  long startCode=Bytes.toLong(res.getValue(HConstants.CATALOG_FAMILY,HConstants.STARTCODE_QUALIFIER));
  for (  JVMClusterUtil.RegionServerThread rs : TEST_UTIL.getHBaseCluster().getRegionServerThreads()) {
    ServerName sn=rs.getRegionServer().getServerName();
    if (!currServer.getHostAndPort().equals(sn.getHostAndPort()) || startCode != sn.getStartcode()) {
      Put put=new Put(res.getRow());
      put.setDurability(Durability.SKIP_WAL);
      put.add(HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER,Bytes.toBytes(sn.getHostAndPort()));
      put.add(HConstants.CATALOG_FAMILY,HConstants.STARTCODE_QUALIFIER,Bytes.toBytes(sn.getStartcode()));
      meta.put(put);
      hri=HRegionInfo.getHRegionInfo(res);
      break;
    }
  }
  assertErrors(doFsck(conf,true),new ERROR_CODE[]{ERROR_CODE.SERVER_DOES_NOT_MATCH_META});
  TEST_UTIL.getHBaseCluster().getMaster().getAssignmentManager().waitForAssignment(hri);
  assertNoErrors(doFsck(conf,false));
  Table t=new HTable(conf,Bytes.toBytes(table),executorService);
  ResultScanner s=t.getScanner(new Scan());
  s.close();
  t.close();
  scanner.close();
  meta.close();
}
