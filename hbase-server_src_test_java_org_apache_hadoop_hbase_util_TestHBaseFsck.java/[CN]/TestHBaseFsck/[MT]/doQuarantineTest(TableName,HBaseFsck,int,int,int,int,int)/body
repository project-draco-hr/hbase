{
  try {
    setupTable(table);
    assertEquals(ROWKEYS.length,countRows());
    TEST_UTIL.getHBaseAdmin().flush(table);
    TEST_UTIL.getHBaseAdmin().disableTable(table);
    String[] args={"-sidelineCorruptHFiles","-repairHoles","-ignorePreCheckPermission",table.getNameAsString()};
    ExecutorService exec=new ScheduledThreadPoolExecutor(10);
    HBaseFsck res=hbck.exec(exec,args);
    HFileCorruptionChecker hfcc=res.getHFilecorruptionChecker();
    assertEquals(hfcc.getHFilesChecked(),check);
    assertEquals(hfcc.getCorrupted().size(),corrupt);
    assertEquals(hfcc.getFailures().size(),fail);
    assertEquals(hfcc.getQuarantined().size(),quar);
    assertEquals(hfcc.getMissing().size(),missing);
    Admin admin=TEST_UTIL.getHBaseAdmin();
    admin.enableTableAsync(table);
    while (!admin.isTableEnabled(table)) {
      try {
        Thread.sleep(250);
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
        fail("Interrupted when trying to enable table " + table);
      }
    }
  }
  finally {
    deleteTable(table);
  }
}
