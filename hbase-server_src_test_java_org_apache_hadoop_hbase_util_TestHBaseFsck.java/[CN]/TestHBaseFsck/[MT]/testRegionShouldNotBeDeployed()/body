{
  String table="tableRegionShouldNotBeDeployed";
  try {
    LOG.info("Starting testRegionShouldNotBeDeployed.");
    MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
    assertTrue(cluster.waitForActiveAndReadyMaster());
    ZooKeeperWatcher zkw=HBaseTestingUtility.getZooKeeperWatcher(TEST_UTIL);
    FileSystem filesystem=FileSystem.get(conf);
    Path rootdir=FSUtils.getRootDir(conf);
    byte[][] SPLIT_KEYS=new byte[][]{new byte[0],Bytes.toBytes("aaa"),Bytes.toBytes("bbb"),Bytes.toBytes("ccc"),Bytes.toBytes("ddd")};
    HTableDescriptor htdDisabled=new HTableDescriptor(Bytes.toBytes(table));
    htdDisabled.addFamily(new HColumnDescriptor(FAM));
    FSTableDescriptors.createTableDescriptor(filesystem,rootdir,htdDisabled);
    List<HRegionInfo> disabledRegions=TEST_UTIL.createMultiRegionsInMeta(TEST_UTIL.getConfiguration(),htdDisabled,SPLIT_KEYS);
    HRegionServer hrs=cluster.getRegionServer(0);
    ServerName serverName=hrs.getServerName();
    TEST_UTIL.getHBaseAdmin().disableTable(table);
    TEST_UTIL.getHBaseAdmin().enableTable(table);
    TEST_UTIL.getHBaseAdmin().disableTable(table);
    ZKTable zkTable=cluster.getMaster().getAssignmentManager().getZKTable();
    zkTable.setEnabledTable(table);
    HRegionInfo region=disabledRegions.remove(0);
    ZKAssign.createNodeOffline(zkw,region,serverName);
    ProtobufUtil.openRegion(hrs,region);
    int iTimes=0;
    byte[] regionName=region.getRegionName();
    while (true) {
      if (cluster.getServerWith(regionName) != -1) {
        zkTable.setDisabledTable(table);
        break;
      }
      Thread.sleep(100);
      iTimes++;
      if (iTimes >= REGION_ONLINE_TIMEOUT) {
        break;
      }
    }
    assertTrue(iTimes < REGION_ONLINE_TIMEOUT);
    HBaseFsck hbck=doFsck(conf,false);
    assertErrors(hbck,new ERROR_CODE[]{ERROR_CODE.SHOULD_NOT_BE_DEPLOYED});
    doFsck(conf,true);
    assertNoErrors(doFsck(conf,false));
  }
  finally {
    TEST_UTIL.getHBaseAdmin().enableTable(table);
    deleteTable(table);
  }
}
