{
  final ExecutorService service;
  final Future<HBaseFsck> hbck1, hbck2;
class RunHbck implements Callable<HBaseFsck> {
    @Override public HBaseFsck call() throws Exception {
      Configuration c=new Configuration(conf);
      c.setInt("hbase.hbck.lockfile.attempts",10);
      return doFsck(c,false);
    }
  }
  service=Executors.newFixedThreadPool(2);
  hbck1=service.submit(new RunHbck());
  hbck2=service.submit(new RunHbck());
  service.shutdown();
  service.awaitTermination(25,TimeUnit.SECONDS);
  HBaseFsck h1=hbck1.get();
  HBaseFsck h2=hbck2.get();
  assertNotNull(h1);
  assertNotNull(h2);
  assert(h1.getRetCode() >= 0);
  assert(h2.getRetCode() >= 0);
}
