{
  if (args.length < 2) {
    usage();
    System.exit(-1);
  }
  boolean dump=true;
  if (args[0].compareTo("--dump") != 0) {
    if (args[0].compareTo("--split") == 0) {
      dump=false;
    }
 else {
      usage();
      System.exit(-1);
    }
  }
  Configuration conf=HBaseConfiguration.create();
  FileSystem fs=FileSystem.get(conf);
  Path baseDir=new Path(conf.get(HBASE_DIR));
  Path oldLogDir=new Path(baseDir,HREGION_OLDLOGDIR_NAME);
  for (int i=1; i < args.length; i++) {
    Path logPath=new Path(args[i]);
    if (!fs.exists(logPath)) {
      throw new FileNotFoundException(args[i] + " does not exist");
    }
    if (dump) {
      if (!fs.isFile(logPath)) {
        throw new IOException(args[i] + " is not a file");
      }
      Reader log=getReader(fs,logPath,conf);
      try {
        HLog.Entry entry;
        while ((entry=log.next()) != null) {
          System.out.println(entry.toString());
        }
      }
  finally {
        log.close();
      }
    }
 else {
      if (!fs.getFileStatus(logPath).isDir()) {
        throw new IOException(args[i] + " is not a directory");
      }
      splitLog(baseDir,logPath,oldLogDir,fs,conf);
    }
  }
}
