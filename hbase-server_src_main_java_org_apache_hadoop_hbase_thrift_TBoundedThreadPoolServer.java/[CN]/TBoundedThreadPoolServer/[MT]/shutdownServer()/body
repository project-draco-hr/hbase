{
  executorService.shutdown();
  long msLeftToWait=serverOptions.stopTimeoutUnit.toMillis(serverOptions.stopTimeoutVal);
  long timeMillis=EnvironmentEdgeManager.currentTimeMillis();
  LOG.info("Waiting for up to " + msLeftToWait + " ms to finish processing"+ " pending requests");
  boolean interrupted=false;
  while (msLeftToWait >= 0) {
    try {
      executorService.awaitTermination(msLeftToWait,TimeUnit.MILLISECONDS);
      break;
    }
 catch (    InterruptedException ix) {
      long timePassed=EnvironmentEdgeManager.currentTimeMillis() - timeMillis;
      msLeftToWait-=timePassed;
      timeMillis+=timePassed;
      interrupted=true;
    }
  }
  LOG.info("Interrupting all worker threads and waiting for " + TIME_TO_WAIT_AFTER_SHUTDOWN_MS + " ms longer");
  executorService.shutdownNow();
  Threads.sleepWithoutInterrupt(TIME_TO_WAIT_AFTER_SHUTDOWN_MS);
  if (interrupted) {
    Thread.currentThread().interrupt();
  }
  LOG.info("Thrift server shutdown complete");
}
