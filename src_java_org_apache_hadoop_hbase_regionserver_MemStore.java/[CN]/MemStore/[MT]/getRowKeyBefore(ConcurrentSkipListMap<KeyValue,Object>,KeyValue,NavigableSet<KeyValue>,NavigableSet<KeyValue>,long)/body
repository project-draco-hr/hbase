{
  NavigableMap<KeyValue,Object> headMap=map.headMap(search);
  if (headMap.isEmpty()) {
    return;
  }
  if (candidates.isEmpty()) {
    KeyValue lastFound=null;
    for (Iterator<KeyValue> i=headMap.descendingKeySet().iterator(); i.hasNext(); ) {
      KeyValue found=i.next();
      boolean deleted=found.isDeleteType();
      if (lastFound != null && this.comparator.matchingRows(lastFound,found) && !deleted) {
        break;
      }
      if (!deleted) {
        if (Store.notExpiredAndNotInDeletes(this.ttl,found,now,deletes)) {
          lastFound=found;
          candidates.add(found);
        }
 else {
          Store.expiredOrDeleted(map,found);
        }
      }
 else {
        if (Store.handleDeletes(found,candidates,deletes)) {
          remove(map,found);
        }
      }
    }
  }
 else {
    SortedMap<KeyValue,Object> rowTailMap=headMap.tailMap(headMap.lastKey().cloneRow(HConstants.LATEST_TIMESTAMP));
    Iterator<Map.Entry<KeyValue,Object>> i=rowTailMap.entrySet().iterator();
    do {
      KeyValue found=i.next().getKey();
      if (found.isDeleteType()) {
        Store.handleDeletes(found,candidates,deletes);
      }
 else {
        if (ttl == HConstants.FOREVER || now < found.getTimestamp() + ttl || !deletes.contains(found)) {
          candidates.add(found);
        }
 else {
          Store.expiredOrDeleted(map,found);
        }
      }
    }
 while (i.hasNext());
  }
}
