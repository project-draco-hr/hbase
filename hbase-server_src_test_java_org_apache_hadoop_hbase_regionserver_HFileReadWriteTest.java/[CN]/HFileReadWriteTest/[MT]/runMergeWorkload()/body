{
  long maxKeyCount=prepareForMerge();
  List<StoreFileScanner> scanners=StoreFileScanner.getScannersForStoreFiles(inputStoreFiles,false,false);
  HColumnDescriptor columnDescriptor=new HColumnDescriptor(HFileReadWriteTest.class.getSimpleName());
  columnDescriptor.setBlocksize(blockSize);
  columnDescriptor.setBloomFilterType(bloomType);
  columnDescriptor.setCompressionType(compression);
  columnDescriptor.setDataBlockEncoding(dataBlockEncoding);
  HRegionInfo regionInfo=new HRegionInfo();
  HTableDescriptor htd=new HTableDescriptor(TABLE_NAME);
  HRegion region=new HRegion(outputDir,null,fs,conf,regionInfo,htd,null);
  HStore store=new HStore(region,columnDescriptor,conf);
  StoreFile.Writer writer=store.createWriterInTmp(maxKeyCount,compression,false);
  StatisticsPrinter statsPrinter=new StatisticsPrinter();
  statsPrinter.startThread();
  try {
    performMerge(scanners,store,writer);
    writer.close();
  }
  finally {
    statsPrinter.requestStop();
  }
  Path resultPath=writer.getPath();
  resultPath=tryUsingSimpleOutputPath(resultPath);
  long fileSize=fs.getFileStatus(resultPath).getLen();
  LOG.info("Created " + resultPath + ", size "+ fileSize);
  System.out.println();
  System.out.println("HFile information for " + resultPath);
  System.out.println();
  HFilePrettyPrinter hfpp=new HFilePrettyPrinter();
  hfpp.run(new String[]{"-m","-f",resultPath.toString()});
}
