{
  utility1.restartHBaseCluster(1);
  utility2.shutdownMiniHBaseCluster();
  Put p;
  for (int i=0; i < NB_ROWS_IN_BATCH; i++) {
    p=new Put(Bytes.toBytes("row" + i));
    p.add(famName,qualName,Bytes.toBytes("val" + i));
    ht1Source.put(p);
  }
  p=new Put(Bytes.toBytes("row" + 9998));
  p.add(noRepfamName,qualName,Bytes.toBytes("val" + 9998));
  ht1Source.put(p);
  for (int i=0; i < NB_ROWS_IN_BATCH * 2; i++) {
    p=new Put(Bytes.toBytes("row" + i));
    p.add(famName,qualName,Bytes.toBytes("val" + i));
    ht2Source.put(p);
  }
  p=new Put(Bytes.toBytes("row" + 9998));
  p.add(noRepfamName,qualName,Bytes.toBytes("val" + 9998));
  ht2Source.put(p);
  rowCount_ht1Source=utility1.countRows(ht1Source);
  assertEquals("t1_syncup has 102 rows on source",102,rowCount_ht1Source);
  rowCount_ht2Source=utility1.countRows(ht2Source);
  assertEquals("t2_syncup has 202 rows on source",202,rowCount_ht2Source);
  utility1.shutdownMiniHBaseCluster();
  utility2.restartHBaseCluster(1);
  Thread.sleep(SLEEP_TIME);
  rowCount_ht1TargetAtPeer1=utility2.countRows(ht1TargetAtPeer1);
  rowCount_ht2TargetAtPeer1=utility2.countRows(ht2TargetAtPeer1);
  assertEquals("@Peer1 t1_syncup should be NOT sync up and have 50 rows",50,rowCount_ht1TargetAtPeer1);
  assertEquals("@Peer1 t2_syncup should be NOT sync up and have 100 rows",100,rowCount_ht2TargetAtPeer1);
  syncUp(utility1);
  rowCount_ht1TargetAtPeer1=utility2.countRows(ht1TargetAtPeer1);
  rowCount_ht2TargetAtPeer1=utility2.countRows(ht2TargetAtPeer1);
  assertEquals("@Peer1 t1_syncup should be sync up and have 100 rows",100,rowCount_ht1TargetAtPeer1);
  assertEquals("@Peer1 t2_syncup should be sync up and have 200 rows",200,rowCount_ht2TargetAtPeer1);
}
