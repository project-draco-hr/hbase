{
  try {
    final String name=regionInfo.getRegionNameAsString();
    if (this.server.isStopped() || this.rsServices.isStopping()) {
      return;
    }
    final String encodedName=regionInfo.getEncodedName();
    HRegion region=this.rsServices.getFromOnlineRegions(encodedName);
    if (!transitionZookeeperOfflineToOpening(encodedName,versionOfOfflineNode)) {
      LOG.warn("Region was hijacked? It no longer exists, encodedName=" + encodedName);
      return;
    }
    region=openRegion();
    if (region == null) {
      tryTransitionToFailedOpen(regionInfo);
      return;
    }
    boolean failed=true;
    if (tickleOpening("post_region_open")) {
      if (updateMeta(region)) {
        failed=false;
      }
    }
    if (failed || this.server.isStopped() || this.rsServices.isStopping()) {
      cleanupFailedOpen(region);
      tryTransitionToFailedOpen(regionInfo);
      return;
    }
    if (!transitionToOpened(region)) {
      cleanupFailedOpen(region);
      return;
    }
    if (!isRegionStillOpening()) {
      LOG.warn("Open region aborted since it isn't opening any more");
      cleanupFailedOpen(region);
      return;
    }
    this.rsServices.addToOnlineRegions(region);
    LOG.debug("Opened " + name + " on server:"+ this.server.getServerName());
  }
  finally {
    this.rsServices.getRegionsInTransitionInRS().remove(this.regionInfo.getEncodedNameAsBytes());
  }
}
