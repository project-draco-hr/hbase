{
  Scan scan;
  scan=new Scan(baseScan);
  testMetric(scan,ServerSideScanMetrics.COUNT_OF_ROWS_SCANNED_KEY,NUM_ROWS);
  for (int i=0; i < ROWS.length - 1; i++) {
    scan=new Scan(baseScan);
    scan.setStartRow(ROWS[0]);
    scan.setStopRow(ROWS[i + 1]);
    testMetric(scan,ServerSideScanMetrics.COUNT_OF_ROWS_SCANNED_KEY,i + 1);
  }
  for (int i=ROWS.length - 1; i > 0; i--) {
    scan=new Scan(baseScan);
    scan.setStartRow(ROWS[i - 1]);
    scan.setStopRow(ROWS[ROWS.length - 1]);
    testMetric(scan,ServerSideScanMetrics.COUNT_OF_ROWS_SCANNED_KEY,ROWS.length - i);
  }
  Filter filter=new RowFilter(CompareOp.EQUAL,new BinaryComparator("xyz".getBytes()));
  scan=new Scan(baseScan);
  scan.setFilter(filter);
  testMetric(scan,ServerSideScanMetrics.COUNT_OF_ROWS_SCANNED_KEY,ROWS.length);
  SingleColumnValueFilter singleColumnValueFilter=new SingleColumnValueFilter(FAMILIES[0],QUALIFIERS[0],CompareOp.EQUAL,VALUE);
  scan=new Scan(baseScan);
  scan.setFilter(singleColumnValueFilter);
  testMetric(scan,ServerSideScanMetrics.COUNT_OF_ROWS_SCANNED_KEY,ROWS.length);
  singleColumnValueFilter=new SingleColumnValueFilter(FAMILIES[0],QUALIFIERS[0],CompareOp.NOT_EQUAL,VALUE);
  scan=new Scan(baseScan);
  scan.setFilter(singleColumnValueFilter);
  testMetric(scan,ServerSideScanMetrics.COUNT_OF_ROWS_SCANNED_KEY,ROWS.length);
}
