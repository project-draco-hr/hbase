{
  conf.set(DFSConfigKeys.DFS_NAMENODE_USER_NAME_KEY,PRINCIPAL + "@" + KDC.getRealm());
  conf.set(DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY,KEYTAB_FILE.getAbsolutePath());
  conf.set(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY,PRINCIPAL + "@" + KDC.getRealm());
  conf.set(DFSConfigKeys.DFS_DATANODE_KEYTAB_FILE_KEY,KEYTAB_FILE.getAbsolutePath());
  conf.set(DFSConfigKeys.DFS_WEB_AUTHENTICATION_KERBEROS_PRINCIPAL_KEY,HTTP_PRINCIPAL + "@" + KDC.getRealm());
  conf.setBoolean(DFSConfigKeys.DFS_BLOCK_ACCESS_TOKEN_ENABLE_KEY,true);
  conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY,HttpConfig.Policy.HTTPS_ONLY.name());
  conf.set(DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY,"localhost:0");
  conf.set(DFSConfigKeys.DFS_DATANODE_HTTPS_ADDRESS_KEY,"localhost:0");
  File keystoresDir=new File(TEST_UTIL.getDataTestDir("keystore").toUri().getPath());
  keystoresDir.mkdirs();
  String sslConfDir=KeyStoreTestUtil.getClasspathDir(TestGenerateDelegationToken.class);
  KeyStoreTestUtil.setupSSLConfig(keystoresDir.getAbsolutePath(),sslConfDir,conf,false);
  conf.setBoolean("ignore.secure.ports.for.testing",true);
}
