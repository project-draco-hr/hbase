{
  URI hdfsUri=FileSystem.get(TEST_UTIL.getConfiguration()).getUri();
  FileSystem fs=FileSystem.get(copyDir.toUri(),new Configuration());
  copyDir=copyDir.makeQualified(fs);
  List<String> opts=new ArrayList<String>();
  opts.add("-snapshot");
  opts.add(Bytes.toString(snapshotName));
  opts.add("-copy-to");
  opts.add(copyDir.toString());
  if (overwrite)   opts.add("-overwrite");
  int res=ExportSnapshot.innerMain(TEST_UTIL.getConfiguration(),opts.toArray(new String[opts.size()]));
  assertEquals(0,res);
  FileStatus[] rootFiles=fs.listStatus(copyDir);
  assertEquals(filesExpected,rootFiles.length);
  for (  FileStatus fileStatus : rootFiles) {
    String name=fileStatus.getPath().getName();
    assertTrue(fileStatus.isDir());
    assertTrue(name.equals(HConstants.SNAPSHOT_DIR_NAME) || name.equals(HConstants.HFILE_ARCHIVE_DIRECTORY));
  }
  final FileSystem hdfs=FileSystem.get(hdfsUri,TEST_UTIL.getConfiguration());
  final Path snapshotDir=new Path(HConstants.SNAPSHOT_DIR_NAME,Bytes.toString(snapshotName));
  verifySnapshot(hdfs,new Path(TEST_UTIL.getDefaultRootDirPath(),snapshotDir),fs,new Path(copyDir,snapshotDir));
  verifyArchive(fs,copyDir,tableName,Bytes.toString(snapshotName));
  FSUtils.logFileSystemState(hdfs,snapshotDir,LOG);
}
