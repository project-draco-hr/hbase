{
  File tmpFolder=new File(ClassLoaderTestHelper.localDirPath(conf),"tmp");
  if (tmpFolder.exists()) {
    for (    File f : tmpFolder.listFiles()) {
      f.delete();
    }
  }
  String className="CheckingLibJarName";
  String folder=TEST_UTIL.getDataTestDir().toString();
  File innerJarFile=ClassLoaderTestHelper.buildJar(folder,className,null,ClassLoaderTestHelper.localDirPath(conf));
  File targetJarFile=new File(innerJarFile.getParent(),jarName);
  ClassLoaderTestHelper.addJarFilesToJar(targetJarFile,libPrefix,innerJarFile);
  Path path=new Path(targetJarFile.getAbsolutePath());
  ClassLoader parent=TestCoprocessorClassLoader.class.getClassLoader();
  ClassLoader classLoader=CoprocessorClassLoader.getClassLoader(path,parent,"112",conf);
  assertNotNull("Classloader should be created",classLoader);
  String fileToLookFor="." + className + ".jar";
  for (  String f : tmpFolder.list()) {
    if (f.endsWith(fileToLookFor) && f.contains(jarName)) {
      return;
    }
  }
  fail("Could not find the expected lib jar file");
}
