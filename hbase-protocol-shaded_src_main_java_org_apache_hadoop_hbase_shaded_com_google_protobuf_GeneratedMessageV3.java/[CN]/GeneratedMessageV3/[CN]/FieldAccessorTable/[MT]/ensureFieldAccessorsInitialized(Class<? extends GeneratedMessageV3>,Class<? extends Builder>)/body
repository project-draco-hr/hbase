{
  if (initialized) {
    return this;
  }
synchronized (this) {
    if (initialized) {
      return this;
    }
    int fieldsSize=fields.length;
    for (int i=0; i < fieldsSize; i++) {
      FieldDescriptor field=descriptor.getFields().get(i);
      String containingOneofCamelCaseName=null;
      if (field.getContainingOneof() != null) {
        containingOneofCamelCaseName=camelCaseNames[fieldsSize + field.getContainingOneof().getIndex()];
      }
      if (field.isRepeated()) {
        if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {
          if (field.isMapField() && isMapFieldEnabled(field)) {
            fields[i]=new MapFieldAccessor(field,camelCaseNames[i],messageClass,builderClass);
          }
 else {
            fields[i]=new RepeatedMessageFieldAccessor(field,camelCaseNames[i],messageClass,builderClass);
          }
        }
 else         if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {
          fields[i]=new RepeatedEnumFieldAccessor(field,camelCaseNames[i],messageClass,builderClass);
        }
 else {
          fields[i]=new RepeatedFieldAccessor(field,camelCaseNames[i],messageClass,builderClass);
        }
      }
 else {
        if (field.getJavaType() == FieldDescriptor.JavaType.MESSAGE) {
          fields[i]=new SingularMessageFieldAccessor(field,camelCaseNames[i],messageClass,builderClass,containingOneofCamelCaseName);
        }
 else         if (field.getJavaType() == FieldDescriptor.JavaType.ENUM) {
          fields[i]=new SingularEnumFieldAccessor(field,camelCaseNames[i],messageClass,builderClass,containingOneofCamelCaseName);
        }
 else         if (field.getJavaType() == FieldDescriptor.JavaType.STRING) {
          fields[i]=new SingularStringFieldAccessor(field,camelCaseNames[i],messageClass,builderClass,containingOneofCamelCaseName);
        }
 else {
          fields[i]=new SingularFieldAccessor(field,camelCaseNames[i],messageClass,builderClass,containingOneofCamelCaseName);
        }
      }
    }
    int oneofsSize=oneofs.length;
    for (int i=0; i < oneofsSize; i++) {
      oneofs[i]=new OneofAccessor(descriptor,camelCaseNames[i + fieldsSize],messageClass,builderClass);
    }
    initialized=true;
    camelCaseNames=null;
    return this;
  }
}
