{
  LOG.info("Cleaning up previous test run");
  deleteTableIfNecessary();
  deleteNamespaceIfNecessary();
  deleteGroups();
  admin.setBalancerRunning(true,true);
  LOG.info("Restoring the cluster");
  ((IntegrationTestingUtility)TEST_UTIL).restoreCluster();
  LOG.info("Done restoring the cluster");
  TEST_UTIL.waitFor(WAIT_TIMEOUT,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      LOG.info("Waiting for cleanup to finish " + rsGroupAdmin.listRSGroups());
      return rsGroupAdmin.getRSGroupInfo(RSGroupInfo.DEFAULT_GROUP).getServers().size() >= NUM_SLAVES_BASE;
    }
  }
);
  TEST_UTIL.waitFor(WAIT_TIMEOUT,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      LOG.info("Waiting for regionservers to be registered " + rsGroupAdmin.listRSGroups());
      return rsGroupAdmin.getRSGroupInfo(RSGroupInfo.DEFAULT_GROUP).getServers().size() == getNumServers();
    }
  }
);
  LOG.info("Done cleaning up previous test run");
}
