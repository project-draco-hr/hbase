{
  LOG.info("checkTransformSymmetry: AES, plaintext length = " + plaintext.length);
  Configuration conf=HBaseConfiguration.create();
  String algorithm=conf.get(HConstants.CRYPTO_KEY_ALGORITHM_CONF_KEY,HConstants.CIPHER_AES);
  Cipher aes=Encryption.getCipher(conf,algorithm);
  Key key=new SecretKeySpec(keyBytes,algorithm);
  Encryptor e=aes.getEncryptor();
  e.setKey(key);
  e.setIv(iv);
  e.reset();
  ByteArrayOutputStream encOut=new ByteArrayOutputStream();
  Encryption.encrypt(encOut,plaintext,0,plaintext.length,e);
  byte[] encrypted=encOut.toByteArray();
  Decryptor d=aes.getDecryptor();
  d.setKey(key);
  d.setIv(iv);
  d.reset();
  ByteArrayInputStream encIn=new ByteArrayInputStream(encrypted);
  ByteArrayOutputStream decOut=new ByteArrayOutputStream();
  Encryption.decrypt(decOut,encIn,plaintext.length,d);
  byte[] result=decOut.toByteArray();
  assertEquals("Decrypted result has different length than plaintext",result.length,plaintext.length);
  assertTrue("Transformation was not symmetric",Bytes.equals(result,plaintext));
}
