{
  if (expStack.isEmpty()) {
    expStack.push(node);
  }
 else {
    ExpressionNode top=expStack.peek();
    if (top == LeafExpressionNode.OPEN_PARAN_NODE) {
      expStack.push(node);
    }
 else     if (top instanceof NonLeafExpressionNode) {
      NonLeafExpressionNode nlTop=(NonLeafExpressionNode)expStack.pop();
      nlTop.addChildExp(node);
      if (nlTop.getOperator() == Operator.NOT && !expStack.isEmpty()) {
        ExpressionNode secondTop=expStack.peek();
        if (secondTop == LeafExpressionNode.OPEN_PARAN_NODE) {
          expStack.push(nlTop);
        }
 else         if (secondTop instanceof NonLeafExpressionNode) {
          ((NonLeafExpressionNode)secondTop).addChildExp(nlTop);
        }
      }
 else {
        expStack.push(nlTop);
      }
    }
 else {
      throw new ParseException("Error parsing expression " + expS + " at column : "+ index);
    }
  }
}
