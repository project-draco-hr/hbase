{
  if (memoizedHashCode != 0) {
    return memoizedHashCode;
  }
  int hash=41;
  hash=(19 * hash) + getDescriptorForType().hashCode();
  if (hasFileInfoOffset()) {
    hash=(37 * hash) + FILE_INFO_OFFSET_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getFileInfoOffset());
  }
  if (hasLoadOnOpenDataOffset()) {
    hash=(37 * hash) + LOAD_ON_OPEN_DATA_OFFSET_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getLoadOnOpenDataOffset());
  }
  if (hasUncompressedDataIndexSize()) {
    hash=(37 * hash) + UNCOMPRESSED_DATA_INDEX_SIZE_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getUncompressedDataIndexSize());
  }
  if (hasTotalUncompressedBytes()) {
    hash=(37 * hash) + TOTAL_UNCOMPRESSED_BYTES_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getTotalUncompressedBytes());
  }
  if (hasDataIndexCount()) {
    hash=(37 * hash) + DATA_INDEX_COUNT_FIELD_NUMBER;
    hash=(53 * hash) + getDataIndexCount();
  }
  if (hasMetaIndexCount()) {
    hash=(37 * hash) + META_INDEX_COUNT_FIELD_NUMBER;
    hash=(53 * hash) + getMetaIndexCount();
  }
  if (hasEntryCount()) {
    hash=(37 * hash) + ENTRY_COUNT_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getEntryCount());
  }
  if (hasNumDataIndexLevels()) {
    hash=(37 * hash) + NUM_DATA_INDEX_LEVELS_FIELD_NUMBER;
    hash=(53 * hash) + getNumDataIndexLevels();
  }
  if (hasFirstDataBlockOffset()) {
    hash=(37 * hash) + FIRST_DATA_BLOCK_OFFSET_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getFirstDataBlockOffset());
  }
  if (hasLastDataBlockOffset()) {
    hash=(37 * hash) + LAST_DATA_BLOCK_OFFSET_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getLastDataBlockOffset());
  }
  if (hasComparatorClassName()) {
    hash=(37 * hash) + COMPARATOR_CLASS_NAME_FIELD_NUMBER;
    hash=(53 * hash) + getComparatorClassName().hashCode();
  }
  if (hasCompressionCodec()) {
    hash=(37 * hash) + COMPRESSION_CODEC_FIELD_NUMBER;
    hash=(53 * hash) + getCompressionCodec();
  }
  if (hasEncryptionKey()) {
    hash=(37 * hash) + ENCRYPTION_KEY_FIELD_NUMBER;
    hash=(53 * hash) + getEncryptionKey().hashCode();
  }
  hash=(29 * hash) + unknownFields.hashCode();
  memoizedHashCode=hash;
  return hash;
}
