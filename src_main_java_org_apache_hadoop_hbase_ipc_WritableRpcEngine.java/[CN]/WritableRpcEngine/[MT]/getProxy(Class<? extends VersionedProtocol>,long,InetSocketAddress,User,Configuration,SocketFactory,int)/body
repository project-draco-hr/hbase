{
  VersionedProtocol proxy=(VersionedProtocol)Proxy.newProxyInstance(protocol.getClassLoader(),new Class[]{protocol},new Invoker(protocol,addr,ticket,conf,factory,rpcTimeout));
  try {
    long serverVersion=((VersionedProtocol)proxy).getProtocolVersion(protocol.getName(),clientVersion);
    if (serverVersion != clientVersion) {
      throw new HBaseRPC.VersionMismatch(protocol.getName(),clientVersion,serverVersion);
    }
  }
 catch (  Throwable t) {
    if (t instanceof UndeclaredThrowableException) {
      t=t.getCause();
    }
    if (t instanceof ServiceException) {
      throw ProtobufUtil.getRemoteException((ServiceException)t);
    }
    if (!(t instanceof IOException)) {
      LOG.error("Unexpected throwable object ",t);
      throw new IOException(t);
    }
    throw (IOException)t;
  }
  return proxy;
}
