{
  Admin admin=TEST_UTIL.getHBaseAdmin();
  String nsName="TestNamespacesInstanceResource5";
  Response response;
  NamespaceDescriptor.Builder nsBuilder=NamespaceDescriptor.create(nsName);
  NamespaceDescriptor nsd=nsBuilder.build();
  nsd.setConfiguration("key1","value1");
  admin.createNamespace(nsd);
  HColumnDescriptor colDesc=new HColumnDescriptor("cf1");
  TableName tn1=TableName.valueOf(nsName + ":table1");
  HTableDescriptor table=new HTableDescriptor(tn1);
  table.addFamily(colDesc);
  admin.createTable(table);
  TableName tn2=TableName.valueOf(nsName + ":table2");
  table=new HTableDescriptor(tn2);
  table.addFamily(colDesc);
  admin.createTable(table);
  Map<String,String> nsProperties=new HashMap<String,String>();
  nsProperties.put("key1","value1");
  List<String> nsTables=Arrays.asList("table1","table2");
  String namespacePath="/namespaces/" + nsName;
  response=client.get(namespacePath);
  assertEquals(200,response.getCode());
  response=client.get(namespacePath,Constants.MIMETYPE_XML);
  assertEquals(200,response.getCode());
  NamespacesInstanceModel model=fromXML(response.getBody());
  checkNamespaceProperties(model.getProperties(),nsProperties);
  response=client.get(namespacePath,Constants.MIMETYPE_JSON);
  assertEquals(200,response.getCode());
  model=jsonMapper.readValue(response.getBody(),NamespacesInstanceModel.class);
  checkNamespaceProperties(model.getProperties(),nsProperties);
  response=client.get(namespacePath,Constants.MIMETYPE_PROTOBUF);
  assertEquals(200,response.getCode());
  model.getObjectFromMessage(response.getBody());
  checkNamespaceProperties(model.getProperties(),nsProperties);
  namespacePath="/namespaces/" + nsName + "/tables";
  response=client.get(namespacePath);
  assertEquals(200,response.getCode());
  response=client.get(namespacePath,Constants.MIMETYPE_XML);
  assertEquals(200,response.getCode());
  TableListModel tablemodel=fromXML(response.getBody());
  checkNamespaceTables(tablemodel.getTables(),nsTables);
  response=client.get(namespacePath,Constants.MIMETYPE_JSON);
  assertEquals(200,response.getCode());
  tablemodel=jsonMapper.readValue(response.getBody(),TableListModel.class);
  checkNamespaceTables(tablemodel.getTables(),nsTables);
  response=client.get(namespacePath,Constants.MIMETYPE_PROTOBUF);
  assertEquals(200,response.getCode());
  tablemodel.setTables(new ArrayList<TableModel>());
  tablemodel.getObjectFromMessage(response.getBody());
  checkNamespaceTables(tablemodel.getTables(),nsTables);
  response=client.delete(namespacePath);
  namespacePath="/namespaces/" + nsName;
  assertEquals(503,response.getCode());
}
