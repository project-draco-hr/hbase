{
  boolean inState=false;
  boolean outState=false;
  HBaseSaslRpcClient rpcClient=new HBaseSaslRpcClient(AuthMethod.DIGEST,createTokenMockWithCredentials(principal,password),principal,false){
    @Override public SaslClient createDigestSaslClient(    String[] mechanismNames,    String saslDefaultRealm,    CallbackHandler saslClientCallbackHandler) throws IOException {
      return Mockito.mock(SaslClient.class);
    }
    @Override public SaslClient createKerberosSaslClient(    String[] mechanismNames,    String userFirstPart,    String userSecondPart) throws IOException {
      return Mockito.mock(SaslClient.class);
    }
  }
;
  try {
    rpcClient.getInputStream();
  }
 catch (  IOException ex) {
    inState=true;
  }
  try {
    rpcClient.getOutputStream();
  }
 catch (  IOException ex) {
    outState=true;
  }
  return inState && outState;
}
