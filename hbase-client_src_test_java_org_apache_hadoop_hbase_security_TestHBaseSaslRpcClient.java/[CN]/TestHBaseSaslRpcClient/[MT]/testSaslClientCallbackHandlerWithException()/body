{
  final Token<? extends TokenIdentifier> token=createTokenMock();
  when(token.getIdentifier()).thenReturn(DEFAULT_USER_NAME.getBytes());
  when(token.getPassword()).thenReturn(DEFAULT_USER_PASSWORD.getBytes());
  final SaslClientCallbackHandler saslClCallbackHandler=new SaslClientCallbackHandler(token);
  try {
    saslClCallbackHandler.handle(new Callback[]{mock(TextOutputCallback.class)});
  }
 catch (  UnsupportedCallbackException expEx) {
  }
catch (  Exception ex) {
    fail("testSaslClientCallbackHandlerWithException error : " + ex.getMessage());
  }
}
