{
  FileSystem fs=UTIL.getHBaseCluster().getMaster().getMasterFileSystem().getFileSystem();
  Path rootDir=UTIL.getHBaseCluster().getMaster().getMasterFileSystem().getRootDir();
  TableName tn=TableName.valueOf("testDeleteTableToBeCloned");
  byte[] qf=Bytes.toBytes("qf");
  MobSnapshotTestingUtils.createMobTable(UTIL,tn,TEST_FAM);
  String row="row";
  String value="value";
  Put put=new Put(Bytes.toBytes(row));
  put.addColumn(TEST_FAM,qf,Bytes.toBytes(value));
  Admin admin=UTIL.getHBaseAdmin();
  BufferedMutator mutator=UTIL.getConnection().getBufferedMutator(tn);
  mutator.mutate(put);
  mutator.flush();
  admin.flush(tn);
  final String snapshotNameAsString="snapshot_" + tn;
  byte[] snapshotName=Bytes.toBytes(snapshotNameAsString);
  Table table=ConnectionFactory.createConnection(UTIL.getConfiguration()).getTable(tn);
  Table clonedTable=null;
  try {
    SnapshotTestingUtils.createSnapshotAndValidate(admin,tn,TEST_FAM_STR,snapshotNameAsString,rootDir,fs,true);
    TableName cloneTableName=TableName.valueOf("test-clone-" + tn);
    admin.cloneSnapshot(snapshotName,cloneTableName);
    clonedTable=ConnectionFactory.createConnection(UTIL.getConfiguration()).getTable(cloneTableName);
    admin.deleteSnapshot(snapshotName);
    admin.disableTable(tn);
    admin.deleteTable(tn);
    UTIL.getHBaseCluster().getMaster().getHFileCleaner().choreForTesting();
    Scan scan=new Scan();
    ResultScanner scanner=clonedTable.getScanner(scan);
    Result rs=scanner.next();
    Cell cell=rs.getColumnLatestCell(TEST_FAM,qf);
    Assert.assertEquals(value,Bytes.toString(CellUtil.cloneValue(cell)));
    Assert.assertNull(scanner.next());
  }
  finally {
    table.close();
    if (clonedTable != null) {
      clonedTable.close();
    }
  }
}
