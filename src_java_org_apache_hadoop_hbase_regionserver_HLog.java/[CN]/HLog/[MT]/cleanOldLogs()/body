{
  Long oldestOutstandingSeqNum=Collections.min(this.lastSeqWritten.values());
  TreeSet<Long> sequenceNumbers=new TreeSet<Long>(this.outputfiles.headMap((Long.valueOf(oldestOutstandingSeqNum.longValue() + 1L))).keySet());
  if (LOG.isDebugEnabled()) {
    byte[] oldestRegion=null;
    for (    Map.Entry<byte[],Long> e : this.lastSeqWritten.entrySet()) {
      if (e.getValue().longValue() == oldestOutstandingSeqNum.longValue()) {
        oldestRegion=e.getKey();
        break;
      }
    }
    LOG.debug("Found " + sequenceNumbers.size() + " logs to remove "+ " out of total "+ this.outputfiles.size()+ "; "+ "oldest outstanding seqnum is "+ oldestOutstandingSeqNum+ " from region "+ Bytes.toString(oldestRegion));
  }
  if (sequenceNumbers.size() > 0) {
    for (    Long seq : sequenceNumbers) {
      deleteLogFile(this.outputfiles.remove(seq),seq);
    }
  }
}
