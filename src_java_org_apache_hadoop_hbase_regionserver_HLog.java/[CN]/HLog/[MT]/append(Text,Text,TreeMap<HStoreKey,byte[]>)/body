{
  if (closed) {
    throw new IOException("Cannot append; log is closed");
  }
synchronized (updateLock) {
    long seqNum[]=obtainSeqNum(edits.size());
    if (!this.lastSeqWritten.containsKey(regionName)) {
      this.lastSeqWritten.put(regionName,Long.valueOf(seqNum[0]));
    }
    int counter=0;
    for (    Map.Entry<HStoreKey,byte[]> es : edits.entrySet()) {
      HStoreKey key=es.getKey();
      HLogKey logKey=new HLogKey(regionName,tableName,key.getRow(),seqNum[counter++]);
      HLogEdit logEdit=new HLogEdit(key.getColumn(),es.getValue(),key.getTimestamp());
      try {
        this.writer.append(logKey,logEdit);
      }
 catch (      IOException e) {
        LOG.error("Could not append to log. Opening new log. Exception: ",e);
        rollWriter();
        try {
          this.writer.append(logKey,logEdit);
        }
 catch (        IOException e2) {
          LOG.fatal("Could not append to log the second time because " + e2.toString() + ", aborting.");
          throw e2;
        }
      }
      this.numEntries++;
    }
  }
  if (this.numEntries > this.maxlogentries) {
    if (listener != null) {
      listener.logRollRequested();
    }
  }
}
