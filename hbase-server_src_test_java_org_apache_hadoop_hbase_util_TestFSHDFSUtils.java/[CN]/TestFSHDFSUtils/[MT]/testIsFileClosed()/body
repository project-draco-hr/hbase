{
  HTU.getConfiguration().setInt("hbase.lease.recovery.dfs.timeout",100000);
  CancelableProgressable reporter=Mockito.mock(CancelableProgressable.class);
  Mockito.when(reporter.progress()).thenReturn(true);
  IsFileClosedDistributedFileSystem dfs=Mockito.mock(IsFileClosedDistributedFileSystem.class);
  Mockito.when(dfs.recoverLease(FILE)).thenReturn(false).thenReturn(false).thenReturn(true);
  Mockito.when(dfs.isFileClosed(FILE)).thenReturn(true);
  assertTrue(this.fsHDFSUtils.recoverDFSFileLease(dfs,FILE,HTU.getConfiguration(),reporter));
  Mockito.verify(dfs,Mockito.times(2)).recoverLease(FILE);
  Mockito.verify(dfs,Mockito.times(1)).isFileClosed(FILE);
}
