{
synchronized (writeQueue) {
    e.markCompleted();
    long nextReadValue=-1;
    boolean ranOnce=false;
    while (!writeQueue.isEmpty()) {
      ranOnce=true;
      WriteEntry queueFirst=writeQueue.getFirst();
      if (nextReadValue > 0) {
        if (nextReadValue + 1 != queueFirst.getWriteNumber()) {
          throw new RuntimeException("invariant in completeMemstoreInsert violated, prev: " + nextReadValue + " next: "+ queueFirst.getWriteNumber());
        }
      }
      if (queueFirst.isCompleted()) {
        nextReadValue=queueFirst.getWriteNumber();
        writeQueue.removeFirst();
      }
 else {
        break;
      }
    }
    if (!ranOnce) {
      throw new RuntimeException("never was a first");
    }
    if (nextReadValue > 0) {
      memstoreRead=nextReadValue;
synchronized (readWaiters) {
        readWaiters.notifyAll();
      }
    }
  }
  boolean interrupted=false;
  while (memstoreRead < e.getWriteNumber()) {
synchronized (readWaiters) {
      try {
        readWaiters.wait(0);
      }
 catch (      InterruptedException e) {
        interrupted=true;
      }
    }
  }
  if (interrupted)   Thread.currentThread.interrupt();
}
