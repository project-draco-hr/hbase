{
  LOG.info("process shutdown of server " + deadServer + ": logSplit: "+ this.logSplit+ ", rootRescanned: "+ rootRescanned+ ", numberOfMetaRegions: "+ master.regionManager.numMetaRegions()+ ", onlineMetaRegions.size(): "+ master.regionManager.numOnlineMetaRegions());
  if (!logSplit) {
    if (master.fs.exists(oldLogDir)) {
      if (!master.regionManager.splitLogLock.tryLock()) {
        return false;
      }
      try {
        HLog.splitLog(master.rootdir,oldLogDir,master.fs,master.getConfiguration());
      }
  finally {
        master.regionManager.splitLogLock.unlock();
      }
    }
    logSplit=true;
  }
  if (!rootAvailable()) {
    if (rootRegionServer) {
      master.regionManager.reassignRootRegion();
    }
    return true;
  }
  if (!rootRescanned) {
    Boolean result=new ScanRootRegion(new MetaRegion(master.getRootRegionLocation(),HRegionInfo.ROOT_REGIONINFO.getRegionName(),HConstants.EMPTY_START_ROW),this.master).doWithRetries();
    if (result == null) {
      return true;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("process server shutdown scanning root region on " + master.getRootRegionLocation().getBindAddress() + " finished "+ Thread.currentThread().getName());
    }
    rootRescanned=true;
  }
  if (!metaTableAvailable()) {
    return true;
  }
  List<MetaRegion> regions=master.regionManager.getListOfOnlineMetaRegions();
  for (  MetaRegion r : regions) {
    Boolean result=new ScanMetaRegions(r,this.master).doWithRetries();
    if (result == null) {
      break;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("process server shutdown finished scanning " + Bytes.toString(r.getRegionName()) + " on "+ r.getServer());
    }
  }
  master.regionManager.allRegionsClosed(deadServerName);
  master.serverManager.removeDeadServer(deadServerName);
  return true;
}
