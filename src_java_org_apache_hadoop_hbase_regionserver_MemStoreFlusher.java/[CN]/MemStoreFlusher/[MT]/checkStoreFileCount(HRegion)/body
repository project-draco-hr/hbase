{
  if (region.getRegionInfo().isMetaRegion())   return;
  int count=0;
  boolean triggered=false;
  boolean finished=false;
  while (count++ < (blockingWaitTime / 500)) {
    finished=true;
    for (    Store hstore : region.stores.values()) {
      if (hstore.getStorefilesCount() > this.blockingStoreFilesNumber) {
        if (!triggered) {
          LOG.info("Too many store files for region " + region + ": "+ hstore.getStorefilesCount()+ ", requesting compaction and "+ "waiting");
          this.server.compactSplitThread.compactionRequested(region,getName());
          triggered=true;
        }
        finished=false;
        try {
          Thread.sleep(500);
        }
 catch (        InterruptedException e) {
        }
      }
    }
    if (triggered && finished) {
      LOG.info("Compaction has completed, we waited " + (count * 500) + "ms, "+ "finishing flush of region "+ region);
      break;
    }
  }
  if (triggered && !finished) {
    LOG.warn("Tried to hold up flushing for compactions of region " + region + " but have waited longer than "+ blockingWaitTime+ "ms, continuing");
  }
}
