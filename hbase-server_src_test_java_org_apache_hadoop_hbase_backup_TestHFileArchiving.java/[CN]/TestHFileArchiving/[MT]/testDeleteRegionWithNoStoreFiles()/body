{
  TableName TABLE_NAME=TableName.valueOf("testDeleteRegionWithNoStoreFiles");
  UTIL.createTable(TABLE_NAME,TEST_FAM);
  List<HRegion> servingRegions=UTIL.getHBaseCluster().getRegions(TABLE_NAME);
  assertEquals(1,servingRegions.size());
  HRegion region=servingRegions.get(0);
  FileSystem fs=region.getRegionFileSystem().getFileSystem();
  Path rootDir=FSUtils.getRootDir(fs.getConf());
  Path regionDir=HRegion.getRegionDir(rootDir,region.getRegionInfo());
  FileStatus[] regionFiles=FSUtils.listStatus(fs,regionDir,null);
  Assert.assertNotNull("No files in the region directory",regionFiles);
  if (LOG.isDebugEnabled()) {
    List<Path> files=new ArrayList<Path>();
    for (    FileStatus file : regionFiles) {
      files.add(file.getPath());
    }
    LOG.debug("Current files:" + files);
  }
  final PathFilter dirFilter=new FSUtils.DirFilter(fs);
  PathFilter nonHidden=new PathFilter(){
    @Override public boolean accept(    Path file){
      return dirFilter.accept(file) && !file.getName().toString().startsWith(".");
    }
  }
;
  FileStatus[] storeDirs=FSUtils.listStatus(fs,regionDir,nonHidden);
  for (  FileStatus store : storeDirs) {
    LOG.debug("Deleting store for test");
    fs.delete(store.getPath(),true);
  }
  HFileArchiver.archiveRegion(UTIL.getConfiguration(),fs,region.getRegionInfo());
  assertFalse("Region directory (" + regionDir + "), still exists.",fs.exists(regionDir));
  UTIL.deleteTable(TABLE_NAME);
}
