{
  cluster.getConfiguration().setInt(HConstants.MASTER_PORT,HBaseTestingUtility.randomFreePort());
  cluster.getConfiguration().setInt(ServerManager.WAIT_ON_REGIONSERVERS_MINTOSTART,2);
  cluster.getConfiguration().setInt(ServerManager.WAIT_ON_REGIONSERVERS_MAXTOSTART,2);
  master=cluster.addMaster();
  rs=cluster.addRegionServer();
  LOG.debug("Starting master: " + master.getMaster().getServerName());
  master.start();
  rs.start();
  waitForClusterOnline(master);
  cluster.getConfiguration().set(HConstants.REGION_SERVER_IMPL,MyRegionServer.class.getName());
  rs2=cluster.addRegionServer();
  LOG.debug("Starting 2nd region server: " + rs2.getRegionServer().getServerName());
  rs2.start();
  waitForSecondRsStarted();
  master.getMaster().stop("Stopping master");
  cluster.getConfiguration().setInt(HConstants.MASTER_PORT,HBaseTestingUtility.randomFreePort());
  cluster.getConfiguration().setInt(ServerManager.WAIT_ON_REGIONSERVERS_MINTOSTART,3);
  cluster.getConfiguration().setInt(ServerManager.WAIT_ON_REGIONSERVERS_MAXTOSTART,3);
  backupMaster=cluster.addMaster();
  LOG.debug("Starting new master: " + backupMaster.getMaster().getServerName());
  backupMaster.start();
  waitForClusterOnline(backupMaster);
  assertTrue(backupMaster.getMaster().isActiveMaster());
  assertTrue(backupMaster.getMaster().isInitialized());
  assertEquals(backupMaster.getMaster().getServerManager().getOnlineServersList().size(),3);
}
