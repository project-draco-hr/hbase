{
  Map<ServerName,List<HRegionInfo>> assignmentMap;
  try {
    FavoredNodeAssignmentHelper assignmentHelper=new FavoredNodeAssignmentHelper(servers,rackManager);
    assignmentHelper.initialize();
    if (!assignmentHelper.canPlaceFavoredNodes()) {
      return super.roundRobinAssignment(regions,servers);
    }
    Pair<Map<ServerName,List<HRegionInfo>>,List<HRegionInfo>> segregatedRegions=segregateRegionsAndAssignRegionsWithFavoredNodes(regions,servers);
    Map<ServerName,List<HRegionInfo>> regionsWithFavoredNodesMap=segregatedRegions.getFirst();
    List<HRegionInfo> regionsWithNoFavoredNodes=segregatedRegions.getSecond();
    assignmentMap=new HashMap<ServerName,List<HRegionInfo>>();
    roundRobinAssignmentImpl(assignmentHelper,assignmentMap,regionsWithNoFavoredNodes,servers);
    assignmentMap.putAll(regionsWithFavoredNodesMap);
  }
 catch (  Exception ex) {
    LOG.warn("Encountered exception while doing favored-nodes assignment " + ex + " Falling back to regular assignment");
    assignmentMap=super.roundRobinAssignment(regions,servers);
  }
  return assignmentMap;
}
