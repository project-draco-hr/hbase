{
  if (bb.isDirect()) {
    throw new IllegalArgumentException("only supports heap buffers");
  }
  if (bb.remaining() < 1) {
    return null;
  }
  KeyValue keyValue=null;
  int underlyingArrayOffset=bb.arrayOffset() + bb.position();
  int keyLength=bb.getInt();
  int valueLength=bb.getInt();
  ByteBufferUtils.skip(bb,keyLength + valueLength);
  short tagsLength=0;
  if (includesTags) {
    tagsLength=bb.getShort();
    ByteBufferUtils.skip(bb,tagsLength);
  }
  int kvLength=(int)KeyValue.getKeyValueDataStructureSize(keyLength,valueLength,tagsLength);
  keyValue=new KeyValue(bb.array(),underlyingArrayOffset,kvLength);
  if (includesMvccVersion) {
    long mvccVersion=ByteBufferUtils.readVLong(bb);
    keyValue.setSequenceId(mvccVersion);
  }
  return keyValue;
}
