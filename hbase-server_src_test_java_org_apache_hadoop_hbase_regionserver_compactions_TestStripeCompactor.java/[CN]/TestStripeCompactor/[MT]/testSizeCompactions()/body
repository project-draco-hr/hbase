{
  verifySizeCompaction(a(KV_A,KV_A,KV_B,KV_C,KV_D),3,2,OPEN_KEY,OPEN_KEY,a(a(KV_A,KV_A),a(KV_B,KV_C),a(KV_D)));
  verifySizeCompaction(a(KV_A,KV_B,KV_C,KV_D),4,1,OPEN_KEY,OPEN_KEY,a(a(KV_A),a(KV_B),a(KV_C),a(KV_D)));
  verifySizeCompaction(a(KV_B,KV_C),2,1,KEY_B,KEY_D,a(a(KV_B),a(KV_C)));
  verifySizeCompaction(a(KV_A,KV_A,KV_A,KV_C,KV_D),3,2,OPEN_KEY,OPEN_KEY,a(a(KV_A,KV_A,KV_A),a(KV_C,KV_D)));
  verifySizeCompaction(a(KV_A,KV_B,KV_B,KV_C),3,1,OPEN_KEY,OPEN_KEY,a(a(KV_A),a(KV_B,KV_B),a(KV_C)));
  verifySizeCompaction(a(KV_A,KV_B,KV_C,KV_D),2,1,OPEN_KEY,OPEN_KEY,a(a(KV_A),a(KV_B,KV_C,KV_D)));
  verifySizeCompaction(a(KV_A,KV_B,KV_C),1,Long.MAX_VALUE,OPEN_KEY,KEY_D,new KeyValue[][]{a(KV_A,KV_B,KV_C)});
  verifySizeCompaction(a(KV_A,KV_B,KV_C,KV_D),Integer.MAX_VALUE,2,OPEN_KEY,OPEN_KEY,a(a(KV_A,KV_B),a(KV_C,KV_D)));
}
