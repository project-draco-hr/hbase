{
  if (this.firstGetPosInvocation) {
    this.firstGetPosInvocation=false;
    long adjust=0;
    try {
      Field fIn=FilterInputStream.class.getDeclaredField("in");
      fIn.setAccessible(true);
      Object realIn=fIn.get(this.in);
      if (realIn.getClass() == DFSInputStream.class) {
        Method getFileLength=realIn.getClass().getDeclaredMethod("getFileLength",new Class<?>[]{});
        getFileLength.setAccessible(true);
        long realLength=((Long)getFileLength.invoke(realIn,new Object[]{})).longValue();
        assert(realLength >= this.length);
        adjust=realLength - this.length;
      }
 else {
        LOG.info("Input stream class: " + realIn.getClass().getName() + ", not adjusting length");
      }
    }
 catch (    Exception e) {
      SequenceFileLogReader.LOG.warn("Error while trying to get accurate file length.  " + "Truncation / data loss may occur if RegionServers die.",e);
    }
    return adjust + super.getPos();
  }
  return super.getPos();
}
