{
  super.setConf(conf);
  if (conf == null) {
    return;
  }
  this.maxThroughputUpperBound=conf.getLong(HBASE_HSTORE_COMPACTION_MAX_THROUGHPUT_HIGHER_BOUND,DEFAULT_HBASE_HSTORE_COMPACTION_MAX_THROUGHPUT_HIGHER_BOUND);
  this.maxThroughputLowerBound=conf.getLong(HBASE_HSTORE_COMPACTION_MAX_THROUGHPUT_LOWER_BOUND,DEFAULT_HBASE_HSTORE_COMPACTION_MAX_THROUGHPUT_LOWER_BOUND);
  this.maxThroughputOffpeak=conf.getLong(HBASE_HSTORE_COMPACTION_MAX_THROUGHPUT_OFFPEAK,DEFAULT_HBASE_HSTORE_COMPACTION_MAX_THROUGHPUT_OFFPEAK);
  this.offPeakHours=OffPeakHours.getInstance(conf);
  this.controlPerSize=conf.getLong(HBASE_HSTORE_COMPACTION_THROUGHPUT_CONTROL_CHECK_INTERVAL,this.maxThroughputLowerBound);
  this.setMaxThroughput(this.maxThroughputLowerBound);
  this.tuningPeriod=getConf().getInt(HBASE_HSTORE_COMPACTION_THROUGHPUT_TUNE_PERIOD,DEFAULT_HSTORE_COMPACTION_THROUGHPUT_TUNE_PERIOD);
  LOG.info("Compaction throughput configurations, higher bound: " + throughputDesc(maxThroughputUpperBound) + ", lower bound "+ throughputDesc(maxThroughputLowerBound)+ ", off peak: "+ throughputDesc(maxThroughputOffpeak)+ ", tuning period: "+ tuningPeriod+ " ms");
}
