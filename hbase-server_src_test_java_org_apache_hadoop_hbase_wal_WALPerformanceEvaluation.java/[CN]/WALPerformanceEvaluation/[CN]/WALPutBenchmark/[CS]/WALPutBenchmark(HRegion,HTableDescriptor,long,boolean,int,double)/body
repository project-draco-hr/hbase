{
  this.numIterations=numIterations;
  this.noSync=noSync;
  this.syncInterval=syncInterval;
  this.numFamilies=htd.getColumnFamilies().length;
  this.region=region;
  this.htd=htd;
  scopes=new TreeMap<byte[],Integer>(Bytes.BYTES_COMPARATOR);
  for (  byte[] fam : htd.getFamiliesKeys()) {
    scopes.put(fam,0);
  }
  String spanReceivers=getConf().get("hbase.trace.spanreceiver.classes");
  if (spanReceivers == null || spanReceivers.isEmpty()) {
    loopSampler=Sampler.NEVER;
  }
 else {
    if (traceFreq <= 0.0) {
      LOG.warn("Tracing enabled but traceFreq=0.");
      loopSampler=Sampler.NEVER;
    }
 else     if (traceFreq >= 1.0) {
      loopSampler=Sampler.ALWAYS;
      if (numIterations > 1000) {
        LOG.warn("Full tracing of all iterations will produce a lot of data. Be sure your" + " SpanReciever can keep up.");
      }
    }
 else {
      getConf().setDouble("hbase.sampler.fraction",traceFreq);
      loopSampler=new ProbabilitySampler(new HBaseHTraceConfiguration(getConf()));
    }
  }
}
