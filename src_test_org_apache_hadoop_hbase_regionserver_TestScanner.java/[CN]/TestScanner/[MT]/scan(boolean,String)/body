{
  InternalScanner scanner=null;
  Scan scan=null;
  List<KeyValue> results=new ArrayList<KeyValue>();
  byte[][][] scanColumns={COLS,EXPLICIT_COLS};
  for (int i=0; i < scanColumns.length; i++) {
    try {
      scan=new Scan(FIRST_ROW);
      for (int ii=0; ii < EXPLICIT_COLS.length; ii++) {
        scan.addColumn(COLS[0],EXPLICIT_COLS[ii]);
      }
      scanner=r.getScanner(scan);
      while (scanner.next(results)) {
        assertTrue(hasColumn(results,HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER));
        byte[] val=getColumn(results,HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER).getValue();
        validateRegionInfo(val);
        if (validateStartcode) {
          assertNotNull(val);
          assertFalse(val.length == 0);
          long startCode=Bytes.toLong(val);
          assertEquals(START_CODE,startCode);
        }
        if (serverName != null) {
          assertTrue(hasColumn(results,HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER));
          val=getColumn(results,HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER).getValue();
          assertNotNull(val);
          assertFalse(val.length == 0);
          String server=Bytes.toString(val);
          assertEquals(0,server.compareTo(serverName));
        }
        results.clear();
      }
    }
  finally {
      InternalScanner s=scanner;
      scanner=null;
      if (s != null) {
        s.close();
      }
    }
  }
}
