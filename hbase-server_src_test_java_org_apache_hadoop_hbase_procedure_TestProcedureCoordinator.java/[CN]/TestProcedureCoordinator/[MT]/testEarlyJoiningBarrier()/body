{
  final String[] cohort=new String[]{"one","two","three","four"};
  coordinator=buildNewCoordinator();
  final ProcedureCoordinator ref=coordinator;
  Procedure task=new Procedure(coordinator,monitor,WAKE_FREQUENCY,TIMEOUT,procName,procData,Arrays.asList(cohort));
  final Procedure spy=spy(task);
  AcquireBarrierAnswer prepare=new AcquireBarrierAnswer(procName,cohort){
    public void doWork(){
      ref.memberAcquiredBarrier(this.opName,this.cohort[0]);
      ref.memberFinishedBarrier(this.opName,this.cohort[0],new byte[0]);
      ref.memberAcquiredBarrier(this.opName,this.cohort[1]);
      ref.memberAcquiredBarrier(this.opName,this.cohort[2]);
      ref.memberFinishedBarrier(this.opName,this.cohort[2],new byte[0]);
      ref.memberAcquiredBarrier(this.opName,this.cohort[3]);
    }
  }
;
  BarrierAnswer commit=new BarrierAnswer(procName,cohort){
    @Override public void doWork(){
      ref.memberFinishedBarrier(opName,this.cohort[1],new byte[0]);
      ref.memberFinishedBarrier(opName,this.cohort[3],new byte[0]);
    }
  }
;
  runCoordinatedOperation(spy,prepare,commit,cohort);
}
