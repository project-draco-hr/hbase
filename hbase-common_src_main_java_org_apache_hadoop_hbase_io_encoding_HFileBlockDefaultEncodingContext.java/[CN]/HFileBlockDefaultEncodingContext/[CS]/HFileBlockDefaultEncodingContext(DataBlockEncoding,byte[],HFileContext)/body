{
  this.encodingAlgo=encoding;
  this.fileContext=fileContext;
  Compression.Algorithm compressionAlgorithm=fileContext.getCompression() == null ? NONE : fileContext.getCompression();
  if (compressionAlgorithm != NONE) {
    compressor=compressionAlgorithm.getCompressor();
    compressedByteStream=new ByteArrayOutputStream();
    try {
      compressionStream=compressionAlgorithm.createPlainCompressionStream(compressedByteStream,compressor);
    }
 catch (    IOException e) {
      throw new RuntimeException("Could not create compression stream for algorithm " + compressionAlgorithm,e);
    }
  }
  Encryption.Context cryptoContext=fileContext.getEncryptionContext();
  if (cryptoContext != Encryption.Context.NONE) {
    cryptoByteStream=new ByteArrayOutputStream();
    iv=new byte[cryptoContext.getCipher().getIvLength()];
    new SecureRandom().nextBytes(iv);
  }
  dummyHeader=Preconditions.checkNotNull(headerBytes,"Please pass HConstants.HFILEBLOCK_DUMMY_HEADER instead of null for param headerBytes");
}
