{
  StringBuilder startRow=new StringBuilder();
  StringBuilder endRow=null;
  try {
    char c;
    boolean doEndRow=false;
    while (i < path.length() && (c=path.charAt(i)) != '/') {
      if (c == ',') {
        doEndRow=true;
        i++;
        break;
      }
      startRow.append(c);
      i++;
    }
    i++;
    this.row=Bytes.toBytes(startRow.toString());
    if (doEndRow) {
      endRow=new StringBuilder();
      while ((c=path.charAt(i)) != '/') {
        endRow.append(c);
        i++;
      }
      i++;
    }
  }
 catch (  IndexOutOfBoundsException e) {
    throw new IllegalArgumentException(e);
  }
  if (startRow.charAt(startRow.length() - 1) == '*') {
    if (endRow != null)     throw new IllegalArgumentException("invalid path: start row " + "specified with wildcard");
    this.row=Bytes.toBytes(startRow.substring(0,startRow.lastIndexOf("*")));
    this.endRow=new byte[this.row.length + 1];
    System.arraycopy(this.row,0,this.endRow,0,this.row.length);
    this.endRow[this.row.length]=(byte)255;
  }
 else {
    this.row=Bytes.toBytes(startRow.toString());
    if (endRow != null) {
      this.endRow=Bytes.toBytes(endRow.toString());
    }
  }
  return i;
}
