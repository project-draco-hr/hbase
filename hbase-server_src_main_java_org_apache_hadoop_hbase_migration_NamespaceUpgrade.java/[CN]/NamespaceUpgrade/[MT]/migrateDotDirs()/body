{
  final Path archiveDir=new Path(rootDir,HConstants.HFILE_ARCHIVE_DIRECTORY);
  Path[][] dirs=new Path[][]{new Path[]{new Path(rootDir,DOT_CORRUPT),new Path(rootDir,HConstants.CORRUPT_DIR_NAME)},new Path[]{new Path(rootDir,DOT_LOGS),new Path(rootDir,HConstants.HREGION_LOGDIR_NAME)},new Path[]{new Path(rootDir,DOT_OLD_LOGS),new Path(rootDir,HConstants.HREGION_OLDLOGDIR_NAME)},new Path[]{new Path(rootDir,TMP_DATA_DIR),new Path(rootDir,HConstants.BASE_NAMESPACE_DIR)}};
  for (  Path[] dir : dirs) {
    Path src=dir[0];
    Path tgt=dir[1];
    if (!this.fs.exists(src)) {
      LOG.info("Does not exist: " + src);
      continue;
    }
    rename(src,tgt);
  }
  Path oldArchiveDir=new Path(rootDir,DOT_ARCHIVE);
  if (this.fs.exists(oldArchiveDir)) {
    mkdirs(archiveDir);
    Path archiveDataDir=new Path(archiveDir,HConstants.BASE_NAMESPACE_DIR);
    mkdirs(archiveDataDir);
    rename(oldArchiveDir,new Path(archiveDataDir,NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR));
  }
  Path dataDir=new Path(rootDir,HConstants.BASE_NAMESPACE_DIR);
  sysNsDir=new Path(dataDir,NamespaceDescriptor.SYSTEM_NAMESPACE_NAME_STR);
  defNsDir=new Path(dataDir,NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR);
}
