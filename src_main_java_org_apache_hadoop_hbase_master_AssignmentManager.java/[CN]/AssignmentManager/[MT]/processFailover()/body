{
  rebuildUserRegions();
  rebuildDisabledTables();
  List<String> nodes=ZKUtil.listChildrenAndWatchForNewChildren(watcher,watcher.assignmentZNode);
  if (nodes.isEmpty()) {
    LOG.info("No regions in transition in ZK to process on failover");
    return;
  }
  LOG.info("Failed-over master needs to process " + nodes.size() + " regions in transition");
  for (  String regionName : nodes) {
    RegionTransitionData data=ZKAssign.getData(watcher,regionName);
    HRegionInfo regionInfo=MetaReader.getRegion(catalogTracker,data.getRegionName()).getFirst();
    String encodedName=regionInfo.getEncodedName();
switch (data.getEventType()) {
case RS_ZK_REGION_CLOSING:
      regionsInTransition.put(encodedName,new RegionState(regionInfo,RegionState.State.CLOSING,data.getStamp()));
    break;
case RS_ZK_REGION_CLOSED:
  regionsInTransition.put(encodedName,new RegionState(regionInfo,RegionState.State.CLOSED,data.getStamp()));
new ClosedRegionHandler(master,this,data,regionInfo).process();
break;
case RS_ZK_REGION_OPENING:
regionsInTransition.put(encodedName,new RegionState(regionInfo,RegionState.State.OPENING,data.getStamp()));
break;
case RS_ZK_REGION_OPENED:
regionsInTransition.put(encodedName,new RegionState(regionInfo,RegionState.State.OPENING,data.getStamp()));
new OpenedRegionHandler(master,this,data,regionInfo,serverManager.getServerInfo(data.getServerName())).process();
break;
}
}
}
