{
  if (null != deadServers) {
    for (    Map.Entry<ServerName,List<Pair<HRegionInfo,Result>>> deadServer : deadServers.entrySet()) {
      List<Pair<HRegionInfo,Result>> regions=deadServer.getValue();
      for (      Pair<HRegionInfo,Result> region : regions) {
        HRegionInfo regionInfo=region.getFirst();
        Result result=region.getSecond();
        try {
          RegionTransitionData data=ZKAssign.getData(watcher,regionInfo.getEncodedName());
          if (data != null && data.getOrigin() != null && serverManager.isServerOnline(data.getOrigin())) {
            LOG.info("The region " + regionInfo.getEncodedName() + "is being handled on "+ data.getOrigin());
            continue;
          }
          boolean assign=ServerShutdownHandler.processDeadRegion(regionInfo,result,this,this.catalogTracker);
          if (assign) {
            ZKAssign.createOrForceNodeOffline(watcher,regionInfo,master.getServerName());
            if (!nodes.contains(regionInfo.getEncodedName())) {
              nodes.add(regionInfo.getEncodedName());
            }
          }
        }
 catch (        KeeperException.NoNodeException nne) {
        }
      }
    }
  }
  if (!nodes.isEmpty()) {
    for (    String encodedRegionName : nodes) {
      processRegionInTransition(encodedRegionName,null,deadServers);
    }
  }
}
