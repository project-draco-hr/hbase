{
  LOG.debug("Bulk assigning " + regions.size() + " region(s) to "+ destination.getServerName());
  List<RegionState> states=new ArrayList<RegionState>(regions.size());
synchronized (this.regionsInTransition) {
    for (    HRegionInfo region : regions) {
      states.add(forceRegionStateToOffline(region));
    }
  }
  AtomicInteger counter=new AtomicInteger(0);
  CreateUnassignedAsyncCallback cb=new CreateUnassignedAsyncCallback(this.watcher,destination,counter);
  for (  RegionState state : states) {
    if (!asyncSetOfflineInZooKeeper(state,cb,state)) {
      return;
    }
  }
  int total=regions.size();
  for (int oldCounter=0; true; ) {
    int count=counter.get();
    if (oldCounter != count) {
      LOG.info(destination.getServerName() + " unassigned znodes=" + count+ " of total="+ total);
      oldCounter=count;
    }
    if (count == total)     break;
    Threads.sleep(1);
  }
  try {
    this.serverManager.sendRegionOpen(destination,regions);
  }
 catch (  Throwable t) {
    this.master.abort("Failed assignment of regions to " + destination,t);
    return;
  }
  LOG.debug("Bulk assigning done for " + destination.getServerName());
}
