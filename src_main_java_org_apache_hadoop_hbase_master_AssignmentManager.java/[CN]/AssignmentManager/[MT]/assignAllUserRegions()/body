{
  List<HRegionInfo> allRegions=MetaScanner.listAllRegions(master.getConfiguration());
  if (allRegions == null || allRegions.isEmpty())   return;
  List<HServerInfo> servers=serverManager.getOnlineServersList();
  LOG.info("Bulk assigning " + allRegions.size() + " region(s) across "+ servers.size()+ " server(s)");
  Map<HServerInfo,List<HRegionInfo>> bulkPlan=LoadBalancer.bulkAssignment(allRegions,servers);
  ThreadFactoryBuilder builder=new ThreadFactoryBuilder();
  builder.setDaemon(true);
  builder.setNameFormat(this.master.getServerName() + "-BulkAssigner-%1$d");
  builder.setUncaughtExceptionHandler(new UncaughtExceptionHandler(){
    @Override public void uncaughtException(    Thread t,    Throwable e){
      master.abort("Uncaught exception bulk assigning in " + t.getName(),e);
    }
  }
);
  int threadCount=this.master.getConfiguration().getInt("hbase.bulk.assignment.threadpool.size",20);
  java.util.concurrent.ExecutorService pool=Executors.newFixedThreadPool(threadCount,builder.build());
  this.timeoutMonitor.bulkAssign(true);
  try {
    for (    Map.Entry<HServerInfo,List<HRegionInfo>> e : bulkPlan.entrySet()) {
      pool.execute(new SingleServerBulkAssigner(e.getKey(),e.getValue()));
    }
    try {
      long timeout=this.master.getConfiguration().getInt("hbase.bulk.assignment.waiton.empty.rit",10 * 60 * 1000);
      waitUntilNoRegionsInTransition(timeout);
    }
 catch (    InterruptedException e) {
      LOG.error("Interrupted waiting for regions to be assigned",e);
      throw new IOException(e);
    }
  }
  finally {
    pool.shutdown();
    this.timeoutMonitor.bulkAssign(false);
  }
  LOG.info("Bulk assigning done");
}
