{
  String encodedRegionName=regionInfo.getEncodedName();
  LOG.info("Processing region " + regionInfo.getRegionNameAsString() + " in state "+ data.getEventType());
synchronized (regionsInTransition) {
    RegionState regionState=regionsInTransition.get(encodedRegionName);
    if (regionState != null || failoverProcessedRegions.containsKey(encodedRegionName)) {
      return;
    }
switch (data.getEventType()) {
case M_ZK_REGION_CLOSING:
      if (isOnDeadServer(regionInfo,deadServers) && (data.getOrigin() == null || !serverManager.isServerOnline(data.getOrigin()))) {
        forceOffline(regionInfo,data);
      }
 else {
        regionsInTransition.put(encodedRegionName,new RegionState(regionInfo,RegionState.State.CLOSING,data.getStamp(),data.getOrigin()));
      }
    failoverProcessedRegions.put(encodedRegionName,regionInfo);
  break;
case RS_ZK_REGION_CLOSED:
case RS_ZK_REGION_FAILED_OPEN:
addToRITandCallClose(regionInfo,RegionState.State.CLOSED,data);
failoverProcessedRegions.put(encodedRegionName,regionInfo);
break;
case M_ZK_REGION_OFFLINE:
if (isOnDeadServer(regionInfo,deadServers) && (data.getOrigin() == null || !serverManager.isServerOnline(data.getOrigin()))) {
addToRITandCallClose(regionInfo,RegionState.State.OFFLINE,data);
}
 else if (data.getOrigin() != null && !serverManager.isServerOnline(data.getOrigin())) {
addToRITandCallClose(regionInfo,RegionState.State.OFFLINE,data);
}
 else {
regionsInTransition.put(encodedRegionName,new RegionState(regionInfo,RegionState.State.PENDING_OPEN,data.getStamp(),data.getOrigin()));
}
failoverProcessedRegions.put(encodedRegionName,regionInfo);
break;
case RS_ZK_REGION_OPENING:
if (regionInfo.isMetaTable()) {
regionsInTransition.put(encodedRegionName,new RegionState(regionInfo,RegionState.State.OPENING,data.getStamp(),data.getOrigin()));
processOpeningState(regionInfo);
break;
}
regionsInTransition.put(encodedRegionName,new RegionState(regionInfo,RegionState.State.OPENING,data.getStamp(),data.getOrigin()));
failoverProcessedRegions.put(encodedRegionName,regionInfo);
break;
case RS_ZK_REGION_OPENED:
regionsInTransition.put(encodedRegionName,new RegionState(regionInfo,RegionState.State.OPEN,data.getStamp(),data.getOrigin()));
ServerName sn=data.getOrigin() == null ? null : data.getOrigin();
if (sn == null) {
LOG.warn("Region in transition " + regionInfo.getEncodedName() + " references a null server; letting RIT timeout so will be "+ "assigned elsewhere");
}
 else if (!serverManager.isServerOnline(sn) && (isOnDeadServer(regionInfo,deadServers) || regionInfo.isMetaRegion() || regionInfo.isRootRegion())) {
forceOffline(regionInfo,data);
}
 else {
new OpenedRegionHandler(master,this,regionInfo,sn,expectedVersion).process();
}
failoverProcessedRegions.put(encodedRegionName,regionInfo);
break;
default :
throw new IllegalStateException("Received event is not valid.");
}
}
}
