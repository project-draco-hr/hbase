{
  List<Result> results=MetaReader.fullScanOfResults(this.catalogTracker);
  Map<ServerName,List<Pair<HRegionInfo,Result>>> offlineServers=new TreeMap<ServerName,List<Pair<HRegionInfo,Result>>>();
  Set<String> disablingTables=new HashSet<String>(1);
  Set<String> enablingTables=new HashSet<String>(1);
  for (  Result result : results) {
    Pair<HRegionInfo,ServerName> region=MetaReader.metaRowToRegionPair(result);
    if (region == null)     continue;
    HRegionInfo regionInfo=region.getFirst();
    ServerName regionLocation=region.getSecond();
    String tableName=regionInfo.getTableNameAsString();
    if (regionLocation == null) {
      if (false == checkIfRegionBelongsToDisabled(regionInfo) && false == checkIfRegionsBelongsToEnabling(regionInfo)) {
        regions.put(regionInfo,regionLocation);
      }
      addTheTablesInPartialState(disablingTables,enablingTables,regionInfo,tableName);
    }
 else     if (!this.serverManager.isServerOnline(regionLocation)) {
      List<Pair<HRegionInfo,Result>> offlineRegions=offlineServers.get(regionLocation);
      if (offlineRegions == null) {
        offlineRegions=new ArrayList<Pair<HRegionInfo,Result>>(1);
        offlineServers.put(regionLocation,offlineRegions);
      }
      offlineRegions.add(new Pair<HRegionInfo,Result>(regionInfo,result));
    }
 else {
      if (false == checkIfRegionBelongsToDisabled(regionInfo) && false == checkIfRegionsBelongsToEnabling(regionInfo)) {
        regions.put(regionInfo,regionLocation);
        addToServers(regionLocation,regionInfo);
      }
      addTheTablesInPartialState(disablingTables,enablingTables,regionInfo,tableName);
    }
  }
  boolean isWatcherCreated=recoverTableInDisablingState(disablingTables);
  recoverTableInEnablingState(enablingTables,isWatcherCreated);
  return offlineServers;
}
