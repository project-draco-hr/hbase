{
synchronized (this.regionPlans) {
    for (Iterator<Map.Entry<String,RegionPlan>> i=this.regionPlans.entrySet().iterator(); i.hasNext(); ) {
      Map.Entry<String,RegionPlan> e=i.next();
      ServerName otherSn=e.getValue().getDestination();
      if (otherSn != null && otherSn.equals(sn)) {
        i.remove();
      }
    }
  }
  Set<HRegionInfo> deadRegions=null;
  List<RegionState> rits=new ArrayList<RegionState>();
synchronized (this.regions) {
    List<HRegionInfo> assignedRegions=this.servers.remove(sn);
    if (assignedRegions == null || assignedRegions.isEmpty()) {
      return rits;
    }
    deadRegions=new TreeSet<HRegionInfo>(assignedRegions);
    for (    HRegionInfo region : deadRegions) {
      this.regions.remove(region);
    }
  }
synchronized (regionsInTransition) {
    for (    RegionState region : this.regionsInTransition.values()) {
      if (deadRegions.remove(region.getRegion())) {
        rits.add(region);
      }
    }
  }
  return rits;
}
