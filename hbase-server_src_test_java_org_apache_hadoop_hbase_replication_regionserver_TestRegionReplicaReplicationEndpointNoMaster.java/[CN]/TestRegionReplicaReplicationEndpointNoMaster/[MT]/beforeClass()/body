{
  Configuration conf=HTU.getConfiguration();
  conf.setBoolean(HConstants.REPLICATION_ENABLE_KEY,true);
  conf.setBoolean(ServerRegionReplicaUtil.REGION_REPLICA_REPLICATION_CONF_KEY,true);
  String walCoprocs=HTU.getConfiguration().get(CoprocessorHost.WAL_COPROCESSOR_CONF_KEY);
  if (walCoprocs == null) {
    walCoprocs=WALEditCopro.class.getName();
  }
 else {
    walCoprocs+="," + WALEditCopro.class.getName();
  }
  HTU.getConfiguration().set(CoprocessorHost.WAL_COPROCESSOR_CONF_KEY,walCoprocs);
  HTU.startMiniCluster(NB_SERVERS);
  HTableDescriptor htd=HTU.createTableDescriptor(tableName.toString());
  table=HTU.createTable(htd,new byte[][]{f},HTU.getConfiguration());
  hriPrimary=table.getRegionLocation(row,false).getRegionInfo();
  hriSecondary=new HRegionInfo(hriPrimary.getTable(),hriPrimary.getStartKey(),hriPrimary.getEndKey(),hriPrimary.isSplit(),hriPrimary.getRegionId(),1);
  TestRegionServerNoMaster.stopMasterAndAssignMeta(HTU);
  rs0=HTU.getMiniHBaseCluster().getRegionServer(0);
  rs1=HTU.getMiniHBaseCluster().getRegionServer(1);
}
