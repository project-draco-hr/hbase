{
  byte[] k=new byte[3];
  int rowCount=0;
  for (byte b1='a'; b1 <= 'z'; b1++) {
    for (byte b2='a'; b2 <= 'z'; b2++) {
      for (byte b3='a'; b3 <= 'z'; b3++) {
        k[0]=b1;
        k[1]=b2;
        k[2]=b3;
        Put put=new Put(k);
        put.setDurability(Durability.SKIP_WAL);
        put.add(f,null,k);
        if (r.getWAL() == null) {
          put.setDurability(Durability.SKIP_WAL);
        }
        int preRowCount=rowCount;
        int pause=10;
        int maxPause=1000;
        while (rowCount == preRowCount) {
          try {
            r.put(put);
            rowCount++;
          }
 catch (          RegionTooBusyException e) {
            pause=(pause * 2 >= maxPause) ? maxPause : pause * 2;
            Threads.sleep(pause);
          }
        }
      }
    }
    if (flush) {
      r.flush(true);
    }
  }
  return rowCount;
}
