{
  final Table meta=new HTable(getConfiguration(),TableName.META_TABLE_NAME);
  try {
    waitFor(timeout,200,true,new Predicate<IOException>(){
      @Override public boolean evaluate() throws IOException {
        boolean allRegionsAssigned=true;
        Scan scan=new Scan();
        scan.addFamily(HConstants.CATALOG_FAMILY);
        ResultScanner s=meta.getScanner(scan);
        try {
          Result r;
          while ((r=s.next()) != null) {
            byte[] b=r.getValue(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
            HRegionInfo info=HRegionInfo.parseFromOrNull(b);
            if (info != null && info.getTable().equals(tableName)) {
              b=r.getValue(HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER);
              allRegionsAssigned&=(b != null);
            }
          }
        }
  finally {
          s.close();
        }
        return allRegionsAssigned;
      }
    }
);
  }
  finally {
    meta.close();
  }
  if (!getHBaseClusterInterface().isDistributedCluster()) {
    HMaster master=getHBaseCluster().getMaster();
    final RegionStates states=master.getAssignmentManager().getRegionStates();
    waitFor(timeout,200,new Predicate<IOException>(){
      @Override public boolean evaluate() throws IOException {
        List<HRegionInfo> hris=states.getRegionsOfTable(tableName);
        return hris != null && !hris.isEmpty();
      }
    }
);
  }
}
