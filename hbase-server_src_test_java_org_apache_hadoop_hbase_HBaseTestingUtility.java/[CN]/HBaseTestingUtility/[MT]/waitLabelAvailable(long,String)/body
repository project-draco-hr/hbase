{
  final VisibilityLabelsCache labelsCache=VisibilityLabelsCache.get();
  waitFor(timeoutMillis,new Waiter.ExplainingPredicate<RuntimeException>(){
    @Override public boolean evaluate(){
      for (      String label : labels) {
        if (labelsCache.getLabelOrdinal(label) == 0) {
          return false;
        }
      }
      return true;
    }
    @Override public String explainFailure(){
      for (      String label : labels) {
        if (labelsCache.getLabelOrdinal(label) == 0) {
          return label + " is not available yet";
        }
      }
      return "";
    }
  }
);
}
