{
  if (mrCluster != null) {
    throw new IllegalStateException("MiniMRCluster is already running");
  }
  LOG.info("Starting mini mapreduce cluster...");
  setupClusterTestDir();
  createDirsAndSetProperties();
  forceChangeTaskLogDir();
  mrCluster=new MiniMRCluster(servers,FS_URI != null ? FS_URI : FileSystem.get(conf).getUri().toString(),1,null,null,new JobConf(this.conf));
  JobConf jobConf=MapreduceTestingShim.getJobConf(mrCluster);
  if (jobConf == null) {
    jobConf=mrCluster.createJobConf();
  }
  jobConf.set("mapred.local.dir",conf.get("mapred.local.dir"));
  LOG.info("Mini mapreduce cluster started");
  conf.set("mapred.job.tracker",jobConf.get("mapred.job.tracker"));
  conf.set("mapreduce.framework.name","yarn");
  String rmAdress=jobConf.get("yarn.resourcemanager.address");
  if (rmAdress != null) {
    conf.set("yarn.resourcemanager.address",rmAdress);
  }
  String schedulerAdress=jobConf.get("yarn.resourcemanager.scheduler.address");
  if (schedulerAdress != null) {
    conf.set("yarn.resourcemanager.scheduler.address",schedulerAdress);
  }
}
