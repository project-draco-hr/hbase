{
  if (path.startsWith(watcher.assignmentZNode)) {
    final String regionName=ZKAssign.getRegionName(watcher,path);
    zkEventWorkersSubmit(new RegionRunnable(){
      @Override public String getRegionName(){
        return regionName;
      }
      @Override public void run(){
        Lock lock=locker.acquireLock(regionName);
        try {
          RegionState rs=regionStates.getRegionTransitionState(regionName);
          if (rs == null)           return;
          HRegionInfo regionInfo=rs.getRegion();
          String regionNameStr=regionInfo.getRegionNameAsString();
          LOG.debug("Znode " + regionNameStr + " deleted, state: "+ rs);
          if (rs.isOpened()) {
            ServerName serverName=rs.getServerName();
            regionOnline(regionInfo,serverName);
            boolean disabled=getZKTable().isDisablingOrDisabledTable(regionInfo.getTableName());
            if (!serverManager.isServerOnline(serverName) && !disabled) {
              LOG.info("Opened " + regionNameStr + "but the region server is offline, reassign the region");
              assign(regionInfo,true);
            }
 else             if (disabled) {
              LOG.info("Opened " + regionNameStr + "but this table is disabled, triggering close of region");
              unassign(regionInfo);
            }
          }
        }
  finally {
          lock.unlock();
        }
      }
    }
);
  }
}
