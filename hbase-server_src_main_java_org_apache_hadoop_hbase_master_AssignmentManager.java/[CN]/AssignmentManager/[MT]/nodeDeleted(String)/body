{
  if (path.startsWith(watcher.assignmentZNode)) {
    int wi=Math.abs(path.hashCode() % zkEventWorkers.length);
    zkEventWorkers[wi].submit(new Runnable(){
      @Override public void run(){
        String regionName=ZKAssign.getRegionName(watcher,path);
        Lock lock=locker.acquireLock(regionName);
        try {
          RegionState rs=regionStates.getRegionTransitionState(regionName);
          if (rs == null)           return;
          HRegionInfo regionInfo=rs.getRegion();
          if (rs.isSplit()) {
            LOG.debug("Ephemeral node deleted, regionserver crashed?, " + "clearing from RIT; rs=" + rs);
            regionOffline(rs.getRegion());
          }
 else {
            LOG.debug("The znode of region " + regionInfo.getRegionNameAsString() + " has been deleted.");
            if (rs.isOpened()) {
              ServerName serverName=rs.getServerName();
              regionOnline(regionInfo,serverName);
              LOG.info("The master has opened the region " + regionInfo.getRegionNameAsString() + " that was online on "+ serverName);
              if (getZKTable().isDisablingOrDisabledTable(regionInfo.getTableNameAsString())) {
                LOG.debug("Opened region " + regionInfo.getRegionNameAsString() + " but "+ "this table is disabled, triggering close of region");
                unassign(regionInfo);
              }
            }
          }
        }
  finally {
          lock.unlock();
        }
      }
    }
);
  }
}
