{
  if (path.equals(watcher.assignmentZNode)) {
    zkEventWorkers.submit(new Runnable(){
      @Override public void run(){
        try {
          List<String> children=ZKUtil.listChildrenAndWatchForNewChildren(watcher,watcher.assignmentZNode);
          if (children != null) {
            Stat stat=new Stat();
            for (            String child : children) {
              if (!regionStates.isRegionInTransition(child)) {
                stat.setVersion(0);
                byte[] data=ZKAssign.getDataAndWatch(watcher,ZKUtil.joinZNode(watcher.assignmentZNode,child),stat);
                if (data != null && stat.getVersion() > 0) {
                  try {
                    RegionTransition rt=RegionTransition.parseFrom(data);
                    EventType type=rt.getEventType();
                    if (type == EventType.RS_ZK_REGION_SPLITTING || type == EventType.RS_ZK_REGION_MERGING) {
                      handleRegion(rt,stat.getVersion());
                    }
                  }
 catch (                  DeserializationException de) {
                    LOG.error("error getting data for " + child,de);
                  }
                }
              }
            }
          }
        }
 catch (        KeeperException e) {
          server.abort("Unexpected ZK exception reading unassigned children",e);
        }
      }
    }
);
  }
}
