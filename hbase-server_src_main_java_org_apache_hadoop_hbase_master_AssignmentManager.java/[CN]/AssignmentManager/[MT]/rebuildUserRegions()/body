{
  Set<TableName> disabledOrEnablingTables=tableStateManager.getTablesInStates(TableState.State.DISABLED,TableState.State.ENABLING);
  Set<TableName> disabledOrDisablingOrEnabling=tableStateManager.getTablesInStates(TableState.State.DISABLED,TableState.State.DISABLING,TableState.State.ENABLING);
  List<Result> results=MetaTableAccessor.fullScanRegions(server.getConnection());
  Set<ServerName> onlineServers=serverManager.getOnlineServers().keySet();
  Set<ServerName> offlineServers=new HashSet<ServerName>();
  for (  Result result : results) {
    if (result == null && LOG.isDebugEnabled()) {
      LOG.debug("null result from meta - ignoring but this is strange.");
      continue;
    }
    PairOfSameType<HRegionInfo> p=MetaTableAccessor.getMergeRegions(result);
    if (p.getFirst() != null && p.getSecond() != null) {
      int numReplicas=((MasterServices)server).getTableDescriptors().get(p.getFirst().getTable()).getRegionReplication();
      for (      HRegionInfo merge : p) {
        for (int i=1; i < numReplicas; i++) {
          replicasToClose.add(RegionReplicaUtil.getRegionInfoForReplica(merge,i));
        }
      }
    }
    RegionLocations rl=MetaTableAccessor.getRegionLocations(result);
    if (rl == null)     continue;
    HRegionLocation[] locations=rl.getRegionLocations();
    if (locations == null)     continue;
    for (    HRegionLocation hrl : locations) {
      HRegionInfo regionInfo=hrl.getRegionInfo();
      if (regionInfo == null)       continue;
      int replicaId=regionInfo.getReplicaId();
      State state=RegionStateStore.getRegionState(result,replicaId);
      if (replicaId == 0 && state.equals(State.SPLIT)) {
        for (        HRegionLocation h : locations) {
          replicasToClose.add(h.getRegionInfo());
        }
      }
      ServerName lastHost=hrl.getServerName();
      ServerName regionLocation=RegionStateStore.getRegionServer(result,replicaId);
      regionStates.createRegionState(regionInfo,state,regionLocation,lastHost);
      if (!regionStates.isRegionInState(regionInfo,State.OPEN)) {
        continue;
      }
      TableName tableName=regionInfo.getTable();
      if (!onlineServers.contains(regionLocation)) {
        offlineServers.add(regionLocation);
      }
 else       if (!disabledOrEnablingTables.contains(tableName)) {
        regionStates.regionOnline(regionInfo,regionLocation);
        balancer.regionOnline(regionInfo,regionLocation);
      }
      if (!disabledOrDisablingOrEnabling.contains(tableName) && !getTableStateManager().isTableState(tableName,TableState.State.ENABLED)) {
        setEnabledTable(tableName);
      }
    }
  }
  return offlineServers;
}
