{
  Set<String> enablingTables=ZKTable.getEnablingTables(watcher);
  Set<String> disabledOrEnablingTables=ZKTable.getDisabledTables(watcher);
  disabledOrEnablingTables.addAll(enablingTables);
  Set<String> disabledOrDisablingOrEnabling=ZKTable.getDisablingTables(watcher);
  disabledOrDisablingOrEnabling.addAll(disabledOrEnablingTables);
  List<Result> results=MetaReader.fullScan(this.catalogTracker);
  Set<ServerName> onlineServers=serverManager.getOnlineServers().keySet();
  Map<ServerName,List<HRegionInfo>> offlineServers=new TreeMap<ServerName,List<HRegionInfo>>();
  for (  Result result : results) {
    Pair<HRegionInfo,ServerName> region=HRegionInfo.getHRegionInfoAndServerName(result);
    if (region == null)     continue;
    HRegionInfo regionInfo=region.getFirst();
    ServerName regionLocation=region.getSecond();
    if (regionInfo == null)     continue;
    regionStates.createRegionState(regionInfo);
    String tableName=regionInfo.getTableNameAsString();
    if (regionLocation == null) {
      if (!enablingTables.contains(tableName)) {
        LOG.warn("Region " + regionInfo.getEncodedName() + " has null regionLocation."+ " But its table "+ tableName+ " isn't in ENABLING state.");
      }
    }
 else     if (!onlineServers.contains(regionLocation)) {
      List<HRegionInfo> offlineRegions=offlineServers.get(regionLocation);
      if (offlineRegions == null) {
        offlineRegions=new ArrayList<HRegionInfo>(1);
        offlineServers.put(regionLocation,offlineRegions);
      }
      offlineRegions.add(regionInfo);
      if (!disabledOrDisablingOrEnabling.contains(tableName) && !getZKTable().isEnabledTable(tableName)) {
        setEnabledTable(tableName);
      }
    }
 else {
      if (regionInfo.isOffline() && regionInfo.isSplit()) {
        String node=ZKAssign.getNodeName(this.watcher,regionInfo.getEncodedName());
        Stat stat=new Stat();
        byte[] data=ZKUtil.getDataNoWatch(this.watcher,node,stat);
        if (data == null) {
          LOG.debug("Region " + regionInfo.getRegionNameAsString() + " split is completed. Hence need not add to regions list");
          continue;
        }
      }
      if (!disabledOrEnablingTables.contains(tableName)) {
        regionStates.regionOnline(regionInfo,regionLocation);
      }
      if (!disabledOrDisablingOrEnabling.contains(tableName) && !getZKTable().isEnabledTable(tableName)) {
        setEnabledTable(tableName);
      }
    }
  }
  return offlineServers;
}
