{
  List<String> nodes=ZKUtil.listChildrenNoWatch(watcher,watcher.assignmentZNode);
  if (nodes == null) {
    String errorMessage="Failed to get the children from ZK";
    server.abort(errorMessage,new IOException(errorMessage));
    return;
  }
  boolean failover=(!serverManager.getDeadServers().isEmpty() || !serverManager.getRequeuedDeadServers().isEmpty());
  if (!failover) {
    Map<HRegionInfo,ServerName> regions=regionStates.getRegionAssignments();
    for (    HRegionInfo hri : regions.keySet()) {
      if (!hri.isMetaTable()) {
        LOG.debug("Found " + hri + " out on cluster");
        failover=true;
        break;
      }
    }
    if (!failover) {
      for (      String encodedName : nodes) {
        RegionState state=regionStates.getRegionState(encodedName);
        if (state != null && !state.getRegion().isMetaRegion()) {
          LOG.debug("Found " + state.getRegion().getRegionNameAsString() + " in RITs");
          failover=true;
          break;
        }
      }
    }
  }
  if (failover) {
    LOG.info("Found regions out on cluster or in RIT; presuming failover");
    processDeadServersAndRecoverLostRegions(deadServers);
  }
 else {
    LOG.info("Clean cluster startup. Assigning userregions");
    assignAllUserRegions();
  }
}
