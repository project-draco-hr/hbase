{
  List<String> nodes=ZKUtil.listChildrenAndWatchForNewChildren(watcher,watcher.assignmentZNode);
  if (nodes == null) {
    String errorMessage="Failed to get the children from ZK";
    master.abort(errorMessage,new IOException(errorMessage));
    return;
  }
synchronized (this.regions) {
    for (    Map.Entry<HRegionInfo,ServerName> e : this.regions.entrySet()) {
      if (!e.getKey().isMetaTable() && e.getValue() != null) {
        LOG.debug("Found " + e + " out on cluster");
        this.failover=true;
        break;
      }
      if (nodes.contains(e.getKey().getEncodedName())) {
        LOG.debug("Found " + e.getKey().getRegionNameAsString() + " in RITs");
        this.failover=true;
        break;
      }
    }
  }
  nodes.removeAll(regionsInTransition.keySet());
  if (this.failover) {
    LOG.info("Found regions out on cluster or in RIT; failover");
    processDeadServersAndRecoverLostRegions(deadServers,nodes);
    this.failover=false;
    failoverProcessedRegions.clear();
  }
 else {
    LOG.info("Clean cluster startup. Assigning userregions");
    cleanoutUnassigned();
    assignAllUserRegions();
  }
}
