{
  RegionTransition rt=null;
  try {
    byte[] data=ZKAssign.getData(watcher,hri.getEncodedName());
    rt=data == null ? null : RegionTransition.parseFrom(data);
  }
 catch (  KeeperException e) {
    server.abort("Exception reading unassigned node for region=" + hri.getEncodedName(),e);
  }
catch (  DeserializationException e) {
    server.abort("Exception parsing unassigned node for region=" + hri.getEncodedName(),e);
  }
  ServerName addressFromZK=rt != null ? rt.getServerName() : null;
  if (addressFromZK != null) {
    boolean matchZK=addressFromZK.equals(serverName);
    LOG.debug("Checking region=" + hri.getRegionNameAsString() + ", zk server="+ addressFromZK+ " current="+ serverName+ ", matches="+ matchZK);
    return matchZK;
  }
  ServerName addressFromAM=regionStates.getRegionServerOfRegion(hri);
  boolean matchAM=(addressFromAM != null && addressFromAM.equals(serverName));
  LOG.debug("based on AM, current region=" + hri.getRegionNameAsString() + " is on server="+ (addressFromAM != null ? addressFromAM : "null")+ " server being checked: "+ serverName);
  return matchAM;
}
