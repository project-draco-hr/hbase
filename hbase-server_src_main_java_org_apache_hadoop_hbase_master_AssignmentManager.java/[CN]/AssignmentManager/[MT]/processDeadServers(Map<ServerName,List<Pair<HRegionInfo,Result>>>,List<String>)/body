{
  if (deadServers == null)   return;
  Set<ServerName> actualDeadServers=this.serverManager.getDeadServers();
  for (  Map.Entry<ServerName,List<Pair<HRegionInfo,Result>>> deadServer : deadServers.entrySet()) {
    if (actualDeadServers.contains(deadServer.getKey())) {
      continue;
    }
    List<Pair<HRegionInfo,Result>> regions=deadServer.getValue();
    for (    Pair<HRegionInfo,Result> region : regions) {
      HRegionInfo regionInfo=region.getFirst();
      Result result=region.getSecond();
      try {
        if (ZKUtil.checkExists(this.watcher,ZKAssign.getPath(this.watcher,regionInfo.getEncodedName())) != -1) {
          byte[] data=ZKAssign.getData(watcher,regionInfo.getEncodedName());
          if (data == null) {
            LOG.warn("No data in znode for " + regionInfo.getEncodedName());
            continue;
          }
          RegionTransition rt;
          try {
            rt=RegionTransition.parseFrom(data);
          }
 catch (          DeserializationException e) {
            LOG.warn("Failed parse of znode data for " + regionInfo.getEncodedName(),e);
            continue;
          }
          ServerName sn=rt.getServerName();
          if (isServerOnline(sn)) {
            LOG.info("The region " + regionInfo.getEncodedName() + "is being handled on "+ sn);
            continue;
          }
        }
        boolean assign=ServerShutdownHandler.processDeadRegion(regionInfo,result,this,this.catalogTracker);
        if (assign) {
          ZKAssign.createOrForceNodeOffline(watcher,regionInfo,master.getServerName());
          if (!nodes.contains(regionInfo.getEncodedName())) {
            nodes.add(regionInfo.getEncodedName());
          }
        }
      }
 catch (      KeeperException.NoNodeException nne) {
      }
    }
  }
}
