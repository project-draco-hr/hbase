{
  LOG.debug("Starting unassign of " + region.getRegionNameAsString() + " (offlining), current state: "+ regionStates.getRegionState(region));
  String encodedName=region.getEncodedName();
  ReentrantLock lock=locker.acquireLock(encodedName);
  RegionState state=regionStates.getRegionTransitionState(encodedName);
  boolean reassign=true;
  try {
    if (state == null) {
      state=regionStates.getRegionState(encodedName);
      if (state != null && state.isUnassignable()) {
        LOG.info("Attempting to unassign " + state + ", ignored");
        return;
      }
      if (state == null || state.getServerName() == null) {
        LOG.warn("Attempting to unassign a region not in RegionStates" + region.getRegionNameAsString() + ", offlined");
        regionOffline(region);
        return;
      }
      state=regionStates.updateRegionState(region,State.PENDING_CLOSE);
    }
 else     if (state.isFailedOpen()) {
      regionOffline(region);
      return;
    }
 else     if (force && state.isPendingCloseOrClosing()) {
      LOG.debug("Attempting to unassign " + region.getRegionNameAsString() + " which is already "+ state.getState()+ " but forcing to send a CLOSE RPC again ");
      if (state.isFailedClose()) {
        state=regionStates.updateRegionState(region,State.PENDING_CLOSE);
      }
    }
 else {
      LOG.debug("Attempting to unassign " + region.getRegionNameAsString() + " but it is "+ "already in transition ("+ state.getState()+ ", force="+ force+ ")");
      return;
    }
    unassign(region,state,dest,null);
  }
  finally {
    lock.unlock();
    if (!replicasToClose.contains(region) && reassign && regionStates.isRegionOffline(region)) {
      assign(region);
    }
  }
}
