{
  for (int i=1; i <= this.maximumAttempts; i++) {
    if (this.server.isStopped() || this.server.isAborted()) {
      LOG.debug("Server stopped/aborted; skipping unassign of " + region);
      return;
    }
    if (!serverManager.isServerOnline(server)) {
      LOG.debug("Offline " + region.getRegionNameAsString() + ", no need to unassign since it's on a dead server: "+ server);
      regionStates.updateRegionState(region,State.OFFLINE);
      return;
    }
    try {
      if (serverManager.sendRegionClose(server,region,dest)) {
        LOG.debug("Sent CLOSE to " + server + " for region "+ region.getRegionNameAsString());
        return;
      }
      LOG.warn("Server " + server + " region CLOSE RPC returned false for "+ region.getRegionNameAsString());
    }
 catch (    Throwable t) {
      long sleepTime=0;
      Configuration conf=this.server.getConfiguration();
      if (t instanceof RemoteException) {
        t=((RemoteException)t).unwrapRemoteException();
      }
      if (t instanceof RegionServerAbortedException || t instanceof RegionServerStoppedException || t instanceof ServerNotRunningYetException) {
        sleepTime=1 + conf.getInt(RpcClient.FAILED_SERVER_EXPIRY_KEY,RpcClient.FAILED_SERVER_EXPIRY_DEFAULT);
      }
 else       if (t instanceof NotServingRegionException) {
        LOG.debug("Offline " + region.getRegionNameAsString() + ", it's not any more on "+ server,t);
        regionStates.updateRegionState(region,State.OFFLINE);
        return;
      }
 else       if (t instanceof FailedServerException && i < maximumAttempts) {
        sleepTime=1 + conf.getInt(RpcClient.FAILED_SERVER_EXPIRY_KEY,RpcClient.FAILED_SERVER_EXPIRY_DEFAULT);
        if (LOG.isDebugEnabled()) {
          LOG.debug(server + " is on failed server list; waiting " + sleepTime+ "ms",t);
        }
      }
      try {
        if (sleepTime > 0) {
          Thread.sleep(sleepTime);
        }
      }
 catch (      InterruptedException ie) {
        LOG.warn("Interrupted unassign " + region.getRegionNameAsString(),ie);
        Thread.currentThread().interrupt();
        regionStates.updateRegionState(region,State.FAILED_CLOSE);
        return;
      }
      LOG.info("Server " + server + " returned "+ t+ " for "+ region.getRegionNameAsString()+ ", try="+ i+ " of "+ this.maximumAttempts,t);
    }
  }
  regionStates.updateRegionState(region,State.FAILED_CLOSE);
}
