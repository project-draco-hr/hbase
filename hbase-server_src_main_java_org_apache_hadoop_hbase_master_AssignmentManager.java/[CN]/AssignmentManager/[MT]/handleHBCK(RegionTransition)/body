{
  String encodedName=HRegionInfo.encodeRegionName(rt.getRegionName());
  LOG.info("Handling HBCK triggered transition=" + rt.getEventType() + ", server="+ rt.getServerName()+ ", region="+ HRegionInfo.prettyPrint(encodedName));
  RegionState regionState=regionStates.getRegionTransitionState(encodedName);
switch (rt.getEventType()) {
case M_ZK_REGION_OFFLINE:
    HRegionInfo regionInfo=null;
  if (regionState != null) {
    regionInfo=regionState.getRegion();
  }
 else {
    try {
      byte[] name=rt.getRegionName();
      Pair<HRegionInfo,ServerName> p=MetaReader.getRegion(catalogTracker,name);
      regionInfo=p.getFirst();
    }
 catch (    IOException e) {
      LOG.info("Exception reading META doing HBCK repair operation",e);
      return;
    }
  }
LOG.info("HBCK repair is triggering assignment of region=" + regionInfo.getRegionNameAsString());
assign(regionInfo,false);
break;
default :
LOG.warn("Received unexpected region state from HBCK: " + rt.toString());
break;
}
}
