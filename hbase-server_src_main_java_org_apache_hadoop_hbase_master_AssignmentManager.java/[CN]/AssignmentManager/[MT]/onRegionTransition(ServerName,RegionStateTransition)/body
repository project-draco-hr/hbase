{
  TransitionCode code=transition.getTransitionCode();
  HRegionInfo hri=HRegionInfo.convert(transition.getRegionInfo(0));
  Lock lock=locker.acquireLock(hri.getEncodedName());
  try {
    RegionState current=regionStates.getRegionState(hri);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Got transition " + code + " for "+ (current != null ? current.toString() : hri.getShortNameToLog())+ " from "+ serverName);
    }
    String errorMsg=null;
switch (code) {
case OPENED:
      errorMsg=onRegionOpen(current,hri,serverName,transition);
    break;
case FAILED_OPEN:
  errorMsg=onRegionFailedOpen(current,hri,serverName);
break;
case CLOSED:
errorMsg=onRegionClosed(current,hri,serverName);
break;
case READY_TO_SPLIT:
errorMsg=onRegionReadyToSplit(current,hri,serverName,transition);
break;
case SPLIT_PONR:
errorMsg=onRegionSplitPONR(current,hri,serverName,transition);
break;
case SPLIT:
errorMsg=onRegionSplit(current,hri,serverName,transition);
break;
case SPLIT_REVERTED:
errorMsg=onRegionSplitReverted(current,hri,serverName,transition);
break;
case READY_TO_MERGE:
errorMsg=onRegionReadyToMerge(current,hri,serverName,transition);
break;
case MERGE_PONR:
errorMsg=onRegionMergePONR(current,hri,serverName,transition);
break;
case MERGED:
errorMsg=onRegionMerged(current,hri,serverName,transition);
break;
case MERGE_REVERTED:
errorMsg=onRegionMergeReverted(current,hri,serverName,transition);
break;
default :
errorMsg="Unexpected transition code " + code;
}
if (errorMsg != null) {
LOG.error("Failed to transition region from " + current + " on "+ code+ " by "+ serverName+ ": "+ errorMsg);
}
return errorMsg;
}
  finally {
lock.unlock();
}
}
