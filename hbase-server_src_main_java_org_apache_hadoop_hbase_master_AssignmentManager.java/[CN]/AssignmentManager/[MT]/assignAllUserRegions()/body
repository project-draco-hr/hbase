{
  ZKAssign.deleteAllNodes(watcher);
  ZKUtil.listChildrenAndWatchForNewChildren(this.watcher,this.watcher.assignmentZNode);
  failoverCleanupDone();
  Set<TableName> disabledOrDisablingOrEnabling=tableStateManager.getTablesInStates(ZooKeeperProtos.Table.State.DISABLED,ZooKeeperProtos.Table.State.DISABLING,ZooKeeperProtos.Table.State.ENABLING);
  Map<HRegionInfo,ServerName> allRegions;
  SnapshotOfRegionAssignmentFromMeta snapshotOfRegionAssignment=new SnapshotOfRegionAssignmentFromMeta(catalogTracker,disabledOrDisablingOrEnabling,true);
  snapshotOfRegionAssignment.initialize();
  allRegions=snapshotOfRegionAssignment.getRegionToRegionServerMap();
  if (allRegions == null || allRegions.isEmpty())   return;
  boolean retainAssignment=server.getConfiguration().getBoolean("hbase.master.startup.retainassign",true);
  if (retainAssignment) {
    assign(allRegions);
  }
 else {
    List<HRegionInfo> regions=new ArrayList<HRegionInfo>(allRegions.keySet());
    assign(regions);
  }
  for (  HRegionInfo hri : allRegions.keySet()) {
    TableName tableName=hri.getTable();
    if (!tableStateManager.isTableState(tableName,ZooKeeperProtos.Table.State.ENABLED)) {
      setEnabledTable(tableName);
    }
  }
}
