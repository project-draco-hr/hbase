{
  LOG.info("Quickly assigning " + regions.size() + " region(s) across "+ servers.size()+ " server(s)");
  Map<ServerName,List<HRegionInfo>> bulkPlan=balancer.roundRobinAssignment(regions,servers);
  if (bulkPlan == null || bulkPlan.isEmpty()) {
    LOG.info("Failed getting bulk plan, assigning region singly");
    for (    HRegionInfo region : regions) {
      assign(region,true);
    }
    return;
  }
  Map<ServerName,List<HRegionInfo>> failedPlans=new HashMap<ServerName,List<HRegionInfo>>();
  for (  Map.Entry<ServerName,List<HRegionInfo>> e : bulkPlan.entrySet()) {
    try {
      if (!assign(e.getKey(),e.getValue())) {
        failedPlans.put(e.getKey(),e.getValue());
      }
    }
 catch (    Throwable t) {
      LOG.warn("Failed bulking assigning " + e.getValue().size() + " region(s) to "+ e.getKey().getServerName()+ ", and continue to bulk assign others",t);
      failedPlans.put(e.getKey(),e.getValue());
    }
  }
  if (!failedPlans.isEmpty()) {
    servers.removeAll(failedPlans.keySet());
    List<HRegionInfo> reassigningRegions=new ArrayList<HRegionInfo>();
    for (    Map.Entry<ServerName,List<HRegionInfo>> e : failedPlans.entrySet()) {
      LOG.info("Failed assigning " + e.getValue().size() + " regions to server "+ e.getKey()+ ", reassigning them");
      reassigningRegions.addAll(e.getValue());
    }
    for (    HRegionInfo region : reassigningRegions) {
      assign(region,true,true);
    }
  }
}
