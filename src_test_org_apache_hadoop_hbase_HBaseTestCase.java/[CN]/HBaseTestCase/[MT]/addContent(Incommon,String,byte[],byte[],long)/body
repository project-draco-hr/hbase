{
  char secondCharStart=(char)startKeyBytes[1];
  char thirdCharStart=(char)startKeyBytes[2];
  EXIT:   for (char c=(char)startKeyBytes[0]; c <= LAST_CHAR; c++) {
    for (char d=secondCharStart; d <= LAST_CHAR; d++) {
      for (char e=thirdCharStart; e <= LAST_CHAR; e++) {
        byte[] bytes=new byte[]{(byte)c,(byte)d,(byte)e};
        String s=Bytes.toString(bytes) + PUNCTUATION;
        byte[] t=Bytes.toBytes(s);
        if (endKey != null && endKey.length > 0 && Bytes.compareTo(endKey,t) <= 0) {
          break EXIT;
        }
        try {
          BatchUpdate batchUpdate=ts == -1 ? new BatchUpdate(t) : new BatchUpdate(t,ts);
          try {
            batchUpdate.put(column,t);
            updater.commit(batchUpdate);
          }
 catch (          RuntimeException ex) {
            ex.printStackTrace();
            throw ex;
          }
catch (          IOException ex) {
            ex.printStackTrace();
            throw ex;
          }
        }
 catch (        RuntimeException ex) {
          ex.printStackTrace();
          throw ex;
        }
catch (        IOException ex) {
          ex.printStackTrace();
          throw ex;
        }
      }
      thirdCharStart=FIRST_CHAR;
    }
    secondCharStart=FIRST_CHAR;
  }
}
