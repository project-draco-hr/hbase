{
  MasterFileSystem mfs=this.masterServices.getMasterFileSystem();
  Path tempdir=mfs.getTempDir();
  FileSystem fs=mfs.getFileSystem();
  AssignmentManager assignmentManager=this.masterServices.getAssignmentManager();
  TableDescriptor underConstruction=new TableDescriptor(this.hTableDescriptor,TableState.State.ENABLING);
  Path tempTableDir=FSUtils.getTableDir(tempdir,this.tableName);
  new FSTableDescriptors(server.getConfiguration()).createTableDescriptorForTableDirectory(tempTableDir,underConstruction,false);
  Path tableDir=FSUtils.getTableDir(mfs.getRootDir(),this.tableName);
  HRegionInfo[] newRegions;
  if (this.preserveSplits) {
    newRegions=regions.toArray(new HRegionInfo[regions.size()]);
    LOG.info("Truncate will preserve " + newRegions.length + " regions");
  }
 else {
    newRegions=new HRegionInfo[1];
    newRegions[0]=new HRegionInfo(this.tableName,null,null);
    LOG.info("Truncate will not preserve the regions");
  }
  List<HRegionInfo> regionInfos=ModifyRegionUtils.createRegions(masterServices.getConfiguration(),tempdir,this.hTableDescriptor,newRegions,null);
  if (!fs.rename(tempTableDir,tableDir)) {
    throw new IOException("Unable to move table from temp=" + tempTableDir + " to hbase root="+ tableDir);
  }
  MetaTableAccessor.addRegionsToMeta(masterServices.getConnection(),regionInfos,hTableDescriptor.getRegionReplication());
  ModifyRegionUtils.assignRegions(assignmentManager,regionInfos);
  assignmentManager.getTableStateManager().setTableState(tableName,TableState.State.ENABLED);
}
