{
  final byte[] regionName=request.getRegion().getValue().toByteArray();
  RegionSpecifierType type=request.getRegion().getType();
  if (type != RegionSpecifierType.REGION_NAME) {
    LOG.warn("moveRegion specifier type: expected: " + RegionSpecifierType.REGION_NAME + " actual: "+ type);
  }
  try {
    Pair<HRegionInfo,ServerName> pair=MetaReader.getRegion(this.catalogTracker,regionName);
    if (pair == null)     throw new UnknownRegionException(Bytes.toStringBinary(regionName));
    HRegionInfo hri=pair.getFirst();
    if (cpHost != null) {
      cpHost.preRegionOffline(hri);
    }
    LOG.info(getClientIdAuditPrefix() + " offline " + hri.getRegionNameAsString());
    this.assignmentManager.regionOffline(hri);
    if (cpHost != null) {
      cpHost.postRegionOffline(hri);
    }
  }
 catch (  IOException ioe) {
    throw new ServiceException(ioe);
  }
  return OfflineRegionResponse.newBuilder().build();
}
