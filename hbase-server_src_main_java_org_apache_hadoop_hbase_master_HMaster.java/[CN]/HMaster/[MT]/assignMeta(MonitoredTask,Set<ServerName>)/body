{
  int assigned=0;
  long timeout=this.conf.getLong("hbase.catalog.verification.timeout",1000);
  status.setStatus("Assigning hbase:meta region");
  RegionState metaState=MetaTableLocator.getMetaRegionState(getZooKeeper());
  RegionStates regionStates=assignmentManager.getRegionStates();
  regionStates.createRegionState(HRegionInfo.FIRST_META_REGIONINFO,metaState.getState(),metaState.getServerName(),null);
  if (!metaState.isOpened() || !metaTableLocator.verifyMetaRegionLocation(this.getConnection(),this.getZooKeeper(),timeout)) {
    ServerName currentMetaServer=metaState.getServerName();
    if (serverManager.isServerOnline(currentMetaServer)) {
      LOG.info("Meta was in transition on " + currentMetaServer);
      assignmentManager.processRegionsInTransition(Arrays.asList(metaState));
    }
 else {
      if (currentMetaServer != null) {
        splitMetaLogBeforeAssignment(currentMetaServer);
        regionStates.logSplit(HRegionInfo.FIRST_META_REGIONINFO);
        previouslyFailedMetaRSs.add(currentMetaServer);
      }
      LOG.info("Re-assigning hbase:meta, it was on " + currentMetaServer);
      assignmentManager.assignMeta();
    }
    assigned++;
  }
  enableMeta(TableName.META_TABLE_NAME);
  if ((RecoveryMode.LOG_REPLAY == this.getMasterFileSystem().getLogRecoveryMode()) && (!previouslyFailedMetaRSs.isEmpty())) {
    status.setStatus("replaying log for Meta Region");
    this.fileSystemManager.splitMetaLog(previouslyFailedMetaRSs);
  }
  enableServerShutdownHandler(assigned != 0);
  LOG.info("hbase:meta assigned=" + assigned + ", location="+ metaTableLocator.getMetaRegionLocation(this.getZooKeeper()));
  status.setStatus("META assigned.");
}
