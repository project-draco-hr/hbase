{
  checkInitialized();
  TableName tableName=regionInfoA.getTable();
  if (tableName == null || regionInfoB.getTable() == null) {
    throw new UnknownRegionException("Can't merge regions without table associated");
  }
  if (!tableName.equals(regionInfoB.getTable())) {
    throw new IOException("Cannot merge regions from two different tables");
  }
  if (regionInfoA.compareTo(regionInfoB) == 0) {
    throw new MergeRegionException("Cannot merge a region to itself " + regionInfoA + ", "+ regionInfoB);
  }
  HRegionInfo[] regionsToMerge=new HRegionInfo[2];
  regionsToMerge[0]=regionInfoA;
  regionsToMerge[1]=regionInfoB;
  if (cpHost != null) {
    cpHost.preDispatchMerge(regionInfoA,regionInfoB);
  }
  LOG.info(getClientIdAuditPrefix() + " Merge regions " + regionInfoA.getEncodedName()+ " and "+ regionInfoB.getEncodedName());
  long procId=this.procedureExecutor.submitProcedure(new DispatchMergingRegionsProcedure(procedureExecutor.getEnvironment(),tableName,regionsToMerge,forcible),nonceGroup,nonce);
  if (cpHost != null) {
    cpHost.postDispatchMerge(regionInfoA,regionInfoB);
  }
  return procId;
}
