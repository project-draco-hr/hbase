{
  MonitoredTask startupStatus=TaskMonitor.get().createStatus("Master startup");
  startupStatus.setDescription("Master startup");
  masterStartTime=System.currentTimeMillis();
  try {
    this.masterAddressManager=new MasterAddressTracker(getZooKeeperWatcher(),this);
    this.masterAddressManager.start();
    int port=this.conf.getInt("hbase.master.info.port",HConstants.DEFAULT_MASTER_INFOPORT);
    if (port >= 0) {
      String a=this.conf.get("hbase.master.info.bindAddress","0.0.0.0");
      this.infoServer=new InfoServer(MASTER,a,port,false,this.conf);
      this.infoServer.addServlet("status","/master-status",MasterStatusServlet.class);
      this.infoServer.addServlet("dump","/dump",MasterDumpServlet.class);
      this.infoServer.setAttribute(MASTER,this);
      this.infoServer.start();
    }
    this.registeredZKListenersBeforeRecovery=this.zooKeeper.getListeners();
    becomeActiveMaster(startupStatus);
    if (!this.stopped) {
      finishInitialization(startupStatus,false);
      loop();
    }
  }
 catch (  Throwable t) {
    if (t instanceof NoClassDefFoundError && t.getMessage().contains("org/apache/hadoop/hdfs/protocol/FSConstants$SafeModeAction")) {
      abort("HBase is having a problem with its Hadoop jars.  You may need to " + "recompile HBase against Hadoop version " + org.apache.hadoop.util.VersionInfo.getVersion() + " or change your hadoop jars to start properly",t);
    }
 else {
      abort("Unhandled exception. Starting shutdown.",t);
    }
  }
 finally {
    startupStatus.cleanup();
    stopChores();
    if (!this.abort && this.serverManager != null && this.serverManager.isClusterShutdown()) {
      this.serverManager.letRegionServersShutdown();
    }
    stopServiceThreads();
    if (this.activeMasterManager != null)     this.activeMasterManager.stop();
    if (this.catalogTracker != null)     this.catalogTracker.stop();
    if (this.serverManager != null)     this.serverManager.stop();
    if (this.assignmentManager != null)     this.assignmentManager.stop();
    if (this.fileSystemManager != null)     this.fileSystemManager.stop();
    if (this.mpmHost != null)     this.mpmHost.stop("server shutting down.");
    this.zooKeeper.close();
  }
  LOG.info("HMaster main thread exiting");
}
