{
  int assigned=0;
  long timeout=this.conf.getLong("hbase.catalog.verification.timeout",1000);
  status.setStatus("Assigning ROOT region");
  boolean rit=this.assignmentManager.processRegionInTransitionAndBlockUntilAssigned(HRegionInfo.ROOT_REGIONINFO);
  ServerName currentRootServer=null;
  if (!catalogTracker.verifyRootRegionLocation(timeout)) {
    currentRootServer=this.catalogTracker.getRootLocation();
    splitLogAndExpireIfOnline(currentRootServer);
    this.assignmentManager.assignRoot();
    if (!isRootLocation())     return false;
    this.assignmentManager.waitForAssignment(HRegionInfo.ROOT_REGIONINFO);
    assigned++;
  }
 else {
    this.assignmentManager.regionOnline(HRegionInfo.ROOT_REGIONINFO,this.catalogTracker.getRootLocation());
  }
  enableCatalogTables(Bytes.toString(HConstants.ROOT_TABLE_NAME));
  if (this.stopped)   return false;
  LOG.info("-ROOT- assigned=" + assigned + ", rit="+ rit+ ", location="+ catalogTracker.getRootLocation());
  status.setStatus("Assigning META region");
  rit=this.assignmentManager.processRegionInTransitionAndBlockUntilAssigned(HRegionInfo.FIRST_META_REGIONINFO);
  if (!this.catalogTracker.verifyMetaRegionLocation(timeout)) {
    ServerName currentMetaServer=this.catalogTracker.getMetaLocationOrReadLocationFromRoot();
    if (currentMetaServer != null && !currentMetaServer.equals(currentRootServer)) {
      splitLogAndExpireIfOnline(currentMetaServer);
    }
    assignmentManager.assignMeta();
    enableServerShutdownHandler();
    this.catalogTracker.waitForMeta();
    this.assignmentManager.waitForAssignment(HRegionInfo.FIRST_META_REGIONINFO);
    assigned++;
  }
 else {
    this.assignmentManager.regionOnline(HRegionInfo.FIRST_META_REGIONINFO,this.catalogTracker.getMetaLocation());
  }
  enableCatalogTables(Bytes.toString(HConstants.META_TABLE_NAME));
  LOG.info(".META. assigned=" + assigned + ", rit="+ rit+ ", location="+ catalogTracker.getMetaLocation());
  status.setStatus("META and ROOT assigned.");
  return true;
}
