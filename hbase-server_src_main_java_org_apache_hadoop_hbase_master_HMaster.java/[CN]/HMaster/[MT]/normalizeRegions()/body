{
  if (!isInitialized()) {
    LOG.debug("Master has not been initialized, don't run region normalizer.");
    return false;
  }
  if (!this.regionNormalizerTracker.isNormalizerOn()) {
    LOG.debug("Region normalization is disabled, don't run region normalizer.");
    return false;
  }
synchronized (this.normalizer) {
    List<TableName> allEnabledTables=new ArrayList<>(this.tableStateManager.getTablesInStates(TableState.State.ENABLED));
    Collections.shuffle(allEnabledTables);
    for (    TableName table : allEnabledTables) {
      TableDescriptor tblDesc=getTableDescriptors().getDescriptor(table);
      if (table.isSystemTable()) {
        LOG.debug("Skipping normalization for table: " + table + ", as it's system table");
        continue;
      }
      List<PlanType> types=null;
      if (tblDesc != null && tblDesc.getHTableDescriptor() != null) {
        types=tblDesc.getHTableDescriptor().getDesiredNormalizationTypes();
        if (types == null) {
          LOG.debug("Skipping normalization for table: " + table + ", as it"+ " doesn't have auto normalization turned on");
          continue;
        }
      }
      List<NormalizationPlan> plans=this.normalizer.computePlanForTable(table,types);
      if (plans != null) {
        for (        NormalizationPlan plan : plans) {
          plan.execute(clusterConnection.getAdmin());
          if (plan.getType() == PlanType.SPLIT) {
            splitPlanCount++;
          }
 else           if (plan.getType() == PlanType.MERGE) {
            mergePlanCount++;
          }
        }
      }
    }
  }
  return true;
}
