{
  LOG.info("testLogCleaning");
  final HTableDescriptor htd=new HTableDescriptor(TableName.valueOf("testLogCleaning")).addFamily(new HColumnDescriptor("row"));
  final HTableDescriptor htd2=new HTableDescriptor(TableName.valueOf("testLogCleaning2")).addFamily(new HColumnDescriptor("row"));
  NavigableMap<byte[],Integer> scopes1=new TreeMap<byte[],Integer>(Bytes.BYTES_COMPARATOR);
  for (  byte[] fam : htd.getFamiliesKeys()) {
    scopes1.put(fam,0);
  }
  NavigableMap<byte[],Integer> scopes2=new TreeMap<byte[],Integer>(Bytes.BYTES_COMPARATOR);
  for (  byte[] fam : htd2.getFamiliesKeys()) {
    scopes2.put(fam,0);
  }
  final Configuration localConf=new Configuration(conf);
  localConf.set(WALFactory.WAL_PROVIDER,DefaultWALProvider.class.getName());
  final WALFactory wals=new WALFactory(localConf,null,currentTest.getMethodName());
  final AtomicLong sequenceId=new AtomicLong(1);
  try {
    HRegionInfo hri=new HRegionInfo(htd.getTableName(),HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
    HRegionInfo hri2=new HRegionInfo(htd2.getTableName(),HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
    final WAL log=wals.getWAL(UNSPECIFIED_REGION,null);
    addEdits(log,hri,htd,1,scopes1);
    log.rollWriter();
    assertEquals(1,DefaultWALProvider.getNumRolledLogFiles(log));
    addEdits(log,hri,htd,2,scopes1);
    log.rollWriter();
    assertEquals(2,DefaultWALProvider.getNumRolledLogFiles(log));
    addEdits(log,hri,htd,1,scopes1);
    addEdits(log,hri2,htd2,1,scopes2);
    addEdits(log,hri,htd,1,scopes1);
    addEdits(log,hri2,htd2,1,scopes2);
    log.rollWriter();
    assertEquals(3,DefaultWALProvider.getNumRolledLogFiles(log));
    addEdits(log,hri2,htd2,1,scopes2);
    log.startCacheFlush(hri.getEncodedNameAsBytes(),htd.getFamiliesKeys());
    log.completeCacheFlush(hri.getEncodedNameAsBytes());
    log.rollWriter();
    assertEquals(2,DefaultWALProvider.getNumRolledLogFiles(log));
    addEdits(log,hri2,htd2,1,scopes2);
    log.startCacheFlush(hri2.getEncodedNameAsBytes(),htd2.getFamiliesKeys());
    log.completeCacheFlush(hri2.getEncodedNameAsBytes());
    log.rollWriter();
    assertEquals(0,DefaultWALProvider.getNumRolledLogFiles(log));
  }
  finally {
    if (wals != null) {
      wals.close();
    }
  }
}
