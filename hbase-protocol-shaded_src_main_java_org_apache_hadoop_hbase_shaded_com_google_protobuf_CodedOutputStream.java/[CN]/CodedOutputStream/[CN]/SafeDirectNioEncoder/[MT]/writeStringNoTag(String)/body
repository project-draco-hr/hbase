{
  final int startPos=buffer.position();
  try {
    final int maxEncodedSize=value.length() * Utf8.MAX_BYTES_PER_CHAR;
    final int maxLengthVarIntSize=computeUInt32SizeNoTag(maxEncodedSize);
    final int minLengthVarIntSize=computeUInt32SizeNoTag(value.length());
    if (minLengthVarIntSize == maxLengthVarIntSize) {
      final int startOfBytes=buffer.position() + minLengthVarIntSize;
      buffer.position(startOfBytes);
      encode(value);
      int endOfBytes=buffer.position();
      buffer.position(startPos);
      writeUInt32NoTag(endOfBytes - startOfBytes);
      buffer.position(endOfBytes);
    }
 else {
      final int length=Utf8.encodedLength(value);
      writeUInt32NoTag(length);
      encode(value);
    }
  }
 catch (  UnpairedSurrogateException e) {
    buffer.position(startPos);
    inefficientWriteStringNoTag(value,e);
  }
catch (  IllegalArgumentException e) {
    throw new OutOfSpaceException(e);
  }
}
