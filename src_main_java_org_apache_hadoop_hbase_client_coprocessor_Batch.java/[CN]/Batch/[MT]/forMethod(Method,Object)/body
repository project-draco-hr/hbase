{
  return new Call<T,R>(){
    public R call(    T instance) throws IOException {
      try {
        if (Proxy.isProxyClass(instance.getClass())) {
          InvocationHandler invoker=Proxy.getInvocationHandler(instance);
          return (R)invoker.invoke(instance,method,args);
        }
 else {
          LOG.warn("Non proxied invocation of method '" + method.getName() + "'!");
          return (R)method.invoke(instance,args);
        }
      }
 catch (      IllegalAccessException iae) {
        throw new IOException("Unable to invoke method '" + method.getName() + "'",iae);
      }
catch (      InvocationTargetException ite) {
        throw new IOException(ite.toString(),ite);
      }
catch (      Throwable t) {
        throw new IOException(t.toString(),t);
      }
    }
  }
;
}
