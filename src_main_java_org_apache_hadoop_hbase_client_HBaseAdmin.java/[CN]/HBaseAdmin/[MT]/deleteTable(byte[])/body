{
  isMasterRunning();
  HTableDescriptor.isLegalTableName(tableName);
  HRegionLocation firstMetaServer=getFirstMetaServerForTable(tableName);
  try {
    getMaster().deleteTable(tableName);
  }
 catch (  RemoteException e) {
    throw RemoteExceptionHandler.decodeRemoteException(e);
  }
  HRegionInterface server=connection.getHRegionConnection(firstMetaServer.getHostname(),firstMetaServer.getPort());
  for (int tries=0; tries < (this.numRetries * this.retryLongerMultiplier); tries++) {
    long scannerId=-1L;
    try {
      Scan scan=MetaReader.getScanForTableName(tableName);
      scan.addColumn(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
      scannerId=server.openScanner(firstMetaServer.getRegionInfo().getRegionName(),scan);
      Result values=server.next(scannerId);
      if (values == null) {
        boolean tableExists=false;
        HTableDescriptor[] htds=getMaster().getHTableDescriptors();
        if (htds != null && htds.length > 0) {
          for (          HTableDescriptor htd : htds) {
            if (Bytes.equals(tableName,htd.getName())) {
              tableExists=true;
              break;
            }
          }
        }
        if (!tableExists) {
          break;
        }
      }
    }
 catch (    IOException ex) {
      if (tries == numRetries - 1) {
        if (ex instanceof RemoteException) {
          ex=RemoteExceptionHandler.decodeRemoteException((RemoteException)ex);
        }
        throw ex;
      }
    }
 finally {
      if (scannerId != -1L) {
        try {
          server.close(scannerId);
        }
 catch (        Exception ex) {
          LOG.warn(ex);
        }
      }
    }
    try {
      Thread.sleep(getPauseTime(tries));
    }
 catch (    InterruptedException e) {
    }
  }
  this.connection.clearRegionCache(tableName);
  LOG.info("Deleted " + Bytes.toString(tableName));
}
