{
  HTableDescriptor.isLegalTableName(tableName);
  HRegionLocation firstMetaServer=getFirstMetaServerForTable(tableName);
  execute(new MasterCallable<Void>(){
    @Override public Void call() throws IOException {
      master.deleteTable(tableName);
      return null;
    }
  }
);
  ClientProtocol server=connection.getClient(firstMetaServer.getHostname(),firstMetaServer.getPort());
  for (int tries=0; tries < (this.numRetries * this.retryLongerMultiplier); tries++) {
    try {
      Scan scan=MetaReader.getScanForTableName(tableName);
      scan.addColumn(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
      ScanRequest request=RequestConverter.buildScanRequest(firstMetaServer.getRegionInfo().getRegionName(),scan,1,true);
      Result[] values=null;
      try {
        ScanResponse response=server.scan(null,request);
        values=ResponseConverter.getResults(response);
      }
 catch (      ServiceException se) {
        throw ProtobufUtil.getRemoteException(se);
      }
      if (values == null || values.length == 0) {
        boolean tableExists=false;
        HTableDescriptor[] htds;
        MasterKeepAliveConnection master=connection.getKeepAliveMaster();
        try {
          htds=master.getHTableDescriptors();
        }
  finally {
          master.close();
        }
        if (htds != null && htds.length > 0) {
          for (          HTableDescriptor htd : htds) {
            if (Bytes.equals(tableName,htd.getName())) {
              tableExists=true;
              break;
            }
          }
        }
        if (!tableExists) {
          break;
        }
      }
    }
 catch (    IOException ex) {
      if (tries == numRetries - 1) {
        if (ex instanceof RemoteException) {
          throw ((RemoteException)ex).unwrapRemoteException();
        }
 else {
          throw ex;
        }
      }
    }
    try {
      Thread.sleep(getPauseTime(tries));
    }
 catch (    InterruptedException e) {
    }
  }
  this.connection.clearRegionCache(tableName);
  LOG.info("Deleted " + Bytes.toString(tableName));
}
