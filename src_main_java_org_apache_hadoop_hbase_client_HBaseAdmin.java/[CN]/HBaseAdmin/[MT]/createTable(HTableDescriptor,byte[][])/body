{
  HTableDescriptor.isLegalTableName(desc.getName());
  if (splitKeys != null && splitKeys.length > 1) {
    Arrays.sort(splitKeys,Bytes.BYTES_COMPARATOR);
    byte[] lastKey=null;
    for (    byte[] splitKey : splitKeys) {
      if (lastKey != null && Bytes.equals(splitKey,lastKey)) {
        throw new IllegalArgumentException("All split keys must be unique, " + "found duplicate: " + Bytes.toStringBinary(splitKey) + ", "+ Bytes.toStringBinary(lastKey));
      }
      lastKey=splitKey;
    }
  }
  createTableAsync(desc,splitKeys);
  for (int tries=0; tries < numRetries; tries++) {
    try {
      connection.locateRegion(desc.getName(),HConstants.EMPTY_START_ROW);
      break;
    }
 catch (    RegionException e) {
      if (tries == numRetries - 1) {
        throw e;
      }
    }
    try {
      Thread.sleep(getPauseTime(tries));
    }
 catch (    InterruptedException e) {
    }
  }
}
