{
  if (checkAgainst.getStatus().equals(TransactionState.Status.ABORTED)) {
    return false;
  }
  for (  BatchUpdate otherUpdate : checkAgainst.getWriteSet()) {
    if (this.getReadSet().contains(otherUpdate.getRow())) {
      LOG.debug("Transaction [" + this.toString() + "] has read which conflicts with ["+ checkAgainst.toString()+ "]: region ["+ regionInfo.getRegionNameAsString()+ "], row["+ Bytes.toString(otherUpdate.getRow())+ "]");
      return true;
    }
    for (    ScanRange scanRange : this.scanSet) {
      if (scanRange.contains(otherUpdate.getRow())) {
        LOG.debug("Transaction [" + this.toString() + "] has scan which conflicts with ["+ checkAgainst.toString()+ "]: region ["+ regionInfo.getRegionNameAsString()+ "], row["+ Bytes.toString(otherUpdate.getRow())+ "]");
        return true;
      }
    }
  }
  return false;
}
