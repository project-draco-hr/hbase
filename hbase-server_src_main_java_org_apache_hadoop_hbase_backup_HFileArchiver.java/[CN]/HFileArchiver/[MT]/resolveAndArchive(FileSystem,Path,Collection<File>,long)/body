{
  if (toArchive.size() == 0)   return Collections.emptyList();
  LOG.debug("moving files to the archive directory: " + baseArchiveDir);
  if (!fs.exists(baseArchiveDir)) {
    if (!fs.mkdirs(baseArchiveDir)) {
      throw new IOException("Failed to create the archive directory:" + baseArchiveDir + ", quitting archive attempt.");
    }
    LOG.debug("Created archive directory:" + baseArchiveDir);
  }
  List<File> failures=new ArrayList<File>();
  String startTime=Long.toString(start);
  for (  File file : toArchive) {
    try {
      LOG.debug("Archiving:" + file);
      if (file.isFile()) {
        if (!resolveAndArchiveFile(baseArchiveDir,file,startTime)) {
          LOG.warn("Couldn't archive " + file + " into backup directory: "+ baseArchiveDir);
          failures.add(file);
        }
      }
 else {
        LOG.debug(file + " is a directory, archiving children files");
        Path parentArchiveDir=new Path(baseArchiveDir,file.getName());
        Collection<File> children=file.getChildren();
        failures.addAll(resolveAndArchive(fs,parentArchiveDir,children,start));
      }
    }
 catch (    IOException e) {
      LOG.warn("Failed to archive file: " + file,e);
      failures.add(file);
    }
  }
  return failures;
}
