{
  return new RegionAdminService(){
    @java.lang.Override public void getRegionInfo(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.GetRegionInfoRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.GetRegionInfoResponse> done){
      impl.getRegionInfo(controller,request,done);
    }
    @java.lang.Override public void getStoreFileList(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.GetStoreFileListRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.GetStoreFileListResponse> done){
      impl.getStoreFileList(controller,request,done);
    }
    @java.lang.Override public void getOnlineRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.GetOnlineRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.GetOnlineRegionResponse> done){
      impl.getOnlineRegion(controller,request,done);
    }
    @java.lang.Override public void openRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.OpenRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.OpenRegionResponse> done){
      impl.openRegion(controller,request,done);
    }
    @java.lang.Override public void closeRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.CloseRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.CloseRegionResponse> done){
      impl.closeRegion(controller,request,done);
    }
    @java.lang.Override public void flushRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.FlushRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.FlushRegionResponse> done){
      impl.flushRegion(controller,request,done);
    }
    @java.lang.Override public void splitRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.SplitRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.SplitRegionResponse> done){
      impl.splitRegion(controller,request,done);
    }
    @java.lang.Override public void compactRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.CompactRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.CompactRegionResponse> done){
      impl.compactRegion(controller,request,done);
    }
    @java.lang.Override public void replicateWALEntry(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.ReplicateWALEntryRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.ReplicateWALEntryResponse> done){
      impl.replicateWALEntry(controller,request,done);
    }
    @java.lang.Override public void rollWALWriter(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.RollWALWriterRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.RollWALWriterResponse> done){
      impl.rollWALWriter(controller,request,done);
    }
    @java.lang.Override public void getServerInfo(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.GetServerInfoRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.GetServerInfoResponse> done){
      impl.getServerInfo(controller,request,done);
    }
    @java.lang.Override public void stopServer(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.StopServerRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.RegionAdminProtos.StopServerResponse> done){
      impl.stopServer(controller,request,done);
    }
  }
;
}
