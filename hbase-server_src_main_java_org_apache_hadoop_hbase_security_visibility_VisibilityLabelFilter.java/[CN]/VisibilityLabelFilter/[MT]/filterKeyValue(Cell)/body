{
  Iterator<Tag> tagsItr=CellUtil.tagsIterator(cell.getTagsArray(),cell.getTagsOffset(),cell.getTagsLength());
  boolean visibilityTagPresent=false;
  while (tagsItr.hasNext()) {
    boolean includeKV=true;
    Tag tag=tagsItr.next();
    if (tag.getType() == VisibilityUtils.VISIBILITY_TAG_TYPE) {
      visibilityTagPresent=true;
      int offset=tag.getTagOffset();
      int endOffset=offset + tag.getTagLength();
      while (offset < endOffset) {
        Pair<Integer,Integer> result=StreamUtils.readRawVarint32(tag.getBuffer(),offset);
        int currLabelOrdinal=result.getFirst();
        if (currLabelOrdinal < 0) {
          int temp=-currLabelOrdinal;
          if (this.authLabels.get(temp)) {
            includeKV=false;
            break;
          }
        }
 else {
          if (!this.authLabels.get(currLabelOrdinal)) {
            includeKV=false;
            break;
          }
        }
        offset+=result.getSecond();
      }
      if (includeKV) {
        return ReturnCode.INCLUDE;
      }
    }
  }
  return visibilityTagPresent ? ReturnCode.SKIP : ReturnCode.INCLUDE;
}
