{
  backupContext.setEndTs(EnvironmentEdgeManager.currentTime());
  backupContext.setFlag(BACKUPSTATUS.COMPLETE);
  this.addManifest(backupContext);
  LOG.debug("in-fly convert code here, provided by future jira");
  String backupCompleteData=this.obtainBackupMetaDataStr(backupContext) + ",startts=" + backupContext.getStartTs()+ ",completets="+ backupContext.getEndTs()+ ",bytescopied="+ backupContext.getTotalBytesCopied();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Backup " + backupContext.getBackupId() + " finished: "+ backupCompleteData);
  }
  backupManager.updateBackupStatus(backupContext);
  if (backupContext.getType().equals(BackupRestoreConstants.BACKUP_TYPE_FULL)) {
    if (!backupContext.fromExistingSnapshot()) {
      this.deleteSnapshot(backupContext);
    }
    this.cleanupExportSnapshotLog();
  }
 else   if (backupContext.getType().equals(BackupRestoreConstants.BACKUP_TYPE_INCR)) {
    this.cleanupDistCpLog();
  }
 else {
    LOG.error(" other backup types have not been implemented yet");
  }
  LOG.info("Backup " + backupContext.getBackupId() + " completed.");
}
