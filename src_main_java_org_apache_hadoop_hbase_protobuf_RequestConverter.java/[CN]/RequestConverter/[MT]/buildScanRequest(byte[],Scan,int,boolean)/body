{
  ScanRequest.Builder builder=ScanRequest.newBuilder();
  RegionSpecifier region=buildRegionSpecifier(RegionSpecifierType.REGION_NAME,regionName);
  builder.setNumberOfRows(numberOfRows);
  builder.setCloseScanner(closeScanner);
  builder.setRegion(region);
  ClientProtos.Scan.Builder scanBuilder=ClientProtos.Scan.newBuilder();
  scanBuilder.setCacheBlocks(scan.getCacheBlocks());
  scanBuilder.setBatchSize(scan.getBatch());
  scanBuilder.setMaxVersions(scan.getMaxVersions());
  TimeRange timeRange=scan.getTimeRange();
  if (!timeRange.isAllTime()) {
    HBaseProtos.TimeRange.Builder timeRangeBuilder=HBaseProtos.TimeRange.newBuilder();
    timeRangeBuilder.setFrom(timeRange.getMin());
    timeRangeBuilder.setTo(timeRange.getMax());
    scanBuilder.setTimeRange(timeRangeBuilder.build());
  }
  Map<String,byte[]> attributes=scan.getAttributesMap();
  if (!attributes.isEmpty()) {
    NameBytesPair.Builder attributeBuilder=NameBytesPair.newBuilder();
    for (    Map.Entry<String,byte[]> attribute : attributes.entrySet()) {
      attributeBuilder.setName(attribute.getKey());
      attributeBuilder.setValue(ByteString.copyFrom(attribute.getValue()));
      scanBuilder.addAttribute(attributeBuilder.build());
    }
  }
  byte[] startRow=scan.getStartRow();
  if (startRow != null && startRow.length > 0) {
    scanBuilder.setStartRow(ByteString.copyFrom(startRow));
  }
  byte[] stopRow=scan.getStopRow();
  if (stopRow != null && stopRow.length > 0) {
    scanBuilder.setStopRow(ByteString.copyFrom(stopRow));
  }
  if (scan.hasFilter()) {
    scanBuilder.setFilter(ProtobufUtil.toParameter(scan.getFilter()));
  }
  Column.Builder columnBuilder=Column.newBuilder();
  for (  Map.Entry<byte[],NavigableSet<byte[]>> family : scan.getFamilyMap().entrySet()) {
    columnBuilder.setFamily(ByteString.copyFrom(family.getKey()));
    NavigableSet<byte[]> columns=family.getValue();
    columnBuilder.clearQualifier();
    if (columns != null && columns.size() > 0) {
      for (      byte[] qualifier : family.getValue()) {
        if (qualifier != null) {
          columnBuilder.addQualifier(ByteString.copyFrom(qualifier));
        }
      }
    }
    scanBuilder.addColumn(columnBuilder.build());
  }
  builder.setScan(scanBuilder.build());
  return builder.build();
}
