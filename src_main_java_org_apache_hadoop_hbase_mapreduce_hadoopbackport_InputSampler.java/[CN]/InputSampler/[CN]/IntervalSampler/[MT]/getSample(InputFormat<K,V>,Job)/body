{
  List<InputSplit> splits=inf.getSplits(job);
  ArrayList<K> samples=new ArrayList<K>();
  int splitsToSample=Math.min(maxSplitsSampled,splits.size());
  long records=0;
  long kept=0;
  for (int i=0; i < splitsToSample; ++i) {
    TaskAttemptContext samplingContext=new TaskAttemptContext(job.getConfiguration(),new TaskAttemptID());
    RecordReader<K,V> reader=inf.createRecordReader(splits.get(i),samplingContext);
    reader.initialize(splits.get(i),samplingContext);
    while (reader.nextKeyValue()) {
      ++records;
      if ((double)kept / records < freq) {
        samples.add(ReflectionUtils.copy(job.getConfiguration(),reader.getCurrentKey(),null));
        ++kept;
      }
    }
    reader.close();
  }
  return (K[])samples.toArray();
}
