{
  this.connection=connection;
  if (abortable == null) {
    this.abortable=this.connection;
  }
  Abortable throwableAborter=new Abortable(){
    @Override public void abort(    String why,    Throwable e){
      throw new RuntimeException(why,e);
    }
    @Override public boolean isAborted(){
      return true;
    }
  }
;
  if (zk == null) {
    this.zookeeper=new ZooKeeperWatcher(conf,"catalogtracker-on-" + connection.toString(),abortable);
    instantiatedzkw=true;
  }
 else {
    this.zookeeper=zk;
  }
  this.rootRegionTracker=new RootRegionTracker(zookeeper,throwableAborter);
  final CatalogTracker ct=this;
  this.metaNodeTracker=new MetaNodeTracker(zookeeper,throwableAborter){
    public void nodeDeleted(    String path){
      if (!path.equals(node))       return;
      ct.resetMetaLocation();
    }
  }
;
}
