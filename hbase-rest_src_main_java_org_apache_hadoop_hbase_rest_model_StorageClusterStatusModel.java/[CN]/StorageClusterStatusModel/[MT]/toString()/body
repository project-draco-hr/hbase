{
  StringBuilder sb=new StringBuilder();
  sb.append(String.format("%d live servers, %d dead servers, " + "%.4f average load%n%n",liveNodes.size(),deadNodes.size(),averageLoad));
  if (!liveNodes.isEmpty()) {
    sb.append(liveNodes.size());
    sb.append(" live servers\n");
    for (    Node node : liveNodes) {
      sb.append("    ");
      sb.append(node.name);
      sb.append(' ');
      sb.append(node.startCode);
      sb.append("\n        requests=");
      sb.append(node.requests);
      sb.append(", regions=");
      sb.append(node.regions.size());
      sb.append("\n        heapSizeMB=");
      sb.append(node.heapSizeMB);
      sb.append("\n        maxHeapSizeMB=");
      sb.append(node.maxHeapSizeMB);
      sb.append("\n\n");
      for (      Node.Region region : node.regions) {
        sb.append("        ");
        sb.append(Bytes.toString(region.name));
        sb.append("\n            stores=");
        sb.append(region.stores);
        sb.append("\n            storefiless=");
        sb.append(region.storefiles);
        sb.append("\n            storefileSizeMB=");
        sb.append(region.storefileSizeMB);
        sb.append("\n            memstoreSizeMB=");
        sb.append(region.memstoreSizeMB);
        sb.append("\n            storefileIndexSizeMB=");
        sb.append(region.storefileIndexSizeMB);
        sb.append("\n            readRequestsCount=");
        sb.append(region.readRequestsCount);
        sb.append("\n            writeRequestsCount=");
        sb.append(region.writeRequestsCount);
        sb.append("\n            rootIndexSizeKB=");
        sb.append(region.rootIndexSizeKB);
        sb.append("\n            totalStaticIndexSizeKB=");
        sb.append(region.totalStaticIndexSizeKB);
        sb.append("\n            totalStaticBloomSizeKB=");
        sb.append(region.totalStaticBloomSizeKB);
        sb.append("\n            totalCompactingKVs=");
        sb.append(region.totalCompactingKVs);
        sb.append("\n            currentCompactedKVs=");
        sb.append(region.currentCompactedKVs);
        sb.append('\n');
      }
      sb.append('\n');
    }
  }
  if (!deadNodes.isEmpty()) {
    sb.append('\n');
    sb.append(deadNodes.size());
    sb.append(" dead servers\n");
    for (    String node : deadNodes) {
      sb.append("    ");
      sb.append(node);
      sb.append('\n');
    }
  }
  return sb.toString();
}
