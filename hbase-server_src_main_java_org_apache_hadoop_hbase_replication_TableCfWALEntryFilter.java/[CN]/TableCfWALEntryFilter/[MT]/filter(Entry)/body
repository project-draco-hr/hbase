{
  TableName tabName=entry.getKey().getTablename();
  ArrayList<Cell> cells=entry.getEdit().getCells();
  Map<TableName,List<String>> tableCFs=null;
  try {
    tableCFs=this.peer.getTableCFs();
  }
 catch (  IllegalArgumentException e) {
    LOG.error("should not happen: can't get tableCFs for peer " + peer.getId() + ", degenerate as if it's not configured by keeping tableCFs==null");
  }
  int size=cells.size();
  if (tableCFs == null) {
    return entry;
  }
  if (!tableCFs.containsKey(tabName)) {
    return null;
  }
 else {
    List<String> cfs=tableCFs.get(tabName);
    for (int i=size - 1; i >= 0; i--) {
      Cell cell=cells.get(i);
      if (CellUtil.matchingColumn(cell,WALEdit.METAFAMILY,WALEdit.BULK_LOAD)) {
        Cell filteredBulkLoadEntryCell=filterBulkLoadEntries(cfs,cell);
        if (filteredBulkLoadEntryCell != null) {
          cells.set(i,filteredBulkLoadEntryCell);
        }
 else {
          cells.remove(i);
        }
      }
 else {
        if ((cfs != null) && !cfs.contains(Bytes.toString(cell.getFamilyArray(),cell.getFamilyOffset(),cell.getFamilyLength()))) {
          cells.remove(i);
        }
      }
    }
  }
  if (cells.size() < size / 2) {
    cells.trimToSize();
  }
  return entry;
}
