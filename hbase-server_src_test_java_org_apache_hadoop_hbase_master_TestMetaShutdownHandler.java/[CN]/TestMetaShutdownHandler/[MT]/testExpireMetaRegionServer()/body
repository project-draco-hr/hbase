{
  MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
  HMaster master=cluster.getMaster();
  RegionStates regionStates=master.getAssignmentManager().getRegionStates();
  ServerName metaServerName=regionStates.getRegionServerOfRegion(HRegionInfo.FIRST_META_REGIONINFO);
  if (master.getServerName().equals(metaServerName) || metaServerName == null || !metaServerName.equals(cluster.getServerHoldingMeta())) {
    metaServerName=cluster.getLiveRegionServerThreads().get(0).getRegionServer().getServerName();
    master.move(HRegionInfo.FIRST_META_REGIONINFO.getEncodedNameAsBytes(),Bytes.toBytes(metaServerName.getServerName()));
    TEST_UTIL.waitUntilNoRegionsInTransition(60000);
  }
  RegionState metaState=MetaTableLocator.getMetaRegionState(master.getZooKeeper());
  assertEquals("Meta should be not in transition",metaState.getState(),RegionState.State.OPEN);
  assertNotEquals("Meta should be moved off master",metaServerName,master.getServerName());
  String rsEphemeralNodePath=ZKUtil.joinZNode(master.getZooKeeper().znodePaths.rsZNode,metaServerName.toString());
  ZKUtil.deleteNode(master.getZooKeeper(),rsEphemeralNodePath);
  final ServerManager serverManager=master.getServerManager();
  final ServerName priorMetaServerName=metaServerName;
  TEST_UTIL.waitFor(120000,200,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      return !serverManager.isServerOnline(priorMetaServerName) && !serverManager.areDeadServersInProgress();
    }
  }
);
  TEST_UTIL.waitUntilNoRegionsInTransition(60000);
  assertTrue("Meta should be assigned",regionStates.isRegionOnline(HRegionInfo.FIRST_META_REGIONINFO));
  metaState=MetaTableLocator.getMetaRegionState(master.getZooKeeper());
  assertEquals("Meta should be not in transition",metaState.getState(),RegionState.State.OPEN);
  assertEquals("Meta should be assigned",metaState.getServerName(),regionStates.getRegionServerOfRegion(HRegionInfo.FIRST_META_REGIONINFO));
  assertNotEquals("Meta should be assigned on a different server",metaState.getServerName(),metaServerName);
}
