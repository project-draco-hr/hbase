{
  long next=-1L;
  long prev=-1L;
  long count=0L;
  for (  LinkChain lc : values) {
    if (next == -1) {
      if (lc.getRk() != 0L) {
        String msg="Chains should all start at rk 0, but read rk " + lc.getRk() + ". Chain:"+ key.chainId+ ", order:"+ key.order;
        logError(msg,context);
        throw new RuntimeException(msg);
      }
      next=lc.getNext();
    }
 else {
      if (next != lc.getRk()) {
        String msg="Missing a link in the chain. Prev rk " + prev + " was, expecting "+ next+ " but got "+ lc.getRk()+ ". Chain:"+ key.chainId+ ", order:"+ key.order;
        logError(msg,context);
        throw new RuntimeException(msg);
      }
      prev=lc.getRk();
      next=lc.getNext();
    }
    count++;
  }
  int expectedChainLen=context.getConfiguration().getInt(CHAIN_LENGTH_KEY,CHAIN_LENGTH);
  if (count != expectedChainLen) {
    String msg="Chain wasn't the correct length.  Expected " + expectedChainLen + " got "+ count+ ". Chain:"+ key.chainId+ ", order:"+ key.order;
    logError(msg,context);
    throw new RuntimeException(msg);
  }
}
