{
  htu.startMiniZKCluster();
  MiniHBaseCluster hbm=htu.startMiniHBaseCluster(1,1);
  conf=hbm.getConfiguration();
  final String fileName="/helloWorld";
  Path p=new Path(fileName);
  final int repCount=3;
  Assert.assertTrue((short)cluster.getDataNodes().size() >= repCount);
  FSDataOutputStream fop=dfs.create(p,(short)repCount);
  final double toWrite=875.5613;
  fop.writeDouble(toWrite);
  fop.close();
  LocatedBlocks l;
  final long max=System.currentTimeMillis() + 10000;
  do {
    l=getNamenode(dfs.getClient()).getBlockLocations(fileName,0,1);
    Assert.assertNotNull(l.getLocatedBlocks());
    Assert.assertEquals(l.getLocatedBlocks().size(),1);
    Assert.assertTrue("Expecting " + repCount + " , got "+ l.get(0).getLocations().length,System.currentTimeMillis() < max);
  }
 while (l.get(0).getLocations().length != repCount);
  setOurOrder(l);
  HFileSystem.ReorderWALBlocks lrb=new HFileSystem.ReorderWALBlocks();
  lrb.reorderBlocks(conf,l,fileName);
  checkOurOrder(l);
  Assert.assertNotNull(conf.get(HConstants.HBASE_DIR));
  Assert.assertFalse(conf.get(HConstants.HBASE_DIR).isEmpty());
  String pseudoLogFile=conf.get(HConstants.HBASE_DIR) + "/" + HConstants.HREGION_LOGDIR_NAME+ "/"+ host1+ ",6977,6576"+ "/mylogfile";
  Assert.assertNotNull("log= " + pseudoLogFile,HLog.getServerNameFromHLogDirectoryName(dfs.getConf(),pseudoLogFile));
  lrb.reorderBlocks(conf,l,pseudoLogFile);
  checkOurFixedOrder(l);
  l.get(0).getLocations()[0].setHostName(host2);
  l.get(0).getLocations()[1].setHostName(host1);
  l.get(0).getLocations()[2].setHostName(host3);
  lrb.reorderBlocks(conf,l,pseudoLogFile);
  checkOurFixedOrder(l);
  l.get(0).getLocations()[0].setHostName(host2);
  l.get(0).getLocations()[1].setHostName(host1);
  l.get(0).getLocations()[2].setHostName(host3);
  lrb.reorderBlocks(conf,l,pseudoLogFile);
  checkOurFixedOrder(l);
  l.get(0).getLocations()[0].setHostName(host2);
  l.get(0).getLocations()[1].setHostName(host3);
  l.get(0).getLocations()[2].setHostName(host1);
  lrb.reorderBlocks(conf,l,pseudoLogFile);
  checkOurFixedOrder(l);
  l.get(0).getLocations()[0].setHostName(host2);
  l.get(0).getLocations()[1].setHostName(host3);
  l.get(0).getLocations()[2].setHostName("nothing");
  lrb.reorderBlocks(conf,l,pseudoLogFile);
  Assert.assertEquals(host2,l.get(0).getLocations()[0].getHostName());
  Assert.assertEquals(host3,l.get(0).getLocations()[1].getHostName());
  Assert.assertEquals("nothing",l.get(0).getLocations()[2].getHostName());
}
