{
  PayloadCarryingRpcController controller=((ClusterConnection)connection).getRpcControllerFactory().newController();
  List<UserPermission> permList=new ArrayList<UserPermission>();
  try (Table table=connection.getTable(ACL_TABLE_NAME)){
    try (Admin admin=connection.getAdmin()){
      CoprocessorRpcChannel service=table.coprocessorService(HConstants.EMPTY_START_ROW);
      BlockingInterface protocol=AccessControlProtos.AccessControlService.newBlockingStub(service);
      HTableDescriptor[] htds=null;
      if (tableRegex == null || tableRegex.isEmpty()) {
        permList=ProtobufUtil.getUserPermissions(controller,protocol);
      }
 else       if (tableRegex.charAt(0) == '@') {
        String namespaceRegex=tableRegex.substring(1);
        for (        NamespaceDescriptor nsds : admin.listNamespaceDescriptors()) {
          String namespace=nsds.getName();
          if (namespace.matches(namespaceRegex)) {
            permList.addAll(ProtobufUtil.getUserPermissions(controller,protocol,Bytes.toBytes(namespace)));
          }
        }
      }
 else {
        htds=admin.listTables(Pattern.compile(tableRegex),true);
        for (        HTableDescriptor hd : htds) {
          permList.addAll(ProtobufUtil.getUserPermissions(controller,protocol,hd.getTableName()));
        }
      }
    }
   }
   return permList;
}
