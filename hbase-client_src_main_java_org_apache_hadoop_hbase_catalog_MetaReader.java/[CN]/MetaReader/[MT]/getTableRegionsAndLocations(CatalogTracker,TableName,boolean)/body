{
  if (tableName.equals(TableName.META_TABLE_NAME)) {
    ServerName serverName=catalogTracker.getMetaLocation();
    List<Pair<HRegionInfo,ServerName>> list=new ArrayList<Pair<HRegionInfo,ServerName>>();
    list.add(new Pair<HRegionInfo,ServerName>(HRegionInfo.FIRST_META_REGIONINFO,serverName));
    return list;
  }
  CollectingVisitor<Pair<HRegionInfo,ServerName>> visitor=new CollectingVisitor<Pair<HRegionInfo,ServerName>>(){
    private RegionLocations current=null;
    @Override public boolean visit(    Result r) throws IOException {
      current=getRegionLocations(r);
      if (current == null || current.getRegionLocation().getRegionInfo() == null) {
        LOG.warn("No serialized HRegionInfo in " + r);
        return true;
      }
      HRegionInfo hri=current.getRegionLocation().getRegionInfo();
      if (!isInsideTable(hri,tableName))       return false;
      if (excludeOfflinedSplitParents && hri.isSplitParent())       return true;
      return super.visit(r);
    }
    @Override void add(    Result r){
      if (current == null) {
        return;
      }
      for (      HRegionLocation loc : current.getRegionLocations()) {
        if (loc != null) {
          this.results.add(new Pair<HRegionInfo,ServerName>(loc.getRegionInfo(),loc.getServerName()));
        }
      }
    }
  }
;
  fullScan(catalogTracker,visitor,getTableStartRowForMeta(tableName));
  return visitor.getResults();
}
