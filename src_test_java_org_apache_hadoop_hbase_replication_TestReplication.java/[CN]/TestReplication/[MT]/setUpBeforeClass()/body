{
  conf1=HBaseConfiguration.create();
  conf1.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/1");
  conf1.setInt("hbase.regionserver.hlog.blocksize",1024 * 20);
  conf1.setInt("replication.source.size.capacity",1024);
  conf1.setLong("replication.source.sleepforretries",100);
  conf1.setInt("hbase.regionserver.maxlogs",10);
  conf1.setLong("hbase.master.logcleaner.ttl",10);
  conf1.setLong("hbase.client.retries.number",5);
  conf1.setLong("hbase.regions.percheckin",1);
  conf1.setBoolean(HConstants.REPLICATION_ENABLE_KEY,true);
  conf1.setBoolean("dfs.support.append",true);
  conf1.setLong(HConstants.THREAD_WAKE_FREQUENCY,100);
  utility1=new HBaseTestingUtility(conf1);
  utility1.startMiniZKCluster();
  MiniZooKeeperCluster miniZK=utility1.getZkCluster();
  zkw1=ZooKeeperWrapper.createInstance(conf1,"cluster1");
  zkw1.writeZNode("/1","replication","");
  zkw1.writeZNode("/1/replication","master",conf1.get(HConstants.ZOOKEEPER_QUORUM) + ":" + conf1.get("hbase.zookeeper.property.clientPort")+ ":/1");
  setIsReplication(true);
  LOG.info("Setup first Zk");
  conf2=HBaseConfiguration.create();
  conf2.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/2");
  conf2.setInt("hbase.client.retries.number",6);
  conf2.setBoolean(HConstants.REPLICATION_ENABLE_KEY,true);
  conf2.setBoolean("dfs.support.append",true);
  conf2.setLong("hbase.regions.percheckin",1);
  utility2=new HBaseTestingUtility(conf2);
  utility2.setZkCluster(miniZK);
  zkw2=ZooKeeperWrapper.createInstance(conf2,"cluster2");
  zkw2.writeZNode("/2","replication","");
  zkw2.writeZNode("/2/replication","master",conf1.get(HConstants.ZOOKEEPER_QUORUM) + ":" + conf1.get("hbase.zookeeper.property.clientPort")+ ":/1");
  zkw1.writeZNode("/1/replication/peers","1",conf2.get(HConstants.ZOOKEEPER_QUORUM) + ":" + conf2.get("hbase.zookeeper.property.clientPort")+ ":/2");
  LOG.info("Setup second Zk");
  utility1.startMiniCluster(2);
  utility2.startMiniCluster(2);
  HTableDescriptor table=new HTableDescriptor(tableName);
  table.setDeferredLogFlush(false);
  HColumnDescriptor fam=new HColumnDescriptor(famName);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  table.addFamily(fam);
  fam=new HColumnDescriptor(noRepfamName);
  table.addFamily(fam);
  HBaseAdmin admin1=new HBaseAdmin(conf1);
  HBaseAdmin admin2=new HBaseAdmin(conf2);
  admin1.createTable(table);
  admin2.createTable(table);
  htable1=new HTable(conf1,tableName);
  htable1.setWriteBufferSize(1024);
  htable2=new HTable(conf2,tableName);
}
