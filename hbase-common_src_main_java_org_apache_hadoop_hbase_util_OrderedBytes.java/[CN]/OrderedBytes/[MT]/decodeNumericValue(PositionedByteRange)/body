{
  final int e;
  byte header=src.get();
  boolean dsc=-1 == Integer.signum(header);
  header=dsc ? DESCENDING.apply(header) : header;
  if (header == NULL)   return null;
  if (header == NEG_LARGE) {
    e=(int)getVaruint64(src,!dsc);
    return decodeSignificand(src,e,!dsc).negate();
  }
  if (header >= NEG_MED_MIN && header <= NEG_MED_MAX) {
    e=NEG_MED_MAX - header;
    return decodeSignificand(src,e,!dsc).negate();
  }
  if (header == NEG_SMALL) {
    e=(int)-getVaruint64(src,dsc);
    return decodeSignificand(src,e,!dsc).negate();
  }
  if (header == ZERO) {
    return BigDecimal.ZERO;
  }
  if (header == POS_SMALL) {
    e=(int)-getVaruint64(src,!dsc);
    return decodeSignificand(src,e,dsc);
  }
  if (header >= POS_MED_MIN && header <= POS_MED_MAX) {
    e=header - POS_MED_MIN;
    return decodeSignificand(src,e,dsc);
  }
  if (header == POS_LARGE) {
    e=(int)getVaruint64(src,dsc);
    return decodeSignificand(src,e,dsc);
  }
  throw unexpectedHeader(header);
}
