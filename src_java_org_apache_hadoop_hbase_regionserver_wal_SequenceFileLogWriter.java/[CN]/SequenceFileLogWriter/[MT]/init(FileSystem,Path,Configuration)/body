{
  writer=SequenceFile.createWriter(fs,conf,path,HLog.getKeyClass(conf),KeyValue.class,fs.getConf().getInt("io.file.buffer.size",4096),(short)conf.getInt("hbase.regionserver.hlog.replication",fs.getDefaultReplication()),conf.getLong("hbase.regionserver.hlog.blocksize",fs.getDefaultBlockSize()),SequenceFile.CompressionType.NONE,new DefaultCodec(),null,new Metadata());
  final Field fields[]=writer.getClass().getDeclaredFields();
  final String fieldName="out";
  for (int i=0; i < fields.length; ++i) {
    if (fieldName.equals(fields[i].getName())) {
      try {
        fields[i].setAccessible(true);
        this.writer_out=(FSDataOutputStream)fields[i].get(writer);
        break;
      }
 catch (      IllegalAccessException ex) {
        throw new IOException("Accessing " + fieldName,ex);
      }
    }
  }
}
