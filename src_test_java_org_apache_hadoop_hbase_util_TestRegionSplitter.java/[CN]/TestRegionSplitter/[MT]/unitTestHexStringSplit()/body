{
  HexStringSplit splitter=new HexStringSplit();
  byte[][] twoRegionsSplits=splitter.split(2);
  assertEquals(1,twoRegionsSplits.length);
  assertArrayEquals(twoRegionsSplits[0],"80000000".getBytes());
  byte[][] threeRegionsSplits=splitter.split(3);
  assertEquals(2,threeRegionsSplits.length);
  byte[] expectedSplit0="55555555".getBytes();
  assertArrayEquals(expectedSplit0,threeRegionsSplits[0]);
  byte[] expectedSplit1="aaaaaaaa".getBytes();
  assertArrayEquals(expectedSplit1,threeRegionsSplits[1]);
  byte[] splitPoint=splitter.split("10000000".getBytes(),"30000000".getBytes());
  assertArrayEquals("20000000".getBytes(),splitPoint);
  byte[] lastRow="ffffffff".getBytes();
  assertArrayEquals(lastRow,splitter.lastRow());
  byte[] firstRow="00000000".getBytes();
  assertArrayEquals(firstRow,splitter.firstRow());
  splitPoint=splitter.split(firstRow,"20000000".getBytes());
  assertArrayEquals(splitPoint,"10000000".getBytes());
  splitPoint=splitter.split("dfffffff".getBytes(),lastRow);
  assertArrayEquals(splitPoint,"efffffff".getBytes());
}
