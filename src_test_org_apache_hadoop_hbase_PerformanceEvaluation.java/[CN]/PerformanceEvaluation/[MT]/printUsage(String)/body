{
  if (message != null && message.length() > 0) {
    System.err.println(message);
  }
  System.err.println("Usage: java " + this.getClass().getName() + " [--miniCluster] \\");
  System.err.println("  [--nomapred] [--rows=ROWS] [--table=NAME] [--compress=TYPE] \\");
  System.err.println("  <command> <nclients>");
  System.err.println();
  System.err.println("Options:");
  System.err.println("                 address is read from configuration");
  System.err.println(" miniCluster     Run the test on an HBaseMiniCluster");
  System.err.println(" nomapred        Run multiple clients using threads " + "(rather than use mapreduce)");
  System.err.println(" rows            Rows each client runs. Default: One million");
  System.err.println(" table           Alternate table name. Default: 'TestTable'");
  System.err.println(" compress        Compression type to use. Default: 'NONE'");
  System.err.println();
  System.err.println("Command:");
  System.err.println(" randomRead      Run random read test");
  System.err.println(" randomReadMem   Run random read test where table " + "is in memory");
  System.err.println(" randomSeekScan  Run random seek and scan 100 test");
  System.err.println(" randomWrite     Run random write test");
  System.err.println(" sequentialRead  Run sequential read test");
  System.err.println(" sequentialWrite Run sequential write test");
  System.err.println(" scan            Run scan test");
  System.err.println();
  System.err.println("Args:");
  System.err.println(" nclients        Integer. Required. Total number of " + "clients (and HRegionServers)");
  System.err.println("                 running: 1 <= value <= 500");
  System.err.println("Examples:");
  System.err.println(" To run a single evaluation client:");
  System.err.println(" $ bin/hbase " + "org.apache.hadoop.hbase.PerformanceEvaluation sequentialWrite 1");
}
