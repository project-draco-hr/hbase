{
  try {
    return table.coprocessorService(SecureBulkLoadProtos.SecureBulkLoadService.class,HConstants.EMPTY_START_ROW,HConstants.EMPTY_START_ROW,new Batch.Call<SecureBulkLoadProtos.SecureBulkLoadService,String>(){
      @Override public String call(      SecureBulkLoadProtos.SecureBulkLoadService instance) throws IOException {
        ServerRpcController controller=new ServerRpcController();
        BlockingRpcCallback<SecureBulkLoadProtos.PrepareBulkLoadResponse> rpcCallback=new BlockingRpcCallback<SecureBulkLoadProtos.PrepareBulkLoadResponse>();
        SecureBulkLoadProtos.PrepareBulkLoadRequest request=SecureBulkLoadProtos.PrepareBulkLoadRequest.newBuilder().setTableName(com.google.protobuf.ByteString.copyFrom(tableName)).build();
        instance.prepareBulkLoad(controller,request,rpcCallback);
        SecureBulkLoadProtos.PrepareBulkLoadResponse response=rpcCallback.get();
        if (controller.failedOnException()) {
          throw controller.getFailedOn();
        }
        return response.getBulkToken();
      }
    }
).entrySet().iterator().next().getValue();
  }
 catch (  Throwable throwable) {
    throw new IOException(throwable);
  }
}
