{
  if (shouldCloseConnection.get())   return;
  try {
    RequestHeader.Builder builder=RequestHeader.newBuilder();
    builder.setCallId(call.id);
    if (Trace.isTracing()) {
      Span s=Trace.currentSpan();
      builder.setTraceInfo(RPCTInfo.newBuilder().setParentId(s.getSpanId()).setTraceId(s.getTraceId()));
    }
    builder.setMethodName(call.md.getName());
    builder.setRequestParam(call.param != null);
    ByteBuffer cellBlock=ipcUtil.buildCellBlock(this.codec,this.compressor,call.cells);
    if (cellBlock != null) {
      CellBlockMeta.Builder cellBlockBuilder=CellBlockMeta.newBuilder();
      cellBlockBuilder.setLength(cellBlock.limit());
      builder.setCellBlockMeta(cellBlockBuilder.build());
    }
    RequestHeader header=builder.build();
synchronized (this.out) {
      IPCUtil.write(this.out,header,call.param,cellBlock);
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(getName() + ": wrote request header " + TextFormat.shortDebugString(header));
    }
  }
 catch (  IOException e) {
    markClosed(e);
  }
}
