{
  if (shouldCloseConnection.get())   return;
  try {
    RequestHeader.Builder builder=RequestHeader.newBuilder();
    builder.setCallId(call.id);
    if (Trace.isTracing()) {
      Span s=Trace.currentSpan();
      builder.setTraceInfo(RPCTInfo.newBuilder().setParentId(s.getSpanId()).setTraceId(s.getTraceId()));
    }
    UserGroupInformation ticket=remoteId.getTicket().getUGI();
    if (ticket != null) {
      UserGroupInformation currentUser=UserGroupInformation.getCurrentUser();
      String effectiveUser=currentUser == null ? null : currentUser.getShortUserName();
      if (effectiveUser != null && !effectiveUser.equals(ticket.getShortUserName())) {
        if (ticket.getRealUser() != null) {
          LOG.warn("Current user " + effectiveUser + " is different from the ticket user "+ ticket.getShortUserName()+ ". But the ticket is already a proxy user with real user "+ ticket.getRealUser().getShortUserName());
        }
 else {
          builder.setEffectiveUser(effectiveUser);
        }
      }
    }
    builder.setMethodName(call.md.getName());
    builder.setRequestParam(call.param != null);
    ByteBuffer cellBlock=ipcUtil.buildCellBlock(this.codec,this.compressor,call.cells);
    if (cellBlock != null) {
      CellBlockMeta.Builder cellBlockBuilder=CellBlockMeta.newBuilder();
      cellBlockBuilder.setLength(cellBlock.limit());
      builder.setCellBlockMeta(cellBlockBuilder.build());
    }
    RequestHeader header=builder.build();
synchronized (this.out) {
      IPCUtil.write(this.out,header,call.param,cellBlock);
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(getName() + ": wrote request header " + TextFormat.shortDebugString(header));
    }
  }
 catch (  IOException e) {
    markClosed(e);
  }
}
