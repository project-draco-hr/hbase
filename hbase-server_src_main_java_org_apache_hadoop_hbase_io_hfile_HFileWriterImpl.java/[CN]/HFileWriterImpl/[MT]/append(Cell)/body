{
  byte[] value=cell.getValueArray();
  int voffset=cell.getValueOffset();
  int vlength=cell.getValueLength();
  boolean dupKey=checkKey(cell);
  checkValue(value,voffset,vlength);
  if (!dupKey) {
    checkBlockBoundary();
  }
  if (!fsBlockWriter.isWriting()) {
    newBlock();
  }
  fsBlockWriter.write(cell);
  totalKeyLength+=CellUtil.estimatedSerializedSizeOfKey(cell);
  totalValueLength+=vlength;
  if (firstCellInBlock == null) {
    firstCellInBlock=cell;
  }
  lastCell=cell;
  entryCount++;
  this.maxMemstoreTS=Math.max(this.maxMemstoreTS,cell.getSequenceId());
  int tagsLength=cell.getTagsLength();
  if (tagsLength > this.maxTagsLength) {
    this.maxTagsLength=tagsLength;
  }
}
