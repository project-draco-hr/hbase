{
  final MasterFileSystem mfs=env.getMasterServices().getMasterFileSystem();
  final FileSystem fs=mfs.getFileSystem();
  final Path tempdir=mfs.getTempDir();
  final Path tableDir=FSUtils.getTableDir(mfs.getRootDir(),tableName);
  final Path tempTableDir=FSUtils.getTableDir(tempdir,tableName);
  if (fs.exists(tableDir)) {
    if (!fs.exists(tempdir) && !fs.mkdirs(tempdir)) {
      throw new IOException("HBase temp directory '" + tempdir + "' creation failure.");
    }
    if (!fs.exists(tempTableDir.getParent()) && !fs.mkdirs(tempTableDir.getParent())) {
      throw new IOException("HBase temp directory '" + tempdir + "' creation failure.");
    }
    if (!fs.rename(tableDir,tempTableDir)) {
      if (fs.exists(tempTableDir)) {
        FileStatus[] files=fs.listStatus(tempdir);
        if (files != null && files.length > 0) {
          for (int i=0; i < files.length; ++i) {
            if (!files[i].isDir())             continue;
            HFileArchiver.archiveRegion(fs,mfs.getRootDir(),tempTableDir,files[i].getPath());
          }
        }
        fs.delete(tempdir,true);
      }
      throw new IOException("Unable to move '" + tableDir + "' to temp '"+ tempTableDir+ "'");
    }
  }
  if (archive) {
    for (    HRegionInfo hri : regions) {
      LOG.debug("Archiving region " + hri.getRegionNameAsString() + " from FS");
      HFileArchiver.archiveRegion(fs,mfs.getRootDir(),tempTableDir,HRegion.getRegionDir(tempTableDir,hri.getEncodedName()));
    }
    LOG.debug("Table '" + tableName + "' archived!");
  }
  HTableDescriptor htd=env.getMasterServices().getTableDescriptors().get(tableName);
  HColumnDescriptor[] hcds=htd.getColumnFamilies();
  boolean hasMob=false;
  for (  HColumnDescriptor hcd : hcds) {
    if (hcd.isMobEnabled()) {
      hasMob=true;
      break;
    }
  }
  Path mobTableDir=null;
  if (hasMob) {
    mobTableDir=FSUtils.getTableDir(new Path(mfs.getRootDir(),MobConstants.MOB_DIR_NAME),tableName);
    Path regionDir=new Path(mobTableDir,MobUtils.getMobRegionInfo(tableName).getEncodedName());
    if (fs.exists(regionDir)) {
      HFileArchiver.archiveRegion(fs,mfs.getRootDir(),mobTableDir,regionDir);
    }
  }
  if (!fs.delete(tempTableDir,true) && fs.exists(tempTableDir)) {
    throw new IOException("Couldn't delete " + tempTableDir);
  }
  if (hasMob && mobTableDir != null && fs.exists(mobTableDir)) {
    if (!fs.delete(mobTableDir,true)) {
      LOG.error("Couldn't delete " + mobTableDir);
    }
  }
}
