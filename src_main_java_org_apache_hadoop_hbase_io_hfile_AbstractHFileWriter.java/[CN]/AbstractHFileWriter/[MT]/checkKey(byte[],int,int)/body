{
  boolean isDuplicateKey=false;
  if (key == null || length <= 0) {
    throw new IOException("Key cannot be null or empty");
  }
  if (length > HFile.MAXIMUM_KEY_LENGTH) {
    throw new IOException("Key length " + length + " > "+ HFile.MAXIMUM_KEY_LENGTH);
  }
  if (lastKeyBuffer != null) {
    int keyComp=comparator.compare(lastKeyBuffer,lastKeyOffset,lastKeyLength,key,offset,length);
    if (keyComp > 0) {
      throw new IOException("Added a key not lexically larger than" + " previous key=" + Bytes.toStringBinary(key,offset,length) + ", lastkey="+ Bytes.toStringBinary(lastKeyBuffer,lastKeyOffset,lastKeyLength));
    }
 else     if (keyComp == 0) {
      isDuplicateKey=true;
    }
  }
  return isDuplicateKey;
}
