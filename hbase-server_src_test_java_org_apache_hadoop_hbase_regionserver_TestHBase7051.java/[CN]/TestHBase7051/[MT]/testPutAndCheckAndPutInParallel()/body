{
  final String tableName="testPutAndCheckAndPut";
  final String family="f1";
  Configuration conf=HBaseConfiguration.create();
  conf.setClass(HConstants.REGION_IMPL,MockHRegion.class,HeapSize.class);
  final MockHRegion region=(MockHRegion)TestHRegion.initHRegion(Bytes.toBytes(tableName),tableName,conf,Bytes.toBytes(family));
  List<Pair<Mutation,Integer>> putsAndLocks=Lists.newArrayList();
  Put[] puts=new Put[1];
  Put put=new Put(Bytes.toBytes("r1"));
  put.add(Bytes.toBytes(family),Bytes.toBytes("q1"),Bytes.toBytes("10"));
  puts[0]=put;
  Pair<Mutation,Integer> pair=new Pair<Mutation,Integer>(puts[0],null);
  putsAndLocks.add(pair);
  count++;
  region.batchMutate(putsAndLocks.toArray(new Pair[0]));
  makeCheckAndPut(family,region);
  makePut(family,region);
  while (!checkAndPutCompleted) {
    Thread.sleep(100);
  }
  Scan s=new Scan();
  RegionScanner scanner=region.getScanner(s);
  List<KeyValue> results=new ArrayList<KeyValue>();
  scanner.next(results,2);
  for (  KeyValue keyValue : results) {
    assertEquals("50",Bytes.toString(keyValue.getValue()));
  }
}
