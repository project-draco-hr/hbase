{
  byte opByte=in.readByte();
  operator=Operator.values()[opByte];
  int size=in.readInt();
  if (size > 0) {
    filters=new HashSet<RowFilterInterface>();
    try {
      for (int i=0; i < size; i++) {
        String className=in.readUTF();
        Class<?> clazz=Class.forName(className);
        RowFilterInterface filter;
        filter=(RowFilterInterface)clazz.newInstance();
        filter.readFields(in);
        filters.add(filter);
        if (LOG.isDebugEnabled()) {
          LOG.debug("Successfully read in subfilter of type " + filter.getClass().getSimpleName());
        }
      }
    }
 catch (    InstantiationException e) {
      throw new RuntimeException("Failed to deserialize RowFilterInterface.",e);
    }
catch (    IllegalAccessException e) {
      throw new RuntimeException("Failed to deserialize RowFilterInterface.",e);
    }
catch (    ClassNotFoundException e) {
      throw new RuntimeException("Failed to deserialize RowFilterInterface.",e);
    }
  }
}
