{
  Options opt=new Options();
  opt.addOption("localRegionServers",true,"RegionServers to start in master process when running standalone");
  opt.addOption("masters",true,"Masters to start in this process");
  opt.addOption("minRegionServers",true,"Minimum RegionServers needed to host user tables");
  opt.addOption("backup",false,"Do not try to become HMaster until the primary fails");
  CommandLine cmd;
  try {
    cmd=new GnuParser().parse(opt,args);
  }
 catch (  ParseException e) {
    LOG.error("Could not parse: ",e);
    usage(null);
    return 1;
  }
  if (cmd.hasOption("minRegionServers")) {
    String val=cmd.getOptionValue("minRegionServers");
    getConf().setInt("hbase.regions.server.count.min",Integer.valueOf(val));
    LOG.debug("minRegionServers set to " + val);
  }
  if (cmd.hasOption("minServers")) {
    String val=cmd.getOptionValue("minServers");
    getConf().setInt("hbase.regions.server.count.min",Integer.valueOf(val));
    LOG.debug("minServers set to " + val);
  }
  if (cmd.hasOption("backup")) {
    getConf().setBoolean(HConstants.MASTER_TYPE_BACKUP,true);
  }
  if (cmd.hasOption("localRegionServers")) {
    String val=cmd.getOptionValue("localRegionServers");
    getConf().setInt("hbase.regionservers",Integer.valueOf(val));
    LOG.debug("localRegionServers set to " + val);
  }
  if (cmd.hasOption("masters")) {
    String val=cmd.getOptionValue("masters");
    getConf().setInt("hbase.masters",Integer.valueOf(val));
    LOG.debug("masters set to " + val);
  }
  List<String> remainingArgs=cmd.getArgList();
  if (remainingArgs.size() != 1) {
    usage(null);
    return 1;
  }
  String command=remainingArgs.get(0);
  if ("start".equals(command)) {
    return startMaster();
  }
 else   if ("stop".equals(command)) {
    return stopMaster();
  }
 else   if ("clear".equals(command)) {
    return (ZNodeClearer.clear(getConf()) ? 0 : 1);
  }
 else {
    usage("Invalid command: " + command);
    return 1;
  }
}
