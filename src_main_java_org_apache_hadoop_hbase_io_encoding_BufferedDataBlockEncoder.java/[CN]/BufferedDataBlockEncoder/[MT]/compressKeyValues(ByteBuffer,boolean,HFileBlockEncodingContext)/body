{
  if (!(blkEncodingCtx.getClass().getName().equals(HFileBlockDefaultEncodingContext.class.getName()))) {
    throw new IOException(this.getClass().getName() + " only accepts " + HFileBlockDefaultEncodingContext.class.getName()+ " as the "+ "encoding context.");
  }
  HFileBlockDefaultEncodingContext encodingCtx=(HFileBlockDefaultEncodingContext)blkEncodingCtx;
  encodingCtx.prepareEncoding();
  DataOutputStream dataOut=((HFileBlockDefaultEncodingContext)encodingCtx).getOutputStreamForEncoder();
  internalEncodeKeyValues(dataOut,in,includesMemstoreTS);
  if (encodingCtx.getDataBlockEncoding() != DataBlockEncoding.NONE) {
    encodingCtx.postEncoding(BlockType.ENCODED_DATA);
  }
 else {
    encodingCtx.postEncoding(BlockType.DATA);
  }
}
