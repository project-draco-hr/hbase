{
  StringBuilder sb=Strings.appendKeyValue(new StringBuilder(),"numberOfStores",this.getStores());
  sb=Strings.appendKeyValue(sb,"numberOfStorefiles",this.getStorefiles());
  sb=Strings.appendKeyValue(sb,"storefileUncompressedSizeMB",this.getStoreUncompressedSizeMB());
  sb=Strings.appendKeyValue(sb,"storefileSizeMB",this.getStorefileSizeMB());
  if (this.getStoreUncompressedSizeMB() != 0) {
    sb=Strings.appendKeyValue(sb,"compressionRatio",String.format("%.4f",(float)this.getStorefileSizeMB() / (float)this.getStoreUncompressedSizeMB()));
  }
  sb=Strings.appendKeyValue(sb,"memstoreSizeMB",this.getMemStoreSizeMB());
  sb=Strings.appendKeyValue(sb,"storefileIndexSizeMB",this.getStorefileIndexSizeMB());
  sb=Strings.appendKeyValue(sb,"readRequestsCount",this.getReadRequestsCount());
  sb=Strings.appendKeyValue(sb,"writeRequestsCount",this.getWriteRequestsCount());
  sb=Strings.appendKeyValue(sb,"rootIndexSizeKB",this.getRootIndexSizeKB());
  sb=Strings.appendKeyValue(sb,"totalStaticIndexSizeKB",this.getTotalStaticIndexSizeKB());
  sb=Strings.appendKeyValue(sb,"totalStaticBloomSizeKB",this.getTotalStaticBloomSizeKB());
  sb=Strings.appendKeyValue(sb,"totalCompactingKVs",this.getTotalCompactingKVs());
  sb=Strings.appendKeyValue(sb,"currentCompactedKVs",this.getCurrentCompactedKVs());
  float compactionProgressPct=Float.NaN;
  if (this.getTotalCompactingKVs() > 0) {
    compactionProgressPct=((float)this.getCurrentCompactedKVs() / (float)this.getTotalCompactingKVs());
  }
  sb=Strings.appendKeyValue(sb,"compactionProgressPct",compactionProgressPct);
  sb=Strings.appendKeyValue(sb,"completeSequenceId",this.getCompleteSequenceId());
  sb=Strings.appendKeyValue(sb,"dataLocality",this.getDataLocality());
  return sb.toString();
}
