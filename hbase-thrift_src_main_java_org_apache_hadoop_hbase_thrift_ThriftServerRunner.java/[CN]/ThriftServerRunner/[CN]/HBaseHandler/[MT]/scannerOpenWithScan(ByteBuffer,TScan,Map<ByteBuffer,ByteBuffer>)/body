{
  try {
    Table table=getTable(tableName);
    Scan scan=new Scan();
    addAttributes(scan,attributes);
    if (tScan.isSetStartRow()) {
      scan.setStartRow(tScan.getStartRow());
    }
    if (tScan.isSetStopRow()) {
      scan.setStopRow(tScan.getStopRow());
    }
    if (tScan.isSetTimestamp()) {
      scan.setTimeRange(0,tScan.getTimestamp());
    }
    if (tScan.isSetCaching()) {
      scan.setCaching(tScan.getCaching());
    }
    if (tScan.isSetBatchSize()) {
      scan.setBatch(tScan.getBatchSize());
    }
    if (tScan.isSetColumns() && tScan.getColumns().size() != 0) {
      for (      ByteBuffer column : tScan.getColumns()) {
        byte[][] famQf=KeyValue.parseColumn(getBytes(column));
        if (famQf.length == 1) {
          scan.addFamily(famQf[0]);
        }
 else {
          scan.addColumn(famQf[0],famQf[1]);
        }
      }
    }
    if (tScan.isSetFilterString()) {
      ParseFilter parseFilter=new ParseFilter();
      scan.setFilter(parseFilter.parseFilterString(tScan.getFilterString()));
    }
    if (tScan.isSetReversed()) {
      scan.setReversed(tScan.isReversed());
    }
    return addScanner(table.getScanner(scan),tScan.sortColumns);
  }
 catch (  IOException e) {
    LOG.warn(e.getMessage(),e);
    throw new IOError(e.getMessage());
  }
}
