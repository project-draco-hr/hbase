{
  Text row=new Text("test_row");
  long t0=System.currentTimeMillis();
  long t1=t0 - 15000;
  long t2=t1 - 15000;
  Text colA=new Text(COLUMNS[0].toString() + "a");
  Text colB=new Text(COLUMNS[0].toString() + "b");
  Text colC=new Text(COLUMNS[1].toString() + "c");
  long lock=region_incommon.startUpdate(row);
  region_incommon.put(lock,colA,cellData(0,flush).getBytes());
  region_incommon.put(lock,colB,cellData(0,flush).getBytes());
  region_incommon.put(lock,colC,cellData(0,flush).getBytes());
  region_incommon.commit(lock,t0);
  lock=region_incommon.startUpdate(row);
  region_incommon.put(lock,colA,cellData(1,flush).getBytes());
  region_incommon.put(lock,colB,cellData(1,flush).getBytes());
  region_incommon.put(lock,colC,cellData(1,flush).getBytes());
  region_incommon.commit(lock,t1);
  lock=region_incommon.startUpdate(row);
  region_incommon.put(lock,colA,cellData(2,flush).getBytes());
  region_incommon.put(lock,colB,cellData(2,flush).getBytes());
  region_incommon.put(lock,colC,cellData(2,flush).getBytes());
  region_incommon.commit(lock,t2);
  if (flush) {
    region_incommon.flushcache();
  }
  region.deleteFamily(row,COLUMNS[0],t1);
  if (flush) {
    region_incommon.flushcache();
  }
  assertCellValueEquals(region,row,colA,t0,cellData(0,flush));
  assertCellValueEquals(region,row,colA,t1,null);
  assertCellValueEquals(region,row,colA,t2,null);
  assertCellValueEquals(region,row,colB,t0,cellData(0,flush));
  assertCellValueEquals(region,row,colB,t1,null);
  assertCellValueEquals(region,row,colB,t2,null);
  assertCellValueEquals(region,row,colC,t0,cellData(0,flush));
  assertCellValueEquals(region,row,colC,t1,cellData(1,flush));
  assertCellValueEquals(region,row,colC,t2,cellData(2,flush));
  region.deleteFamily(row,COLUMNS[0],HConstants.LATEST_TIMESTAMP);
  if (flush) {
    region_incommon.flushcache();
  }
  assertCellValueEquals(region,row,colA,t0,null);
  assertCellValueEquals(region,row,colB,t0,null);
  assertCellValueEquals(region,row,colC,t0,cellData(0,flush));
  assertCellValueEquals(region,row,colC,t1,cellData(1,flush));
  assertCellValueEquals(region,row,colC,t2,cellData(2,flush));
}
