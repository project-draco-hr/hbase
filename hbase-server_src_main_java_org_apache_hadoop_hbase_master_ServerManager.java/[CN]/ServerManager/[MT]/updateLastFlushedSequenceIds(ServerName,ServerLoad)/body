{
  Map<byte[],RegionLoad> regionsLoad=hsl.getRegionsLoad();
  for (  Entry<byte[],RegionLoad> entry : regionsLoad.entrySet()) {
    byte[] encodedRegionName=Bytes.toBytes(HRegionInfo.encodeRegionName(entry.getKey()));
    Long existingValue=flushedSequenceIdByRegion.get(encodedRegionName);
    long l=entry.getValue().getCompleteSequenceId();
    if (LOG.isTraceEnabled()) {
      LOG.trace(Bytes.toString(encodedRegionName) + ", existingValue=" + existingValue+ ", completeSequenceId="+ l);
    }
    if (existingValue == null || (l != HConstants.NO_SEQNUM && l > existingValue)) {
      flushedSequenceIdByRegion.put(encodedRegionName,l);
    }
 else     if (l != HConstants.NO_SEQNUM && l < existingValue) {
      LOG.warn("RegionServer " + sn + " indicates a last flushed sequence id ("+ l+ ") that is less than the previous last flushed sequence id ("+ existingValue+ ") for region "+ Bytes.toString(entry.getKey())+ " Ignoring.");
    }
    ConcurrentNavigableMap<byte[],Long> storeFlushedSequenceId=getOrCreateStoreFlushedSequenceId(encodedRegionName);
    for (    StoreSequenceId storeSeqId : entry.getValue().getStoreCompleteSequenceId()) {
      byte[] family=storeSeqId.getFamilyName().toByteArray();
      existingValue=storeFlushedSequenceId.get(family);
      l=storeSeqId.getSequenceId();
      if (LOG.isTraceEnabled()) {
        LOG.trace(Bytes.toString(encodedRegionName) + ", family=" + Bytes.toString(family)+ ", existingValue="+ existingValue+ ", completeSequenceId="+ l);
      }
      if (existingValue == null || (l != HConstants.NO_SEQNUM && l > existingValue.longValue())) {
        storeFlushedSequenceId.put(family,l);
      }
    }
  }
}
