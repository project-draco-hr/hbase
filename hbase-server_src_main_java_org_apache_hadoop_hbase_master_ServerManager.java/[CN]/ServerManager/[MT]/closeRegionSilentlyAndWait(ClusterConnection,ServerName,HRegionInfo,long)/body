{
  AdminService.BlockingInterface rs=connection.getAdmin(server);
  HBaseRpcController controller=connection.getRpcControllerFactory().newController();
  try {
    ProtobufUtil.closeRegion(controller,rs,server,region.getRegionName());
  }
 catch (  IOException e) {
    LOG.warn("Exception when closing region: " + region.getRegionNameAsString(),e);
  }
  long expiration=timeout + System.currentTimeMillis();
  while (System.currentTimeMillis() < expiration) {
    controller.reset();
    try {
      HRegionInfo rsRegion=ProtobufUtil.getRegionInfo(controller,rs,region.getRegionName());
      if (rsRegion == null)       return;
    }
 catch (    IOException ioe) {
      if (ioe instanceof NotServingRegionException)       return;
      LOG.warn("Exception when retrieving regioninfo from: " + region.getRegionNameAsString(),ioe);
    }
    Thread.sleep(1000);
  }
  throw new IOException("Region " + region + " failed to close within"+ " timeout "+ timeout);
}
