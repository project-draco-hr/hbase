{
  int countOfActions=this.multiAction.size();
  if (countOfActions <= 0)   throw new DoNotRetryIOException("No Actions");
  MultiRequest.Builder multiRequestBuilder=MultiRequest.newBuilder();
  RegionAction.Builder regionActionBuilder=RegionAction.newBuilder();
  ClientProtos.Action.Builder actionBuilder=ClientProtos.Action.newBuilder();
  MutationProto.Builder mutationBuilder=MutationProto.newBuilder();
  List<CellScannable> cells=null;
  long nonceGroup=multiAction.getNonceGroup();
  if (nonceGroup != HConstants.NO_NONCE) {
    multiRequestBuilder.setNonceGroup(nonceGroup);
  }
  for (  Map.Entry<byte[],List<Action>> e : this.multiAction.actions.entrySet()) {
    final byte[] regionName=e.getKey();
    final List<Action> actions=e.getValue();
    regionActionBuilder.clear();
    regionActionBuilder.setRegion(RequestConverter.buildRegionSpecifier(HBaseProtos.RegionSpecifier.RegionSpecifierType.REGION_NAME,regionName));
    if (this.cellBlock) {
      if (cells == null)       cells=new ArrayList<CellScannable>(countOfActions);
      regionActionBuilder=RequestConverter.buildNoDataRegionAction(regionName,actions,cells,regionActionBuilder,actionBuilder,mutationBuilder);
    }
 else {
      regionActionBuilder=RequestConverter.buildRegionAction(regionName,actions,regionActionBuilder,actionBuilder,mutationBuilder);
    }
    multiRequestBuilder.addRegionAction(regionActionBuilder.build());
  }
  if (cells != null) {
    setRpcControllerCellScanner(CellUtil.createCellScanner(cells));
  }
  ClientProtos.MultiRequest requestProto=multiRequestBuilder.build();
  ClientProtos.MultiResponse responseProto=getStub().multi(getRpcController(),requestProto);
  if (responseProto == null)   return null;
  return ResponseConverter.getResults(requestProto,responseProto,getRpcControllerCellScanner());
}
