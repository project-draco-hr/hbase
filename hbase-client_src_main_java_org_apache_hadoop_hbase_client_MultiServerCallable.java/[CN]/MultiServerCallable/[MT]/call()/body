{
  int countOfActions=this.multiAction.size();
  if (countOfActions <= 0)   throw new DoNotRetryIOException("No Actions");
  MultiRequest.Builder multiRequestBuilder=MultiRequest.newBuilder();
  List<CellScannable> cells=null;
  for (  Map.Entry<byte[],List<Action<R>>> e : this.multiAction.actions.entrySet()) {
    final byte[] regionName=e.getKey();
    final List<Action<R>> actions=e.getValue();
    RegionAction.Builder regionActionBuilder;
    if (this.cellBlock) {
      if (cells == null)       cells=new ArrayList<CellScannable>(countOfActions);
      regionActionBuilder=RequestConverter.buildNoDataRegionAction(regionName,actions,cells);
    }
 else {
      regionActionBuilder=RequestConverter.buildRegionAction(regionName,actions);
    }
    multiRequestBuilder.addRegionAction(regionActionBuilder.build());
  }
  PayloadCarryingRpcController controller=new PayloadCarryingRpcController(cells);
  controller.setPriority(getTableName());
  ClientProtos.MultiResponse responseProto;
  ClientProtos.MultiRequest requestProto=multiRequestBuilder.build();
  try {
    responseProto=getStub().multi(controller,requestProto);
  }
 catch (  ServiceException e) {
    throw ProtobufUtil.getRemoteException(e);
  }
  return ResponseConverter.getResults(requestProto,responseProto,controller.cellScanner());
}
