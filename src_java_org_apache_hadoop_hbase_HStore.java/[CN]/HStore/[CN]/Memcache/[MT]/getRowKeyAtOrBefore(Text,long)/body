{
  this.lock.readLock().lock();
  Text key_memcache=null;
  Text key_snapshot=null;
  try {
synchronized (memcache) {
      key_memcache=internalGetRowKeyAtOrBefore(memcache,row,timestamp);
    }
synchronized (snapshot) {
      key_snapshot=internalGetRowKeyAtOrBefore(snapshot,row,timestamp);
    }
    if (key_memcache == null && key_snapshot == null) {
      return null;
    }
 else     if (key_memcache == null && key_snapshot != null) {
      return key_snapshot;
    }
 else     if (key_memcache != null && key_snapshot == null) {
      return key_memcache;
    }
 else {
      if ((key_memcache != null && key_memcache.equals(row)) || (key_snapshot != null && key_snapshot.equals(row))) {
        return row;
      }
      return key_memcache.compareTo(key_snapshot) > 0 ? key_memcache : key_snapshot;
    }
  }
  finally {
    this.lock.readLock().unlock();
  }
}
