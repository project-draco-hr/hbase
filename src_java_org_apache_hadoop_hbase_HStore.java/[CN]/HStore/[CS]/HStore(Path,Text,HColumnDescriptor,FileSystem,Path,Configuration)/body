{
  this.dir=dir;
  this.regionName=regionName;
  this.family=family;
  this.familyName=HStoreKey.extractFamily(this.family.getName());
  this.compression=SequenceFile.CompressionType.NONE;
  if (family.getCompression() != HColumnDescriptor.CompressionType.NONE) {
    if (family.getCompression() == HColumnDescriptor.CompressionType.BLOCK) {
      this.compression=SequenceFile.CompressionType.BLOCK;
    }
 else     if (family.getCompression() == HColumnDescriptor.CompressionType.RECORD) {
      this.compression=SequenceFile.CompressionType.RECORD;
    }
 else {
      assert(false);
    }
  }
  this.fs=fs;
  this.conf=conf;
  this.mapdir=HStoreFile.getMapDir(dir,regionName,familyName);
  fs.mkdirs(mapdir);
  this.loginfodir=HStoreFile.getInfoDir(dir,regionName,familyName);
  fs.mkdirs(loginfodir);
  if (family.bloomFilter == null) {
    this.filterDir=null;
    this.bloomFilter=null;
  }
 else {
    this.filterDir=HStoreFile.getFilterDir(dir,regionName,familyName);
    fs.mkdirs(filterDir);
    loadOrCreateBloomFilter();
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("starting HStore for " + regionName + "/"+ familyName);
  }
  this.compactdir=new Path(dir,COMPACTION_DIR);
  Path curCompactStore=HStoreFile.getHStoreDir(compactdir,regionName,familyName);
  if (fs.exists(curCompactStore)) {
    processReadyCompaction();
    fs.delete(curCompactStore);
  }
  Vector<HStoreFile> hstoreFiles=HStoreFile.loadHStoreFiles(conf,dir,regionName,familyName,fs);
  for (  HStoreFile hsf : hstoreFiles) {
    mapFiles.put(Long.valueOf(hsf.loadInfo(fs)),hsf);
  }
  long maxSeqID=-1;
  for (  HStoreFile hsf : hstoreFiles) {
    long seqid=hsf.loadInfo(fs);
    if (seqid > 0) {
      if (seqid > maxSeqID) {
        maxSeqID=seqid;
      }
    }
  }
  doReconstructionLog(reconstructionLog,maxSeqID);
  if (mapFiles.size() >= 1) {
    compactHelper(true);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("starting map readers");
  }
  for (  Map.Entry<Long,HStoreFile> e : mapFiles.entrySet()) {
    maps.put(e.getKey(),getMapFileReader(e.getValue().getMapFilePath().toString()));
  }
  LOG.info("HStore online for " + this.regionName + "/"+ this.familyName);
}
