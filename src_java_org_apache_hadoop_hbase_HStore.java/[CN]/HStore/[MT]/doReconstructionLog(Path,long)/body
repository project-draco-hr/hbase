{
  if (reconstructionLog == null || !fs.exists(reconstructionLog)) {
    return;
  }
  long maxSeqIdInLog=-1;
  TreeMap<HStoreKey,byte[]> reconstructedCache=new TreeMap<HStoreKey,byte[]>();
  SequenceFile.Reader login=new SequenceFile.Reader(this.fs,reconstructionLog,this.conf);
  try {
    Text thisRegionName=HRegionInfo.decodeRegionName(encodedRegionName);
    HLogKey key=new HLogKey();
    HLogEdit val=new HLogEdit();
    while (login.next(key,val)) {
      maxSeqIdInLog=Math.max(maxSeqIdInLog,key.getLogSeqNum());
      if (key.getLogSeqNum() <= maxSeqID) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Skipping edit <" + key.toString() + "="+ val.toString()+ "> key sequence: "+ key.getLogSeqNum()+ " max sequence: "+ maxSeqID);
        }
        continue;
      }
      Text column=val.getColumn();
      if (column.equals(HLog.METACOLUMN) || !key.getRegionName().equals(thisRegionName) || !HStoreKey.extractFamily(column).equals(this.familyName)) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Passing on edit " + key.getRegionName() + ", "+ column.toString()+ ": "+ new String(val.getVal(),UTF8_ENCODING)+ ", my region: "+ thisRegionName+ ", my column: "+ this.familyName);
        }
        continue;
      }
      HStoreKey k=new HStoreKey(key.getRow(),column,val.getTimestamp());
      if (LOG.isDebugEnabled()) {
        LOG.debug("Applying edit <" + k.toString() + "="+ val.toString()+ ">");
      }
      reconstructedCache.put(k,val.getVal());
    }
  }
  finally {
    login.close();
  }
  if (reconstructedCache.size() > 0) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("flushing reconstructionCache");
    }
    flushCacheHelper(reconstructedCache,maxSeqIdInLog + 1,true);
  }
}
