{
  byte[] key=new byte[keySize];
  byte[] value=new byte[valueSize];
  Random rand=new Random(Thread.currentThread().getId());
  HLog hlog=region.getLog();
  ArrayList<UUID> clusters=new ArrayList<UUID>();
  long nonce=HConstants.NO_NONCE;
  try {
    long startTime=System.currentTimeMillis();
    for (int i=0; i < numIterations; ++i) {
      Put put=setupPut(rand,key,value,numFamilies);
      long now=System.currentTimeMillis();
      WALEdit walEdit=new WALEdit();
      addFamilyMapToWALEdit(put.getFamilyCellMap(),walEdit);
      HRegionInfo hri=region.getRegionInfo();
      if (this.noSync) {
        hlog.appendNoSync(hri,hri.getTable(),walEdit,clusters,now,htd,region.getSequenceId(),true,nonce,nonce);
      }
 else {
        hlog.append(hri,hri.getTable(),walEdit,now,htd,region.getSequenceId());
      }
    }
    long totalTime=(System.currentTimeMillis() - startTime);
    logBenchmarkResult(Thread.currentThread().getName(),numIterations,totalTime);
  }
 catch (  Exception e) {
    LOG.error(getClass().getSimpleName() + " Thread failed",e);
  }
}
