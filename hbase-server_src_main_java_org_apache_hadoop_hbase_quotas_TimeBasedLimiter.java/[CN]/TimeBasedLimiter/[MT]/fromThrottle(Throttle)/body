{
  TimeBasedLimiter limiter=new TimeBasedLimiter();
  boolean isBypass=true;
  if (throttle.hasReqNum()) {
    setFromTimedQuota(limiter.reqsLimiter,throttle.getReqNum());
    isBypass=false;
  }
  if (throttle.hasReqSize()) {
    setFromTimedQuota(limiter.reqSizeLimiter,throttle.getReqSize());
    isBypass=false;
  }
  if (throttle.hasWriteNum()) {
    setFromTimedQuota(limiter.writeReqsLimiter,throttle.getWriteNum());
    isBypass=false;
  }
  if (throttle.hasWriteSize()) {
    setFromTimedQuota(limiter.writeSizeLimiter,throttle.getWriteSize());
    isBypass=false;
  }
  if (throttle.hasReadNum()) {
    setFromTimedQuota(limiter.readReqsLimiter,throttle.getReadNum());
    isBypass=false;
  }
  if (throttle.hasReadSize()) {
    setFromTimedQuota(limiter.readSizeLimiter,throttle.getReadSize());
    isBypass=false;
  }
  return isBypass ? NoopQuotaLimiter.get() : limiter;
}
