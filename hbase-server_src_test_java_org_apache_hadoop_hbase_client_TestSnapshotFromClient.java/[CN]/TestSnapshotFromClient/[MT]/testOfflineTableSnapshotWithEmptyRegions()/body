{
  Admin admin=UTIL.getHBaseAdmin();
  SnapshotTestingUtils.assertNoSnapshots(admin);
  LOG.debug("FS state before disable:");
  FSUtils.logFileSystemState(UTIL.getTestFileSystem(),FSUtils.getRootDir(UTIL.getConfiguration()),LOG);
  admin.disableTable(TABLE_NAME);
  LOG.debug("FS state before snapshot:");
  FSUtils.logFileSystemState(UTIL.getTestFileSystem(),FSUtils.getRootDir(UTIL.getConfiguration()),LOG);
  byte[] snapshot=Bytes.toBytes("testOfflineTableSnapshotWithEmptyRegions");
  admin.snapshot(snapshot,TABLE_NAME);
  LOG.debug("Snapshot completed.");
  List<SnapshotDescription> snapshots=SnapshotTestingUtils.assertOneSnapshotThatMatches(admin,snapshot,TABLE_NAME);
  FileSystem fs=UTIL.getHBaseCluster().getMaster().getMasterFileSystem().getFileSystem();
  Path rootDir=UTIL.getHBaseCluster().getMaster().getMasterFileSystem().getRootDir();
  LOG.debug("FS state after snapshot:");
  FSUtils.logFileSystemState(UTIL.getTestFileSystem(),FSUtils.getRootDir(UTIL.getConfiguration()),LOG);
  List<byte[]> emptyCfs=Lists.newArrayList(TEST_FAM);
  List<byte[]> nonEmptyCfs=Lists.newArrayList();
  SnapshotTestingUtils.confirmSnapshotValid(ProtobufUtil.createHBaseProtosSnapshotDesc(snapshots.get(0)),TABLE_NAME,nonEmptyCfs,emptyCfs,rootDir,admin,fs);
  admin.deleteSnapshot(snapshot);
  snapshots=admin.listSnapshots();
  SnapshotTestingUtils.assertNoSnapshots(admin);
}
