{
  AssignmentManager am=Mockito.mock(AssignmentManager.class);
  RegionStates rs=Mockito.mock(RegionStates.class);
  TreeSet<RegionState> regionsInTransition=new TreeSet<RegionState>(RegionStates.REGION_STATE_COMPARATOR);
  for (byte i=0; i < 100; i++) {
    HRegionInfo hri=new HRegionInfo(FAKE_TABLE.getTableName(),new byte[]{i},new byte[]{(byte)(i + 1)});
    regionsInTransition.add(new RegionState(hri,RegionState.State.CLOSING,12345L,FAKE_HOST));
  }
  regionsInTransition.add(new RegionState(HRegionInfo.FIRST_META_REGIONINFO,RegionState.State.CLOSING,123L,FAKE_HOST));
  Mockito.doReturn(rs).when(am).getRegionStates();
  Mockito.doReturn(regionsInTransition).when(rs).getRegionsInTransition();
  Mockito.doReturn(regionsInTransition).when(rs).getRegionsInTransitionOrderedByTimestamp();
  Mockito.when(am.getState(any(String.class))).thenReturn(new RegionState(null,null));
  StringWriter sw=new StringWriter();
  new AssignmentManagerStatusTmpl().render(sw,am);
  String result=sw.toString();
  assertTrue(result.contains(HRegionInfo.FIRST_META_REGIONINFO.getEncodedName()));
}
