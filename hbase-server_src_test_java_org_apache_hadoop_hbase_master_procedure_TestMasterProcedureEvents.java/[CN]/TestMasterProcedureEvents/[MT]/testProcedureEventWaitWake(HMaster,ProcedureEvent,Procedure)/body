{
  final ProcedureExecutor<MasterProcedureEnv> procExec=master.getMasterProcedureExecutor();
  final MasterProcedureScheduler procSched=procExec.getEnvironment().getProcedureQueue();
  final long startPollCalls=procSched.getPollCalls();
  final long startNullPollCalls=procSched.getNullPollCalls();
  LOG.debug("checking " + event);
  assertEquals(false,event.isReady());
  assertEquals(0,event.size());
  LOG.debug("submit " + proc);
  long procId=procExec.submitProcedure(proc,HConstants.NO_NONCE,HConstants.NO_NONCE);
  LOG.debug("wait procedure suspended on " + event);
  while (event.size() < 1)   Thread.sleep(25);
  LOG.debug("checking " + event + " size="+ event.size());
  assertEquals(false,event.isReady());
  assertEquals(1,event.size());
  LOG.debug("wake " + event);
  procSched.wakeEvent(event);
  assertEquals(true,event.isReady());
  LOG.debug("waiting " + proc);
  ProcedureTestingUtility.waitProcedure(procExec,procId);
  assertEquals(true,event.isReady());
  assertEquals(0,event.size());
  LOG.debug("completed execution of " + proc + " pollCalls="+ (procSched.getPollCalls() - startPollCalls)+ " nullPollCalls="+ (procSched.getNullPollCalls() - startNullPollCalls));
}
