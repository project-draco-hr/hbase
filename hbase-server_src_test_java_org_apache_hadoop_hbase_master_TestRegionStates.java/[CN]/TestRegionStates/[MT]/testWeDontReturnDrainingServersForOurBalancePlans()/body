{
  Server server=mock(Server.class);
  when(server.getServerName()).thenReturn(ServerName.valueOf("master,1,1"));
  Configuration configuration=mock(Configuration.class);
  when(server.getConfiguration()).thenReturn(configuration);
  TableStateManager tsm=mock(TableStateManager.class);
  ServerManager sm=mock(ServerManager.class);
  when(sm.isServerOnline(isA(ServerName.class))).thenReturn(true);
  RegionStateStore rss=mock(RegionStateStore.class);
  RegionStates regionStates=new RegionStates(server,tsm,sm,rss);
  ServerName one=mockServer("one",1);
  ServerName two=mockServer("two",1);
  ServerName three=mockServer("three",1);
  when(sm.getDrainingServersList()).thenReturn(Arrays.asList(three));
  regionStates.regionOnline(createFakeRegion(),one);
  regionStates.regionOnline(createFakeRegion(),two);
  regionStates.regionOnline(createFakeRegion(),three);
  Map<TableName,Map<ServerName,List<HRegionInfo>>> result=regionStates.getAssignmentsByTable();
  for (  Map<ServerName,List<HRegionInfo>> map : result.values()) {
    assertFalse(map.keySet().contains(three));
  }
}
