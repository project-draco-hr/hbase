{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.row=iprot.readBinary();
  struct.setRowIsSet(true);
  BitSet incoming=iprot.readBitSet(7);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list27=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.columns=new ArrayList<TColumn>(_list27.size);
      for (int _i28=0; _i28 < _list27.size; ++_i28) {
        TColumn _elem29;
        _elem29=new TColumn();
        _elem29.read(iprot);
        struct.columns.add(_elem29);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(1)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(2)) {
    struct.timeRange=new TTimeRange();
    struct.timeRange.read(iprot);
    struct.setTimeRangeIsSet(true);
  }
  if (incoming.get(3)) {
    struct.maxVersions=iprot.readI32();
    struct.setMaxVersionsIsSet(true);
  }
  if (incoming.get(4)) {
    struct.filterString=iprot.readBinary();
    struct.setFilterStringIsSet(true);
  }
  if (incoming.get(5)) {
{
      org.apache.thrift.protocol.TMap _map30=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map30.size);
      for (int _i31=0; _i31 < _map30.size; ++_i31) {
        ByteBuffer _key32;
        ByteBuffer _val33;
        _key32=iprot.readBinary();
        _val33=iprot.readBinary();
        struct.attributes.put(_key32,_val33);
      }
    }
    struct.setAttributesIsSet(true);
  }
  if (incoming.get(6)) {
    struct.authorizations=new TAuthorization();
    struct.authorizations.read(iprot);
    struct.setAuthorizationsIsSet(true);
  }
}
