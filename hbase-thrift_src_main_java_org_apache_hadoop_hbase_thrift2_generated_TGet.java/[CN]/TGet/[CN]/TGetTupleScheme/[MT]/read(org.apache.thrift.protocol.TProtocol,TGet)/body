{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.row=iprot.readBinary();
  struct.setRowIsSet(true);
  BitSet incoming=iprot.readBitSet(6);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list19=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.columns=new ArrayList<TColumn>(_list19.size);
      for (int _i20=0; _i20 < _list19.size; ++_i20) {
        TColumn _elem21;
        _elem21=new TColumn();
        _elem21.read(iprot);
        struct.columns.add(_elem21);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(1)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(2)) {
    struct.timeRange=new TTimeRange();
    struct.timeRange.read(iprot);
    struct.setTimeRangeIsSet(true);
  }
  if (incoming.get(3)) {
    struct.maxVersions=iprot.readI32();
    struct.setMaxVersionsIsSet(true);
  }
  if (incoming.get(4)) {
    struct.filterString=iprot.readBinary();
    struct.setFilterStringIsSet(true);
  }
  if (incoming.get(5)) {
{
      org.apache.thrift.protocol.TMap _map22=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map22.size);
      for (int _i23=0; _i23 < _map22.size; ++_i23) {
        ByteBuffer _key24;
        ByteBuffer _val25;
        _key24=iprot.readBinary();
        _val25=iprot.readBinary();
        struct.attributes.put(_key24,_val25);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
