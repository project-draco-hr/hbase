{
  JSONObject scannerDescriptor;
  JSONArray columnArray;
  byte[][] columns=null;
  long timestamp;
  byte[] startRow;
  byte[] stopRow;
  String filters;
  try {
    scannerDescriptor=new JSONObject(new String(input));
    columnArray=scannerDescriptor.optJSONArray(RESTConstants.COLUMNS);
    timestamp=scannerDescriptor.optLong(RESTConstants.SCANNER_TIMESTAMP);
    startRow=Bytes.toBytes(scannerDescriptor.optString(RESTConstants.SCANNER_START_ROW,""));
    stopRow=Bytes.toBytes(scannerDescriptor.optString(RESTConstants.SCANNER_STOP_ROW,""));
    filters=scannerDescriptor.optString(RESTConstants.SCANNER_FILTER);
    if (columnArray != null) {
      columns=new byte[columnArray.length()][];
      for (int i=0; i < columnArray.length(); i++) {
        columns[i]=Bytes.toBytes(columnArray.optString(i));
      }
    }
    return new ScannerDescriptor(columns,timestamp,startRow,stopRow,filters);
  }
 catch (  JSONException e) {
    throw new HBaseRestException("error parsing json string",e);
  }
}
