{
  String strTemp;
  strTemp=jsonObject.getString("name");
  if (strTemp.charAt(strTemp.length() - 1) != ':') {
    strTemp+=":";
  }
  byte[] name=Bytes.toBytes(strTemp);
  int maxVersions;
  String cType;
  boolean inMemory;
  boolean blockCacheEnabled;
  int maxValueLength;
  int timeToLive;
  boolean bloomfilter;
  try {
    bloomfilter=jsonObject.getBoolean("bloomfilter");
  }
 catch (  JSONException e) {
    bloomfilter=false;
  }
  try {
    maxVersions=jsonObject.getInt("max_versions");
  }
 catch (  JSONException e) {
    maxVersions=3;
  }
  try {
    cType=jsonObject.getString("compression_type").toUpperCase();
  }
 catch (  JSONException e) {
    cType=HColumnDescriptor.DEFAULT_COMPRESSION;
  }
  try {
    inMemory=jsonObject.getBoolean("in_memory");
  }
 catch (  JSONException e) {
    inMemory=false;
  }
  try {
    blockCacheEnabled=jsonObject.getBoolean("block_cache_enabled");
  }
 catch (  JSONException e) {
    blockCacheEnabled=false;
  }
  try {
    maxValueLength=jsonObject.getInt("max_value_length");
  }
 catch (  JSONException e) {
    maxValueLength=2147483647;
  }
  try {
    timeToLive=jsonObject.getInt("time_to_live");
  }
 catch (  JSONException e) {
    timeToLive=Integer.MAX_VALUE;
  }
  return new HColumnDescriptor(name,maxVersions,cType,inMemory,blockCacheEnabled,maxValueLength,timeToLive,bloomfilter);
}
