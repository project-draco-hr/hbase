{
  StringBuilder builder=new StringBuilder();
  builder.append("/*");
  builder.append("?");
  builder.append(Constants.SCAN_COLUMN + "=" + COLUMN_1);
  builder.append("&");
  builder.append(Constants.SCAN_LIMIT + "=10");
  Response response=client.get("/" + TABLE + builder.toString(),Constants.MIMETYPE_XML);
  assertEquals(200,response.getCode());
  assertEquals(Constants.MIMETYPE_XML,response.getHeader("content-type"));
  JAXBContext context=JAXBContext.newInstance(ClientSideCellSetModel.class,RowModel.class,CellModel.class);
  Unmarshaller unmarshaller=context.createUnmarshaller();
  final ClientSideCellSetModel.Listener listener=new ClientSideCellSetModel.Listener(){
    @Override public void handleRowModel(    ClientSideCellSetModel helper,    RowModel row){
      assertTrue(row.getKey() != null);
      assertTrue(row.getCells().size() > 0);
    }
  }
;
  unmarshaller.setListener(new Unmarshaller.Listener(){
    public void beforeUnmarshal(    Object target,    Object parent){
      if (target instanceof ClientSideCellSetModel) {
        ((ClientSideCellSetModel)target).setCellSetModelListener(listener);
      }
    }
    public void afterUnmarshal(    Object target,    Object parent){
      if (target instanceof ClientSideCellSetModel) {
        ((ClientSideCellSetModel)target).setCellSetModelListener(null);
      }
    }
  }
);
  SAXParserFactory factory=SAXParserFactory.newInstance();
  factory.setNamespaceAware(true);
  XMLReader reader=factory.newSAXParser().getXMLReader();
  reader.setContentHandler(unmarshaller.getUnmarshallerHandler());
  assertFalse(ClientSideCellSetModel.listenerInvoked);
  reader.parse(new InputSource(response.getStream()));
  assertTrue(ClientSideCellSetModel.listenerInvoked);
}
