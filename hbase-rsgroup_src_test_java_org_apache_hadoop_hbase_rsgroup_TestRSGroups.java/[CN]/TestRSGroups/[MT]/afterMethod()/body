{
  deleteTableIfNecessary();
  deleteNamespaceIfNecessary();
  deleteGroups();
  int missing=NUM_SLAVES_BASE - getNumServers();
  LOG.info("Restoring servers: " + missing);
  for (int i=0; i < missing; i++) {
    ((MiniHBaseCluster)cluster).startRegionServer();
  }
  rsGroupAdmin.addRSGroup("master");
  ServerName masterServerName=((MiniHBaseCluster)cluster).getMaster().getServerName();
  try {
    rsGroupAdmin.moveServers(Sets.newHashSet(masterServerName.getHostPort()),"master");
  }
 catch (  Exception ex) {
  }
  TEST_UTIL.waitFor(WAIT_TIMEOUT,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      LOG.info("Waiting for cleanup to finish " + rsGroupAdmin.listRSGroups());
      return rsGroupAdmin.getRSGroupInfo(RSGroupInfo.DEFAULT_GROUP).getServers().size() == NUM_SLAVES_BASE;
    }
  }
);
}
