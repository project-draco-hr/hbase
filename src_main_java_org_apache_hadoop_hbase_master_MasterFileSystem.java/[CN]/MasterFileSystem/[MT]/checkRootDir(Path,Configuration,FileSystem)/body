{
  FSUtils.waitOnSafeMode(c,c.getInt(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000));
  try {
    if (!fs.exists(rd)) {
      fs.mkdirs(rd);
      FSUtils.setVersion(fs,rd,c.getInt(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000));
    }
 else {
      if (!fs.isDirectory(rd)) {
        throw new IllegalArgumentException(rd.toString() + " is not a directory");
      }
      FSUtils.checkVersion(fs,rd,true,c.getInt(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000));
    }
  }
 catch (  IllegalArgumentException iae) {
    LOG.fatal("Please fix invalid configuration for " + HConstants.HBASE_DIR + " "+ rd.toString(),iae);
    throw iae;
  }
  if (!FSUtils.checkClusterIdExists(fs,rd,c.getInt(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000))) {
    FSUtils.setClusterId(fs,rd,UUID.randomUUID().toString(),c.getInt(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000));
  }
  clusterId=FSUtils.getClusterId(fs,rd);
  if (!FSUtils.rootRegionExists(fs,rd)) {
    bootstrap(rd,c);
  }
  createRootTableInfo(rd);
  return rd;
}
