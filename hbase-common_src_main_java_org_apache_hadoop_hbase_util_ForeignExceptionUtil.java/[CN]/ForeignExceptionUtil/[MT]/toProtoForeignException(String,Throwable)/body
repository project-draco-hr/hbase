{
  GenericExceptionMessage.Builder gemBuilder=GenericExceptionMessage.newBuilder();
  gemBuilder.setClassName(t.getClass().getName());
  if (t.getMessage() != null) {
    gemBuilder.setMessage(t.getMessage());
  }
  List<StackTraceElementMessage> stack=toProtoStackTraceElement(t.getStackTrace());
  if (stack != null) {
    gemBuilder.addAllTrace(stack);
  }
  GenericExceptionMessage payload=gemBuilder.build();
  ForeignExceptionMessage.Builder exception=ForeignExceptionMessage.newBuilder();
  exception.setGenericException(payload).setSource(source);
  return exception.build();
}
