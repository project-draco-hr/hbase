{
  rq1.init(server1);
  rq2.init(server2);
  rq3.init(server3);
  rp.init();
  assertEquals(3,rq1.getListOfReplicators().size());
  rq1.removeQueue("bogus");
  rq1.removeLog("bogus","bogus");
  rq1.removeAllQueues();
  assertNull(rq1.getAllQueues());
  assertEquals(0,rq1.getLogPosition("bogus","bogus"));
  assertNull(rq1.getLogsInQueue("bogus"));
  assertEquals(0,rq1.claimQueues(new ServerName("bogus",1234,-1L).toString()).size());
  rq1.setLogPosition("bogus","bogus",5L);
  populateQueues();
  assertEquals(3,rq1.getListOfReplicators().size());
  assertEquals(0,rq2.getLogsInQueue("qId1").size());
  assertEquals(5,rq3.getLogsInQueue("qId5").size());
  assertEquals(0,rq3.getLogPosition("qId1","filename0"));
  rq3.setLogPosition("qId5","filename4",354L);
  assertEquals(354L,rq3.getLogPosition("qId5","filename4"));
  assertEquals(5,rq3.getLogsInQueue("qId5").size());
  assertEquals(0,rq2.getLogsInQueue("qId1").size());
  assertEquals(0,rq1.getAllQueues().size());
  assertEquals(1,rq2.getAllQueues().size());
  assertEquals(5,rq3.getAllQueues().size());
  assertEquals(0,rq3.claimQueues(server1).size());
  assertEquals(2,rq3.getListOfReplicators().size());
  SortedMap<String,SortedSet<String>> queues=rq2.claimQueues(server3);
  assertEquals(5,queues.size());
  assertEquals(1,rq2.getListOfReplicators().size());
  assertEquals(0,rq2.claimQueues(server2).size());
  assertEquals(6,rq2.getAllQueues().size());
  rq2.removeAllQueues();
  assertEquals(0,rq2.getListOfReplicators().size());
}
