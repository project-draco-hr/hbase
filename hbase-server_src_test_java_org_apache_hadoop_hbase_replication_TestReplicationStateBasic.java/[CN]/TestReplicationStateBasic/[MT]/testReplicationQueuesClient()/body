{
  assertEquals(0,rqc.getListOfReplicators().size());
  assertNull(rqc.getLogsInQueue(server1,"qId1"));
  assertNull(rqc.getAllQueues(server1));
  rq1.init(server1);
  rq2.init(server2);
  rq1.addLog("qId1","trash");
  rq1.removeLog("qId1","trash");
  rq1.addLog("qId2","filename1");
  rq1.addLog("qId3","filename2");
  rq1.addLog("qId3","filename3");
  rq2.addLog("trash","trash");
  rq2.removeQueue("trash");
  List<String> reps=rqc.getListOfReplicators();
  assertEquals(2,reps.size());
  assertTrue(server1,reps.contains(server1));
  assertTrue(server2,reps.contains(server2));
  assertNull(rqc.getLogsInQueue("bogus","bogus"));
  assertNull(rqc.getLogsInQueue(server1,"bogus"));
  assertEquals(0,rqc.getLogsInQueue(server1,"qId1").size());
  assertEquals(1,rqc.getLogsInQueue(server1,"qId2").size());
  assertEquals("filename1",rqc.getLogsInQueue(server1,"qId2").get(0));
  assertNull(rqc.getAllQueues("bogus"));
  assertEquals(0,rqc.getAllQueues(server2).size());
  List<String> list=rqc.getAllQueues(server1);
  assertEquals(3,list.size());
  assertTrue(list.contains("qId2"));
  assertTrue(list.contains("qId3"));
}
