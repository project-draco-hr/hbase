{
  FileSystem fs=TEST_UTIL.getTestFileSystem();
  Path hfilePath=new Path(new Path(TEST_UTIL.getDataTestDir("testReversibleStoreFileScanner"),"regionname"),"familyname");
  CacheConfig cacheConf=new CacheConfig(TEST_UTIL.getConfiguration());
  for (  DataBlockEncoding encoding : DataBlockEncoding.values()) {
    HFileContextBuilder hcBuilder=new HFileContextBuilder();
    hcBuilder.withBlockSize(2 * 1024);
    hcBuilder.withDataBlockEncoding(encoding);
    HFileContext hFileContext=hcBuilder.build();
    StoreFile.Writer writer=new StoreFile.WriterBuilder(TEST_UTIL.getConfiguration(),cacheConf,fs).withOutputDir(hfilePath).withFileContext(hFileContext).build();
    writeStoreFile(writer);
    StoreFile sf=new StoreFile(fs,writer.getPath(),TEST_UTIL.getConfiguration(),cacheConf,BloomType.NONE);
    List<StoreFileScanner> scanners=StoreFileScanner.getScannersForStoreFiles(Collections.singletonList(sf),false,true,false,false,Long.MAX_VALUE);
    StoreFileScanner scanner=scanners.get(0);
    seekTestOfReversibleKeyValueScanner(scanner);
    for (int readPoint=0; readPoint < MAXMVCC; readPoint++) {
      LOG.info("Setting read point to " + readPoint);
      scanners=StoreFileScanner.getScannersForStoreFiles(Collections.singletonList(sf),false,true,false,false,readPoint);
      seekTestOfReversibleKeyValueScannerWithMVCC(scanners.get(0),readPoint);
    }
  }
}
