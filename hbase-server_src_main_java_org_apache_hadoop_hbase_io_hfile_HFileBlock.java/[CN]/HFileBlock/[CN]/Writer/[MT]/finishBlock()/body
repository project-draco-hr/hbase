{
  if (blockType == BlockType.DATA) {
    this.dataBlockEncoder.endBlockEncoding(dataBlockEncodingCtx,userDataStream,baosInMemory.getBuffer(),blockType);
    blockType=dataBlockEncodingCtx.getBlockType();
  }
  userDataStream.flush();
  uncompressedBytesWithHeader=baosInMemory.toByteArray();
  prevOffset=prevOffsetByType[blockType.getId()];
  state=State.BLOCK_READY;
  if (blockType == BlockType.DATA || blockType == BlockType.ENCODED_DATA) {
    onDiskBytesWithHeader=dataBlockEncodingCtx.compressAndEncrypt(uncompressedBytesWithHeader);
  }
 else {
    onDiskBytesWithHeader=this.defaultBlockEncodingCtx.compressAndEncrypt(uncompressedBytesWithHeader);
  }
  int numBytes=(int)ChecksumUtil.numBytes(onDiskBytesWithHeader.length,fileContext.getBytesPerChecksum());
  putHeader(onDiskBytesWithHeader,0,onDiskBytesWithHeader.length + numBytes,uncompressedBytesWithHeader.length,onDiskBytesWithHeader.length);
  if (onDiskBytesWithHeader != uncompressedBytesWithHeader) {
    putHeader(uncompressedBytesWithHeader,0,onDiskBytesWithHeader.length + numBytes,uncompressedBytesWithHeader.length,onDiskBytesWithHeader.length);
  }
  onDiskChecksum=new byte[numBytes];
  ChecksumUtil.generateChecksums(onDiskBytesWithHeader,0,onDiskBytesWithHeader.length,onDiskChecksum,0,fileContext.getChecksumType(),fileContext.getBytesPerChecksum());
}
