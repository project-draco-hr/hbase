{
  if (blockType == BlockType.DATA) {
    this.dataBlockEncoder.endBlockEncoding(dataBlockEncodingCtx,userDataStream,baosInMemory.getBuffer(),blockType);
    blockType=dataBlockEncodingCtx.getBlockType();
  }
  userDataStream.flush();
  uncompressedBlockBytesWithHeader=baosInMemory.toByteArray();
  prevOffset=prevOffsetByType[blockType.getId()];
  state=State.BLOCK_READY;
  if (blockType == BlockType.DATA || blockType == BlockType.ENCODED_DATA) {
    onDiskBlockBytesWithHeader=dataBlockEncodingCtx.compressAndEncrypt(uncompressedBlockBytesWithHeader);
  }
 else {
    onDiskBlockBytesWithHeader=defaultBlockEncodingCtx.compressAndEncrypt(uncompressedBlockBytesWithHeader);
  }
  int numBytes=(int)ChecksumUtil.numBytes(onDiskBlockBytesWithHeader.length,fileContext.getBytesPerChecksum());
  putHeader(onDiskBlockBytesWithHeader,0,onDiskBlockBytesWithHeader.length + numBytes,uncompressedBlockBytesWithHeader.length,onDiskBlockBytesWithHeader.length);
  if (onDiskBlockBytesWithHeader != uncompressedBlockBytesWithHeader) {
    putHeader(uncompressedBlockBytesWithHeader,0,onDiskBlockBytesWithHeader.length + numBytes,uncompressedBlockBytesWithHeader.length,onDiskBlockBytesWithHeader.length);
  }
  onDiskChecksum=new byte[numBytes];
  ChecksumUtil.generateChecksums(onDiskBlockBytesWithHeader,0,onDiskBlockBytesWithHeader.length,onDiskChecksum,0,fileContext.getChecksumType(),fileContext.getBytesPerChecksum());
}
