{
  FSDataInputStream is=this.istreamNoFsChecksum;
  boolean doVerificationThruHBaseChecksum=this.useHBaseChecksum;
  if (!doVerificationThruHBaseChecksum) {
    is=this.istream;
  }
  HFileBlock blk=readBlockDataInternal(is,offset,onDiskSizeWithHeaderL,uncompressedSize,pread,doVerificationThruHBaseChecksum);
  if (blk == null) {
    HFile.LOG.warn("HBase checksum verification failed for file " + path + " at offset "+ offset+ " filesize "+ fileSize+ ". Retrying read with HDFS checksums turned on...");
    if (!doVerificationThruHBaseChecksum) {
      String msg="HBase checksum verification failed for file " + path + " at offset "+ offset+ " filesize "+ fileSize+ " but this cannot happen because doVerify is "+ doVerificationThruHBaseChecksum;
      HFile.LOG.warn(msg);
      throw new IOException(msg);
    }
    HFile.checksumFailures.incrementAndGet();
    this.checksumOffCount=CHECKSUM_VERIFICATION_NUM_IO_THRESHOLD;
    this.useHBaseChecksum=false;
    doVerificationThruHBaseChecksum=false;
    is=this.istream;
    blk=readBlockDataInternal(is,offset,onDiskSizeWithHeaderL,uncompressedSize,pread,doVerificationThruHBaseChecksum);
    if (blk != null) {
      HFile.LOG.warn("HDFS checksum verification suceeded for file " + path + " at offset "+ offset+ " filesize "+ fileSize);
    }
  }
  if (blk == null && !doVerificationThruHBaseChecksum) {
    String msg="readBlockData failed, possibly due to " + "checksum verification failed for file " + path + " at offset "+ offset+ " filesize "+ fileSize;
    HFile.LOG.warn(msg);
    throw new IOException(msg);
  }
  if (!this.useHBaseChecksum && this.useHBaseChecksumConfigured) {
    if (this.checksumOffCount-- < 0) {
      this.useHBaseChecksum=true;
    }
  }
  return blk;
}
