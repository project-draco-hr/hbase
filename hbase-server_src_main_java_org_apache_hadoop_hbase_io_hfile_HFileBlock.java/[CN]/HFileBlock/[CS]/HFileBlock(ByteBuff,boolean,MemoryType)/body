{
  b.rewind();
  blockType=BlockType.read(b);
  onDiskSizeWithoutHeader=b.getInt();
  uncompressedSizeWithoutHeader=b.getInt();
  prevBlockOffset=b.getLong();
  HFileContextBuilder contextBuilder=new HFileContextBuilder();
  contextBuilder.withHBaseCheckSum(usesHBaseChecksum);
  if (usesHBaseChecksum) {
    contextBuilder.withChecksumType(ChecksumType.codeToType(b.get()));
    contextBuilder.withBytesPerCheckSum(b.getInt());
    this.onDiskDataSizeWithHeader=b.getInt();
  }
 else {
    contextBuilder.withChecksumType(ChecksumType.NULL);
    contextBuilder.withBytesPerCheckSum(0);
    this.onDiskDataSizeWithHeader=onDiskSizeWithoutHeader + HConstants.HFILEBLOCK_HEADER_SIZE_NO_CHECKSUM;
  }
  this.fileContext=contextBuilder.build();
  this.memType=memType;
  buf=b;
  buf.rewind();
}
