{
  if (onDiskSizeWithoutHeader != expectedOnDiskSizeWithoutHeader) {
    String dataBegin=null;
    if (buf.hasArray()) {
      dataBegin=Bytes.toStringBinary(buf.array(),buf.arrayOffset(),Math.min(32,buf.limit()));
    }
 else {
      ByteBuff bufDup=getBufferReadOnly();
      byte[] dataBeginBytes=new byte[Math.min(32,bufDup.limit() - bufDup.position())];
      bufDup.get(dataBeginBytes);
      dataBegin=Bytes.toStringBinary(dataBeginBytes);
    }
    String blockInfoMsg="Block offset: " + offset + ", data starts with: "+ dataBegin;
    throw new IOException("On-disk size without header provided is " + expectedOnDiskSizeWithoutHeader + ", but block "+ "header contains "+ onDiskSizeWithoutHeader+ ". "+ blockInfoMsg);
  }
}
