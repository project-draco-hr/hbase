{
  if (!fileContext.isCompressedOrEncrypted()) {
    return this;
  }
  HFileBlock unpacked=new HFileBlock(this);
  unpacked.allocateBuffer();
  HFileBlockDecodingContext ctx=blockType == BlockType.ENCODED_DATA ? reader.getBlockDecodingContext() : reader.getDefaultBlockDecodingContext();
  ByteBuffer dup=this.buf.duplicate();
  dup.position(this.headerSize());
  dup=dup.slice();
  ctx.prepareDecoding(unpacked.getOnDiskSizeWithoutHeader(),unpacked.getUncompressedSizeWithoutHeader(),unpacked.getBufferWithoutHeader(),dup);
  if (unpacked.hasNextBlockHeader()) {
    ByteBuffer inDup=this.buf.duplicate();
    inDup.limit(inDup.limit() + headerSize());
    ByteBuffer outDup=unpacked.buf.duplicate();
    outDup.limit(outDup.limit() + unpacked.headerSize());
    ByteBufferUtils.copyFromBufferToBuffer(outDup,inDup,this.onDiskDataSizeWithHeader,unpacked.headerSize() + unpacked.uncompressedSizeWithoutHeader + unpacked.totalChecksumBytes(),unpacked.headerSize());
  }
  return unpacked;
}
