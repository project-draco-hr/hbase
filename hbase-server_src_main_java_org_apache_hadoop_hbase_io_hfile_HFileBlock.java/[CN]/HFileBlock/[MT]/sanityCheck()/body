{
  ByteBuff dup=this.buf.duplicate().rewind();
  sanityCheckAssertion(BlockType.read(dup),blockType);
  sanityCheckAssertion(dup.getInt(),onDiskSizeWithoutHeader,"onDiskSizeWithoutHeader");
  sanityCheckAssertion(dup.getInt(),uncompressedSizeWithoutHeader,"uncompressedSizeWithoutHeader");
  sanityCheckAssertion(dup.getLong(),prevBlockOffset,"prevBlockOffset");
  if (this.fileContext.isUseHBaseChecksum()) {
    sanityCheckAssertion(dup.get(),this.fileContext.getChecksumType().getCode(),"checksumType");
    sanityCheckAssertion(dup.getInt(),this.fileContext.getBytesPerChecksum(),"bytesPerChecksum");
    sanityCheckAssertion(dup.getInt(),onDiskDataSizeWithHeader,"onDiskDataSizeWithHeader");
  }
  int cksumBytes=totalChecksumBytes();
  int expectedBufLimit=onDiskDataSizeWithHeader + cksumBytes;
  if (dup.limit() != expectedBufLimit) {
    throw new AssertionError("Expected limit " + expectedBufLimit + ", got "+ dup.limit());
  }
  int hdrSize=headerSize();
  if (dup.capacity() != expectedBufLimit && dup.capacity() != expectedBufLimit + hdrSize) {
    throw new AssertionError("Invalid buffer capacity: " + dup.capacity() + ", expected "+ expectedBufLimit+ " or "+ (expectedBufLimit + hdrSize));
  }
}
