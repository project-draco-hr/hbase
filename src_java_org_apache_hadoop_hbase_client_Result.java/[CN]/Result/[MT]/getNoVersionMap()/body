{
  if (this.familyMap == null) {
    getMap();
  }
  if (isEmpty()) {
    return null;
  }
  NavigableMap<byte[],NavigableMap<byte[],byte[]>> returnMap=new TreeMap<byte[],NavigableMap<byte[],byte[]>>(Bytes.BYTES_COMPARATOR);
  for (  Map.Entry<byte[],NavigableMap<byte[],NavigableMap<Long,byte[]>>> familyEntry : familyMap.entrySet()) {
    NavigableMap<byte[],byte[]> qualifierMap=new TreeMap<byte[],byte[]>(Bytes.BYTES_COMPARATOR);
    for (    Map.Entry<byte[],NavigableMap<Long,byte[]>> qualifierEntry : familyEntry.getValue().entrySet()) {
      byte[] value=qualifierEntry.getValue().get(qualifierEntry.getValue().firstKey());
      qualifierMap.put(qualifierEntry.getKey(),value);
    }
    returnMap.put(familyEntry.getKey(),qualifierMap);
  }
  return returnMap;
}
