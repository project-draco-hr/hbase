{
  this.conf=conf;
  try {
    try {
      if (System.getProperty("test.build.data") == null) {
        File testDir=new File(new File("").getAbsolutePath(),"build/contrib/hbase/test");
        String dir=testDir.getAbsolutePath();
        LOG.info("Setting test.build.data to " + dir);
        System.setProperty("test.build.data",dir);
      }
      if (miniHdfsFilesystem) {
        this.cluster=new MiniDFSCluster(this.conf,2,true,(String[])null);
      }
      this.fs=FileSystem.get(conf);
      this.parentdir=new Path(conf.get(HREGION_DIR,DEFAULT_HREGION_DIR));
      fs.mkdirs(parentdir);
    }
 catch (    Throwable e) {
      LOG.error("Failed setup of FileSystem",e);
      throw e;
    }
    if (this.conf.get(MASTER_ADDRESS) == null) {
      this.conf.set(MASTER_ADDRESS,"localhost:0");
    }
    this.masterRunner=new HMasterRunner();
    this.masterRunnerThread=new Thread(masterRunner,"masterRunner");
    LOG.info("Starting HMaster");
    masterRunnerThread.start();
    while (!masterRunner.isCrashed() && !masterRunner.isInitialized()) {
      try {
        LOG.info("...waiting for HMaster to initialize...");
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
      }
      if (masterRunner.isCrashed()) {
        throw new RuntimeException("HMaster crashed");
      }
    }
    LOG.info("HMaster started.");
    String address=masterRunner.getHMasterAddress().toString();
    this.conf.set(MASTER_ADDRESS,address);
    if (this.conf.get(REGIONSERVER_ADDRESS) == null) {
      this.conf.set(REGIONSERVER_ADDRESS,"localhost:0");
    }
    LOG.info("Starting HRegionServers");
    startRegionServers(this.conf,nRegionNodes);
    LOG.info("HRegionServers running");
    while (!masterRunner.isCrashed() && !masterRunner.isUp()) {
      try {
        LOG.info("Waiting for Mini HBase cluster to start...");
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
      }
      if (masterRunner.isCrashed()) {
        throw new RuntimeException("HMaster crashed");
      }
    }
  }
 catch (  Throwable e) {
    deleteFile(new File(System.getProperty("test.build.data"),"dfs"));
    throw new RuntimeException("Mini HBase cluster did not start");
  }
}
