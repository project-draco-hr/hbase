{
  MiniDFSCluster dfsCluster=null;
  try {
    dfsCluster=new MiniDFSCluster(conf,2,true,(String[])null);
    this.conf.set(HConstants.HBASE_DIR,new Path(dfsCluster.getFileSystem().getHomeDirectory(),"hbase").toString());
    FileSystem dfs=dfsCluster.getFileSystem();
    Path root=dfs.makeQualified(new Path(conf.get(HConstants.HBASE_DIR)));
    dfs.mkdirs(root);
    FileSystem localfs=FileSystem.getLocal(conf);
    String srcTestdata=System.getProperty("src.testdata");
    if (srcTestdata == null) {
      throw new NullPointerException("Define src.test system property");
    }
    Path data=new Path(srcTestdata,"HADOOP-2478-testdata.zip");
    if (!localfs.exists(data)) {
      throw new FileNotFoundException(data.toString());
    }
    FSDataInputStream hs=localfs.open(data);
    ZipInputStream zip=new ZipInputStream(hs);
    unzip(zip,dfs,root);
    zip.close();
    hs.close();
    listPaths(dfs,root,root.toString().length() + 1);
    Migrate u=new Migrate(conf);
    u.run(new String[]{"check"});
    listPaths(dfs,root,root.toString().length() + 1);
    u=new Migrate(conf);
    u.run(new String[]{"upgrade"});
    listPaths(dfs,root,root.toString().length() + 1);
    dfs.delete(new Path(root,HConstants.VERSION_FILE_NAME));
    u=new Migrate(conf);
    u.run(new String[]{"upgrade"});
    listPaths(dfs,root,root.toString().length() + 1);
    u=new Migrate(conf);
    u.run(new String[]{"check"});
    u=new Migrate(conf);
    u.run(new String[]{"upgrade"});
    verify();
  }
  finally {
    if (dfsCluster != null) {
      shutdownDfs(dfsCluster);
    }
  }
}
