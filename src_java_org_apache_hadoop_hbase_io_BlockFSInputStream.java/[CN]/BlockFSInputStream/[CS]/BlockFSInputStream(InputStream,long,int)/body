{
  this.in=in;
  if (!(in instanceof Seekable) || !(in instanceof PositionedReadable)) {
    throw new IllegalArgumentException("In is not an instance of Seekable or PositionedReadable");
  }
  this.fileLength=fileLength;
  this.blockSize=blockSize;
  this.blocks=new SoftValueMap<Long,byte[]>(){
    private long hits, misses;
    public byte[] get(    Object key){
      byte[] value=super.get(key);
      if (value == null) {
        misses++;
      }
 else {
        hits++;
      }
      if (LOG.isDebugEnabled() && ((hits + misses) % 10000) == 0) {
        long hitRate=(100 * hits) / (hits + misses);
        LOG.debug("Hit rate for cache " + hashCode() + ": "+ hitRate+ "%");
      }
      return value;
    }
  }
;
  final int hashcode=hashCode();
  this.registration=EXECUTOR.scheduleAtFixedRate(new Runnable(){
    public void run(){
      int cleared=checkReferences();
      if (LOG.isDebugEnabled() && cleared > 0) {
        LOG.debug("Cleared " + cleared + " in "+ hashcode);
      }
    }
  }
,10,10,TimeUnit.SECONDS);
}
