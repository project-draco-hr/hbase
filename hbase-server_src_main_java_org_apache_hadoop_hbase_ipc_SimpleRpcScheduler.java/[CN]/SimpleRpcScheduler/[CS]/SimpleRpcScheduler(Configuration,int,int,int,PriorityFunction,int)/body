{
  int maxQueueLength=conf.getInt("ipc.server.max.callqueue.length",handlerCount * RpcServer.DEFAULT_MAX_CALLQUEUE_LENGTH_PER_HANDLER);
  this.handlerCount=handlerCount;
  this.priorityHandlerCount=priorityHandlerCount;
  this.replicationHandlerCount=replicationHandlerCount;
  this.priority=priority;
  this.highPriorityLevel=highPriorityLevel;
  String callQueueType=conf.get(CALL_QUEUE_TYPE_CONF_KEY,CALL_QUEUE_TYPE_DEADLINE_CONF_VALUE);
  LOG.debug("Using " + callQueueType + " as user call queue");
  if (callQueueType.equals(CALL_QUEUE_TYPE_DEADLINE_CONF_VALUE)) {
    this.callQueue=new BoundedPriorityBlockingQueue<CallRunner>(maxQueueLength,new CallPriorityComparator(conf,this.priority));
  }
 else {
    this.callQueue=new LinkedBlockingQueue<CallRunner>(maxQueueLength);
  }
  this.priorityCallQueue=priorityHandlerCount > 0 ? new LinkedBlockingQueue<CallRunner>(maxQueueLength) : null;
  this.replicationQueue=replicationHandlerCount > 0 ? new LinkedBlockingQueue<CallRunner>(maxQueueLength) : null;
}
