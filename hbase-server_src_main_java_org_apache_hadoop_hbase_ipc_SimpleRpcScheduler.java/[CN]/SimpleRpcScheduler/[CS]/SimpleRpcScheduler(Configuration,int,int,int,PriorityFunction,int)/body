{
  int maxQueueLength=conf.getInt("ipc.server.max.callqueue.length",handlerCount * RpcServer.DEFAULT_MAX_CALLQUEUE_LENGTH_PER_HANDLER);
  this.priority=priority;
  this.highPriorityLevel=highPriorityLevel;
  String callQueueType=conf.get(CALL_QUEUE_TYPE_CONF_KEY,CALL_QUEUE_TYPE_DEADLINE_CONF_VALUE);
  float callqReadShare=conf.getFloat(CALL_QUEUE_READ_SHARE_CONF_KEY,0);
  float callQueuesHandlersFactor=conf.getFloat(CALL_QUEUE_HANDLER_FACTOR_CONF_KEY,0);
  int numCallQueues=Math.max(1,(int)Math.round(handlerCount * callQueuesHandlersFactor));
  LOG.info("Using " + callQueueType + " as user call queue, count="+ numCallQueues);
  if (numCallQueues > 1 && callqReadShare > 0) {
    if (callQueueType.equals(CALL_QUEUE_TYPE_DEADLINE_CONF_VALUE)) {
      CallPriorityComparator callPriority=new CallPriorityComparator(conf,this.priority);
      callExecutor=new RWQueueRpcExecutor("default",handlerCount,numCallQueues,callqReadShare,maxQueueLength,BoundedPriorityBlockingQueue.class,callPriority);
    }
 else {
      callExecutor=new RWQueueRpcExecutor("default",handlerCount,numCallQueues,callqReadShare,maxQueueLength);
    }
  }
 else   if (numCallQueues > 1) {
    if (callQueueType.equals(CALL_QUEUE_TYPE_DEADLINE_CONF_VALUE)) {
      CallPriorityComparator callPriority=new CallPriorityComparator(conf,this.priority);
      callExecutor=new MultipleQueueRpcExecutor("default",handlerCount,numCallQueues,BoundedPriorityBlockingQueue.class,maxQueueLength,callPriority);
    }
 else {
      callExecutor=new MultipleQueueRpcExecutor("default",handlerCount,numCallQueues,maxQueueLength);
    }
  }
 else {
    if (callQueueType.equals(CALL_QUEUE_TYPE_DEADLINE_CONF_VALUE)) {
      CallPriorityComparator callPriority=new CallPriorityComparator(conf,this.priority);
      callExecutor=new SingleQueueRpcExecutor("default",handlerCount,BoundedPriorityBlockingQueue.class,maxQueueLength,callPriority);
    }
 else {
      callExecutor=new SingleQueueRpcExecutor("default",handlerCount,maxQueueLength);
    }
  }
  this.priorityExecutor=priorityHandlerCount > 0 ? new SingleQueueRpcExecutor("Priority",priorityHandlerCount,maxQueueLength) : null;
  this.replicationExecutor=replicationHandlerCount > 0 ? new SingleQueueRpcExecutor("Replication",replicationHandlerCount,maxQueueLength) : null;
}
