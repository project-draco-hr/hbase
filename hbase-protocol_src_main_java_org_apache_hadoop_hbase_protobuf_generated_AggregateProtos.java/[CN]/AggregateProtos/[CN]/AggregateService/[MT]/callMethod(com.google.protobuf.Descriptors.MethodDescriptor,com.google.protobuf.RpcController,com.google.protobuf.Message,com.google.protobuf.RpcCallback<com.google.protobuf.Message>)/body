{
  if (method.getService() != getDescriptor()) {
    throw new java.lang.IllegalArgumentException("Service.callMethod() given method descriptor for wrong " + "service type.");
  }
switch (method.getIndex()) {
case 0:
    this.getMax(controller,(org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateResponse>specializeCallback(done));
  return;
case 1:
this.getMin(controller,(org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateResponse>specializeCallback(done));
return;
case 2:
this.getSum(controller,(org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateResponse>specializeCallback(done));
return;
case 3:
this.getRowNum(controller,(org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateResponse>specializeCallback(done));
return;
case 4:
this.getAvg(controller,(org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateResponse>specializeCallback(done));
return;
case 5:
this.getStd(controller,(org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateResponse>specializeCallback(done));
return;
case 6:
this.getMedian(controller,(org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AggregateProtos.AggregateResponse>specializeCallback(done));
return;
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
