{
  HRegionIncommon loader=new HRegionIncommon(r);
  for (int i=0; i < compactionThreshold + 1; i++) {
    addContent(loader,Bytes.toString(fam1),Bytes.toString(col1),firstRowBytes,thirdRowBytes,i);
    addContent(loader,Bytes.toString(fam1),Bytes.toString(col2),firstRowBytes,thirdRowBytes,i);
    addContent(loader,Bytes.toString(fam2),Bytes.toString(col1),firstRowBytes,thirdRowBytes,i);
    addContent(loader,Bytes.toString(fam2),Bytes.toString(col2),firstRowBytes,thirdRowBytes,i);
    r.flushcache();
  }
  Result result=r.get(new Get(firstRowBytes).addColumn(fam1,col1).setMaxVersions(100),null);
  assertEquals(compactionThreshold,result.size());
  result=r.get(new Get(secondRowBytes).addColumn(fam2,col2).setMaxVersions(100),null);
  assertEquals(compactionThreshold,result.size());
  r.delete(delete,null,true);
  result=r.get(new Get(secondRowBytes).addColumn(fam2,col2).setMaxVersions(100),null);
  assertEquals(expectedResultsAfterDelete,result.size());
  result=r.get(new Get(firstRowBytes).addColumn(fam1,col1).setMaxVersions(100),null);
  assertEquals(compactionThreshold,result.size());
  r.flushcache();
  result=r.get(new Get(secondRowBytes).addColumn(fam2,col2).setMaxVersions(100),null);
  assertEquals(expectedResultsAfterDelete,result.size());
  result=r.get(new Get(firstRowBytes).addColumn(fam1,col1).setMaxVersions(100),null);
  assertEquals(compactionThreshold,result.size());
  Store store2=this.r.stores.get(fam2);
  int numFiles1=store2.getStorefiles().size();
  assertTrue("Was expecting to see 4 store files",numFiles1 > compactionThreshold);
  store2.compactRecent(compactionThreshold);
  int numFiles2=store2.getStorefiles().size();
  assertTrue("Number of store files should go down",numFiles1 > numFiles2);
  assertTrue("Was not supposed to be a major compaction",numFiles2 > 1);
  result=r.get(new Get(secondRowBytes).addColumn(fam2,col2).setMaxVersions(100),null);
  assertEquals(expectedResultsAfterDelete,result.size());
  result=r.get(new Get(firstRowBytes).addColumn(fam1,col1).setMaxVersions(100),null);
  assertEquals(compactionThreshold,result.size());
}
