{
  HStoreKey firstCandidateKey=candidateKeys.firstKey();
  byte[] searchKey=null;
  HStoreKey.StoreKeyComparator c=(HStoreKey.StoreKeyComparator)f.getReader().getComparator();
  if (c.compareRows(firstCandidateKey.getRow(),startKey.getRow()) < 0) {
    searchKey=startKey.getBytes();
  }
 else {
    searchKey=new HStoreKey(firstCandidateKey.getRow()).getBytes();
  }
  HFileScanner scanner=f.getReader().getScanner();
  int result=scanner.seekTo(searchKey);
  if (result < 0) {
    return;
  }
  do {
    HStoreKey k=HStoreKey.create(scanner.getKey());
    ByteBuffer v=scanner.getValue();
    if (HStoreKey.equalsTwoRowKeys(k.getRow(),row)) {
      handleKey(k,v,now,deletes,candidateKeys);
    }
 else     if (this.rawcomparator.compareRows(k.getRow(),row) > 0) {
      break;
    }
 else {
      handleKey(k,v,now,deletes,candidateKeys);
    }
  }
 while (scanner.next());
}
