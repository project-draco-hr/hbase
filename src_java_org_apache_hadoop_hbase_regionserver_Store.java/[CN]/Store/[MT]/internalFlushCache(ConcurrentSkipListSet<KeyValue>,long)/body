{
  HFile.Writer writer=null;
  long flushed=0;
  if (cache.size() == 0) {
    return null;
  }
  long oldestTimestamp=System.currentTimeMillis() - ttl;
synchronized (flushLock) {
    writer=getWriter();
    int entries=0;
    try {
      for (      KeyValue kv : cache) {
        if (!isExpired(kv,oldestTimestamp)) {
          writer.append(kv);
          entries++;
          flushed+=this.memcache.heapSize(kv,true);
        }
      }
      StoreFile.appendMetadata(writer,logCacheFlushId);
    }
  finally {
      writer.close();
    }
  }
  StoreFile sf=new StoreFile(this.fs,writer.getPath(),this.conf);
  this.storeSize+=sf.getReader().length();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Added " + sf + ", entries="+ sf.getReader().getEntries()+ ", sequenceid="+ logCacheFlushId+ ", memsize="+ StringUtils.humanReadableInt(flushed)+ ", filesize="+ StringUtils.humanReadableInt(sf.getReader().length())+ " to "+ this.regioninfo.getRegionNameAsString());
  }
  return sf;
}
