{
  NavigableMap<HStoreKey,Long> candidateKeys=new TreeMap<HStoreKey,Long>(this.comparator);
  Set<HStoreKey> deletes=new HashSet<HStoreKey>();
  this.lock.readLock().lock();
  try {
    this.memcache.getRowKeyAtOrBefore(row,candidateKeys,deletes);
    Map<Long,StoreFile> m=this.storefiles.descendingMap();
    for (    Map.Entry<Long,StoreFile> e : m.entrySet()) {
      rowAtOrBeforeFromStoreFile(e.getValue(),row,candidateKeys,deletes);
    }
    byte[] result=candidateKeys.isEmpty() ? null : candidateKeys.lastKey().getRow();
    return result;
  }
  finally {
    this.lock.readLock().unlock();
  }
}
