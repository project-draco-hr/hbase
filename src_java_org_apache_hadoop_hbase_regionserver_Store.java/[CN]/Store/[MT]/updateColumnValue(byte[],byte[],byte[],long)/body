{
  List<KeyValue> result=new ArrayList<KeyValue>();
  KeyComparator keyComparator=this.comparator.getRawComparator();
  KeyValue kv=null;
  Get get=new Get(row);
  NavigableSet<byte[]> qualifiers=new TreeSet<byte[]>(Bytes.BYTES_COMPARATOR);
  qualifiers.add(qualifier);
  QueryMatcher matcher=new QueryMatcher(get,f,qualifiers,this.ttl,keyComparator,1);
  this.lock.readLock().lock();
  memstore.readLockLock();
  try {
    int memstoreCode=this.memstore.getWithCode(matcher,result);
    if (memstoreCode != 0) {
      kv=result.get(0).clone();
      byte[] buffer=kv.getBuffer();
      int valueOffset=kv.getValueOffset();
      Bytes.putBytes(buffer,valueOffset,Bytes.toBytes(newValue),0,Bytes.SIZEOF_LONG);
      if (memstoreCode == 2) {
        long currTs=System.currentTimeMillis();
        if (currTs == kv.getTimestamp()) {
          currTs++;
        }
        Bytes.putBytes(buffer,kv.getTimestampOffset(),Bytes.toBytes(currTs),0,Bytes.SIZEOF_LONG);
      }
    }
 else {
      kv=new KeyValue(row,f,qualifier,System.currentTimeMillis(),Bytes.toBytes(newValue));
    }
    return add(kv);
  }
  finally {
    memstore.readLockUnlock();
    this.lock.readLock().unlock();
  }
}
