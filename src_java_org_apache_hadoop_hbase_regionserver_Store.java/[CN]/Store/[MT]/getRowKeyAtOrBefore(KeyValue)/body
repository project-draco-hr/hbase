{
  NavigableSet<KeyValue> candidates=new TreeSet<KeyValue>(this.comparator.getComparatorIgnoringType());
  NavigableSet<KeyValue> deletes=new TreeSet<KeyValue>(this.comparatorIgnoringType);
  long now=System.currentTimeMillis();
  this.lock.readLock().lock();
  try {
    this.memstore.getRowKeyAtOrBefore(targetkey,candidates,deletes,now);
    Map<Long,StoreFile> m=this.storefiles.descendingMap();
    for (    Map.Entry<Long,StoreFile> e : m.entrySet()) {
      rowAtOrBeforeFromStoreFile(e.getValue(),targetkey,candidates,deletes,now);
    }
    return candidates.isEmpty() ? null : candidates.last();
  }
  finally {
    this.lock.readLock().unlock();
  }
}
