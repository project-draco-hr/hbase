{
  Configuration conf=HBaseConfiguration.create();
  InetSocketAddress isa=new InetSocketAddress("localhost",0);
  TestRpcImpl instance=new TestRpcImpl(delayReturnValue);
  rpcServer=HBaseServerRPC.getServer(instance.getClass(),instance,new Class<?>[]{TestRpcImpl.class},isa.getHostName(),isa.getPort(),1,0,true,conf,0);
  rpcServer.start();
  ProtobufRpcClientEngine clientEngine=new ProtobufRpcClientEngine(conf,HConstants.CLUSTER_ID_DEFAULT);
  try {
    TestRpc client=clientEngine.getProxy(TestRpc.class,rpcServer.getListenerAddress(),conf,1000);
    List<Integer> results=new ArrayList<Integer>();
    TestThread th1=new TestThread(client,true,results);
    TestThread th2=new TestThread(client,false,results);
    TestThread th3=new TestThread(client,false,results);
    th1.start();
    Thread.sleep(100);
    th2.start();
    Thread.sleep(200);
    th3.start();
    th1.join();
    th2.join();
    th3.join();
    assertEquals(UNDELAYED,results.get(0).intValue());
    assertEquals(UNDELAYED,results.get(1).intValue());
    assertEquals(results.get(2).intValue(),delayReturnValue ? DELAYED : 0xDEADBEEF);
  }
  finally {
    clientEngine.close();
  }
}
