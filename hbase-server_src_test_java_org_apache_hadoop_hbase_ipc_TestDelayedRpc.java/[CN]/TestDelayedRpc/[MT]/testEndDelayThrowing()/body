{
  Configuration conf=HBaseConfiguration.create();
  InetSocketAddress isa=new InetSocketAddress("localhost",0);
  FaultyTestRpc instance=new FaultyTestRpc();
  rpcServer=HBaseServerRPC.getServer(instance.getClass(),instance,new Class<?>[]{TestRpcImpl.class},isa.getHostName(),isa.getPort(),1,0,true,conf,0);
  rpcServer.start();
  ProtobufRpcClientEngine clientEngine=new ProtobufRpcClientEngine(conf,HConstants.CLUSTER_ID_DEFAULT);
  try {
    TestRpc client=clientEngine.getProxy(TestRpc.class,rpcServer.getListenerAddress(),conf,1000);
    int result=0xDEADBEEF;
    try {
      result=client.test(null,TestArg.newBuilder().setDelay(false).build()).getResponse();
    }
 catch (    Exception e) {
      fail("No exception should have been thrown.");
    }
    assertEquals(result,UNDELAYED);
    boolean caughtException=false;
    try {
      result=client.test(null,TestArg.newBuilder().setDelay(true).build()).getResponse();
    }
 catch (    Exception e) {
      if (e.getCause().getMessage().contains("java.lang.Exception: Something went wrong"))       caughtException=true;
      LOG.warn(e);
    }
    assertTrue(caughtException);
  }
  finally {
    clientEngine.close();
  }
}
