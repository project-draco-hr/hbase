{
  HBaseAdmin admin=new HBaseAdmin(this.conf);
  for (  HTableDescriptor htd : admin.listTables()) {
    if (!htd.isMetaTable()) {
      String tableName=htd.getNameAsString();
      if (admin.isTableEnabled(tableName)) {
        try {
          admin.disableTable(htd.getNameAsString());
        }
 catch (        TableNotEnabledException e) {
        }
      }
    }
  }
  assertAllRegionServers(regionServerSystemCoprocessors,null);
  String userTable1="userTable1";
  HTableDescriptor userTD1=new HTableDescriptor(userTable1);
  admin.createTable(userTD1);
  assertTrue(admin.isTableEnabled(userTable1));
  assertAllRegionServers(regionServerSystemAndUserCoprocessors,userTable1);
  admin.disableTable(userTable1);
  assertAllRegionServers(regionServerSystemCoprocessors,null);
  String userTable2="userTable2";
  HTableDescriptor htd2=new HTableDescriptor(userTable2);
  String userTableCP="userTableCP";
  File jarFile1=buildCoprocessorJar(userTableCP);
  htd2.addFamily(new HColumnDescriptor("myfamily"));
  htd2.setValue("COPROCESSOR$1",jarFile1.toString() + "|" + userTableCP+ "|"+ Coprocessor.PRIORITY_USER);
  admin.createTable(htd2);
  assertTrue(admin.isTableEnabled(userTable2));
  ArrayList<String> existingCPsPlusNew=new ArrayList<String>(Arrays.asList(regionServerSystemAndUserCoprocessors));
  existingCPsPlusNew.add(userTableCP);
  String[] existingCPsPlusNewArray=new String[existingCPsPlusNew.size()];
  assertAllRegionServers(existingCPsPlusNew.toArray(existingCPsPlusNewArray),userTable2);
  admin.disableTable(userTable2);
  assertTrue(admin.isTableDisabled(userTable2));
  assertAllRegionServers(regionServerSystemCoprocessors,null);
}
