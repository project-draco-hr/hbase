{
  ExceptionListener<Exception> listener1=Mockito.mock(ExceptionListener.class);
  ExceptionListener<Exception> listener2=Mockito.mock(ExceptionListener.class);
  ExceptionDispatcher<? extends ExceptionListener<Exception>,Exception> monitor=new ExceptionDispatcher<ExceptionListener<Exception>,Exception>();
  monitor.addErrorListener(monitor.genericVisitor,listener1);
  monitor.addErrorListener(monitor.genericVisitor,listener2);
  String message="Some error";
  Exception expected=new ExceptionForTesting("error");
  Object info="info1";
  monitor.receiveError(message,expected,info);
  Mockito.verify(listener1).receiveError(message,expected,info);
  Mockito.verify(listener2).receiveError(message,expected,info);
  try {
    monitor.failOnError();
    fail("Monitor should have thrown an exception after getting error.");
  }
 catch (  Exception e) {
    assertTrue("Got an unexpected exception:" + e,e instanceof ExceptionForTesting);
    LOG.debug("Got the testing exception!");
  }
  monitor.receiveError("another error",new ExceptionForTesting("hello"),"shouldn't be found");
  Mockito.verifyNoMoreInteractions(listener1,listener2);
}
