{
  LOG.info("testLogCleaning");
  final byte[] tableName=Bytes.toBytes("testLogCleaning");
  final byte[] tableName2=Bytes.toBytes("testLogCleaning2");
  HLog log=new HLog(fs,dir,oldLogDir,conf);
  HRegionInfo hri=new HRegionInfo(new HTableDescriptor(tableName),HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
  HRegionInfo hri2=new HRegionInfo(new HTableDescriptor(tableName2),HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
  addEdits(log,hri,tableName,1);
  log.rollWriter();
  assertEquals(1,log.getNumLogFiles());
  addEdits(log,hri,tableName,2);
  log.rollWriter();
  assertEquals(2,log.getNumLogFiles());
  addEdits(log,hri,tableName,1);
  addEdits(log,hri2,tableName2,1);
  addEdits(log,hri,tableName,1);
  addEdits(log,hri2,tableName2,1);
  log.rollWriter();
  assertEquals(3,log.getNumLogFiles());
  long seqId=log.startCacheFlush();
  log.completeCacheFlush(hri.getEncodedNameAsBytes(),tableName,seqId,false);
  log.rollWriter();
  assertEquals(2,log.getNumLogFiles());
  seqId=log.startCacheFlush();
  log.completeCacheFlush(hri2.getEncodedNameAsBytes(),tableName2,seqId,false);
  log.rollWriter();
  assertEquals(0,log.getNumLogFiles());
}
