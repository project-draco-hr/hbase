{
  return new MasterAdminService(){
    @java.lang.Override public void addColumn(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.AddColumnRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.AddColumnResponse> done){
      impl.addColumn(controller,request,done);
    }
    @java.lang.Override public void deleteColumn(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DeleteColumnRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DeleteColumnResponse> done){
      impl.deleteColumn(controller,request,done);
    }
    @java.lang.Override public void modifyColumn(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.ModifyColumnRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.ModifyColumnResponse> done){
      impl.modifyColumn(controller,request,done);
    }
    @java.lang.Override public void moveRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.MoveRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.MoveRegionResponse> done){
      impl.moveRegion(controller,request,done);
    }
    @java.lang.Override public void dispatchMergingRegions(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DispatchMergingRegionsRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DispatchMergingRegionsResponse> done){
      impl.dispatchMergingRegions(controller,request,done);
    }
    @java.lang.Override public void assignRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.AssignRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.AssignRegionResponse> done){
      impl.assignRegion(controller,request,done);
    }
    @java.lang.Override public void unassignRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.UnassignRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.UnassignRegionResponse> done){
      impl.unassignRegion(controller,request,done);
    }
    @java.lang.Override public void offlineRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.OfflineRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.OfflineRegionResponse> done){
      impl.offlineRegion(controller,request,done);
    }
    @java.lang.Override public void deleteTable(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DeleteTableRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DeleteTableResponse> done){
      impl.deleteTable(controller,request,done);
    }
    @java.lang.Override public void enableTable(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.EnableTableRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.EnableTableResponse> done){
      impl.enableTable(controller,request,done);
    }
    @java.lang.Override public void disableTable(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DisableTableRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DisableTableResponse> done){
      impl.disableTable(controller,request,done);
    }
    @java.lang.Override public void modifyTable(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.ModifyTableRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.ModifyTableResponse> done){
      impl.modifyTable(controller,request,done);
    }
    @java.lang.Override public void createTable(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.CreateTableRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.CreateTableResponse> done){
      impl.createTable(controller,request,done);
    }
    @java.lang.Override public void shutdown(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.ShutdownRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.ShutdownResponse> done){
      impl.shutdown(controller,request,done);
    }
    @java.lang.Override public void stopMaster(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.StopMasterRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.StopMasterResponse> done){
      impl.stopMaster(controller,request,done);
    }
    @java.lang.Override public void balance(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.BalanceRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.BalanceResponse> done){
      impl.balance(controller,request,done);
    }
    @java.lang.Override public void setBalancerRunning(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.SetBalancerRunningRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.SetBalancerRunningResponse> done){
      impl.setBalancerRunning(controller,request,done);
    }
    @java.lang.Override public void runCatalogScan(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.CatalogScanRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.CatalogScanResponse> done){
      impl.runCatalogScan(controller,request,done);
    }
    @java.lang.Override public void enableCatalogJanitor(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.EnableCatalogJanitorRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.EnableCatalogJanitorResponse> done){
      impl.enableCatalogJanitor(controller,request,done);
    }
    @java.lang.Override public void isCatalogJanitorEnabled(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.IsCatalogJanitorEnabledRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.IsCatalogJanitorEnabledResponse> done){
      impl.isCatalogJanitorEnabled(controller,request,done);
    }
    @java.lang.Override public void execMasterService(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.ClientProtos.CoprocessorServiceRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.ClientProtos.CoprocessorServiceResponse> done){
      impl.execMasterService(controller,request,done);
    }
    @java.lang.Override public void snapshot(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.TakeSnapshotRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.TakeSnapshotResponse> done){
      impl.snapshot(controller,request,done);
    }
    @java.lang.Override public void getCompletedSnapshots(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.ListSnapshotRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.ListSnapshotResponse> done){
      impl.getCompletedSnapshots(controller,request,done);
    }
    @java.lang.Override public void deleteSnapshot(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DeleteSnapshotRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.DeleteSnapshotResponse> done){
      impl.deleteSnapshot(controller,request,done);
    }
    @java.lang.Override public void isSnapshotDone(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.IsSnapshotDoneRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.IsSnapshotDoneResponse> done){
      impl.isSnapshotDone(controller,request,done);
    }
    @java.lang.Override public void restoreSnapshot(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.RestoreSnapshotRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.RestoreSnapshotResponse> done){
      impl.restoreSnapshot(controller,request,done);
    }
    @java.lang.Override public void isRestoreSnapshotDone(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.IsRestoreSnapshotDoneRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.MasterAdminProtos.IsRestoreSnapshotDoneResponse> done){
      impl.isRestoreSnapshotDone(controller,request,done);
    }
  }
;
}
