{
  LOG.info("Verify wal roll after split starts will fail.");
  String logName="testLogRollAfterSplitStart";
  Path thisTestsDir=new Path(HBASEDIR,DefaultWALProvider.getWALDirectoryName(logName));
  final WALFactory wals=new WALFactory(conf,null,logName);
  try {
    TableName tableName=TableName.valueOf(this.getClass().getName());
    HRegionInfo regioninfo=new HRegionInfo(tableName,HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
    final WAL log=wals.getWAL(regioninfo.getEncodedNameAsBytes(),regioninfo.getTable().getNamespace());
    MultiVersionConcurrencyControl mvcc=new MultiVersionConcurrencyControl(1);
    final int total=20;
    for (int i=0; i < total; i++) {
      WALEdit kvs=new WALEdit();
      kvs.add(new KeyValue(Bytes.toBytes(i),tableName.getName(),tableName.getName()));
      HTableDescriptor htd=new HTableDescriptor(tableName);
      htd.addFamily(new HColumnDescriptor("column"));
      NavigableMap<byte[],Integer> scopes=new TreeMap<byte[],Integer>(Bytes.BYTES_COMPARATOR);
      for (      byte[] fam : htd.getFamiliesKeys()) {
        scopes.put(fam,0);
      }
      log.append(regioninfo,new WALKey(regioninfo.getEncodedNameAsBytes(),tableName,System.currentTimeMillis(),mvcc,scopes),kvs,true);
    }
    log.sync();
    ((FSHLog)log).replaceWriter(((FSHLog)log).getOldPath(),null,null,null);
    Path rsSplitDir=thisTestsDir.suffix(DefaultWALProvider.SPLITTING_EXT);
    if (!fs.rename(thisTestsDir,rsSplitDir)) {
      throw new IOException("Failed fs.rename for log split: " + thisTestsDir);
    }
    LOG.debug("Renamed region directory: " + rsSplitDir);
    LOG.debug("Processing the old log files.");
    WALSplitter.split(HBASEDIR,rsSplitDir,OLDLOGDIR,fs,conf,wals);
    LOG.debug("Trying to roll the WAL.");
    try {
      log.rollWriter();
      Assert.fail("rollWriter() did not throw any exception.");
    }
 catch (    IOException ioe) {
      if (ioe.getCause() instanceof FileNotFoundException) {
        LOG.info("Got the expected exception: ",ioe.getCause());
      }
 else {
        Assert.fail("Unexpected exception: " + ioe);
      }
    }
  }
  finally {
    wals.close();
    if (fs.exists(thisTestsDir)) {
      fs.delete(thisTestsDir,true);
    }
  }
}
