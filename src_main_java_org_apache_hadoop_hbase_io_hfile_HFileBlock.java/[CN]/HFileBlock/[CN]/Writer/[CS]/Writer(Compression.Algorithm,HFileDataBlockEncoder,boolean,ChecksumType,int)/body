{
  compressAlgo=compressionAlgorithm == null ? NONE : compressionAlgorithm;
  this.dataBlockEncoder=dataBlockEncoder != null ? dataBlockEncoder : NoOpDataBlockEncoder.INSTANCE;
  baosInMemory=new ByteArrayOutputStream();
  if (compressAlgo != NONE) {
    compressor=compressionAlgorithm.getCompressor();
    compressedByteStream=new ByteArrayOutputStream();
    try {
      compressionStream=compressionAlgorithm.createPlainCompressionStream(compressedByteStream,compressor);
    }
 catch (    IOException e) {
      throw new RuntimeException("Could not create compression stream " + "for algorithm " + compressionAlgorithm,e);
    }
  }
  if (bytesPerChecksum < HEADER_SIZE) {
    throw new RuntimeException("Unsupported value of bytesPerChecksum. " + " Minimum is " + HEADER_SIZE + " but the configured value is "+ bytesPerChecksum);
  }
  prevOffsetByType=new long[BlockType.values().length];
  for (int i=0; i < prevOffsetByType.length; ++i)   prevOffsetByType[i]=-1;
  this.includesMemstoreTS=includesMemstoreTS;
  this.checksumType=checksumType;
  this.bytesPerChecksum=bytesPerChecksum;
}
