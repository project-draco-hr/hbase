{
  if (state == State.BLOCK_READY && startOffset != -1) {
    prevOffsetByType[blockType.ordinal()]=startOffset;
  }
  this.cacheOnWrite=cacheOnWrite;
  startOffset=-1;
  blockType=newBlockType;
  baosOnDisk.reset();
  baosOnDisk.write(DUMMY_HEADER);
  state=State.WRITING;
  if (compressAlgo == NONE) {
    userDataStream=new DataOutputStream(baosOnDisk);
  }
 else {
    OutputStream compressingOutputStream=compressAlgo.createCompressionStream(baosOnDisk,compressor,0);
    if (cacheOnWrite) {
      if (baosInMemory == null)       baosInMemory=new ByteArrayOutputStream();
      baosInMemory.reset();
      baosInMemory.write(DUMMY_HEADER);
      userDataStream=new DataOutputStream(new DoubleOutputStream(compressingOutputStream,baosInMemory));
    }
 else {
      userDataStream=new DataOutputStream(compressingOutputStream);
    }
  }
  return userDataStream;
}
