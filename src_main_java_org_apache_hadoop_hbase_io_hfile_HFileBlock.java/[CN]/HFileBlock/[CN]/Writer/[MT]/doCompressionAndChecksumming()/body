{
  if (compressAlgo != NONE) {
    compressedByteStream.reset();
    compressedByteStream.write(DUMMY_HEADER);
    compressionStream.resetState();
    compressionStream.write(uncompressedBytesWithHeader,HEADER_SIZE,uncompressedBytesWithHeader.length - HEADER_SIZE);
    compressionStream.flush();
    compressionStream.finish();
    onDiskDataSizeWithHeader=compressedByteStream.size();
    ChecksumUtil.reserveSpaceForChecksums(compressedByteStream,onDiskDataSizeWithHeader,bytesPerChecksum);
    onDiskBytesWithHeader=compressedByteStream.toByteArray();
    putHeader(onDiskBytesWithHeader,0,onDiskBytesWithHeader.length,uncompressedBytesWithHeader.length,onDiskDataSizeWithHeader);
    ChecksumUtil.generateChecksums(onDiskBytesWithHeader,0,onDiskDataSizeWithHeader,onDiskBytesWithHeader,onDiskDataSizeWithHeader,checksumType,bytesPerChecksum);
    onDiskChecksum=HConstants.EMPTY_BYTE_ARRAY;
    putHeader(uncompressedBytesWithHeader,0,onDiskBytesWithHeader.length + onDiskChecksum.length,uncompressedBytesWithHeader.length,onDiskDataSizeWithHeader);
  }
 else {
    onDiskBytesWithHeader=uncompressedBytesWithHeader;
    onDiskDataSizeWithHeader=onDiskBytesWithHeader.length;
    int numBytes=(int)ChecksumUtil.numBytes(uncompressedBytesWithHeader.length,bytesPerChecksum);
    onDiskChecksum=new byte[numBytes];
    putHeader(uncompressedBytesWithHeader,0,onDiskBytesWithHeader.length + onDiskChecksum.length,uncompressedBytesWithHeader.length,onDiskDataSizeWithHeader);
    ChecksumUtil.generateChecksums(uncompressedBytesWithHeader,0,uncompressedBytesWithHeader.length,onDiskChecksum,0,checksumType,bytesPerChecksum);
  }
}
