{
  if (LOG.isDebugEnabled()) {
    LOG.debug("processing unserved regions");
  }
  for (  HRegionInfo i : unservedRegions) {
    if (i.offLine && i.isSplit()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Skipping region " + i.toString() + " because it is "+ "offline because it has been split");
      }
      continue;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("updating columns in row: " + i.regionName);
    }
    BatchUpdate b=new BatchUpdate(rand.nextLong());
    lockid=b.startUpdate(i.regionName);
    updateRegionInfo(b,i);
    b.delete(lockid,COL_SERVER);
    b.delete(lockid,COL_STARTCODE);
    for (int tries=0; tries < numRetries; tries++) {
      try {
        server.batchUpdate(m.regionName,System.currentTimeMillis(),b);
        if (LOG.isDebugEnabled()) {
          LOG.debug("updated columns in row: " + i.regionName);
        }
        break;
      }
 catch (      IOException e) {
        if (tries == numRetries - 1) {
          if (e instanceof RemoteException) {
            e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
          }
          LOG.error("column update failed in row: " + i.regionName,e);
          break;
        }
      }
      try {
        Thread.sleep(threadWakeFrequency);
      }
 catch (      InterruptedException e) {
      }
    }
    if (online) {
      if (!unassignedRegions.containsKey(i.regionName)) {
        unassignedRegions.put(i.regionName,i);
        assignAttempts.put(i.regionName,Long.valueOf(0L));
      }
    }
 else {
      unassignedRegions.remove(i.regionName);
      assignAttempts.remove(i.regionName);
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("processing regions currently being served");
  }
  for (  Map.Entry<String,HashSet<HRegionInfo>> e : servedRegions.entrySet()) {
    String serverName=e.getKey();
    if (online) {
      LOG.debug("Already online");
      continue;
    }
    HashMap<Text,HRegionInfo> localKillList=killList.get(serverName);
    if (localKillList == null) {
      localKillList=new HashMap<Text,HRegionInfo>();
    }
    for (    HRegionInfo i : e.getValue()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("adding region " + i.regionName + " to local kill list");
      }
      localKillList.put(i.regionName,i);
    }
    if (localKillList.size() > 0) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("inserted local kill list into kill list for server " + serverName);
      }
      killList.put(serverName,localKillList);
    }
  }
  servedRegions.clear();
}
