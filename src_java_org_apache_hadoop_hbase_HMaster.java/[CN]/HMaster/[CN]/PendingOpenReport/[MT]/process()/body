{
  for (int tries=0; tries < numRetries; tries++) {
    if (metaScanner.waitForMetaScanOrClose()) {
      return;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug(regionName + " open on " + new String(this.serverAddress,UTF8_ENCODING));
    }
    Text metaRegionName;
    HRegionInterface server;
    if (rootRegion) {
      metaRegionName=HGlobals.rootRegionInfo.regionName;
      if (waitForRootRegionOrClose()) {
        return;
      }
      server=client.getHRegionConnection(rootRegionLocation);
    }
 else {
      MetaRegion r=null;
      if (knownMetaRegions.containsKey(regionName)) {
        r=knownMetaRegions.get(regionName);
      }
 else {
        r=knownMetaRegions.get(knownMetaRegions.headMap(regionName).lastKey());
      }
      metaRegionName=r.regionName;
      server=client.getHRegionConnection(r.server);
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("updating row " + regionName + " in table "+ metaRegionName);
    }
    try {
      long lockid=server.startUpdate(metaRegionName,clientId,regionName);
      server.put(metaRegionName,clientId,lockid,COL_SERVER,serverAddress);
      server.put(metaRegionName,clientId,lockid,COL_STARTCODE,startCode);
      server.commit(metaRegionName,clientId,lockid,System.currentTimeMillis());
      break;
    }
 catch (    Exception e) {
      if (tries == numRetries - 1) {
        RemoteExceptionHandler.handleRemoteException(e);
      }
    }
    pendingRegions.remove(regionName);
  }
}
