{
  LOG.info("process shutdown of server " + deadServer + ": logSplit: "+ this.logSplit+ ", rootChecked: "+ this.rootChecked+ ", rootRescanned: "+ this.rootRescanned+ ", numberOfMetaRegions: "+ numberOfMetaRegions.get()+ ", onlineMetaRegions.size(): "+ onlineMetaRegions.size());
  if (!logSplit) {
    if (fs.exists(oldLogDir)) {
      if (!splitLogLock.tryLock()) {
        return false;
      }
      try {
        HLog.splitLog(dir,oldLogDir,fs,conf);
      }
  finally {
        splitLogLock.unlock();
      }
    }
    logSplit=true;
  }
  if (!rootChecked) {
    boolean rootRegionUnavailable=false;
    if (rootRegionLocation.get() == null) {
      rootRegionUnavailable=true;
    }
 else     if (deadServer.equals(rootRegionLocation.get())) {
synchronized (serversToServerInfo) {
        unassignRootRegion();
      }
      rootRegionUnavailable=true;
    }
    if (rootRegionUnavailable) {
      this.expire=System.currentTimeMillis() + leaseTimeout / 2;
      shutdownQueue.put(this);
      return true;
    }
    rootChecked=true;
  }
  if (!rootRescanned) {
    HRegionInterface server=null;
    long scannerId=-1L;
    for (int tries=0; tries < numRetries; tries++) {
      if (closed.get()) {
        return true;
      }
      if (rootRegionLocation.get() == null || !rootScanned) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("process server shutdown scanning root region " + "cancelled because rootRegionLocation is null");
        }
        return false;
      }
      server=connection.getHRegionConnection(rootRegionLocation.get());
      scannerId=-1L;
      try {
        if (LOG.isDebugEnabled()) {
          LOG.debug("process server shutdown scanning root region on " + rootRegionLocation.get().getBindAddress());
        }
        scannerId=server.openScanner(HRegionInfo.rootRegionInfo.getRegionName(),COLUMN_FAMILY_ARRAY,EMPTY_START_ROW,System.currentTimeMillis(),null);
        scanMetaRegion(server,scannerId,HRegionInfo.rootRegionInfo.getRegionName());
        break;
      }
 catch (      IOException e) {
        if (tries == numRetries - 1) {
          throw RemoteExceptionHandler.checkIOException(e);
        }
      }
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("process server shutdown scanning root region on " + rootRegionLocation.get().getBindAddress() + " finished "+ Thread.currentThread().getName());
    }
    rootRescanned=true;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("numberOfMetaRegions: " + numberOfMetaRegions.get() + ", onlineMetaRegions.size(): "+ onlineMetaRegions.size());
  }
  if (numberOfMetaRegions.get() != onlineMetaRegions.size()) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Requeuing shutdown because not all meta regions are online");
    }
    return false;
  }
  for (int tries=0; tries < numRetries; tries++) {
    try {
      if (closed.get()) {
        return true;
      }
synchronized (onlineMetaRegions) {
        for (        MetaRegion r : onlineMetaRegions.values()) {
          HRegionInterface server=null;
          long scannerId=-1L;
          if (LOG.isDebugEnabled()) {
            LOG.debug("process server shutdown scanning " + r.getRegionName() + " on "+ r.getServer()+ " "+ Thread.currentThread().getName());
          }
          server=connection.getHRegionConnection(r.getServer());
          scannerId=server.openScanner(r.getRegionName(),COLUMN_FAMILY_ARRAY,EMPTY_START_ROW,System.currentTimeMillis(),null);
          scanMetaRegion(server,scannerId,r.getRegionName());
          if (LOG.isDebugEnabled()) {
            LOG.debug("process server shutdown finished scanning " + r.getRegionName() + " on "+ r.getServer()+ " "+ Thread.currentThread().getName());
          }
        }
      }
synchronized (serversToServerInfo) {
        deadServers.remove(deadServerName);
      }
      break;
    }
 catch (    IOException e) {
      if (tries == numRetries - 1) {
        throw RemoteExceptionHandler.checkIOException(e);
      }
    }
  }
  return true;
}
