{
  for (int tries=0; tries < numRetries; tries++) {
    if (closed) {
      return true;
    }
    LOG.info("region closed: " + regionInfo.regionName);
    Text metaRegionName;
    HRegionInterface server;
    if (rootRegion) {
      if (rootRegionLocation.get() == null || !rootScanned) {
        return false;
      }
      metaRegionName=HGlobals.rootRegionInfo.regionName;
      server=connection.getHRegionConnection(rootRegionLocation.get());
      onlineMetaRegions.remove(regionInfo.getStartKey());
    }
 else {
      if (!rootScanned || numberOfMetaRegions.get() != onlineMetaRegions.size()) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Requeuing close because rootScanned=" + rootScanned + ", numberOfMetaRegions="+ numberOfMetaRegions.get()+ ", onlineMetaRegions.size()="+ onlineMetaRegions.size());
        }
        return false;
      }
      MetaRegion r=null;
      if (onlineMetaRegions.containsKey(regionInfo.getRegionName())) {
        r=onlineMetaRegions.get(regionInfo.getRegionName());
      }
 else {
        r=onlineMetaRegions.get(onlineMetaRegions.headMap(regionInfo.getRegionName()).lastKey());
      }
      metaRegionName=r.regionName;
      server=connection.getHRegionConnection(r.server);
    }
    long clientId=rand.nextLong();
    try {
      long lockid=server.startUpdate(metaRegionName,clientId,regionInfo.regionName);
      if (deleteRegion) {
        server.delete(metaRegionName,clientId,lockid,COL_REGIONINFO);
      }
 else       if (!reassignRegion) {
        regionInfo.offLine=true;
        server.put(metaRegionName,clientId,lockid,COL_REGIONINFO,Writables.getBytes(regionInfo));
      }
      server.delete(metaRegionName,clientId,lockid,COL_SERVER);
      server.delete(metaRegionName,clientId,lockid,COL_STARTCODE);
      server.commit(metaRegionName,clientId,lockid,System.currentTimeMillis());
      break;
    }
 catch (    IOException e) {
      if (tries == numRetries - 1) {
        if (e instanceof RemoteException) {
          e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
        }
        throw e;
      }
      continue;
    }
  }
  if (reassignRegion) {
    LOG.info("reassign region: " + regionInfo.regionName);
    unassignedRegions.put(regionInfo.regionName,regionInfo);
    assignAttempts.put(regionInfo.regionName,Long.valueOf(0L));
  }
 else   if (deleteRegion) {
    try {
      HRegion.deleteRegion(fs,dir,regionInfo.regionName);
    }
 catch (    IOException e) {
      if (e instanceof RemoteException) {
        e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
      }
      LOG.error("failed delete region " + regionInfo.regionName,e);
      throw e;
    }
  }
  return true;
}
