{
  for (int tries=0; tries < numRetries; tries++) {
    if (metaScanner.waitForMetaScanOrClose()) {
      return;
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("region closed: " + regionInfo.regionName);
    }
    Text metaRegionName;
    HRegionInterface server;
    if (rootRegion) {
      metaRegionName=HGlobals.rootRegionInfo.regionName;
      if (waitForRootRegionOrClose()) {
        return;
      }
      server=client.getHRegionConnection(rootRegionLocation);
    }
 else {
      MetaRegion r=null;
      if (knownMetaRegions.containsKey(regionInfo.regionName)) {
        r=knownMetaRegions.get(regionInfo.regionName);
      }
 else {
        r=knownMetaRegions.get(knownMetaRegions.headMap(regionInfo.regionName).lastKey());
      }
      metaRegionName=r.regionName;
      server=client.getHRegionConnection(r.server);
    }
    try {
      long lockid=server.startUpdate(metaRegionName,clientId,regionInfo.regionName);
      if (deleteRegion) {
        server.delete(metaRegionName,clientId,lockid,COL_REGIONINFO);
      }
 else       if (!reassignRegion) {
        regionInfo.offLine=true;
        ByteArrayOutputStream byteValue=new ByteArrayOutputStream();
        DataOutputStream s=new DataOutputStream(byteValue);
        regionInfo.write(s);
        server.put(metaRegionName,clientId,lockid,COL_REGIONINFO,byteValue.toByteArray());
      }
      server.delete(metaRegionName,clientId,lockid,COL_SERVER);
      server.delete(metaRegionName,clientId,lockid,COL_STARTCODE);
      server.commit(metaRegionName,clientId,lockid,System.currentTimeMillis());
      break;
    }
 catch (    NotServingRegionException e) {
      if (tries == numRetries - 1) {
        throw e;
      }
      continue;
    }
  }
  if (reassignRegion) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("reassign region: " + regionInfo.regionName);
    }
    unassignedRegions.put(regionInfo.regionName,regionInfo);
    assignAttempts.put(regionInfo.regionName,Long.valueOf(0L));
  }
 else   if (deleteRegion) {
    try {
      HRegion.deleteRegion(fs,dir,regionInfo.regionName);
    }
 catch (    IOException e) {
      LOG.error("failed to delete region " + regionInfo.regionName);
      LOG.error(e);
      throw e;
    }
  }
}
