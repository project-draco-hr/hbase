{
  for (int tries=0; tries < numRetries; tries++) {
    boolean tableExists=false;
    try {
synchronized (metaScannerLock) {
        for (        MetaRegion m : metaRegions) {
          HRegionInterface server=connection.getHRegionConnection(m.getServer());
          long scannerId=server.openScanner(m.getRegionName(),COLUMN_FAMILY_ARRAY,tableName,System.currentTimeMillis(),null);
          try {
            while (true) {
              HRegionInfo info=new HRegionInfo();
              String serverName=null;
              long startCode=-1L;
              MapWritable values=server.next(scannerId);
              if (values == null || values.size() == 0) {
                break;
              }
              boolean haveRegionInfo=false;
              for (              Map.Entry<Writable,Writable> e : values.entrySet()) {
                byte[] value=((ImmutableBytesWritable)e.getValue()).get();
                if (value == null || value.length == 0) {
                  break;
                }
                HStoreKey key=(HStoreKey)e.getKey();
                Text column=key.getColumn();
                if (column.equals(COL_REGIONINFO)) {
                  haveRegionInfo=true;
                  info=(HRegionInfo)Writables.getWritable(value,info);
                }
 else                 if (column.equals(COL_SERVER)) {
                  try {
                    serverName=Writables.bytesToString(value);
                  }
 catch (                  UnsupportedEncodingException ex) {
                    assert(false);
                  }
                }
 else                 if (column.equals(COL_STARTCODE)) {
                  try {
                    startCode=Writables.bytesToLong(value);
                  }
 catch (                  UnsupportedEncodingException ex) {
                    assert(false);
                  }
                }
              }
              if (!haveRegionInfo) {
                throw new IOException(COL_REGIONINFO + " not found");
              }
              if (info.getTableDesc().getName().compareTo(tableName) > 0) {
                break;
              }
              tableExists=true;
              if (!isBeingServed(serverName,startCode)) {
                unservedRegions.add(info);
              }
              processScanItem(serverName,startCode,info);
            }
          }
  finally {
            if (scannerId != -1L) {
              try {
                server.close(scannerId);
              }
 catch (              IOException e) {
                e=RemoteExceptionHandler.checkIOException(e);
                LOG.error("closing scanner",e);
              }
            }
            scannerId=-1L;
          }
          if (!tableExists) {
            throw new IOException(tableName + " does not exist");
          }
          postProcessMeta(m,server);
          unservedRegions.clear();
        }
      }
    }
 catch (    IOException e) {
      if (tries == numRetries - 1) {
        checkFileSystem();
        throw RemoteExceptionHandler.checkIOException(e);
      }
      continue;
    }
    break;
  }
}
