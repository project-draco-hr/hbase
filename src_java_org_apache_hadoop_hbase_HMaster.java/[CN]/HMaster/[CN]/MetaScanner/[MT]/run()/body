{
  while (!closed) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Running META scanner");
    }
    MetaRegion region=null;
    while (region == null && !closed) {
synchronized (metaRegionsToScan) {
        if (metaRegionsToScan.size() != 0) {
          region=metaRegionsToScan.remove(0);
        }
        if (region == null) {
          try {
            metaRegionsToScan.wait(threadWakeFrequency);
          }
 catch (          InterruptedException e) {
          }
        }
      }
    }
    if (closed) {
      continue;
    }
    try {
synchronized (metaScannerLock) {
        scanRegion(region);
        knownMetaRegions.put(region.startKey,region);
        if (rootScanned && knownMetaRegions.size() == numMetaRegions) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("all meta regions scanned");
          }
          allMetaRegionsScanned=true;
          metaRegionsScanned();
        }
      }
      int tries=0;
      do {
        try {
          Thread.sleep(metaRescanInterval);
        }
 catch (        InterruptedException ex) {
        }
        if (!allMetaRegionsScanned || closed) {
          break;
        }
        try {
synchronized (metaScannerLock) {
            Vector<MetaRegion> v=new Vector<MetaRegion>();
            v.addAll(knownMetaRegions.values());
            for (Iterator<MetaRegion> i=v.iterator(); i.hasNext(); ) {
              scanRegion(i.next());
            }
          }
          tries=0;
        }
 catch (        IOException e) {
          tries++;
          if (tries < numRetries) {
            LOG.warn("META scanner",e);
          }
 else {
            throw e;
          }
        }
      }
 while (true);
    }
 catch (    IOException e) {
      LOG.error("META scanner",e);
      closed=true;
    }
  }
  LOG.info("META scanner exiting");
}
