{
  LOG.info("process shutdown of server " + deadServer + ": logSplit: "+ this.logSplit+ ", rootChecked: "+ this.rootChecked+ ", rootRescanned: "+ this.rootRescanned+ ", numberOfMetaRegions: "+ numberOfMetaRegions.get()+ ", onlineMetaRegions.size(): "+ onlineMetaRegions.size());
  if (!logSplit) {
    StringBuilder dirName=new StringBuilder("log_");
    dirName.append(deadServer.getBindAddress());
    dirName.append("_");
    dirName.append(deadServer.getPort());
    Path logdir=new Path(dir,dirName.toString());
    if (fs.exists(logdir)) {
      if (!splitLogLock.tryLock()) {
        return false;
      }
      try {
        HLog.splitLog(dir,logdir,fs,conf);
      }
  finally {
        splitLogLock.unlock();
      }
    }
    logSplit=true;
  }
  if (!rootChecked) {
    if (rootRegionLocation.get() != null && deadServer.equals(rootRegionLocation.get())) {
      rootRegionLocation.set(null);
      unassignedRegions.put(HGlobals.rootRegionInfo.regionName,HGlobals.rootRegionInfo);
      assignAttempts.put(HGlobals.rootRegionInfo.regionName,Long.valueOf(0L));
    }
    rootChecked=true;
  }
  if (!rootRescanned) {
    HRegionInterface server=null;
    long scannerId=-1L;
    for (int tries=0; tries < numRetries; tries++) {
      if (closed.get()) {
        return true;
      }
      if (rootRegionLocation.get() == null || !rootScanned) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("process server shutdown scanning root region " + "cancelled because rootRegionLocation is null");
        }
        return false;
      }
      server=connection.getHRegionConnection(rootRegionLocation.get());
      scannerId=-1L;
      try {
        if (LOG.isDebugEnabled()) {
          LOG.debug("process server shutdown scanning root region on " + rootRegionLocation.get().getBindAddress());
        }
        scannerId=server.openScanner(HGlobals.rootRegionInfo.regionName,COLUMN_FAMILY_ARRAY,EMPTY_START_ROW,System.currentTimeMillis(),null);
        scanMetaRegion(server,scannerId,HGlobals.rootRegionInfo.regionName);
        break;
      }
 catch (      IOException e) {
        if (tries == numRetries - 1) {
          throw RemoteExceptionHandler.checkIOException(e);
        }
      }
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("process server shutdown scanning root region on " + rootRegionLocation.get().getBindAddress() + " finished "+ Thread.currentThread().getName());
    }
    rootRescanned=true;
  }
  for (int tries=0; tries < numRetries; tries++) {
    try {
      if (closed.get()) {
        return true;
      }
      if (!rootScanned || numberOfMetaRegions.get() != onlineMetaRegions.size()) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Requeuing shutdown because rootScanned: " + rootScanned + ", numberOfMetaRegions: "+ numberOfMetaRegions.get()+ ", onlineMetaRegions.size(): "+ onlineMetaRegions.size());
        }
        return false;
      }
      for (      MetaRegion r : onlineMetaRegions.values()) {
        HRegionInterface server=null;
        long scannerId=-1L;
        if (LOG.isDebugEnabled()) {
          LOG.debug("process server shutdown scanning " + r.getRegionName() + " on "+ r.getServer()+ " "+ Thread.currentThread().getName());
        }
        server=connection.getHRegionConnection(r.getServer());
        scannerId=server.openScanner(r.getRegionName(),COLUMN_FAMILY_ARRAY,EMPTY_START_ROW,System.currentTimeMillis(),null);
        scanMetaRegion(server,scannerId,r.getRegionName());
        if (LOG.isDebugEnabled()) {
          LOG.debug("process server shutdown finished scanning " + r.getRegionName() + " on "+ r.getServer()+ " "+ Thread.currentThread().getName());
        }
      }
      break;
    }
 catch (    IOException e) {
      if (tries == numRetries - 1) {
        throw RemoteExceptionHandler.checkIOException(e);
      }
    }
  }
  return true;
}
