{
  LOG.info("server shutdown: " + deadServerName);
  if (!logSplit) {
    HLog.splitLog(dir,new Path(dir,"log" + "_" + deadServer.getBindAddress() + "_"+ deadServer.getPort()),fs,conf);
    logSplit=true;
  }
  if (!rootChecked) {
    if (rootRegionLocation != null && deadServer.equals(rootRegionLocation)) {
      rootRegionLocation=null;
      unassignedRegions.put(HGlobals.rootRegionInfo.regionName,HGlobals.rootRegionInfo);
      assignAttempts.put(HGlobals.rootRegionInfo.regionName,Long.valueOf(0L));
    }
    rootChecked=true;
  }
  if (!rootRescanned) {
    HRegionInterface server=null;
    long scannerId=-1L;
    for (int tries=0; tries < numRetries; tries++) {
      if (closed) {
        return true;
      }
      if (rootRegionLocation == null || !rootScanned) {
        return false;
      }
      server=connection.getHRegionConnection(rootRegionLocation);
      scannerId=-1L;
      try {
        if (LOG.isDebugEnabled()) {
          LOG.debug("scanning root region");
        }
        scannerId=server.openScanner(HGlobals.rootRegionInfo.regionName,columns,startRow,System.currentTimeMillis(),null);
        scanMetaRegion(server,scannerId,HGlobals.rootRegionInfo.regionName);
        break;
      }
 catch (      IOException e) {
        if (tries == numRetries - 1) {
          if (e instanceof RemoteException) {
            e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
          }
          throw e;
        }
      }
    }
    rootRescanned=true;
  }
  for (int tries=0; tries < numRetries; tries++) {
    try {
      if (closed) {
        return true;
      }
      if (!rootScanned || numberOfMetaRegions.get() != onlineMetaRegions.size()) {
        return false;
      }
      for (      MetaRegion r : onlineMetaRegions.values()) {
        HRegionInterface server=null;
        long scannerId=-1L;
        server=connection.getHRegionConnection(r.server);
        scannerId=server.openScanner(r.regionName,columns,startRow,System.currentTimeMillis(),null);
        scanMetaRegion(server,scannerId,r.regionName);
      }
      break;
    }
 catch (    IOException e) {
      if (tries == numRetries - 1) {
        if (e instanceof RemoteException) {
          e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
        }
        throw e;
      }
    }
  }
  return true;
}
