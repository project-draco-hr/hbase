{
  if (info.isOffline() || killedRegions.contains(info.getRegionName()) || regionsToDelete.contains(info.getRegionName())) {
    unassignedRegions.remove(info);
    return;
  }
  HServerInfo storedInfo=null;
  boolean deadServer=false;
  if (serverName.length() != 0) {
synchronized (killList) {
      Map<Text,HRegionInfo> regionsToKill=killList.get(serverName);
      if (regionsToKill != null && regionsToKill.containsKey(info.getRegionName())) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("not assigning region (on kill list): " + info.getRegionName());
        }
        return;
      }
    }
    storedInfo=serversToServerInfo.get(serverName);
    deadServer=deadServers.contains(serverName);
  }
  if (!deadServer && ((storedInfo != null && storedInfo.getStartCode() != startCode) || (storedInfo == null && !unassignedRegions.containsKey(info) && !pendingRegions.contains(info.getRegionName())))) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Current assignment of " + info.getRegionName() + " is not valid: storedInfo: "+ storedInfo+ ", startCode: "+ startCode+ ", storedInfo.startCode: "+ ((storedInfo != null) ? storedInfo.getStartCode() : -1)+ ", unassignedRegions: "+ unassignedRegions.containsKey(info)+ ", pendingRegions: "+ pendingRegions.contains(info.getRegionName()));
    }
    if (!initialMetaScanComplete && serverName.length() != 0) {
      StringBuilder dirName=new StringBuilder("log_");
      dirName.append(serverName.replace(":","_"));
      Path logDir=new Path(rootdir,dirName.toString());
      try {
        if (fs.exists(logDir)) {
          splitLogLock.lock();
          try {
            HLog.splitLog(rootdir,logDir,fs,conf);
          }
  finally {
            splitLogLock.unlock();
          }
        }
        if (LOG.isDebugEnabled()) {
          LOG.debug("Split " + logDir.toString());
        }
      }
 catch (      IOException e) {
        LOG.warn("unable to split region server log because: ",e);
        throw e;
      }
    }
    unassignedRegions.put(info,ZERO_L);
  }
}
