{
  HRegionInterface regionServer=null;
  long scannerId=-1L;
  LOG.info(Thread.currentThread().getName() + " scanning meta region " + region.regionName+ " on "+ region.server.toString());
  Map<HRegionInfo,SortedMap<Text,byte[]>> splitParents=new HashMap<HRegionInfo,SortedMap<Text,byte[]>>();
  try {
    regionServer=connection.getHRegionConnection(region.server);
    scannerId=regionServer.openScanner(region.regionName,COLUMN_FAMILY_ARRAY,EMPTY_START_ROW,System.currentTimeMillis(),null);
    int numberOfRegionsFound=0;
    while (true) {
      SortedMap<Text,byte[]> results=new TreeMap<Text,byte[]>();
      MapWritable values=regionServer.next(scannerId);
      if (values == null || values.size() == 0) {
        break;
      }
      for (      Map.Entry<WritableComparable,Writable> e : values.entrySet()) {
        HStoreKey key=(HStoreKey)e.getKey();
        results.put(key.getColumn(),((ImmutableBytesWritable)e.getValue()).get());
      }
      HRegionInfo info=(HRegionInfo)Writables.getWritable(results.get(COL_REGIONINFO),new HRegionInfo());
      String serverName=Writables.bytesToString(results.get(COL_SERVER));
      long startCode=Writables.bytesToLong(results.get(COL_STARTCODE));
      if (LOG.isDebugEnabled()) {
        LOG.debug(Thread.currentThread().getName() + " scanner: " + Long.valueOf(scannerId)+ " regioninfo: {"+ info.toString()+ "}, server: "+ serverName+ ", startCode: "+ startCode);
      }
      checkAssigned(info,serverName,startCode);
      if (isSplitParent(info)) {
        splitParents.put(info,results);
      }
      numberOfRegionsFound+=1;
    }
    if (rootRegion) {
      numberOfMetaRegions.set(numberOfRegionsFound);
    }
  }
 catch (  IOException e) {
    if (e instanceof RemoteException) {
      e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
      if (e instanceof UnknownScannerException) {
        scannerId=-1L;
      }
    }
    throw e;
  }
 finally {
    try {
      if (scannerId != -1L && regionServer != null) {
        regionServer.close(scannerId);
      }
    }
 catch (    IOException e) {
      if (e instanceof RemoteException) {
        e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
      }
      LOG.error("Closing scanner",e);
    }
  }
  if (splitParents.size() > 0) {
    for (    Map.Entry<HRegionInfo,SortedMap<Text,byte[]>> e : splitParents.entrySet()) {
      SortedMap<Text,byte[]> results=e.getValue();
      cleanupSplits(region.regionName,regionServer,e.getKey(),(HRegionInfo)Writables.getWritable(results.get(COL_SPLITA),new HRegionInfo()),(HRegionInfo)Writables.getWritable(results.get(COL_SPLITB),new HRegionInfo()));
    }
  }
  LOG.info(Thread.currentThread().getName() + " scan of meta region " + region.regionName+ " complete");
}
