{
  HRegionInterface regionServer=null;
  long scannerId=-1L;
  LOG.info(Thread.currentThread().getName() + " scanning meta region " + region.regionName);
  try {
    regionServer=connection.getHRegionConnection(region.server);
    scannerId=regionServer.openScanner(region.regionName,METACOLUMNS,FIRST_ROW,System.currentTimeMillis(),null);
    int numberOfRegionsFound=0;
    while (true) {
      TreeMap<Text,byte[]> results=new TreeMap<Text,byte[]>();
      KeyedData[] values=regionServer.next(scannerId);
      if (values.length == 0) {
        break;
      }
      for (int i=0; i < values.length; i++) {
        results.put(values[i].getKey().getColumn(),values[i].getData());
      }
      HRegionInfo info=HRegion.getRegionInfo(results);
      String serverName=HRegion.getServerName(results);
      long startCode=HRegion.getStartCode(results);
      if (LOG.isDebugEnabled()) {
        LOG.debug(Thread.currentThread().getName() + " scanner: " + Long.valueOf(scannerId)+ " regioninfo: {"+ info.toString()+ "}, server: "+ serverName+ ", startCode: "+ startCode);
      }
      checkAssigned(info,serverName,startCode);
      numberOfRegionsFound+=1;
    }
    if (rootRegion) {
      numberOfMetaRegions.set(numberOfRegionsFound);
    }
  }
 catch (  IOException e) {
    if (e instanceof RemoteException) {
      e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
      if (e instanceof UnknownScannerException) {
        scannerId=-1L;
      }
    }
    throw e;
  }
 finally {
    try {
      if (scannerId != -1L && regionServer != null) {
        regionServer.close(scannerId);
      }
    }
 catch (    IOException e) {
      if (e instanceof RemoteException) {
        e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
      }
      LOG.error(e);
    }
  }
  LOG.info(Thread.currentThread().getName() + " scan of meta region " + region.regionName+ " complete");
}
