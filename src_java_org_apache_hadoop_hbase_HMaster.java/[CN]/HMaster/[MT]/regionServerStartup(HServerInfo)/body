{
  String s=serverInfo.getServerAddress().toString().trim();
  LOG.info("received start message from: " + s);
  HServerLoad load=serversToLoad.remove(s);
  if (load != null) {
    Set<String> servers=loadToServers.get(load);
    if (servers != null) {
      servers.remove(s);
      loadToServers.put(load,servers);
    }
  }
  HServerInfo storedInfo=serversToServerInfo.remove(s);
  if (storedInfo != null && !closed.get()) {
    HServerAddress root=rootRegionLocation.get();
    if (root != null && root.equals(storedInfo.getServerAddress())) {
      unassignRootRegion();
    }
    delayedToDoQueue.put(new ProcessServerShutdown(storedInfo));
  }
  load=new HServerLoad();
  serverInfo.setLoad(load);
  serversToServerInfo.put(s,serverInfo);
  serversToLoad.put(s,load);
  Set<String> servers=loadToServers.get(load);
  if (servers == null) {
    servers=new HashSet<String>();
  }
  servers.add(s);
  loadToServers.put(load,servers);
  if (!closed.get()) {
    long serverLabel=getServerLabel(s);
    serverLeases.createLease(serverLabel,serverLabel,new ServerExpirer(s));
  }
  return createConfigurationSubset();
}
