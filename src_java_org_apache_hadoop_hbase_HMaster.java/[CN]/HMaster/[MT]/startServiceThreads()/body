{
  String threadName=Thread.currentThread().getName();
  try {
    Threads.setDaemonThreadRunning(this.rootScannerThread,threadName + ".rootScanner");
    Threads.setDaemonThreadRunning(this.metaScannerThread,threadName + ".metaScanner");
    this.serverLeases.setName(threadName + ".leaseChecker");
    this.serverLeases.start();
    int port=this.conf.getInt("hbase.master.info.port",60010);
    if (port >= 0) {
      String a=this.conf.get("hbase.master.info.bindAddress","0.0.0.0");
      this.infoServer=new InfoServer(MASTER,a,port,false);
      this.infoServer.setAttribute(MASTER,this);
      this.infoServer.start();
    }
    this.server.start();
  }
 catch (  IOException e) {
    if (e instanceof RemoteException) {
      try {
        e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
      }
 catch (      IOException ex) {
        LOG.warn("thread start",ex);
      }
    }
    this.closed.set(true);
    LOG.error("Failed startup",e);
  }
}
