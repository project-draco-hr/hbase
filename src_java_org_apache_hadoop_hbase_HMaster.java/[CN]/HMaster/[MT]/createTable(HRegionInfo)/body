{
  Text tableName=newRegion.tableDesc.getName();
synchronized (tableInCreation) {
    if (tableInCreation.contains(tableName)) {
      throw new TableExistsException("Table " + tableName + " in process "+ "of being created");
    }
    tableInCreation.add(tableName);
  }
  try {
    MetaRegion m=(onlineMetaRegions.containsKey(newRegion.regionName) ? onlineMetaRegions.get(newRegion.regionName) : onlineMetaRegions.get(onlineMetaRegions.headMap(newRegion.getTableDesc().getName()).lastKey()));
    Text metaRegionName=m.regionName;
    HRegionInterface server=connection.getHRegionConnection(m.server);
    long scannerid=server.openScanner(metaRegionName,COL_REGIONINFO_ARRAY,tableName,System.currentTimeMillis(),null);
    try {
      KeyedData[] data=server.next(scannerid);
      if (data != null && data.length > 0 && HRegionInfo.getTableNameFromRegionName(data[0].getKey().getRow()).equals(tableName)) {
        throw new TableExistsException(tableName.toString());
      }
    }
  finally {
      server.close(scannerid);
    }
    HRegion region=HRegion.createHRegion(newRegion,this.dir,this.conf,null);
    HRegionInfo info=region.getRegionInfo();
    Text regionName=region.getRegionName();
    BatchUpdate b=new BatchUpdate();
    long lockid=b.startUpdate(regionName);
    b.put(lockid,COL_REGIONINFO,Writables.getBytes(info));
    server.batchUpdate(metaRegionName,System.currentTimeMillis(),b);
    region.close();
    region.getLog().closeAndDelete();
    unassignedRegions.put(regionName,info);
    assignAttempts.put(regionName,Long.valueOf(0L));
  }
  finally {
synchronized (tableInCreation) {
      tableInCreation.remove(newRegion.getTableDesc().getName());
    }
  }
}
