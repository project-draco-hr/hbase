{
  Text tableName=newRegion.tableDesc.getName();
synchronized (tableInCreation) {
    if (tableInCreation.contains(tableName)) {
      throw new TableExistsException("Table " + tableName + " in process "+ "of being created");
    }
    tableInCreation.add(tableName);
  }
  try {
    MetaRegion m=(knownMetaRegions.containsKey(newRegion.regionName)) ? knownMetaRegions.get(newRegion.regionName) : knownMetaRegions.get(knownMetaRegions.headMap(newRegion.getTableDesc().getName()).lastKey());
    Text metaRegionName=m.regionName;
    HRegionInterface connection=client.getHRegionConnection(m.server);
    long scannerid=connection.openScanner(metaRegionName,new Text[]{COL_REGIONINFO},tableName,System.currentTimeMillis(),null);
    try {
      KeyedData[] data=connection.next(scannerid);
      if (data != null && data.length > 0 && HRegionInfo.getTableNameFromRegionName(data[0].getKey().getRow()).equals(tableName)) {
        throw new TableExistsException(tableName.toString());
      }
    }
  finally {
      connection.close(scannerid);
    }
    HRegion r=HRegion.createHRegion(newRegion.regionId,newRegion.getTableDesc(),this.dir,this.conf);
    HRegionInfo info=r.getRegionInfo();
    Text regionName=r.getRegionName();
    ByteArrayOutputStream byteValue=new ByteArrayOutputStream();
    DataOutputStream s=new DataOutputStream(byteValue);
    info.write(s);
    long clientId=rand.nextLong();
    long lockid=connection.startUpdate(metaRegionName,clientId,regionName);
    connection.put(metaRegionName,clientId,lockid,COL_REGIONINFO,byteValue.toByteArray());
    connection.commit(metaRegionName,clientId,lockid,System.currentTimeMillis());
    r.close();
    unassignedRegions.put(regionName,info);
    assignAttempts.put(regionName,Long.valueOf(0L));
  }
  finally {
synchronized (tableInCreation) {
      tableInCreation.remove(newRegion.getTableDesc().getName());
    }
  }
}
