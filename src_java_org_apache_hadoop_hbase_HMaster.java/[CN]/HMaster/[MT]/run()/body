{
  Thread.currentThread().setName("HMaster");
  try {
    this.rootScannerThread.start();
    this.metaScannerThread.start();
    this.server.start();
  }
 catch (  IOException e) {
    this.closed=true;
    e.printStackTrace();
  }
  for (PendingOperation op=null; !closed; ) {
synchronized (msgQueue) {
      while (msgQueue.size() == 0 && !closed) {
        try {
          msgQueue.wait(threadWakeFrequency);
        }
 catch (        InterruptedException iex) {
        }
      }
      if (closed) {
        continue;
      }
      op=msgQueue.remove(msgQueue.size() - 1);
    }
    try {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Processing " + op.toString());
      }
      op.process();
    }
 catch (    Exception ex) {
      msgQueue.insertElementAt(op,0);
    }
  }
synchronized (rootScannerLock) {
    rootScannerThread.interrupt();
  }
synchronized (metaScannerLock) {
    metaScannerThread.interrupt();
  }
  server.stop();
  serverLeases.close();
  try {
    rootScannerThread.join();
  }
 catch (  Exception iex) {
    iex.printStackTrace();
  }
  try {
    metaScannerThread.join();
  }
 catch (  Exception iex) {
    iex.printStackTrace();
  }
  try {
    server.join();
  }
 catch (  InterruptedException iex) {
    iex.printStackTrace();
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("HMaster main thread exiting");
  }
}
