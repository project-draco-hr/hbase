{
  if (!isMasterRunning()) {
    throw new IllegalStateException(MASTER_NOT_RUNNING);
  }
  HRegionInfo newRegion=new HRegionInfo(rand.nextLong(),desc,null,null);
  metaScanner.waitForMetaScan();
  MetaRegion m=null;
  if (knownMetaRegions.containsKey(newRegion.regionName)) {
    m=knownMetaRegions.get(newRegion.regionName);
  }
 else {
    m=knownMetaRegions.get(knownMetaRegions.headMap(newRegion.regionName).lastKey());
  }
  Text metaRegionName=m.regionName;
  HRegionInterface server=client.getHRegionConnection(m.server);
  BytesWritable bytes=server.get(metaRegionName,desc.getName(),COL_REGIONINFO);
  if (bytes != null && bytes.getSize() != 0) {
    byte[] infoBytes=bytes.get();
    DataInputBuffer inbuf=new DataInputBuffer();
    inbuf.reset(infoBytes,infoBytes.length);
    HRegionInfo info=new HRegionInfo();
    info.readFields(inbuf);
    if (info.tableDesc.getName().compareTo(desc.getName()) == 0) {
      throw new IOException("table already exists");
    }
  }
  HRegion r=createNewHRegion(desc,newRegion.regionId);
  HRegionInfo info=r.getRegionInfo();
  Text regionName=r.getRegionName();
  ByteArrayOutputStream byteValue=new ByteArrayOutputStream();
  DataOutputStream s=new DataOutputStream(byteValue);
  info.write(s);
  long clientId=rand.nextLong();
  long lockid=server.startUpdate(metaRegionName,clientId,regionName);
  server.put(metaRegionName,clientId,lockid,COL_REGIONINFO,new BytesWritable(byteValue.toByteArray()));
  server.commit(metaRegionName,clientId,lockid);
  r.close();
  unassignedRegions.put(regionName,info);
  assignAttempts.put(regionName,0L);
  if (LOG.isDebugEnabled()) {
    LOG.debug("created table " + desc.getName());
  }
}
