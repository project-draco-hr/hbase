{
  byte upperLimitByte;
  byte lowerLimitByte;
  if (isText) {
    upperLimitByte='~';
    lowerLimitByte=' ';
  }
 else {
    upperLimitByte=-1;
    lowerLimitByte=0;
  }
  if (start.length == 0 && end.length == 0) {
    return new byte[]{(byte)((lowerLimitByte + upperLimitByte) / 2)};
  }
  if (start.length == 0 && end.length != 0) {
    return new byte[]{end[0]};
  }
  if (start.length != 0 && end.length == 0) {
    byte[] result=new byte[start.length];
    result[0]=start[0];
    for (int k=1; k < start.length; k++) {
      result[k]=upperLimitByte;
    }
    return result;
  }
  return Bytes.split(start,end,false,1)[1];
}
