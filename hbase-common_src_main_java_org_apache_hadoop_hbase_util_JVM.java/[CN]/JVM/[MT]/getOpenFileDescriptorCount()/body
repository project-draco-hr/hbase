{
  Long ofdc;
  if (!ibmvendor) {
    ofdc=runUnixMXBeanMethod("getOpenFileDescriptorCount");
    return (ofdc != null ? ofdc : -1);
  }
  InputStream inputStream=null;
  InputStreamReader inputStreamReader=null;
  BufferedReader bufferedReader=null;
  try {
    RuntimeMXBean rtmbean=ManagementFactory.getRuntimeMXBean();
    String rtname=rtmbean.getName();
    String[] pidhost=rtname.split("@");
    Process p=Runtime.getRuntime().exec(new String[]{"bash","-c","ls /proc/" + pidhost[0] + "/fdinfo | wc -l"});
    inputStream=p.getInputStream();
    inputStreamReader=new InputStreamReader(inputStream);
    bufferedReader=new BufferedReader(inputStreamReader);
    String openFileDesCount;
    if ((openFileDesCount=bufferedReader.readLine()) != null) {
      return Long.parseLong(openFileDesCount);
    }
  }
 catch (  IOException ie) {
    LOG.warn("Not able to get the number of open file descriptors",ie);
  }
 finally {
    if (bufferedReader != null) {
      try {
        bufferedReader.close();
      }
 catch (      IOException e) {
        LOG.warn("Not able to close the BufferedReader",e);
      }
    }
    if (inputStreamReader != null) {
      try {
        inputStreamReader.close();
      }
 catch (      IOException e) {
        LOG.warn("Not able to close the InputStreamReader",e);
      }
    }
    if (inputStream != null) {
      try {
        inputStream.close();
      }
 catch (      IOException e) {
        LOG.warn("Not able to close the InputStream",e);
      }
    }
  }
  return -1;
}
