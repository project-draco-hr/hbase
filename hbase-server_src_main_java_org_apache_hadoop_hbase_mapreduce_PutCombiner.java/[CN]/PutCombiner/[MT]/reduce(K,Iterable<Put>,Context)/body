{
  long threshold=context.getConfiguration().getLong("putcombiner.row.threshold",1L * (1 << 30));
  int cnt=0;
  long curSize=0;
  Put put=null;
  Map<byte[],List<Cell>> familyMap=null;
  for (  Put p : vals) {
    cnt++;
    if (put == null) {
      put=p;
      familyMap=put.getFamilyCellMap();
    }
 else {
      for (      Entry<byte[],List<Cell>> entry : p.getFamilyCellMap().entrySet()) {
        List<Cell> cells=familyMap.get(entry.getKey());
        List<Cell> kvs=(cells != null) ? (List<Cell>)cells : null;
        for (        Cell cell : entry.getValue()) {
          KeyValue kv=KeyValueUtil.ensureKeyValue(cell);
          curSize+=kv.heapSize();
          if (kvs != null) {
            kvs.add(kv);
          }
        }
        if (cells == null) {
          familyMap.put(entry.getKey(),entry.getValue());
        }
      }
      if (cnt % 10 == 0)       context.setStatus("Combine " + cnt);
      if (curSize > threshold) {
        LOG.info(String.format("Combined %d Put(s) into %d.",cnt,1));
        context.write(row,put);
        put=null;
        cnt=0;
      }
    }
  }
  if (put != null) {
    LOG.info(String.format("Combined %d Put(s) into %d.",cnt,1));
    context.write(row,put);
  }
}
