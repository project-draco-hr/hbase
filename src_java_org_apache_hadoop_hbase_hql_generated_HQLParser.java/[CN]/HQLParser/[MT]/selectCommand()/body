{
  SelectCommand select=new SelectCommand(this.out,this.formatter);
  List<String> columns=null;
  String rowKey="";
  String stopRow="";
  String timestamp=null;
  int numVersion=0;
  String tableName=null;
  int limit;
  jj_consume_token(SELECT);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COUNT:
    jj_consume_token(COUNT);
  columns=getLiteralValues();
select.setCountFunction(true);
break;
case ASTERISK:
case ID:
case INTEGER_LITERAL:
case QUOTED_IDENTIFIER:
case STRING_LITERAL:
columns=columnList();
break;
default :
jj_la1[22]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
jj_consume_token(FROM);
tableName=identifier();
select.setColumns(columns);
select.setTable(tableName);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case STARTING:
case WHERE:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case WHERE:
jj_consume_token(WHERE);
jj_consume_token(ROW);
jj_consume_token(EQUALS);
select.setWhere(true);
break;
case STARTING:
jj_consume_token(STARTING);
jj_consume_token(FROM);
break;
default :
jj_la1[23]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
rowKey=getStringLiteral();
select.setRowKey(rowKey);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case UNTIL:
jj_consume_token(UNTIL);
stopRow=getStringLiteral();
select.setStopRow(stopRow);
break;
default :
jj_la1[24]=jj_gen;
;
}
break;
default :
jj_la1[25]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TIMESTAMP:
jj_consume_token(TIMESTAMP);
timestamp=getStringLiteral();
select.setTimestamp(timestamp);
break;
default :
jj_la1[26]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case NUM_VERSIONS:
jj_consume_token(NUM_VERSIONS);
jj_consume_token(EQUALS);
numVersion=number();
select.setVersion(numVersion);
break;
default :
jj_la1[27]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LIMIT:
jj_consume_token(LIMIT);
jj_consume_token(EQUALS);
limit=number();
try {
select.setLimit(limit);
}
 catch (ClassCastException ce) {
{
if (true) throw generateParseException();
}
}
break;
default :
jj_la1[28]=jj_gen;
;
}
{
if (true) return select;
}
throw new Error("Missing return statement in function");
}
