{
  Text tableName=newRegion.getTableDesc().getName();
  if (tableInCreation.contains(tableName)) {
    throw new TableExistsException("Table " + tableName + " in process "+ "of being created");
  }
  tableInCreation.add(tableName);
  try {
    MetaRegion m=null;
synchronized (onlineMetaRegions) {
      m=(onlineMetaRegions.size() == 1 ? onlineMetaRegions.get(onlineMetaRegions.firstKey()) : (onlineMetaRegions.containsKey(newRegion.getRegionName()) ? onlineMetaRegions.get(newRegion.getRegionName()) : onlineMetaRegions.get(onlineMetaRegions.headMap(newRegion.getTableDesc().getName()).lastKey())));
    }
    Text metaRegionName=m.getRegionName();
    HRegionInterface srvr=connection.getHRegionConnection(m.getServer());
    long scannerid=srvr.openScanner(metaRegionName,COL_REGIONINFO_ARRAY,tableName,System.currentTimeMillis(),null);
    try {
      HbaseMapWritable data=srvr.next(scannerid);
      if (data != null && data.size() > 0) {
        for (        Writable k : data.keySet()) {
          if (HRegionInfo.getTableNameFromRegionName(((HStoreKey)k).getRow()).equals(tableName)) {
            throw new TableExistsException(tableName.toString());
          }
        }
      }
    }
  finally {
      srvr.close(scannerid);
    }
    HRegion region=HRegion.createHRegion(newRegion,this.rootdir,this.conf);
    HRegionInfo info=region.getRegionInfo();
    Text regionName=region.getRegionName();
    BatchUpdate b=new BatchUpdate(regionName);
    b.put(COL_REGIONINFO,Writables.getBytes(info));
    srvr.batchUpdate(metaRegionName,b);
    region.close();
    region.getLog().closeAndDelete();
    this.unassignedRegions.put(info,ZERO_L);
  }
  finally {
    tableInCreation.remove(newRegion.getTableDesc().getName());
  }
}
