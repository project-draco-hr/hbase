{
switch (op) {
case MODIFY_TABLE_SET_HTD:
    if (args == null || args.length < 1 || !(args[0] instanceof HTableDescriptor))     throw new IOException("SET_HTD request requires an HTableDescriptor");
  HTableDescriptor htd=(HTableDescriptor)args[0];
LOG.info("modifyTable(SET_HTD): " + htd);
new ModifyTableMeta(this,tableName,htd).process();
break;
case MODIFY_TABLE_SPLIT:
case MODIFY_TABLE_COMPACT:
if (args != null && args.length > 0) {
if (!(args[0] instanceof ImmutableBytesWritable)) throw new IOException("request argument must be ImmutableBytesWritable");
byte[] rowKey=((ImmutableBytesWritable)args[0]).get();
Pair<HRegionInfo,HServerAddress> pair=getTableRegionClosest(tableName,rowKey);
if (pair != null) {
regionManager.startAction(pair.getFirst().getRegionName(),pair.getFirst(),pair.getSecond(),op);
}
}
 else {
for (Pair<HRegionInfo,HServerAddress> pair : getTableRegions(tableName)) regionManager.startAction(pair.getFirst().getRegionName(),pair.getFirst(),pair.getSecond(),op);
}
break;
default :
throw new IOException("unsupported modifyTable op " + op);
}
}
