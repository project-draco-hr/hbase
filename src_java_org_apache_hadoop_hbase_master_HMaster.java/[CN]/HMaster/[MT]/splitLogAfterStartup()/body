{
  Path logsDirPath=new Path(this.rootdir,HConstants.HREGION_LOGDIR_NAME);
  try {
    if (!this.fs.exists(logsDirPath))     return;
  }
 catch (  IOException e) {
    throw new RuntimeException("Could exists for " + logsDirPath,e);
  }
  FileStatus[] logFolders;
  try {
    logFolders=this.fs.listStatus(logsDirPath);
  }
 catch (  IOException e) {
    throw new RuntimeException("Failed listing " + logsDirPath.toString(),e);
  }
  if (logFolders == null || logFolders.length == 0) {
    LOG.debug("No log files to split, proceeding...");
    return;
  }
  for (  FileStatus status : logFolders) {
    String serverName=status.getPath().getName();
    LOG.info("Found log folder : " + serverName);
    if (this.serverManager.getServerInfo(serverName) == null) {
      LOG.info("Log folder doesn't belong " + "to a known region server, splitting");
      this.regionManager.splitLogLock.lock();
      Path logDir=new Path(this.rootdir,HLog.getHLogDirectoryName(serverName));
      try {
        HLog.splitLog(this.rootdir,logDir,this.fs,getConfiguration());
      }
 catch (      IOException e) {
        LOG.error("Failed splitting " + logDir.toString(),e);
      }
 finally {
        this.regionManager.splitLogLock.unlock();
      }
    }
 else {
      LOG.info("Log folder belongs to an existing region server");
    }
  }
}
