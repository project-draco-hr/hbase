{
  if (args.length < 1) {
    printUsageAndExit();
  }
  Configuration conf=HBaseConfiguration.create();
  for (  String cmd : args) {
    if (cmd.startsWith("--minServers=")) {
      conf.setInt("hbase.regions.server.count.min",Integer.valueOf(cmd.substring(13)));
      continue;
    }
    if (cmd.equalsIgnoreCase("start")) {
      try {
        RuntimeMXBean runtime=ManagementFactory.getRuntimeMXBean();
        if (runtime != null) {
          LOG.info("vmName=" + runtime.getVmName() + ", vmVendor="+ runtime.getVmVendor()+ ", vmVersion="+ runtime.getVmVersion());
          LOG.info("vmInputArguments=" + runtime.getInputArguments());
        }
        if (LocalHBaseCluster.isLocal(conf)) {
          (new LocalHBaseCluster(conf)).startup();
        }
 else {
          Constructor<? extends HMaster> c=clazz.getConstructor(Configuration.class);
          HMaster master=c.newInstance(conf);
          if (master.shutdownRequested.get()) {
            LOG.info("Won't bring the Master up as a shutdown is requested");
            return;
          }
          master.start();
        }
      }
 catch (      Throwable t) {
        LOG.error("Failed to start master",t);
        System.exit(-1);
      }
      break;
    }
    if (cmd.equalsIgnoreCase("stop")) {
      HBaseAdmin adm=null;
      try {
        adm=new HBaseAdmin(conf);
      }
 catch (      MasterNotRunningException e) {
        LOG.error("Master not running");
        System.exit(0);
      }
      try {
        adm.shutdown();
      }
 catch (      Throwable t) {
        LOG.error("Failed to stop master",t);
        System.exit(-1);
      }
      break;
    }
    printUsageAndExit();
  }
}
