{
  this.conf=conf;
  this.rootdir=rd;
  this.conf.set("fs.default.name",this.rootdir.toString());
  this.fs=FileSystem.get(conf);
  this.conf.set(HConstants.HBASE_DIR,this.rootdir.toString());
  this.rand=new Random();
  Path rootRegionDir=HRegion.getRegionDir(rootdir,HRegionInfo.rootRegionInfo);
  LOG.info("Root region dir: " + rootRegionDir.toString());
  try {
    if (!fs.exists(rootdir)) {
      fs.mkdirs(rootdir);
      FSUtils.setVersion(fs,rootdir);
    }
 else     if (!FSUtils.checkVersion(fs,rootdir)) {
      String message="The HBase data files stored on the FileSystem are " + "from an earlier version of HBase. You need to run " + "'${HBASE_HOME}/bin/hbase migrate' to bring your installation"+ "up-to-date.";
      System.out.println("WARNING! " + message + " Master shutting down...");
      throw new IOException(message);
    }
    if (!fs.exists(rootRegionDir)) {
      LOG.info("bootstrap: creating ROOT and first META regions");
      try {
        HRegion root=HRegion.createHRegion(HRegionInfo.rootRegionInfo,this.rootdir,this.conf);
        HRegion meta=HRegion.createHRegion(HRegionInfo.firstMetaRegionInfo,this.rootdir,this.conf);
        HRegion.addRegionToMETA(root,meta);
        root.close();
        root.getLog().closeAndDelete();
        meta.close();
        meta.getLog().closeAndDelete();
      }
 catch (      IOException e) {
        e=RemoteExceptionHandler.checkIOException(e);
        LOG.error("bootstrap",e);
        throw e;
      }
    }
  }
 catch (  IOException e) {
    LOG.fatal("Not starting HMaster because:",e);
    throw e;
  }
  this.threadWakeFrequency=conf.getInt(THREAD_WAKE_FREQUENCY,10 * 1000);
  this.numRetries=conf.getInt("hbase.client.retries.number",2);
  this.maxRegionOpenTime=conf.getLong("hbase.hbasemaster.maxregionopen",30 * 1000);
  this.leaseTimeout=conf.getInt("hbase.master.lease.period",30 * 1000);
  this.serverLeases=new Leases(this.leaseTimeout,conf.getInt("hbase.master.lease.thread.wakefrequency",15 * 1000));
  this.server=HbaseRPC.getServer(this,address.getBindAddress(),address.getPort(),conf.getInt("hbase.regionserver.handler.count",10),false,conf);
  this.address=new HServerAddress(server.getListenerAddress());
  conf.set(MASTER_ADDRESS,address.toString());
  this.connection=HConnectionManager.getConnection(conf);
  this.metaRescanInterval=conf.getInt("hbase.master.meta.thread.rescanfrequency",60 * 1000);
  this.rootScannerThread=new RootScanner(this);
  this.metaScannerThread=new MetaScanner(this);
  unassignRootRegion();
  this.sleeper=new Sleeper(this.threadWakeFrequency,this.closed);
  this.closed.set(false);
  LOG.info("HMaster initialized on " + this.address.toString());
}
