{
  FilterList filterList=new FilterList(FilterList.Operator.MUST_PASS_ALL);
  if (!Strings.isEmpty(filter.getUserFilter())) {
    FilterList userFilters=new FilterList(FilterList.Operator.MUST_PASS_ONE);
    boolean hasFilter=false;
    if (!Strings.isEmpty(filter.getNamespaceFilter())) {
      FilterList nsFilters=new FilterList(FilterList.Operator.MUST_PASS_ALL);
      nsFilters.addFilter(new RowFilter(CompareFilter.CompareOp.EQUAL,new RegexStringComparator(getUserRowKeyRegex(filter.getUserFilter()),0)));
      nsFilters.addFilter(new QualifierFilter(CompareFilter.CompareOp.EQUAL,new RegexStringComparator(getSettingsQualifierRegexForUserNamespace(filter.getNamespaceFilter()),0)));
      userFilters.addFilter(nsFilters);
      hasFilter=true;
    }
    if (!Strings.isEmpty(filter.getTableFilter())) {
      FilterList tableFilters=new FilterList(FilterList.Operator.MUST_PASS_ALL);
      tableFilters.addFilter(new RowFilter(CompareFilter.CompareOp.EQUAL,new RegexStringComparator(getUserRowKeyRegex(filter.getUserFilter()),0)));
      tableFilters.addFilter(new QualifierFilter(CompareFilter.CompareOp.EQUAL,new RegexStringComparator(getSettingsQualifierRegexForUserTable(filter.getTableFilter()),0)));
      userFilters.addFilter(tableFilters);
      hasFilter=true;
    }
    if (!hasFilter) {
      userFilters.addFilter(new RowFilter(CompareFilter.CompareOp.EQUAL,new RegexStringComparator(getUserRowKeyRegex(filter.getUserFilter()),0)));
    }
    filterList.addFilter(userFilters);
  }
 else   if (!Strings.isEmpty(filter.getTableFilter())) {
    filterList.addFilter(new RowFilter(CompareFilter.CompareOp.EQUAL,new RegexStringComparator(getTableRowKeyRegex(filter.getTableFilter()),0)));
  }
 else   if (!Strings.isEmpty(filter.getNamespaceFilter())) {
    filterList.addFilter(new RowFilter(CompareFilter.CompareOp.EQUAL,new RegexStringComparator(getNamespaceRowKeyRegex(filter.getNamespaceFilter()),0)));
  }
  return filterList;
}
