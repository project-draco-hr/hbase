{
  final StringKey[] inserted={new StringKey("wmjwjzyv"),new StringKey("baietibz"),new StringKey("guhsgxnv"),new StringKey("mhnqycto"),new StringKey("xcyqafgz"),new StringKey("zidoamgb"),new StringKey("tftfirzd"),new StringKey("okapqlrg"),new StringKey("yccwzwsq"),new StringKey("qmonufqu"),new StringKey("wlsctews"),new StringKey("mksdhqri"),new StringKey("wxxllokj"),new StringKey("eviuqpls"),new StringKey("bavotqmj"),new StringKey("yibqzhdl"),new StringKey("csfqmsyr"),new StringKey("guxliyuh"),new StringKey("pzicietj"),new StringKey("qdwgrqwo"),new StringKey("ujfzecmi"),new StringKey("dzeqfvfi"),new StringKey("phoegsij"),new StringKey("bvudfcou"),new StringKey("dowzmciz"),new StringKey("etvhkizp"),new StringKey("rzurqycg"),new StringKey("krqfxuge"),new StringKey("gflcohtd"),new StringKey("fcrcxtps"),new StringKey("qrtovxdq"),new StringKey("aypxwrwi"),new StringKey("dckpyznr"),new StringKey("mdaawnpz"),new StringKey("pakdfvca"),new StringKey("xjglfbez"),new StringKey("xdsecofi"),new StringKey("sjlrfcab"),new StringKey("ebcjawxv"),new StringKey("hkafkjmy"),new StringKey("oimmwaxo"),new StringKey("qcuzrazo"),new StringKey("nqydfkwk"),new StringKey("frybvmlb"),new StringKey("amxmaqws"),new StringKey("gtkovkgx"),new StringKey("vgwxrwss"),new StringKey("xrhzmcep"),new StringKey("tafwziil"),new StringKey("erjmncnv"),new StringKey("heyzqzrn"),new StringKey("sowvyhtu"),new StringKey("heeixgzy"),new StringKey("ktcahcob"),new StringKey("ljhbybgg"),new StringKey("jiqfcksl"),new StringKey("anjdkjhm"),new StringKey("uzcgcuxp"),new StringKey("vzdhjqla"),new StringKey("svhgwwzq"),new StringKey("zhswvhbp"),new StringKey("ueceybwy"),new StringKey("czkqykcw"),new StringKey("ctisayir"),new StringKey("hppbgciu"),new StringKey("nhzgljfk"),new StringKey("vaziqllf"),new StringKey("narvrrij"),new StringKey("kcevbbqi"),new StringKey("qymuaqnp"),new StringKey("pwqpfhsr"),new StringKey("peyeicuk"),new StringKey("kudlwihi"),new StringKey("pkmqejlm"),new StringKey("ylwzjftl"),new StringKey("rhqrlqar"),new StringKey("xmftvzsp"),new StringKey("iaemtihk"),new StringKey("ymsbrqcu"),new StringKey("yfnlcxto"),new StringKey("nluqopqh"),new StringKey("wmrzhtox"),new StringKey("qnffhqbl"),new StringKey("zypqpnbw"),new StringKey("oiokhatd"),new StringKey("mdraddiu"),new StringKey("zqoatltt"),new StringKey("ewhulbtm"),new StringKey("nmswpsdf"),new StringKey("xsjeteqe"),new StringKey("ufubcbma"),new StringKey("phyxvrds"),new StringKey("vhnfldap"),new StringKey("zrrlycmg"),new StringKey("becotcjx"),new StringKey("wvbubokn"),new StringKey("avkgiopr"),new StringKey("mbqqxmrv"),new StringKey("ibplgvuu"),new StringKey("dghvpkgc")};
  final StringKey[] notInserted={new StringKey("abcdefgh"),new StringKey("ijklmnop"),new StringKey("qrstuvwx"),new StringKey("yzabcdef")};
  final int DEFAULT_NUMBER_OF_HASH_FUNCTIONS=4;
  BloomFilter bf=new BloomFilter((int)Math.ceil((DEFAULT_NUMBER_OF_HASH_FUNCTIONS * (1.0 * inserted.length)) / Math.log(2.0)),DEFAULT_NUMBER_OF_HASH_FUNCTIONS);
  for (int i=0; i < inserted.length; i++) {
    bf.add(inserted[i]);
  }
  checkFalsePositivesNegatives(bf,inserted,notInserted);
  LOG.info("Checking serialization/deserialization");
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  DataOutputStream out=new DataOutputStream(baos);
  bf.write(out);
  ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
  DataInputStream in=new DataInputStream(bais);
  bf=new BloomFilter();
  bf.readFields(in);
  checkFalsePositivesNegatives(bf,inserted,notInserted);
}
