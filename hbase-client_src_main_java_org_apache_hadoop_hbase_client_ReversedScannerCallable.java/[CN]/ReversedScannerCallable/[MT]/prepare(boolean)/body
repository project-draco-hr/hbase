{
  if (Thread.interrupted()) {
    throw new InterruptedIOException();
  }
  if (!instantiated || reload) {
    if (locateStartRow == null) {
      RegionLocations rl=RpcRetryingCallerWithReadReplicas.getRegionLocations(reload,id,getConnection(),getTableName(),getRow());
      this.location=id < rl.size() ? rl.getRegionLocation(id) : null;
      if (this.location == null) {
        throw new IOException("Failed to find location, tableName=" + getTableName() + ", row="+ Bytes.toStringBinary(getRow())+ ", reload="+ reload);
      }
    }
 else {
      List<HRegionLocation> locatedRegions=locateRegionsInRange(locateStartRow,getRow(),reload);
      if (locatedRegions.isEmpty()) {
        throw new DoNotRetryIOException("Does hbase:meta exist hole? Couldn't get regions for the range from " + Bytes.toStringBinary(locateStartRow) + " to "+ Bytes.toStringBinary(getRow()));
      }
      this.location=locatedRegions.get(locatedRegions.size() - 1);
    }
    setStub(getConnection().getClient(getLocation().getServerName()));
    checkIfRegionServerIsRemote();
    instantiated=true;
  }
  if (reload && this.scanMetrics != null) {
    this.scanMetrics.countOfRPCRetries.incrementAndGet();
    if (isRegionServerRemote) {
      this.scanMetrics.countOfRemoteRPCRetries.incrementAndGet();
    }
  }
}
