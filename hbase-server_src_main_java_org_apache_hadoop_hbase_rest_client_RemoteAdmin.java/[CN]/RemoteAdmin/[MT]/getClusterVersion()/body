{
  StringBuilder path=new StringBuilder();
  path.append('/');
  if (accessToken != null) {
    path.append(accessToken);
    path.append('/');
  }
  path.append("version/cluster");
  int code=0;
  for (int i=0; i < maxRetries; i++) {
    Response response=client.get(path.toString(),Constants.MIMETYPE_XML);
    code=response.getCode();
switch (code) {
case 200:
      try {
        return (StorageClusterVersionModel)getUnmarsheller().unmarshal(new ByteArrayInputStream(response.getBody()));
      }
 catch (      JAXBException jaxbe) {
        throw new IOException("Issue parsing StorageClusterVersionModel object in XML form: " + jaxbe.getLocalizedMessage());
      }
case 404:
    throw new IOException("Cluster version not found");
case 509:
  try {
    Thread.sleep(sleepTime);
  }
 catch (  InterruptedException e) {
  }
break;
default :
throw new IOException(path.toString() + " request returned " + code);
}
}
throw new IOException("get request to " + path.toString() + " request timed out");
}
