{
  String ucName=StringUtils.capitalize(name);
  String usName=StringUtils.capitalize(sampleName);
  String uvName=StringUtils.capitalize(valueName);
  String desc=StringUtils.uncapitalize(description);
  String lsName=StringUtils.uncapitalize(sampleName);
  String lvName=StringUtils.uncapitalize(valueName);
  numInfo=info(ucName + "Num" + usName,String.format("Number of %s for %s with %ds interval",lsName,desc,interval));
  quantileInfos=new MetricsInfo[quantiles.length];
  String nameTemplate="%s%dthPercentile%dsInterval%s";
  String descTemplate="%d percentile %s with %d second interval for %s";
  for (int i=0; i < quantiles.length; i++) {
    int percentile=(int)(100 * quantiles[i].quantile);
    quantileInfos[i]=info(String.format(nameTemplate,ucName,percentile,interval,uvName),String.format(descTemplate,percentile,lvName,interval,desc));
  }
  estimator=new MetricSampleQuantiles(quantiles);
  executor=new MetricsExecutorImpl();
  this.interval=interval;
  executor.getExecutor().scheduleAtFixedRate(new RolloverSample(this),interval,interval,TimeUnit.SECONDS);
}
