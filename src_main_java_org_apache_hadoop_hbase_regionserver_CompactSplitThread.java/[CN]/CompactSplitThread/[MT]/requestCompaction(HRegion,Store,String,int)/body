{
  if (this.server.isStopped()) {
    return;
  }
  CompactionRequest cr=s.requestCompaction();
  if (cr != null) {
    cr.setServer(server);
    if (priority != NO_PRIORITY) {
      cr.setPriority(priority);
    }
    ThreadPoolExecutor pool=largeCompactions;
    if (smallCompactions != null && throttleSize > cr.getSize()) {
      pool=smallCompactions;
    }
    pool.execute(cr);
    if (LOG.isDebugEnabled()) {
      String type="";
      if (smallCompactions != null) {
        type=(pool == smallCompactions) ? "Small " : "Large ";
      }
      LOG.debug(type + "Compaction requested: " + cr+ (why != null && !why.isEmpty() ? "; Because: " + why : "")+ "; "+ this);
    }
  }
}
