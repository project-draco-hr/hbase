{
  HTable table=null;
  HTableDescriptor desc=new HTableDescriptor(getName());
  BloomFilterDescriptor bloomFilter=new BloomFilterDescriptor(BloomFilterDescriptor.BloomFilterType.BLOOMFILTER,12499,4);
  desc.addFamily(new HColumnDescriptor(CONTENTS,1,HColumnDescriptor.CompressionType.NONE,HColumnDescriptor.DEFAULT_IN_MEMORY,HColumnDescriptor.DEFAULT_BLOCKCACHE,HColumnDescriptor.DEFAULT_LENGTH,HColumnDescriptor.DEFAULT_TTL,bloomFilter));
  HBaseAdmin admin=new HBaseAdmin(conf);
  admin.createTable(desc);
  table=new HTable(conf,desc.getName());
  for (int i=0; i < 100; i++) {
    byte[] row=rows[i];
    String value=row.toString();
    BatchUpdate b=new BatchUpdate(row);
    b.put(CONTENTS,value.getBytes(HConstants.UTF8_ENCODING));
    table.commit(b);
  }
  try {
    Thread.sleep(conf.getLong(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000) * 2);
  }
 catch (  InterruptedException e) {
  }
  for (int i=0; i < testKeys.length; i++) {
    Cell value=table.get(testKeys[i],CONTENTS);
    if (value != null && value.getValue().length != 0) {
      LOG.info("non existant key: " + testKeys[i] + " returned value: "+ new String(value.getValue(),HConstants.UTF8_ENCODING));
    }
  }
}
