{
  StoreFile.Writer mobFileWriter=null;
  int compactionKVMax=conf.getInt(HConstants.COMPACTION_KV_MAX,HConstants.COMPACTION_KV_MAX_DEFAULT);
  long mobCount=0;
  long mobSize=0;
  long time=snapshot.getTimeRangeTracker().getMaximumTimestamp();
  mobFileWriter=mobStore.createWriterInTmp(new Date(time),snapshot.getCellsCount(),store.getFamily().getCompression(),store.getRegionInfo().getStartKey());
  byte[] fileName=Bytes.toBytes(mobFileWriter.getPath().getName());
  try {
    Tag tableNameTag=new Tag(TagType.MOB_TABLE_NAME_TAG_TYPE,store.getTableName().getName());
    List<Cell> cells=new ArrayList<Cell>();
    boolean hasMore;
    ScannerContext scannerContext=ScannerContext.newBuilder().setBatchLimit(compactionKVMax).build();
    do {
      hasMore=scanner.next(cells,scannerContext);
      if (!cells.isEmpty()) {
        for (        Cell c : cells) {
          if (c.getValueLength() <= mobCellValueSizeThreshold || MobUtils.isMobReferenceCell(c) || c.getTypeByte() != KeyValue.Type.Put.getCode()) {
            writer.append(c);
          }
 else {
            mobFileWriter.append(c);
            mobSize+=c.getValueLength();
            mobCount++;
            KeyValue reference=MobUtils.createMobRefKeyValue(c,fileName,tableNameTag);
            writer.append(reference);
          }
        }
        cells.clear();
      }
    }
 while (hasMore);
  }
  finally {
    status.setStatus("Flushing mob file " + store + ": appending metadata");
    mobFileWriter.appendMetadata(cacheFlushId,false,mobCount);
    status.setStatus("Flushing mob file " + store + ": closing flushed file");
    mobFileWriter.close();
  }
  if (mobCount > 0) {
    mobStore.commitFile(mobFileWriter.getPath(),targetPath);
    mobStore.updateMobFlushCount();
    mobStore.updateMobFlushedCellsCount(mobCount);
    mobStore.updateMobFlushedCellsSize(mobSize);
  }
 else {
    try {
      store.getFileSystem().delete(mobFileWriter.getPath(),true);
    }
 catch (    IOException e) {
      LOG.error("Fail to delete the temp mob file",e);
    }
  }
}
