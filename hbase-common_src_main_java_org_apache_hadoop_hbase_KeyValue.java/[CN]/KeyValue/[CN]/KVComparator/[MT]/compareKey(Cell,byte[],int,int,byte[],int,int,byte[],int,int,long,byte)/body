{
  int compare=compareRows(cell.getRowArray(),cell.getRowOffset(),cell.getRowLength(),row,roff,rlen);
  if (compare != 0) {
    return compare;
  }
  if (cell.getFamilyLength() + cell.getQualifierLength() == 0 && cell.getTypeByte() == Type.Minimum.getCode()) {
    return 1;
  }
  if (flen + clen == 0 && type == Type.Minimum.getCode()) {
    return -1;
  }
  compare=compareFamilies(cell.getFamilyArray(),cell.getFamilyOffset(),cell.getFamilyLength(),fam,foff,flen);
  if (compare != 0) {
    return compare;
  }
  compare=compareColumns(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength(),col,coff,clen);
  if (compare != 0) {
    return compare;
  }
  compare=compareTimestamps(cell.getTimestamp(),ts);
  if (compare != 0) {
    return compare;
  }
  return (0xff & type) - (0xff & cell.getTypeByte());
}
