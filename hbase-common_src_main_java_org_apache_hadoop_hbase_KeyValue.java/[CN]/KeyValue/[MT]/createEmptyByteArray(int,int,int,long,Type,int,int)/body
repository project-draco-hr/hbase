{
  if (rlength > Short.MAX_VALUE) {
    throw new IllegalArgumentException("Row > " + Short.MAX_VALUE);
  }
  if (flength > Byte.MAX_VALUE) {
    throw new IllegalArgumentException("Family > " + Byte.MAX_VALUE);
  }
  if (qlength > Integer.MAX_VALUE - rlength - flength) {
    throw new IllegalArgumentException("Qualifier > " + Integer.MAX_VALUE);
  }
  checkForTagsLength(tagsLength);
  long longkeylength=getKeyDataStructureSize(rlength,flength,qlength);
  if (longkeylength > Integer.MAX_VALUE) {
    throw new IllegalArgumentException("keylength " + longkeylength + " > "+ Integer.MAX_VALUE);
  }
  int keylength=(int)longkeylength;
  if (vlength > HConstants.MAXIMUM_VALUE_LENGTH) {
    throw new IllegalArgumentException("Valuer > " + HConstants.MAXIMUM_VALUE_LENGTH);
  }
  byte[] bytes=new byte[(int)getKeyValueDataStructureSize(rlength,flength,qlength,vlength,tagsLength)];
  int pos=0;
  pos=Bytes.putInt(bytes,pos,keylength);
  pos=Bytes.putInt(bytes,pos,vlength);
  pos=Bytes.putShort(bytes,pos,(short)(rlength & 0x0000ffff));
  pos+=rlength;
  pos=Bytes.putByte(bytes,pos,(byte)(flength & 0x0000ff));
  pos+=flength + qlength;
  pos=Bytes.putLong(bytes,pos,timestamp);
  pos=Bytes.putByte(bytes,pos,type.getCode());
  pos+=vlength;
  if (tagsLength > 0) {
    pos=Bytes.putShort(bytes,pos,(short)(tagsLength & 0x0000ffff));
  }
  return bytes;
}
