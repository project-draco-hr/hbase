{
  checkParameters(row,rlength,family,flength,qlength,vlength);
  int tagsLength=0;
  if (tags != null && tags.length > 0) {
    for (    Tag t : tags) {
      tagsLength+=t.getLength();
    }
  }
  checkForTagsLength(tagsLength);
  int keyLength=(int)getKeyDataStructureSize(rlength,flength,qlength);
  int keyValueLength=(int)getKeyValueDataStructureSize(rlength,flength,qlength,vlength,tagsLength);
  if (keyValueLength > buffer.length - boffset) {
    throw new IllegalArgumentException("Buffer size " + (buffer.length - boffset) + " < "+ keyValueLength);
  }
  int pos=boffset;
  pos=Bytes.putInt(buffer,pos,keyLength);
  pos=Bytes.putInt(buffer,pos,vlength);
  pos=Bytes.putShort(buffer,pos,(short)(rlength & 0x0000ffff));
  pos=Bytes.putBytes(buffer,pos,row,roffset,rlength);
  pos=Bytes.putByte(buffer,pos,(byte)(flength & 0x0000ff));
  if (flength != 0) {
    pos=Bytes.putBytes(buffer,pos,family,foffset,flength);
  }
  if (qlength != 0) {
    pos=Bytes.putBytes(buffer,pos,qualifier,qoffset,qlength);
  }
  pos=Bytes.putLong(buffer,pos,timestamp);
  pos=Bytes.putByte(buffer,pos,type.getCode());
  if (value != null && value.length > 0) {
    pos=Bytes.putBytes(buffer,pos,value,voffset,vlength);
  }
  if (tagsLength > 0) {
    pos=Bytes.putShort(buffer,pos,(short)tagsLength);
    for (    Tag t : tags) {
      pos=Bytes.putBytes(buffer,pos,t.getBuffer(),t.getOffset(),t.getLength());
    }
  }
  return keyValueLength;
}
