{
  setUp(true,true);
  byte[] row1=Bytes.toBytes("row1offheap");
  byte[] qf1=Bytes.toBytes("qualifier1");
  byte[] qf2=Bytes.toBytes("qualifier2");
  byte[] fam1=Bytes.toBytes("famoffheap");
  long ts1=1;
  long ts2=ts1 + 1;
  long ts3=ts1 + 2;
  String method=this.getName();
  this.region=initHRegion(tableName,method,conf,test_util,fam1);
  try {
    List<Cell> expected=insertData(row1,qf1,qf2,fam1,ts1,ts2,ts3,true);
    List<Cell> actual=performScan(row1,fam1);
    for (int i=0; i < expected.size(); i++) {
      assertFalse(actual.get(i) instanceof OffheapKeyValue);
      assertTrue(CellUtil.equalsIgnoreMvccVersion(expected.get(i),actual.get(i)));
    }
    Thread.sleep(500);
    Scan scan=new Scan(row1);
    scan.addFamily(fam1);
    scan.setMaxVersions(10);
    actual=new ArrayList<Cell>();
    InternalScanner scanner=region.getScanner(scan);
    boolean hasNext=scanner.next(actual);
    assertEquals(false,hasNext);
    for (int i=0; i < expected.size(); i++) {
      if (i != 5) {
        assertTrue(actual.get(i) instanceof OffheapKeyValue);
      }
    }
  }
 catch (  InterruptedException e) {
  }
 finally {
    HBaseTestingUtility.closeRegionAndWAL(this.region);
    this.region=null;
  }
}
