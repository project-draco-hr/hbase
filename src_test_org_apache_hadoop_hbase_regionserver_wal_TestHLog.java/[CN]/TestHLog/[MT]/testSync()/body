{
  byte[] bytes=Bytes.toBytes(getName());
  Path p=new Path(this.dir,getName() + ".fsdos");
  FSDataOutputStream out=fs.create(p);
  out.write(bytes);
  out.sync();
  FSDataInputStream in=fs.open(p);
  assertTrue(in.available() > 0);
  byte[] buffer=new byte[1024];
  int read=in.read(buffer);
  assertEquals(bytes.length,read);
  out.close();
  in.close();
  Path subdir=new Path(this.dir,"hlogdir");
  HLog wal=new HLog(this.fs,subdir,this.conf,null);
  final int total=20;
  for (int i=0; i < total; i++) {
    List<KeyValue> kvs=new ArrayList<KeyValue>();
    kvs.add(new KeyValue(Bytes.toBytes(i),bytes,bytes));
    wal.append(bytes,bytes,kvs,false,System.currentTimeMillis());
  }
  wal.sync();
  Path walPath=wal.computeFilename(wal.getFilenum());
  SequenceFile.Reader reader=HLog.getReader(this.fs,walPath,this.conf);
  int count=0;
  HLogKey key=new HLogKey();
  while (reader.next(key))   count++;
  assertEquals(total,count);
  reader.close();
  for (int i=0; i < total; i++) {
    List<KeyValue> kvs=new ArrayList<KeyValue>();
    kvs.add(new KeyValue(Bytes.toBytes(i),bytes,bytes));
    wal.append(bytes,bytes,kvs,false,System.currentTimeMillis());
  }
  reader=HLog.getReader(this.fs,walPath,this.conf);
  count=0;
  while (reader.next(key))   count++;
  assertTrue(count >= total);
  reader.close();
  wal.sync();
  reader=HLog.getReader(this.fs,walPath,this.conf);
  count=0;
  while (reader.next(key))   count++;
  assertEquals(total * 2,count);
  final byte[] value=new byte[1025 * 1024];
  for (int i=0; i < total; i++) {
    List<KeyValue> kvs=new ArrayList<KeyValue>();
    kvs.add(new KeyValue(Bytes.toBytes(i),bytes,value));
    wal.append(bytes,bytes,kvs,false,System.currentTimeMillis());
  }
  wal.sync();
  reader=HLog.getReader(this.fs,walPath,this.conf);
  count=0;
  while (reader.next(key))   count++;
  assertEquals(total * 3,count);
  reader.close();
  wal.close();
  reader=HLog.getReader(this.fs,walPath,this.conf);
  count=0;
  while (reader.next(key))   count++;
  assertEquals(total * 3,count);
  reader.close();
}
