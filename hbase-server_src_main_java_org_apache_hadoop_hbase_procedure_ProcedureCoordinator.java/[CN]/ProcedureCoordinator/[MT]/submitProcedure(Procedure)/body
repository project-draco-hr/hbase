{
  if (proc == null) {
    return false;
  }
  String procName=proc.getName();
  Procedure oldProc=procedures.get(procName);
  if (oldProc != null) {
    try {
      if (!oldProc.isCompleted()) {
        LOG.warn("Procedure " + procName + " currently running.  Rejecting new request");
        return false;
      }
 else {
        LOG.debug("Procedure " + procName + " was in running list but was completed.  Accepting new attempt.");
        if (!procedures.remove(procName,oldProc)) {
          LOG.warn("Procedure " + procName + " has been resubmitted by another thread. Rejecting this request.");
          return false;
        }
      }
    }
 catch (    ForeignException e) {
      LOG.debug("Procedure " + procName + " was in running list but has exception.  Accepting new attempt.");
      if (!procedures.remove(procName,oldProc)) {
        LOG.warn("Procedure " + procName + " has been resubmitted by another thread. Rejecting this request.");
        return false;
      }
    }
  }
  try {
    if (this.procedures.putIfAbsent(procName,proc) == null) {
      this.pool.submit(proc);
      return true;
    }
 else {
      LOG.error("Another thread has submitted procedure '" + procName + "'. Ignoring this attempt.");
      return false;
    }
  }
 catch (  RejectedExecutionException e) {
    LOG.warn("Procedure " + procName + " rejected by execution pool.  Propagating error.",e);
    this.procedures.remove(procName,proc);
    proc.receive(new ForeignException(procName,e));
  }
  return false;
}
