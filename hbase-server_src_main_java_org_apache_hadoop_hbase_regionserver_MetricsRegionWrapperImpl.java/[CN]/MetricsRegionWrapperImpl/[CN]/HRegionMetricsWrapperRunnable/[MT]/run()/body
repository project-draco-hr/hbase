{
  long tempNumStoreFiles=0;
  long tempMemstoreSize=0;
  long tempStoreFileSize=0;
  long tempMaxStoreFileAge=0;
  long tempMinStoreFileAge=Long.MAX_VALUE;
  long tempNumReferenceFiles=0;
  long avgAgeNumerator=0;
  long numHFiles=0;
  if (region.stores != null) {
    for (    Store store : region.stores.values()) {
      tempNumStoreFiles+=store.getStorefilesCount();
      tempMemstoreSize+=store.getMemStoreSize();
      tempStoreFileSize+=store.getStorefilesSize();
      long storeMaxStoreFileAge=store.getMaxStoreFileAge();
      tempMaxStoreFileAge=(storeMaxStoreFileAge > tempMaxStoreFileAge) ? storeMaxStoreFileAge : tempMaxStoreFileAge;
      long storeMinStoreFileAge=store.getMinStoreFileAge();
      tempMinStoreFileAge=(storeMinStoreFileAge < tempMinStoreFileAge) ? storeMinStoreFileAge : tempMinStoreFileAge;
      long storeHFiles=store.getNumHFiles();
      avgAgeNumerator+=store.getAvgStoreFileAge() * storeHFiles;
      numHFiles+=storeHFiles;
      tempNumReferenceFiles+=store.getNumReferenceFiles();
    }
  }
  numStoreFiles=tempNumStoreFiles;
  memstoreSize=tempMemstoreSize;
  storeFileSize=tempStoreFileSize;
  maxStoreFileAge=tempMaxStoreFileAge;
  if (tempMinStoreFileAge != Long.MAX_VALUE) {
    minStoreFileAge=tempMinStoreFileAge;
  }
  if (numHFiles != 0) {
    avgStoreFileAge=avgAgeNumerator / numHFiles;
  }
  numReferenceFiles=tempNumReferenceFiles;
}
