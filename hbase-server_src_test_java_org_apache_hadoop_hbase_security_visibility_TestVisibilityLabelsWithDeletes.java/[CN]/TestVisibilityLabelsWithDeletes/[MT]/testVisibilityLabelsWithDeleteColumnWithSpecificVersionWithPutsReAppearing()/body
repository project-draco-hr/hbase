{
  TableName tableName=TableName.valueOf(TEST_NAME.getMethodName());
  HTable table=null;
  try {
    Admin hBaseAdmin=TEST_UTIL.getHBaseAdmin();
    HColumnDescriptor colDesc=new HColumnDescriptor(fam);
    colDesc.setMaxVersions(5);
    HTableDescriptor desc=new HTableDescriptor(tableName);
    desc.addFamily(colDesc);
    hBaseAdmin.createTable(desc);
    table=new HTable(conf,tableName);
    Put put=new Put(Bytes.toBytes("row1"));
    put.add(fam,qual,123l,value);
    put.setCellVisibility(new CellVisibility(CONFIDENTIAL));
    table.put(put);
    put=new Put(Bytes.toBytes("row1"));
    put.add(fam,qual,123l,value1);
    put.setCellVisibility(new CellVisibility(SECRET));
    table.put(put);
    table.flushCommits();
    Scan s=new Scan();
    s.setMaxVersions(5);
    s.setAuthorizations(new Authorizations(CONFIDENTIAL,SECRET));
    ResultScanner scanner=table.getScanner(s);
    Result[] next=scanner.next(3);
    assertEquals(next.length,1);
    PrivilegedExceptionAction<Void> actiona=new PrivilegedExceptionAction<Void>(){
      public Void run() throws Exception {
        try {
          HTable table=new HTable(conf,TEST_NAME.getMethodName());
          Delete d=new Delete(row1);
          d.setCellVisibility(new CellVisibility(CONFIDENTIAL));
          d.deleteColumn(fam,qual,123l);
          table.delete(d);
          table=new HTable(conf,TEST_NAME.getMethodName());
          d=new Delete(row1);
          d.setCellVisibility(new CellVisibility(SECRET));
          d.deleteColumn(fam,qual,123l);
          table.delete(d);
          table.flushCommits();
        }
 catch (        Throwable t) {
          throw new IOException(t);
        }
        return null;
      }
    }
;
    SUPERUSER.runAs(actiona);
    s=new Scan();
    s.setMaxVersions(5);
    s.setAuthorizations(new Authorizations(CONFIDENTIAL));
    scanner=table.getScanner(s);
    next=scanner.next(3);
    assertEquals(next.length,0);
  }
  finally {
    if (table != null) {
      table.close();
    }
  }
}
