{
  final Server server=new MockServer(HTU,false);
  final RegionServerServices rss=HTU.createMockRegionServerService();
  HTableDescriptor htd=TEST_HTD;
  final HRegionInfo hri=new HRegionInfo(htd.getTableName(),HConstants.EMPTY_END_ROW,HConstants.EMPTY_END_ROW);
  HRegion region=HTU.createLocalHRegion(hri,htd);
  try {
    assertNotNull(region);
    HRegion spy=Mockito.spy(region);
    final boolean abort=false;
    Mockito.when(spy.close(abort)).thenThrow(new IOException("Mocked failed close!"));
    rss.addToOnlineRegions(spy);
    assertFalse(server.isStopped());
    ZkCoordinatedStateManager consensusProvider=new ZkCoordinatedStateManager();
    consensusProvider.initialize(server);
    consensusProvider.start();
    ZkCloseRegionCoordination.ZkCloseRegionDetails zkCrd=new ZkCloseRegionCoordination.ZkCloseRegionDetails();
    zkCrd.setPublishStatusInZk(false);
    zkCrd.setExpectedVersion(-1);
    CloseRegionHandler handler=new CloseRegionHandler(server,rss,hri,false,consensusProvider.getCloseRegionCoordination(),zkCrd);
    boolean throwable=false;
    try {
      handler.process();
    }
 catch (    Throwable t) {
      throwable=true;
    }
 finally {
      assertTrue(throwable);
      assertTrue(server.isStopped());
    }
  }
  finally {
    HRegion.closeHRegion(region);
  }
}
