{
  if (args.length < 1) {
    printUsage(null);
    return false;
  }
  try {
    for (int i=0; i < args.length; i++) {
      String cmd=args[i];
      if (cmd.equals("-h") || cmd.startsWith("--h")) {
        printUsage(null);
        return false;
      }
      final String rsClassArgKey="--rs.class=";
      if (cmd.startsWith(rsClassArgKey)) {
        rsClass=cmd.substring(rsClassArgKey.length());
        continue;
      }
      final String rsImplArgKey="--rs.impl=";
      if (cmd.startsWith(rsImplArgKey)) {
        rsImpl=cmd.substring(rsImplArgKey.length());
        continue;
      }
      final String startTimeArgKey="--starttime=";
      if (cmd.startsWith(startTimeArgKey)) {
        startTime=Long.parseLong(cmd.substring(startTimeArgKey.length()));
        continue;
      }
      final String endTimeArgKey="--endtime=";
      if (cmd.startsWith(endTimeArgKey)) {
        endTime=Long.parseLong(cmd.substring(endTimeArgKey.length()));
        continue;
      }
      final String versionsArgKey="--versions=";
      if (cmd.startsWith(versionsArgKey)) {
        versions=Integer.parseInt(cmd.substring(versionsArgKey.length()));
        continue;
      }
      final String newNameArgKey="--new.name=";
      if (cmd.startsWith(newNameArgKey)) {
        newTableName=cmd.substring(newNameArgKey.length());
        continue;
      }
      final String peerAdrArgKey="--peer.adr=";
      if (cmd.startsWith(peerAdrArgKey)) {
        peerAddress=cmd.substring(peerAdrArgKey.length());
        continue;
      }
      final String familiesArgKey="--families=";
      if (cmd.startsWith(familiesArgKey)) {
        families=cmd.substring(familiesArgKey.length());
        continue;
      }
      if (cmd.startsWith("--all.cells")) {
        allCells=true;
        continue;
      }
      if (i == args.length - 1) {
        tableName=cmd;
      }
    }
    if (newTableName == null && peerAddress == null) {
      printUsage("At least a new table name or a " + "peer address must be specified");
      return false;
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    printUsage("Can't start because " + e.getMessage());
    return false;
  }
  return true;
}
