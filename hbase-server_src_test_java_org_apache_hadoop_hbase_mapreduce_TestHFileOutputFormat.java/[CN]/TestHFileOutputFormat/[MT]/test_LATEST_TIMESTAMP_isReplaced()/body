{
  Configuration conf=new Configuration(this.util.getConfiguration());
  RecordWriter<ImmutableBytesWritable,KeyValue> writer=null;
  TaskAttemptContext context=null;
  Path dir=util.getDataTestDir("test_LATEST_TIMESTAMP_isReplaced");
  try {
    Job job=new Job(conf);
    FileOutputFormat.setOutputPath(job,dir);
    context=getTestTaskAttemptContext(job);
    HFileOutputFormat hof=new HFileOutputFormat();
    writer=hof.getRecordWriter(context);
    final byte[] b=Bytes.toBytes("b");
    KeyValue kv=new KeyValue(b,b,b);
    KeyValue original=kv.clone();
    writer.write(new ImmutableBytesWritable(),kv);
    assertFalse(original.equals(kv));
    assertTrue(Bytes.equals(original.getRow(),kv.getRow()));
    assertTrue(original.matchingColumn(kv.getFamily(),kv.getQualifier()));
    assertNotSame(original.getTimestamp(),kv.getTimestamp());
    assertNotSame(HConstants.LATEST_TIMESTAMP,kv.getTimestamp());
    kv=new KeyValue(b,b,b,kv.getTimestamp() - 1,b);
    original=kv.clone();
    writer.write(new ImmutableBytesWritable(),kv);
    assertTrue(original.equals(kv));
  }
  finally {
    if (writer != null && context != null)     writer.close(context);
    dir.getFileSystem(conf).delete(dir,true);
  }
}
