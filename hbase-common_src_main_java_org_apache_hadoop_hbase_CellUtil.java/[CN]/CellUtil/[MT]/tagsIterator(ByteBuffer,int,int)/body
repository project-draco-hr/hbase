{
  return new Iterator<Tag>(){
    private int pos=offset;
    private int endOffset=offset + length - 1;
    @Override public boolean hasNext(){
      return this.pos < endOffset;
    }
    @Override public Tag next(){
      if (hasNext()) {
        int curTagLen=ByteBufferUtils.readAsInt(tags,this.pos,Tag.TAG_LENGTH_SIZE);
        Tag tag=new OffheapTag(tags,pos,curTagLen + Tag.TAG_LENGTH_SIZE);
        this.pos+=Bytes.SIZEOF_SHORT + curTagLen;
        return tag;
      }
      return null;
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
