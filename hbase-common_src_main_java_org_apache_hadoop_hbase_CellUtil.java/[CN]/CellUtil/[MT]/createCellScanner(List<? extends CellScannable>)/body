{
  return new CellScanner(){
    private final Iterator<? extends CellScannable> iterator=cellScannerables.iterator();
    private CellScanner cellScanner=null;
    @Override public Cell current(){
      return this.cellScanner != null ? this.cellScanner.current() : null;
    }
    @Override public boolean advance() throws IOException {
      while (true) {
        if (this.cellScanner == null) {
          if (!this.iterator.hasNext())           return false;
          this.cellScanner=this.iterator.next().cellScanner();
        }
        if (this.cellScanner.advance())         return true;
        this.cellScanner=null;
      }
    }
  }
;
}
