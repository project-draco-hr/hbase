{
  conf.setLong(strPrefix + strSchema + "MinCompactSize",3);
  conf.setLong(strPrefix + strSchema + "Tier.0.MaxSize",10L);
  conf.setLong(strPrefix + strSchema + "Tier.1.MaxSize",100L);
  conf.setLong(strPrefix + strSchema + "Tier.2.MaxSize",1000L);
  conf.setLong(strPrefix + strSchema + "Tier.0.MaxAgeInDisk",Long.MAX_VALUE);
  conf.setLong(strPrefix + strSchema + "Tier.1.MaxAgeInDisk",Long.MAX_VALUE);
  conf.setLong(strPrefix + strSchema + "Tier.2.MaxAgeInDisk",Long.MAX_VALUE);
  compactEquals(sfCreate(false,500,3,2,1),3,2,1);
  compactEquals(sfCreate(false,500,8,7,6,5,4,2,1));
  compactEquals(sfCreate(false,500,6,8,4,7,4,2,1));
  compactEquals(sfCreate(false,500,23,11,8,4,1));
  compactEquals(sfCreate(false,500,11,23,8,4,1),11,23);
  compactEquals(sfCreate(false,500,9,23,8,4,1),9,23);
  compactEquals(sfCreate(false,500,70,23,11,8,4,1));
  compactEquals(sfCreate(false,500,60,23,11,8,4,1),60,23,11);
  compactEquals(sfCreate(false,500,90,60,23,11,8,4,1),90,60,23,11);
  conf.setBoolean(strPrefix + strSchema + "IsRecentFirstOrder",false);
  compactEquals(sfCreate(false,500,450,60,23,11,8,4,1),500,450,60,23,11);
  compactEquals(sfCreate(false,450,500,60,23,11,8,4,1),450,500,60,23,11);
  compactEquals(sfCreate(false,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,999,450,550),999,450,550);
  conf.setLong(strPrefix + strSchema + "MaxCompactSize",10000);
  compactEquals(sfCreate(false,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,999,450,550),1013,1012,1011,1010,1009);
  compactEquals(sfCreate(false,1013,992,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,999,450,550),1013,992,1011,1010,1009);
  compactEquals(sfCreate(false,992,993,1011,990,1009,998,1007,996,1005,994,1003,992,1001,999,450,550),992,993,1011,990,1009);
  conf.setBoolean(strPrefix + strSchema + "IsRecentFirstOrder",true);
  compactEquals(sfCreate(false,500,450,60,23,11,8,4,1),60,23,11);
  compactEquals(sfCreate(false,450,500,60,23,11,8,4,1),60,23,11);
  compactEquals(sfCreate(false,1013,1012,1011,1010,1009,1008,1007,1006,1005,1004,1003,1002,1001,999,450,550),999,450,550);
  compactEquals(sfCreate(false,992,993,1011,990,1009,998,1007,996,1005,994,1003,992,1001,999,450,550),999,450,550);
  compactEquals(sfCreate(false,992,993,1011,990,1009,998,1007,996,1005,994,1003,992,991,999,450,550),992,991,999,450,550);
  compactEquals(sfCreate(false,992,993,1011,990,1009,998,1007,996,1005,994,1003,992,991,999,450,550,1001),992,993,1011,990,1009);
}
