{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  CountingOutputStream cos=new CountingOutputStream(baos);
  DataOutputStream dos=new DataOutputStream(cos);
  Codec codec=new CellCodecWithTags();
  Codec.Encoder encoder=codec.getEncoder(dos);
  final Cell cell1=new KeyValue(Bytes.toBytes("r"),Bytes.toBytes("f"),Bytes.toBytes("1"),HConstants.LATEST_TIMESTAMP,Bytes.toBytes("1"),new Tag[]{new Tag((byte)1,Bytes.toBytes("teststring1")),new Tag((byte)2,Bytes.toBytes("teststring2"))});
  final Cell cell2=new KeyValue(Bytes.toBytes("r"),Bytes.toBytes("f"),Bytes.toBytes("2"),HConstants.LATEST_TIMESTAMP,Bytes.toBytes("2"),new Tag[]{new Tag((byte)1,Bytes.toBytes("teststring3"))});
  final Cell cell3=new KeyValue(Bytes.toBytes("r"),Bytes.toBytes("f"),Bytes.toBytes("3"),HConstants.LATEST_TIMESTAMP,Bytes.toBytes("3"),new Tag[]{new Tag((byte)2,Bytes.toBytes("teststring4")),new Tag((byte)2,Bytes.toBytes("teststring5")),new Tag((byte)1,Bytes.toBytes("teststring6"))});
  encoder.write(cell1);
  encoder.write(cell2);
  encoder.write(cell3);
  encoder.flush();
  dos.close();
  long offset=cos.getCount();
  CountingInputStream cis=new CountingInputStream(new ByteArrayInputStream(baos.toByteArray()));
  DataInputStream dis=new DataInputStream(cis);
  Codec.Decoder decoder=codec.getDecoder(dis);
  assertTrue(decoder.advance());
  Cell c=decoder.current();
  assertTrue(CellUtil.equals(c,cell1));
  List<Tag> tags=Tag.asList(c.getTagsArray(),c.getTagsOffset(),c.getTagsLength());
  assertEquals(2,tags.size());
  Tag tag=tags.get(0);
  assertEquals(1,tag.getType());
  assertTrue(Bytes.equals(Bytes.toBytes("teststring1"),tag.getValue()));
  tag=tags.get(1);
  assertEquals(2,tag.getType());
  assertTrue(Bytes.equals(Bytes.toBytes("teststring2"),tag.getValue()));
  assertTrue(decoder.advance());
  c=decoder.current();
  assertTrue(CellUtil.equals(c,cell2));
  tags=Tag.asList(c.getTagsArray(),c.getTagsOffset(),c.getTagsLength());
  assertEquals(1,tags.size());
  tag=tags.get(0);
  assertEquals(1,tag.getType());
  assertTrue(Bytes.equals(Bytes.toBytes("teststring3"),tag.getValue()));
  assertTrue(decoder.advance());
  c=decoder.current();
  assertTrue(CellUtil.equals(c,cell3));
  tags=Tag.asList(c.getTagsArray(),c.getTagsOffset(),c.getTagsLength());
  assertEquals(3,tags.size());
  tag=tags.get(0);
  assertEquals(2,tag.getType());
  assertTrue(Bytes.equals(Bytes.toBytes("teststring4"),tag.getValue()));
  tag=tags.get(1);
  assertEquals(2,tag.getType());
  assertTrue(Bytes.equals(Bytes.toBytes("teststring5"),tag.getValue()));
  tag=tags.get(2);
  assertEquals(1,tag.getType());
  assertTrue(Bytes.equals(Bytes.toBytes("teststring6"),tag.getValue()));
  assertFalse(decoder.advance());
  dis.close();
  assertEquals(offset,cis.getCount());
}
