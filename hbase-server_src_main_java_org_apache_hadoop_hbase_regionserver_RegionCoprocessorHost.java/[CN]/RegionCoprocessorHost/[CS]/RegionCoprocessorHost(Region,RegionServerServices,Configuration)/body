{
  super(rsServices);
  this.conf=conf;
  this.rsServices=rsServices;
  this.region=region;
  this.pathPrefix=Integer.toString(this.region.getRegionInfo().hashCode());
  loadSystemCoprocessors(conf,REGION_COPROCESSOR_CONF_KEY);
  if (!region.getRegionInfo().getTable().isSystemTable()) {
    loadSystemCoprocessors(conf,USER_REGION_COPROCESSOR_CONF_KEY);
  }
  loadTableCoprocessors(conf);
  boolean hasCustomPostScannerFilterRow=false;
  out:   for (  RegionEnvironment env : coprocessors) {
    if (env.getInstance() instanceof RegionObserver) {
      Class<?> clazz=env.getInstance().getClass();
      for (; ; ) {
        if (clazz == null) {
          hasCustomPostScannerFilterRow=true;
          break out;
        }
        if (clazz == BaseRegionObserver.class) {
          break;
        }
        try {
          clazz.getDeclaredMethod("postScannerFilterRow",ObserverContext.class,InternalScanner.class,Cell.class,boolean.class);
          hasCustomPostScannerFilterRow=true;
          break out;
        }
 catch (        NoSuchMethodException ignore) {
        }
        try {
          clazz.getDeclaredMethod("postScannerFilterRow",ObserverContext.class,InternalScanner.class,byte[].class,int.class,short.class,boolean.class);
          hasCustomPostScannerFilterRow=true;
          break out;
        }
 catch (        NoSuchMethodException ignore) {
        }
        clazz=clazz.getSuperclass();
      }
    }
  }
  this.hasCustomPostScannerFilterRow=hasCustomPostScannerFilterRow;
}
