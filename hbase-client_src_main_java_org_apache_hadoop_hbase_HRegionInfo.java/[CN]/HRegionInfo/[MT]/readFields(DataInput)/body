{
  byte version=in.readByte();
  if (version == 0) {
    this.endKey=Bytes.readByteArray(in);
    this.offLine=in.readBoolean();
    this.regionId=in.readLong();
    this.regionName=Bytes.readByteArray(in);
    this.regionNameStr=Bytes.toStringBinary(this.regionName);
    this.split=in.readBoolean();
    this.startKey=Bytes.readByteArray(in);
    try {
      HTableDescriptor htd=new HTableDescriptor();
      htd.readFields(in);
      this.tableName=htd.getTableName();
    }
 catch (    EOFException eofe) {
      throw new IOException("HTD not found in input buffer",eofe);
    }
    this.hashCode=in.readInt();
  }
 else   if (getVersion() == version) {
    this.endKey=Bytes.readByteArray(in);
    this.offLine=in.readBoolean();
    this.regionId=in.readLong();
    this.regionName=Bytes.readByteArray(in);
    this.regionNameStr=Bytes.toStringBinary(this.regionName);
    this.split=in.readBoolean();
    this.startKey=Bytes.readByteArray(in);
    this.tableName=TableName.valueOf(Bytes.readByteArray(in));
    this.hashCode=in.readInt();
  }
 else {
    throw new IOException("Non-migratable/unknown version=" + getVersion());
  }
}
