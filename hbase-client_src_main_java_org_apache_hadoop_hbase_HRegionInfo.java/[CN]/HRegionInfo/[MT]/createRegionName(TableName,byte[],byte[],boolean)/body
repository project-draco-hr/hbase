{
  byte[] b=new byte[tableName.getName().length + 2 + id.length+ (startKey == null ? 0 : startKey.length)+ (newFormat ? (MD5_HEX_LENGTH + 2) : 0)];
  int offset=tableName.getName().length;
  System.arraycopy(tableName.getName(),0,b,0,offset);
  b[offset++]=HConstants.DELIMITER;
  if (startKey != null && startKey.length > 0) {
    System.arraycopy(startKey,0,b,offset,startKey.length);
    offset+=startKey.length;
  }
  b[offset++]=HConstants.DELIMITER;
  System.arraycopy(id,0,b,offset,id.length);
  offset+=id.length;
  if (newFormat) {
    String md5Hash=MD5Hash.getMD5AsHex(b,0,offset);
    byte[] md5HashBytes=Bytes.toBytes(md5Hash);
    if (md5HashBytes.length != MD5_HEX_LENGTH) {
      LOG.error("MD5-hash length mismatch: Expected=" + MD5_HEX_LENGTH + "; Got="+ md5HashBytes.length);
    }
    b[offset++]=ENC_SEPARATOR;
    System.arraycopy(md5HashBytes,0,b,offset,MD5_HEX_LENGTH);
    offset+=MD5_HEX_LENGTH;
    b[offset++]=ENC_SEPARATOR;
  }
  return b;
}
