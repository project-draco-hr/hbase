{
  Map<byte[],Long> flushing=null;
  Map<byte[],Long> unflushed=null;
synchronized (this.tieLock) {
    flushing=flattenToLowestSequenceId(this.flushingSequenceIds);
    unflushed=flattenToLowestSequenceId(this.lowestUnflushedSequenceIds);
  }
  for (  Map.Entry<byte[],Long> e : sequenceids.entrySet()) {
    long oldestFlushing=Long.MAX_VALUE;
    long oldestUnflushed=Long.MAX_VALUE;
    if (flushing != null) {
      if (flushing.containsKey(e.getKey()))       oldestFlushing=flushing.get(e.getKey());
    }
    if (unflushed != null) {
      if (unflushed.containsKey(e.getKey()))       oldestUnflushed=unflushed.get(e.getKey());
    }
    long min=Math.min(oldestFlushing,oldestUnflushed);
    if (min <= e.getValue())     return false;
  }
  return true;
}
