{
  if (args.length != 2) {
    System.out.println("Usage: TestIPC <CYCLES> <CELLS_PER_CYCLE>");
    return;
  }
  int cycles=Integer.parseInt(args[0]);
  int cellcount=Integer.parseInt(args[1]);
  Configuration conf=HBaseConfiguration.create();
  TestRpcServer rpcServer=new TestRpcServer();
  MethodDescriptor md=SERVICE.getDescriptorForType().findMethodByName("echo");
  EchoRequestProto param=EchoRequestProto.newBuilder().setMessage("hello").build();
  RpcClient client=new RpcClient(conf,HConstants.CLUSTER_ID_DEFAULT);
  KeyValue kv=KeyValueUtil.ensureKeyValue(BIG_CELL);
  Put p=new Put(kv.getRow());
  for (int i=0; i < cellcount; i++) {
    p.add(kv);
  }
  RowMutations rm=new RowMutations(kv.getRow());
  rm.add(p);
  try {
    rpcServer.start();
    InetSocketAddress address=rpcServer.getListenerAddress();
    long startTime=System.currentTimeMillis();
    User user=User.getCurrent();
    for (int i=0; i < cycles; i++) {
      List<CellScannable> cells=new ArrayList<CellScannable>();
      ClientProtos.RegionAction.Builder builder=RequestConverter.buildNoDataRegionAction(HConstants.EMPTY_BYTE_ARRAY,rm,cells,RegionAction.newBuilder(),ClientProtos.Action.newBuilder(),MutationProto.newBuilder());
      builder.setRegion(RegionSpecifier.newBuilder().setType(RegionSpecifierType.REGION_NAME).setValue(ByteString.copyFrom(HRegionInfo.FIRST_META_REGIONINFO.getEncodedNameAsBytes())));
      if (i % 100000 == 0) {
        LOG.info("" + i);
      }
      CellScanner cellScanner=CellUtil.createCellScanner(cells);
      Pair<Message,CellScanner> response=client.call(null,md,builder.build(),cellScanner,param,user,address,0);
    }
    LOG.info("Cycled " + cycles + " time(s) with "+ cellcount+ " cell(s) in "+ (System.currentTimeMillis() - startTime)+ "ms");
  }
  finally {
    client.stop();
    rpcServer.stop();
  }
}
