{
  Configuration conf=HBaseConfiguration.create();
  SocketFactory spyFactory=spy(NetUtils.getDefaultSocketFactory(conf));
  Mockito.doAnswer(new Answer<Socket>(){
    @Override public Socket answer(    InvocationOnMock invocation) throws Throwable {
      Socket s=spy((Socket)invocation.callRealMethod());
      doThrow(new RuntimeException("Injected fault")).when(s).setSoTimeout(anyInt());
      return s;
    }
  }
).when(spyFactory).createSocket();
  TestRpcServer rpcServer=new TestRpcServer();
  RpcClientImpl client=new RpcClientImpl(conf,HConstants.CLUSTER_ID_DEFAULT,spyFactory);
  try {
    rpcServer.start();
    InetSocketAddress address=rpcServer.getListenerAddress();
    MethodDescriptor md=SERVICE.getDescriptorForType().findMethodByName("echo");
    EchoRequestProto param=EchoRequestProto.newBuilder().setMessage("hello").build();
    client.call(null,md,param,null,null,User.getCurrent(),address,0);
    fail("Expected an exception to have been thrown!");
  }
 catch (  Exception e) {
    LOG.info("Caught expected exception: " + e.toString());
    assertTrue(StringUtils.stringifyException(e).contains("Injected fault"));
  }
 finally {
    client.close();
    rpcServer.stop();
  }
}
