{
  if (cause == null) {
    LOG.info("Closing source " + this.peerClusterZnode + " because: "+ reason);
  }
 else {
    LOG.error("Closing source " + this.peerClusterZnode + " because an error occurred: "+ reason,cause);
  }
  this.sourceRunning=false;
  Collection<ReplicationSourceWorkerThread> workers=workerThreads.values();
  for (  ReplicationSourceWorkerThread worker : workers) {
    worker.setWorkerRunning(false);
    worker.interrupt();
  }
  ListenableFuture<Service.State> future=null;
  if (this.replicationEndpoint != null) {
    future=this.replicationEndpoint.stop();
  }
  if (join) {
    for (    ReplicationSourceWorkerThread worker : workers) {
      Threads.shutdown(worker,this.sleepForRetries);
      LOG.info("ReplicationSourceWorker " + worker.getName() + " terminated");
    }
    if (future != null) {
      try {
        future.get();
      }
 catch (      Exception e) {
        LOG.warn("Got exception:" + e);
      }
    }
  }
}
