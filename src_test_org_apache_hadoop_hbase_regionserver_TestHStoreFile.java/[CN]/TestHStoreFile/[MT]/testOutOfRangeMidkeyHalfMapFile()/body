{
  MapFile.Reader top=null;
  MapFile.Reader bottom=null;
  HStoreKey key=new HStoreKey();
  ImmutableBytesWritable value=new ImmutableBytesWritable();
  Path p=writeMapFile(getName());
  try {
    try {
      HStoreKey midkey=new HStoreKey(new Text("   "));
      bottom=new HStoreFile.HalfMapFileReader(this.fs,p.toString(),this.conf,HStoreFile.Range.bottom,midkey);
      assertFalse(bottom.next(key,value));
      top=new HStoreFile.HalfMapFileReader(this.fs,p.toString(),this.conf,HStoreFile.Range.top,midkey);
      boolean first=true;
      while (top.next(key,value)) {
        assertTrue(key.compareTo(midkey) >= 0);
        if (first) {
          first=false;
          LOG.info("First top when key < bottom: " + key.toString());
          assertEquals("aa",key.getRow().toString());
        }
      }
      LOG.info("Last top when key < bottom: " + key.toString());
      assertEquals("zz",key.getRow().toString());
      midkey=new HStoreKey(new Text("|||"));
      bottom=new HStoreFile.HalfMapFileReader(this.fs,p.toString(),this.conf,HStoreFile.Range.bottom,midkey);
      first=true;
      while (bottom.next(key,value)) {
        if (first) {
          first=false;
          LOG.info("First bottom when key > top: " + key.toString());
          assertEquals("aa",key.getRow().toString());
        }
      }
      LOG.info("Last bottom when key > top: " + key.toString());
      assertEquals("zz",key.getRow().toString());
      top=new HStoreFile.HalfMapFileReader(this.fs,p.toString(),this.conf,HStoreFile.Range.top,midkey);
      assertFalse(top.next(key,value));
    }
  finally {
      if (top != null) {
        top.close();
      }
      if (bottom != null) {
        bottom.close();
      }
      fs.delete(p);
    }
  }
  finally {
    this.fs.delete(p);
  }
}
