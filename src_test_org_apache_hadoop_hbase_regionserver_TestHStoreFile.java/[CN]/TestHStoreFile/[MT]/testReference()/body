{
  HStoreFile hsf=new HStoreFile(this.conf,this.fs,this.dir,HRegionInfo.FIRST_META_REGIONINFO,Bytes.toBytes("colfamily"),1234567890L,null);
  MapFile.Writer writer=hsf.getWriter(this.fs,SequenceFile.CompressionType.NONE,false,0);
  writeStoreFile(writer);
  MapFile.Reader reader=hsf.getReader(this.fs,false,false);
  HStoreKey midkey=new HStoreKey(((HStoreKey)reader.midKey()).getRow());
  HStoreKey hsk=new HStoreKey();
  reader.finalKey(hsk);
  byte[] finalKey=hsk.getRow();
  Reference reference=new Reference(hsf.getEncodedRegionName(),hsf.getFileId(),midkey,Reference.Range.top);
  HStoreFile refHsf=new HStoreFile(this.conf,this.fs,new Path(DIR,getName()),HRegionInfo.FIRST_META_REGIONINFO,hsf.getColFamily(),456,reference);
  refHsf.writeReferenceFiles(this.fs);
  assertTrue(this.fs.exists(refHsf.getMapFilePath()));
  assertTrue(this.fs.exists(refHsf.getInfoFilePath()));
  Reference otherReference=HStoreFile.readSplitInfo(refHsf.getInfoFilePath(),this.fs);
  assertEquals(reference.getEncodedRegionName(),otherReference.getEncodedRegionName());
  assertEquals(reference.getFileId(),otherReference.getFileId());
  assertEquals(reference.getMidkey().toString(),otherReference.getMidkey().toString());
  MapFile.Reader halfReader=refHsf.getReader(this.fs,false,false);
  HStoreKey key=new HStoreKey();
  ImmutableBytesWritable value=new ImmutableBytesWritable();
  boolean first=true;
  while (halfReader.next(key,value)) {
    if (first) {
      assertTrue(Bytes.equals(key.getRow(),midkey.getRow()));
      first=false;
    }
  }
  assertTrue(Bytes.equals(key.getRow(),finalKey));
  HBaseMapFile.HBaseReader hbaseMapfileHalfReader=(HBaseMapFile.HBaseReader)halfReader;
  assertTrue(hbaseMapfileHalfReader.containsKey(midkey));
  assertTrue(hbaseMapfileHalfReader.containsKey(new HStoreKey(finalKey)));
  assertFalse(hbaseMapfileHalfReader.containsKey(new HStoreKey("aa")));
  assertFalse(hbaseMapfileHalfReader.containsKey(new HStoreKey("{{")));
}
