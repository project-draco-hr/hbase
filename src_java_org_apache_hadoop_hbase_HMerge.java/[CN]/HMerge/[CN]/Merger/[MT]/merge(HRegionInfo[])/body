{
  if (regions.length < 2) {
    LOG.info("only one region - nothing to merge");
    return;
  }
  HRegion currentRegion=null;
  long currentSize=0;
  HRegion nextRegion=null;
  long nextSize=0;
  for (int i=0; i < regions.length - 1; i++) {
    if (currentRegion == null) {
      currentRegion=new HRegion(dir,hlog,fs,conf,regions[i],null);
      currentSize=currentRegion.largestHStore();
    }
    nextRegion=new HRegion(dir,hlog,fs,conf,regions[i + 1],null);
    nextSize=nextRegion.largestHStore();
    long maxFilesize=conf.getLong("hbase.hregion.max.filesize",DEFAULT_MAX_FILE_SIZE);
    if ((currentSize + nextSize) <= (maxFilesize / 2)) {
      LOG.info("merging regions " + currentRegion.getRegionName() + " and "+ nextRegion.getRegionName());
      HRegion mergedRegion=HRegion.closeAndMerge(currentRegion,nextRegion);
      updateMeta(currentRegion.getRegionName(),nextRegion.getRegionName(),mergedRegion);
      currentRegion=null;
      i++;
      continue;
    }
    LOG.info("not merging regions " + currentRegion.getRegionName() + " and "+ nextRegion.getRegionName());
    currentRegion.close();
    currentRegion=nextRegion;
    currentSize=nextSize;
  }
  if (currentRegion != null) {
    currentRegion.close();
  }
}
