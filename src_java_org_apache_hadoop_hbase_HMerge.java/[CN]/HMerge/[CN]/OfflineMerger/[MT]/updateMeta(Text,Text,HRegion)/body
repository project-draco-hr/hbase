{
  Text[] regionsToDelete={oldRegion1,oldRegion2};
  for (int r=0; r < regionsToDelete.length; r++) {
    long lockid=Math.abs(rand.nextLong());
    BatchUpdate b=new BatchUpdate(lockid);
    lockid=b.startUpdate(regionsToDelete[r]);
    b.delete(lockid,COL_REGIONINFO);
    b.delete(lockid,COL_SERVER);
    b.delete(lockid,COL_STARTCODE);
    b.delete(lockid,COL_SPLITA);
    b.delete(lockid,COL_SPLITB);
    root.batchUpdate(System.currentTimeMillis(),b);
    lockid=-1L;
    if (LOG.isDebugEnabled()) {
      LOG.debug("updated columns in row: " + regionsToDelete[r]);
    }
  }
  HRegionInfo newInfo=newRegion.getRegionInfo();
  newInfo.setOffline(true);
  long lockid=Math.abs(rand.nextLong());
  BatchUpdate b=new BatchUpdate(lockid);
  lockid=b.startUpdate(newRegion.getRegionName());
  b.put(lockid,COL_REGIONINFO,Writables.getBytes(newInfo));
  root.batchUpdate(System.currentTimeMillis(),b);
  if (LOG.isDebugEnabled()) {
    LOG.debug("updated columns in row: " + newRegion.getRegionName());
  }
}
