{
  servlet.getMetrics().incrementRequests(1);
  HTablePool pool=servlet.getTablePool();
  HTableInterface table=null;
  try {
    List<RowModel> rows=model.getRows();
    if (user != null && !servlet.userRequestLimit(user,rows.size())) {
      throw new WebApplicationException(Response.status(509).build());
    }
    table=pool.getTable(actualTableName);
    ((HTable)table).setAutoFlush(false);
    for (    RowModel row : rows) {
      byte[] key=row.getKey();
      Put put=new Put(key);
      for (      CellModel cell : row.getCells()) {
        byte[][] parts=KeyValue.parseColumn(cell.getColumn());
        if (parts.length == 2 && parts[1].length > 0) {
          put.add(parts[0],parts[1],cell.getTimestamp(),cell.getValue());
        }
 else {
          put.add(parts[0],null,cell.getTimestamp(),cell.getValue());
        }
      }
      table.put(put);
      if (LOG.isDebugEnabled()) {
        LOG.debug("PUT " + put.toString());
      }
    }
    ((HTable)table).setAutoFlush(true);
    table.flushCommits();
    ResponseBuilder response=Response.ok();
    return response.build();
  }
 catch (  IOException e) {
    throw new WebApplicationException(e,Response.Status.SERVICE_UNAVAILABLE);
  }
 finally {
    if (table != null) {
      pool.putTable(table);
    }
  }
}
