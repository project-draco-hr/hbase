{
  if (this.getConf() == null) {
    return files;
  }
  final Set<String> wals;
  try {
    wals=loadWALsFromQueues();
  }
 catch (  KeeperException e) {
    LOG.warn("Failed to read zookeeper, skipping checking deletable files");
    return Collections.emptyList();
  }
  return Iterables.filter(files,new Predicate<FileStatus>(){
    @Override public boolean apply(    FileStatus file){
      String wal=file.getPath().getName();
      boolean logInReplicationQueue=wals.contains(wal);
      if (LOG.isDebugEnabled()) {
        if (logInReplicationQueue) {
          LOG.debug("Found log in ZK, keeping: " + wal);
        }
 else {
          LOG.debug("Didn't find this log in ZK, deleting: " + wal);
        }
      }
      return !logInReplicationQueue;
    }
  }
);
}
