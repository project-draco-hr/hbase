{
  long heapSize=ClassSize.align(6 * ClassSize.REFERENCE + 3 * Bytes.SIZEOF_INT + ClassSize.OBJECT);
  heapSize+=MID_KEY_METADATA_SIZE;
  if (blockKeys != null) {
    heapSize+=ClassSize.align(ClassSize.ARRAY + blockKeys.length * ClassSize.REFERENCE);
    for (    byte[] key : blockKeys) {
      heapSize+=ClassSize.align(ClassSize.ARRAY + key.length);
    }
  }
  if (blockOffsets != null) {
    heapSize+=ClassSize.align(ClassSize.ARRAY + blockOffsets.length * Bytes.SIZEOF_LONG);
  }
  if (blockDataSizes != null) {
    heapSize+=ClassSize.align(ClassSize.ARRAY + blockDataSizes.length * Bytes.SIZEOF_INT);
  }
  return ClassSize.align(heapSize);
}
