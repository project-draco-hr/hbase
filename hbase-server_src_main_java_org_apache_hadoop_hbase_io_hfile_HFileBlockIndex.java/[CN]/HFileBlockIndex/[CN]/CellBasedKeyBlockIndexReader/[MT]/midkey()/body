{
  if (rootCount == 0)   throw new IOException("HFile empty");
  Cell targetMidKey=this.midKey.get();
  if (targetMidKey != null) {
    return targetMidKey;
  }
  if (midLeafBlockOffset >= 0) {
    if (cachingBlockReader == null) {
      throw new IOException("Have to read the middle leaf block but " + "no block reader available");
    }
    HFileBlock midLeafBlock=cachingBlockReader.readBlock(midLeafBlockOffset,midLeafBlockOnDiskSize,true,true,false,true,BlockType.LEAF_INDEX,null);
    ByteBuffer b=midLeafBlock.getBufferWithoutHeader();
    int numDataBlocks=b.getInt();
    int keyRelOffset=b.getInt(Bytes.SIZEOF_INT * (midKeyEntry + 1));
    int keyLen=b.getInt(Bytes.SIZEOF_INT * (midKeyEntry + 2)) - keyRelOffset;
    int keyOffset=Bytes.SIZEOF_INT * (numDataBlocks + 2) + keyRelOffset + SECONDARY_INDEX_ENTRY_OVERHEAD;
    byte[] bytes=ByteBufferUtils.toBytes(b,keyOffset,keyLen);
    targetMidKey=new KeyValue.KeyOnlyKeyValue(bytes,0,bytes.length);
  }
 else {
    targetMidKey=blockKeys[rootCount / 2];
  }
  this.midKey.set(targetMidKey);
  return targetMidKey;
}
