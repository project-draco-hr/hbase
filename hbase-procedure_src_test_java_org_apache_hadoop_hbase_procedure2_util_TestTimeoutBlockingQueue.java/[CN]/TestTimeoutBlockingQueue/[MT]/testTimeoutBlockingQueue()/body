{
  TimeoutBlockingQueue<TestObject> queue;
  int[][] testArray=new int[][]{{200,400,600},{200,400,100},{200,400,300}};
  for (int i=0; i < testArray.length; ++i) {
    int[] sortedArray=Arrays.copyOf(testArray[i],testArray[i].length);
    Arrays.sort(sortedArray);
    queue=new TimeoutBlockingQueue<TestObject>(2,new TestObjectTimeoutRetriever());
    for (int j=0; j < testArray[i].length; ++j) {
      queue.add(new TestObject(j,testArray[i][j]));
      queue.dump();
    }
    for (int j=0; !queue.isEmpty(); ++j) {
      assertEquals(sortedArray[j],queue.poll().getTimeout());
    }
    queue=new TimeoutBlockingQueue<TestObject>(2,new TestObjectTimeoutRetriever());
    queue.add(new TestObject(0,50));
    assertEquals(50,queue.poll().getTimeout());
    for (int j=0; j < testArray[i].length; ++j) {
      queue.add(new TestObject(j,testArray[i][j]));
      queue.dump();
    }
    for (int j=0; !queue.isEmpty(); ++j) {
      assertEquals(sortedArray[j],queue.poll().getTimeout());
    }
  }
}
