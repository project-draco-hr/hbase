{
  this.methodName=method.getName();
  this.parameterClasses=method.getParameterTypes();
  this.parameters=parameters;
  if (method.getDeclaringClass().equals(VersionedProtocol.class)) {
    clientVersion=0;
    clientMethodsHash=0;
  }
 else {
    try {
      Field versionField=method.getDeclaringClass().getField("VERSION");
      versionField.setAccessible(true);
      this.clientVersion=versionField.getLong(method.getDeclaringClass());
    }
 catch (    NoSuchFieldException ex) {
      throw new RuntimeException("The " + method.getDeclaringClass(),ex);
    }
catch (    IllegalAccessException ex) {
      throw new RuntimeException(ex);
    }
    this.clientMethodsHash=ProtocolSignature.getFingerprint(method.getDeclaringClass().getMethods());
  }
}
