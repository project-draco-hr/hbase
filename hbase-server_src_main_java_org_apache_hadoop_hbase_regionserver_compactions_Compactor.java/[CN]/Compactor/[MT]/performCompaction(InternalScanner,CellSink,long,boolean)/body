{
  int bytesWritten=0;
  List<Cell> cells=new ArrayList<Cell>();
  int closeCheckInterval=HStore.getCloseCheckInterval();
  long lastMillis;
  if (LOG.isDebugEnabled()) {
    lastMillis=System.currentTimeMillis();
  }
 else {
    lastMillis=0;
  }
  boolean hasMore;
  do {
    hasMore=scanner.next(cells,compactionKVMax);
    for (    Cell c : cells) {
      if (cleanSeqId && c.getSequenceId() <= smallestReadPoint) {
        CellUtil.setSequenceId(c,0);
      }
      writer.append(c);
      ++progress.currentCompactedKVs;
      progress.totalCompactedSize+=KeyValueUtil.length(c);
      if (closeCheckInterval > 0) {
        bytesWritten+=KeyValueUtil.length(c);
        if (bytesWritten > closeCheckInterval) {
          if (LOG.isDebugEnabled()) {
            long now=System.currentTimeMillis();
            if ((now - lastMillis) >= 60 * 1000) {
              LOG.debug("Compaction progress: " + progress + String.format(", rate=%.2f kB/sec",(bytesWritten / 1024.0) / ((now - lastMillis) / 1000.0)));
              lastMillis=now;
            }
          }
          bytesWritten=0;
          if (!store.areWritesEnabled()) {
            progress.cancel();
            return false;
          }
        }
      }
    }
    cells.clear();
  }
 while (hasMore);
  progress.complete();
  return true;
}
