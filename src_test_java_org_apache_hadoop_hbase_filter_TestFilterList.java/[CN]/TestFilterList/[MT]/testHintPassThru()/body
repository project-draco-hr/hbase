{
  final KeyValue minKeyValue=new KeyValue(Bytes.toBytes(0L),null,null);
  final KeyValue maxKeyValue=new KeyValue(Bytes.toBytes(Long.MAX_VALUE),null,null);
  Filter filterNoHint=new FilterBase(){
    @Override public void readFields(    DataInput arg0) throws IOException {
    }
    @Override public void write(    DataOutput arg0) throws IOException {
    }
  }
;
  Filter filterMinHint=new FilterBase(){
    @Override public KeyValue getNextKeyHint(    KeyValue currentKV){
      return minKeyValue;
    }
    @Override public void readFields(    DataInput arg0) throws IOException {
    }
    @Override public void write(    DataOutput arg0) throws IOException {
    }
  }
;
  Filter filterMaxHint=new FilterBase(){
    @Override public KeyValue getNextKeyHint(    KeyValue currentKV){
      return new KeyValue(Bytes.toBytes(Long.MAX_VALUE),null,null);
    }
    @Override public void readFields(    DataInput arg0) throws IOException {
    }
    @Override public void write(    DataOutput arg0) throws IOException {
    }
  }
;
  FilterList filterList=new FilterList(Operator.MUST_PASS_ONE,Arrays.asList(new Filter[]{filterMinHint,filterMaxHint}));
  assertEquals(0,KeyValue.COMPARATOR.compare(filterList.getNextKeyHint(null),minKeyValue));
  filterList=new FilterList(Operator.MUST_PASS_ONE,Arrays.asList(new Filter[]{filterMinHint,filterMaxHint,filterNoHint}));
  assertNull(filterList.getNextKeyHint(null));
  filterList=new FilterList(Operator.MUST_PASS_ONE,Arrays.asList(new Filter[]{filterNoHint,filterMaxHint}));
  assertNull(filterList.getNextKeyHint(null));
  filterList=new FilterList(Operator.MUST_PASS_ONE,Arrays.asList(new Filter[]{filterMaxHint,filterMaxHint}));
  assertEquals(0,KeyValue.COMPARATOR.compare(filterList.getNextKeyHint(null),maxKeyValue));
  filterList=new FilterList(Operator.MUST_PASS_ALL,Arrays.asList(new Filter[]{filterMinHint,filterMaxHint}));
  assertEquals(0,KeyValue.COMPARATOR.compare(filterList.getNextKeyHint(null),maxKeyValue));
  filterList=new FilterList(Operator.MUST_PASS_ALL,Arrays.asList(new Filter[]{filterMinHint,filterMaxHint,filterNoHint}));
  assertEquals(0,KeyValue.COMPARATOR.compare(filterList.getNextKeyHint(null),maxKeyValue));
  filterList=new FilterList(Operator.MUST_PASS_ALL,Arrays.asList(new Filter[]{filterNoHint,filterMaxHint}));
  assertEquals(0,KeyValue.COMPARATOR.compare(filterList.getNextKeyHint(null),maxKeyValue));
  filterList=new FilterList(Operator.MUST_PASS_ALL,Arrays.asList(new Filter[]{filterNoHint,filterMinHint}));
  assertEquals(0,KeyValue.COMPARATOR.compare(filterList.getNextKeyHint(null),minKeyValue));
  filterList=new FilterList(Operator.MUST_PASS_ALL,Arrays.asList(new Filter[]{filterNoHint,filterMinHint}));
  assertEquals(0,KeyValue.COMPARATOR.compare(filterList.getNextKeyHint(null),minKeyValue));
}
