{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasStartRow()) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,getStartRow());
  }
  if (hasEndRow()) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getEndRow());
  }
{
    int dataSize=0;
    for (    com.google.protobuf.ByteString element : getColumnsList()) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(element);
    }
    size+=dataSize;
    size+=1 * getColumnsList().size();
  }
  if (hasBatch()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(4,getBatch());
  }
  if (hasStartTime()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(5,getStartTime());
  }
  if (hasEndTime()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(6,getEndTime());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
