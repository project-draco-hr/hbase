{
  super();
  this.server=server;
  this.threadWakeFrequency=conf.getLong(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000);
  long max=ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getMax();
  float globalMemStorePercent=HeapMemorySizeUtil.getGlobalMemStorePercent(conf,true);
  this.globalMemStoreLimit=(long)(max * globalMemStorePercent);
  this.globalMemStoreLimitLowMarkPercent=HeapMemorySizeUtil.getGlobalMemStoreLowerMark(conf,globalMemStorePercent);
  this.globalMemStoreLimitLowMark=(long)(this.globalMemStoreLimit * this.globalMemStoreLimitLowMarkPercent);
  this.blockingWaitTime=conf.getInt("hbase.hstore.blockingWaitTime",90000);
  int handlerCount=conf.getInt("hbase.hstore.flusher.count",2);
  this.flushHandlers=new FlushHandler[handlerCount];
  LOG.info("globalMemStoreLimit=" + StringUtils.humanReadableInt(this.globalMemStoreLimit) + ", globalMemStoreLimitLowMark="+ StringUtils.humanReadableInt(this.globalMemStoreLimitLowMark)+ ", maxHeap="+ StringUtils.humanReadableInt(max));
}
