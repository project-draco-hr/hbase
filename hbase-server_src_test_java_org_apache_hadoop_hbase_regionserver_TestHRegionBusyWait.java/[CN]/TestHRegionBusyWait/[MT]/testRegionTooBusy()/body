{
  String method="testRegionTooBusy";
  byte[] tableName=Bytes.toBytes(method);
  byte[] family=Bytes.toBytes("family");
  region=initHRegion(tableName,method,CONF,family);
  final AtomicBoolean stopped=new AtomicBoolean(true);
  Thread t=new Thread(new Runnable(){
    @Override public void run(){
      try {
        region.lock.writeLock().lock();
        stopped.set(false);
        while (!stopped.get()) {
          Thread.sleep(100);
        }
      }
 catch (      InterruptedException ie) {
      }
 finally {
        region.lock.writeLock().unlock();
      }
    }
  }
);
  t.start();
  Get get=new Get(row);
  try {
    while (stopped.get()) {
      Thread.sleep(100);
    }
    region.get(get);
    fail("Should throw RegionTooBusyException");
  }
 catch (  InterruptedException ie) {
    fail("test interrupted");
  }
catch (  RegionTooBusyException e) {
  }
 finally {
    stopped.set(true);
    try {
      t.join();
    }
 catch (    Throwable e) {
    }
    HRegion.closeHRegion(region);
    region=null;
  }
}
