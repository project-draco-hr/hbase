{
  List<KeyValue> results=new ArrayList<KeyValue>();
  KeyValue peeked=this.heap.peek();
  if (peeked == null) {
    close();
    return false;
  }
  matcher.setRow(peeked.getRow());
  KeyValue kv;
  while ((kv=this.heap.peek()) != null) {
    QueryMatcher.MatchCode qcode=matcher.match(kv);
switch (qcode) {
case INCLUDE:
      KeyValue next=this.heap.next();
    results.add(next);
  continue;
case DONE:
if (matcher.filterEntireRow()) {
  results.clear();
}
outResult.addAll(results);
return true;
case DONE_SCAN:
close();
outResult.addAll(results);
return false;
case SEEK_NEXT_ROW:
heap.next();
break;
case SEEK_NEXT_COL:
heap.next();
break;
case SKIP:
this.heap.next();
break;
default :
throw new RuntimeException("UNEXPECTED");
}
}
if (!results.isEmpty()) {
outResult.addAll(results);
return true;
}
close();
return false;
}
