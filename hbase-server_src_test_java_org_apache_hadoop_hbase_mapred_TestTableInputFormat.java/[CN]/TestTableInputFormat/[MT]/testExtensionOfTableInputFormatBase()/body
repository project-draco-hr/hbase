{
  LOG.info("testing use of an InputFormat taht extends InputFormatBase");
  final Table table=createTable(Bytes.toBytes("exampleTable"),new byte[][]{Bytes.toBytes("columnA"),Bytes.toBytes("columnB")});
  final JobConf job=MapreduceTestingShim.getJobConf(mrCluster);
  job.setInputFormat(ExampleTIF.class);
  job.setOutputFormat(NullOutputFormat.class);
  job.setMapperClass(ExampleVerifier.class);
  job.setNumReduceTasks(0);
  LOG.debug("submitting job.");
  final RunningJob run=JobClient.runJob(job);
  assertTrue("job failed!",run.isSuccessful());
  assertEquals("Saw the wrong number of instances of the filtered-for row.",2,run.getCounters().findCounter(TestTableInputFormat.class.getName() + ":row","aaa").getCounter());
  assertEquals("Saw any instances of the filtered out row.",0,run.getCounters().findCounter(TestTableInputFormat.class.getName() + ":row","bbb").getCounter());
  assertEquals("Saw the wrong number of instances of columnA.",1,run.getCounters().findCounter(TestTableInputFormat.class.getName() + ":family","columnA").getCounter());
  assertEquals("Saw the wrong number of instances of columnB.",1,run.getCounters().findCounter(TestTableInputFormat.class.getName() + ":family","columnB").getCounter());
  assertEquals("Saw the wrong count of values for the filtered-for row.",2,run.getCounters().findCounter(TestTableInputFormat.class.getName() + ":value","value aaa").getCounter());
  assertEquals("Saw the wrong count of values for the filtered-out row.",0,run.getCounters().findCounter(TestTableInputFormat.class.getName() + ":value","value bbb").getCounter());
}
