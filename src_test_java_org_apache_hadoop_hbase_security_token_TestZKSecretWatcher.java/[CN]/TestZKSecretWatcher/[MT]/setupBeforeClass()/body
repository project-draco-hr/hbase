{
  TEST_UTIL=new HBaseTestingUtility();
  TEST_UTIL.startMiniZKCluster();
  Configuration conf=TEST_UTIL.getConfiguration();
  ZooKeeperWatcher zk=newZK(conf,"server1",new MockAbortable());
  AuthenticationTokenSecretManager[] tmp=new AuthenticationTokenSecretManager[2];
  tmp[0]=new AuthenticationTokenSecretManager(conf,zk,"server1",60 * 60 * 1000,60 * 1000);
  tmp[0].start();
  zk=newZK(conf,"server2",new MockAbortable());
  tmp[1]=new AuthenticationTokenSecretManager(conf,zk,"server2",60 * 60 * 1000,60 * 1000);
  tmp[1].start();
  while (KEY_MASTER == null) {
    for (int i=0; i < 2; i++) {
      if (tmp[i].isMaster()) {
        KEY_MASTER=tmp[i];
        KEY_SLAVE=tmp[i + 1 % 2];
        break;
      }
    }
    Thread.sleep(500);
  }
  LOG.info("Master is " + KEY_MASTER.getName() + ", slave is "+ KEY_SLAVE.getName());
}
