{
  HFile.checkFormatVersion(majorVersion);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  DataOutput baosDos=new DataOutputStream(baos);
  BlockType.TRAILER.write(baosDos);
  baosDos.writeLong(fileInfoOffset);
  baosDos.writeLong(loadOnOpenDataOffset);
  baosDos.writeInt(dataIndexCount);
  if (majorVersion == 1) {
    baosDos.writeLong(0);
  }
 else {
    baosDos.writeLong(uncompressedDataIndexSize);
  }
  baosDos.writeInt(metaIndexCount);
  baosDos.writeLong(totalUncompressedBytes);
  if (majorVersion == 1) {
    baosDos.writeInt((int)Math.min(Integer.MAX_VALUE,entryCount));
  }
 else {
    baosDos.writeLong(entryCount);
  }
  baosDos.writeInt(compressionCodec.ordinal());
  if (majorVersion > 1) {
    baosDos.writeInt(numDataIndexLevels);
    baosDos.writeLong(firstDataBlockOffset);
    baosDos.writeLong(lastDataBlockOffset);
    Bytes.writeStringFixedSize(baosDos,comparatorClassName,MAX_COMPARATOR_NAME_LENGTH);
  }
  baosDos.writeInt(materializeVersion(majorVersion,minorVersion));
  outputStream.write(baos.toByteArray());
}
