{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  HFileProtos.FileTrailerProto.newBuilder().setFileInfoOffset(fileInfoOffset).setLoadOnOpenDataOffset(loadOnOpenDataOffset).setUncompressedDataIndexSize(uncompressedDataIndexSize).setTotalUncompressedBytes(totalUncompressedBytes).setDataIndexCount(dataIndexCount).setMetaIndexCount(metaIndexCount).setEntryCount(entryCount).setNumDataIndexLevels(numDataIndexLevels).setFirstDataBlockOffset(firstDataBlockOffset).setLastDataBlockOffset(lastDataBlockOffset).setComparatorClassName(comparatorClassName).setCompressionCodec(compressionCodec.ordinal()).build().writeDelimitedTo(baos);
  output.write(baos.toByteArray());
  int padding=getTrailerSize() - NOT_PB_SIZE - baos.size();
  if (padding < 0) {
    throw new IOException("Pbuf encoding size exceeded fixed trailer size limit");
  }
  for (int i=0; i < padding; i++) {
    output.write(0);
  }
}
