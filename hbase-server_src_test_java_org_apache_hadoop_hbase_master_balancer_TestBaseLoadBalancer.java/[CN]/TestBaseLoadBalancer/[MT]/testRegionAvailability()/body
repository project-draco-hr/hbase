{
  List<HRegionInfo> list0=new ArrayList<HRegionInfo>();
  List<HRegionInfo> list1=new ArrayList<HRegionInfo>();
  List<HRegionInfo> list2=new ArrayList<HRegionInfo>();
  HRegionInfo hri1=new HRegionInfo(TableName.valueOf("table"),"key1".getBytes(),"key2".getBytes(),false,100);
  HRegionInfo hri2=RegionReplicaUtil.getRegionInfoForReplica(hri1,1);
  HRegionInfo hri3=new HRegionInfo(TableName.valueOf("table"),"key2".getBytes(),"key3".getBytes(),false,101);
  list0.add(hri1);
  list1.add(hri2);
  list2.add(hri3);
  Map<ServerName,List<HRegionInfo>> clusterState=new LinkedHashMap<ServerName,List<HRegionInfo>>();
  clusterState.put(servers[0],list0);
  clusterState.put(servers[1],list1);
  clusterState.put(servers[2],list2);
  Cluster cluster=new Cluster(master,clusterState,null,null,null,null,rackManager);
  assertTrue(cluster.wouldLowerAvailability(hri1,servers[1]));
  assertTrue(!cluster.wouldLowerAvailability(hri1,servers[2]));
  assertTrue(!cluster.wouldLowerAvailability(hri2,servers[2]));
  assertTrue(!cluster.wouldLowerAvailability(hri3,servers[1]));
  list1.add(RegionReplicaUtil.getRegionInfoForReplica(hri3,1));
  cluster=new Cluster(master,clusterState,null,null,null,null,rackManager);
  assertTrue(cluster.wouldLowerAvailability(hri3,servers[1]));
  clusterState.clear();
  clusterState.put(servers[0],list0);
  clusterState.put(servers[5],list1);
  clusterState.put(servers[6],list2);
  clusterState.put(servers[10],new ArrayList<HRegionInfo>());
  cluster=new Cluster(master,clusterState,null,null,null,null,rackManager);
  assertTrue(cluster.wouldLowerAvailability(hri1,servers[0]));
  cluster=new Cluster(master,clusterState,null,null,null,null,null);
  assertTrue(!cluster.wouldLowerAvailability(hri1,servers[6]));
}
