{
  if (message != null && message.length() > 0) {
    System.err.println(message);
  }
  System.err.println("Usage: java " + this.getClass().getName() + " \\");
  System.err.println("  [--nomapred] [--rows=ROWS] [--table=NAME] \\");
  System.err.println("  [--compress=TYPE] [--blockEncoding=TYPE] [-D<property=value>]* <command> <nclients>");
  System.err.println();
  System.err.println("Options:");
  System.err.println(" nomapred        Run multiple clients using threads " + "(rather than use mapreduce)");
  System.err.println(" rows            Rows each client runs. Default: One million");
  System.err.println(" table           Alternate table name. Default: 'TestTable'");
  System.err.println(" compress        Compression type to use (GZ, LZO, ...). Default: 'NONE'");
  System.err.println(" flushCommits    Used to determine if the test should flush the table.  Default: false");
  System.err.println(" writeToWAL      Set writeToWAL on puts. Default: True");
  System.err.println(" presplit        Create presplit table. Recommended for accurate perf analysis (see guide).  Default: disabled");
  System.err.println(" inmemory        Tries to keep the HFiles of the CF inmemory as far as possible.  Not " + "guaranteed that reads are always served from inmemory.  Default: false");
  System.err.println();
  System.err.println(" Note: -D properties will be applied to the conf used. ");
  System.err.println("  For example: ");
  System.err.println("   -Dmapred.output.compress=true");
  System.err.println("   -Dmapreduce.task.timeout=60000");
  System.err.println();
  System.err.println("Command:");
  for (  CmdDescriptor command : commands.values()) {
    System.err.println(String.format(" %-15s %s",command.getName(),command.getDescription()));
  }
  System.err.println();
  System.err.println("Args:");
  System.err.println(" nclients        Integer. Required. Total number of " + "clients (and HRegionServers)");
  System.err.println("                 running: 1 <= value <= 500");
  System.err.println("Examples:");
  System.err.println(" To run a single evaluation client:");
  System.err.println(" $ bin/hbase " + this.getClass().getName() + " sequentialWrite 1");
}
