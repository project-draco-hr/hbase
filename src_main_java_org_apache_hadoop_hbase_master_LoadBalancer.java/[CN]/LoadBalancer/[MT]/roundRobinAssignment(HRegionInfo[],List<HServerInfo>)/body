{
  if (regions.length == 0 || servers.size() == 0) {
    return null;
  }
  Map<HServerInfo,List<HRegionInfo>> assignments=new TreeMap<HServerInfo,List<HRegionInfo>>();
  int numRegions=regions.length;
  int numServers=servers.size();
  int max=(int)Math.ceil((float)numRegions / numServers);
  int serverIdx=0;
  if (numServers > 1) {
    serverIdx=RANDOM.nextInt(numServers);
  }
  int regionIdx=0;
  for (int j=0; j < numServers; j++) {
    HServerInfo server=servers.get((j + serverIdx) % numServers);
    List<HRegionInfo> serverRegions=new ArrayList<HRegionInfo>(max);
    for (int i=regionIdx; i < numRegions; i+=numServers) {
      serverRegions.add(regions[i % numRegions]);
    }
    assignments.put(server,serverRegions);
    regionIdx++;
  }
  return assignments;
}
