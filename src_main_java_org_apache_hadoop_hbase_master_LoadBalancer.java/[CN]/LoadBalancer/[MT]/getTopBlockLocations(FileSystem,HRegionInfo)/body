{
  String encodedName=region.getEncodedName();
  Path path=new Path("/hbase/table/" + encodedName);
  FileStatus status=fs.getFileStatus(path);
  BlockLocation[] blockLocations=fs.getFileBlockLocations(status,0,status.getLen());
  Map<HostAndWeight,HostAndWeight> hostWeights=new TreeMap<HostAndWeight,HostAndWeight>(new HostAndWeight.HostComparator());
  for (  BlockLocation bl : blockLocations) {
    String[] hosts=bl.getHosts();
    long len=bl.getLength();
    for (    String host : hosts) {
      HostAndWeight haw=hostWeights.get(host);
      if (haw == null) {
        haw=new HostAndWeight(host,len);
        hostWeights.put(haw,haw);
      }
 else {
        haw.addWeight(len);
      }
    }
  }
  NavigableSet<HostAndWeight> orderedHosts=new TreeSet<HostAndWeight>(new HostAndWeight.WeightComparator());
  orderedHosts.addAll(hostWeights.values());
  List<String> topHosts=new ArrayList<String>(orderedHosts.size());
  for (  HostAndWeight haw : orderedHosts.descendingSet()) {
    topHosts.add(haw.getHost());
  }
  return topHosts;
}
