{
  boolean dupKey=false;
  if (key == null || length <= 0) {
    throw new IOException("Key cannot be null or empty");
  }
  if (length > MAXIMUM_KEY_LENGTH) {
    throw new IOException("Key length " + length + " > "+ MAXIMUM_KEY_LENGTH);
  }
  if (this.lastKeyBuffer != null) {
    int keyComp=this.rawComparator.compare(this.lastKeyBuffer,this.lastKeyOffset,this.lastKeyLength,key,offset,length);
    if (keyComp > 0) {
      throw new IOException("Added a key not lexically larger than" + " previous key=" + Bytes.toString(key,offset,length) + ", lastkey="+ Bytes.toString(this.lastKeyBuffer,this.lastKeyOffset,this.lastKeyLength));
    }
 else     if (keyComp == 0) {
      dupKey=true;
    }
  }
  return dupKey;
}
