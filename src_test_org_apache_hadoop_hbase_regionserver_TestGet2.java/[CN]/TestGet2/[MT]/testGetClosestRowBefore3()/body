{
  HRegion region=null;
  BatchUpdate batchUpdate=null;
  try {
    HTableDescriptor htd=createTableDescriptor(getName());
    region=createNewHRegion(htd,null,null);
    batchUpdate=new BatchUpdate(T00);
    batchUpdate.put(COLUMNS[0],T00.getBytes());
    region.batchUpdate(batchUpdate);
    batchUpdate=new BatchUpdate(T10);
    batchUpdate.put(COLUMNS[0],T10.getBytes());
    region.batchUpdate(batchUpdate);
    batchUpdate=new BatchUpdate(T20);
    batchUpdate.put(COLUMNS[0],T20.getBytes());
    region.batchUpdate(batchUpdate);
    Map<byte[],Cell> results=region.getClosestRowBefore(Bytes.toBytes(T20));
    assertEquals(T20,new String(results.get(COLUMNS[0]).getValue()));
    batchUpdate=new BatchUpdate(T20);
    batchUpdate.delete(COLUMNS[0]);
    region.batchUpdate(batchUpdate);
    results=region.getClosestRowBefore(Bytes.toBytes(T20));
    assertEquals(T10,new String(results.get(COLUMNS[0]).getValue()));
    batchUpdate=new BatchUpdate(T30);
    batchUpdate.put(COLUMNS[0],T30.getBytes());
    region.batchUpdate(batchUpdate);
    results=region.getClosestRowBefore(Bytes.toBytes(T30));
    assertEquals(T30,new String(results.get(COLUMNS[0]).getValue()));
    batchUpdate=new BatchUpdate(T30);
    batchUpdate.delete(COLUMNS[0]);
    region.batchUpdate(batchUpdate);
    results=region.getClosestRowBefore(Bytes.toBytes(T30));
    assertEquals(T10,new String(results.get(COLUMNS[0]).getValue()));
    results=region.getClosestRowBefore(Bytes.toBytes(T31));
    assertEquals(T10,new String(results.get(COLUMNS[0]).getValue()));
    region.flushcache();
    results=region.getClosestRowBefore(Bytes.toBytes(T30));
    assertEquals(T10,new String(results.get(COLUMNS[0]).getValue()));
    results=region.getClosestRowBefore(Bytes.toBytes(T31));
    assertEquals(T10,new String(results.get(COLUMNS[0]).getValue()));
    batchUpdate=new BatchUpdate(T20);
    batchUpdate.put(COLUMNS[1],T20.getBytes());
    region.batchUpdate(batchUpdate);
    results=region.getClosestRowBefore(Bytes.toBytes(T30));
    assertEquals(T20,new String(results.get(COLUMNS[1]).getValue()));
    results=region.getClosestRowBefore(Bytes.toBytes(T31));
    assertEquals(T20,new String(results.get(COLUMNS[1]).getValue()));
    region.flushcache();
    results=region.getClosestRowBefore(Bytes.toBytes(T30));
    assertEquals(T20,new String(results.get(COLUMNS[1]).getValue()));
    results=region.getClosestRowBefore(Bytes.toBytes(T31));
    assertEquals(T20,new String(results.get(COLUMNS[1]).getValue()));
    batchUpdate=new BatchUpdate(T20);
    batchUpdate.delete(COLUMNS[1]);
    region.batchUpdate(batchUpdate);
    results=region.getClosestRowBefore(Bytes.toBytes(T30));
    assertEquals(T10,new String(results.get(COLUMNS[0]).getValue()));
    results=region.getClosestRowBefore(Bytes.toBytes(T31));
    assertEquals(T10,new String(results.get(COLUMNS[0]).getValue()));
    region.flushcache();
    results=region.getClosestRowBefore(Bytes.toBytes(T31));
    assertEquals(T10,new String(results.get(COLUMNS[0]).getValue()));
    batchUpdate=new BatchUpdate(T11);
    batchUpdate.put(COLUMNS[0],T11.getBytes());
    region.batchUpdate(batchUpdate);
    batchUpdate=new BatchUpdate(T10);
    batchUpdate.delete(COLUMNS[0]);
    region.batchUpdate(batchUpdate);
    results=region.getClosestRowBefore(Bytes.toBytes(T12));
    assertEquals(T11,new String(results.get(COLUMNS[0]).getValue()));
  }
  finally {
    if (region != null) {
      try {
        region.close();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
      region.getLog().closeAndDelete();
    }
  }
}
