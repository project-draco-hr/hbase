{
  HRegion region=null;
  HRegionIncommon region_incommon=null;
  BatchUpdate batchUpdate=null;
  Map<Text,Cell> results=null;
  try {
    HTableDescriptor htd=createTableDescriptor(getName());
    region=createNewHRegion(htd,null,null);
    region_incommon=new HRegionIncommon(region);
    Text row=new Text("row1");
    batchUpdate=new BatchUpdate(row);
    batchUpdate.put(COLUMNS[0],"olderValue".getBytes());
    region.batchUpdate(batchUpdate);
    region.flushcache();
    results=region.getFull(row,(Set<Text>)null,LATEST_TIMESTAMP);
    assertEquals("olderValue",new String(results.get(COLUMNS[0]).getValue()));
    batchUpdate=new BatchUpdate(row);
    batchUpdate.put(COLUMNS[0],"newerValue".getBytes());
    region.batchUpdate(batchUpdate);
    region.flushcache();
    results=region.getFull(row,(Set<Text>)null,LATEST_TIMESTAMP);
    assertEquals("newerValue",new String(results.get(COLUMNS[0]).getValue()));
    Text row2=new Text("row2");
    Text cell1=new Text(COLUMNS[0].toString() + "a");
    Text cell2=new Text(COLUMNS[0].toString() + "b");
    Text cell3=new Text(COLUMNS[0].toString() + "c");
    batchUpdate=new BatchUpdate(row2);
    batchUpdate.put(cell1,"column0 value".getBytes());
    batchUpdate.put(cell2,"column1 value".getBytes());
    region.batchUpdate(batchUpdate);
    region.flushcache();
    results=region.getFull(row2,(Set<Text>)null,LATEST_TIMESTAMP);
    assertEquals("Should have two columns in the results map",2,results.size());
    assertEquals("column0 value",new String(results.get(cell1).getValue()));
    assertEquals("column1 value",new String(results.get(cell2).getValue()));
    batchUpdate=new BatchUpdate(row2);
    batchUpdate.delete(cell1);
    batchUpdate.put(cell2,"column1 new value".getBytes());
    region.batchUpdate(batchUpdate);
    region.flushcache();
    results=region.getFull(row2,(Set<Text>)null,LATEST_TIMESTAMP);
    assertEquals("Should have one column in the results map",1,results.size());
    assertNull("column0 value",results.get(cell1));
    assertEquals("column1 new value",new String(results.get(cell2).getValue()));
    batchUpdate=new BatchUpdate(row2);
    batchUpdate.delete(cell2);
    batchUpdate.put(cell3,"column2 value!".getBytes());
    region.batchUpdate(batchUpdate);
    results=region.getFull(row2,(Set<Text>)null,LATEST_TIMESTAMP);
    assertEquals("Should have one column in the results map",1,results.size());
    assertNull("column0 value",results.get(cell1));
    assertNull("column1 value",results.get(cell2));
    assertEquals("column2 value!",new String(results.get(cell3).getValue()));
  }
  finally {
    if (region != null) {
      try {
        region.close();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
      region.getLog().closeAndDelete();
    }
  }
}
