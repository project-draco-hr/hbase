{
  if (errorMsg != null && errorMsg.length() > 0) {
    System.err.println("ERROR: " + errorMsg);
    System.err.println();
  }
  System.err.println("Usage: HashTable [options] <tablename> <outputpath>");
  System.err.println();
  System.err.println("Options:");
  System.err.println(" batchsize     the target amount of bytes to hash in each batch");
  System.err.println("               rows are added to the batch until this size is reached");
  System.err.println("               (defaults to " + DEFAULT_BATCH_SIZE + " bytes)");
  System.err.println(" numhashfiles  the number of hash files to create");
  System.err.println("               if set to fewer than number of regions then");
  System.err.println("               the job will create this number of reducers");
  System.err.println("               (defaults to 1/100 of regions -- at least 1)");
  System.err.println(" startrow      the start row");
  System.err.println(" stoprow       the stop row");
  System.err.println(" starttime     beginning of the time range (unixtime in millis)");
  System.err.println("               without endtime means from starttime to forever");
  System.err.println(" endtime       end of the time range.  Ignored if no starttime specified.");
  System.err.println(" scanbatch     scanner batch size to support intra row scans");
  System.err.println(" versions      number of cell versions to include");
  System.err.println(" families      comma-separated list of families to include");
  System.err.println();
  System.err.println("Args:");
  System.err.println(" tablename     Name of the table to hash");
  System.err.println(" outputpath    Filesystem path to put the output data");
  System.err.println();
  System.err.println("Examples:");
  System.err.println(" To hash 'TestTable' in 32kB batches for a 1 hour window into 50 files:");
  System.err.println(" $ bin/hbase " + "org.apache.hadoop.hbase.mapreduce.HashTable --batchsize=32000 --numhashfiles=50" + " --starttime=1265875194289 --endtime=1265878794289 --families=cf2,cf3"+ " TestTable /hashes/testTable");
}
