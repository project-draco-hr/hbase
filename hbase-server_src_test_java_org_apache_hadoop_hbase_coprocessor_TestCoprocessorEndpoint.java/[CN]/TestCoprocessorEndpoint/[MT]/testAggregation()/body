{
  HTable table=new HTable(util.getConfiguration(),TEST_TABLE);
  Map<byte[],Long> results;
  results=table.coprocessorExec(ColumnAggregationProtocol.class,ROWS[rowSeperator1 - 1],ROWS[rowSeperator2 + 1],new Batch.Call<ColumnAggregationProtocol,Long>(){
    public Long call(    ColumnAggregationProtocol instance) throws IOException {
      return instance.sum(TEST_FAMILY,TEST_QUALIFIER);
    }
  }
);
  int sumResult=0;
  int expectedResult=0;
  for (  Map.Entry<byte[],Long> e : results.entrySet()) {
    sumResult+=e.getValue();
  }
  for (int i=0; i < ROWSIZE; i++) {
    expectedResult+=i;
  }
  assertEquals("Invalid result",sumResult,expectedResult);
  results.clear();
  results=table.coprocessorExec(ColumnAggregationProtocol.class,ROWS[rowSeperator1 + 1],ROWS[rowSeperator2 + 1],new Batch.Call<ColumnAggregationProtocol,Long>(){
    public Long call(    ColumnAggregationProtocol instance) throws IOException {
      return instance.sum(TEST_FAMILY,TEST_QUALIFIER);
    }
  }
);
  sumResult=0;
  expectedResult=0;
  for (  Map.Entry<byte[],Long> e : results.entrySet()) {
    sumResult+=e.getValue();
  }
  for (int i=rowSeperator1; i < ROWSIZE; i++) {
    expectedResult+=i;
  }
  assertEquals("Invalid result",sumResult,expectedResult);
  table.close();
}
