{
  return table.coprocessorService(ColumnAggregationProtos.ColumnAggregationService.class,start,end,new Batch.Call<ColumnAggregationProtos.ColumnAggregationService,Long>(){
    @Override public Long call(    ColumnAggregationProtos.ColumnAggregationService instance) throws IOException {
      CoprocessorRpcUtils.BlockingRpcCallback<ColumnAggregationProtos.SumResponse> rpcCallback=new CoprocessorRpcUtils.BlockingRpcCallback<ColumnAggregationProtos.SumResponse>();
      ColumnAggregationProtos.SumRequest.Builder builder=ColumnAggregationProtos.SumRequest.newBuilder();
      builder.setFamily(ByteStringer.wrap(family));
      if (qualifier != null && qualifier.length > 0) {
        builder.setQualifier(ByteStringer.wrap(qualifier));
      }
      instance.sum(null,builder.build(),rpcCallback);
      return rpcCallback.get().getSum();
    }
  }
);
}
