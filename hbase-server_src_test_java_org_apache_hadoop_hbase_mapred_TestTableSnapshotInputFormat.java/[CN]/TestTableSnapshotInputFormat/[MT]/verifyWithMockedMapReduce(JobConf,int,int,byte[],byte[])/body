{
  TableSnapshotInputFormat tsif=new TableSnapshotInputFormat();
  InputSplit[] splits=tsif.getSplits(job,0);
  Assert.assertEquals(expectedNumSplits,splits.length);
  HBaseTestingUtility.SeenRowTracker rowTracker=new HBaseTestingUtility.SeenRowTracker(startRow,stopRow);
  for (int i=0; i < splits.length; i++) {
    InputSplit split=splits[i];
    Assert.assertTrue(split instanceof TableSnapshotInputFormat.TableSnapshotRegionSplit);
    OutputCollector collector=mock(OutputCollector.class);
    Reporter reporter=mock(Reporter.class);
    RecordReader<ImmutableBytesWritable,Result> rr=tsif.getRecordReader(split,job,reporter);
    ImmutableBytesWritable key=rr.createKey();
    Result value=rr.createValue();
    while (rr.next(key,value)) {
      verifyRowFromMap(key,value);
      rowTracker.addRow(key.copyBytes());
    }
    rr.close();
  }
  rowTracker.validate();
}
