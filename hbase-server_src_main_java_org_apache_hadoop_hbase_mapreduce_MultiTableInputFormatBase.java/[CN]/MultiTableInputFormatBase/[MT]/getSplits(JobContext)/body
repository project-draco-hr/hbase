{
  if (scans.isEmpty()) {
    throw new IOException("No scans were provided.");
  }
  List<InputSplit> splits=new ArrayList<InputSplit>();
  for (  Scan scan : scans) {
    byte[] tableNameBytes=scan.getAttribute(Scan.SCAN_ATTRIBUTES_TABLE_NAME);
    if (tableNameBytes == null)     throw new IOException("A scan object did not have a table name");
    TableName tableName=TableName.valueOf(tableNameBytes);
    Table table=null;
    RegionLocator regionLocator=null;
    Connection conn=null;
    try {
      conn=ConnectionFactory.createConnection(context.getConfiguration());
      table=conn.getTable(tableName);
      regionLocator=conn.getRegionLocator(tableName);
      regionLocator=(RegionLocator)table;
      Pair<byte[][],byte[][]> keys=regionLocator.getStartEndKeys();
      if (keys == null || keys.getFirst() == null || keys.getFirst().length == 0) {
        throw new IOException("Expecting at least one region for table : " + tableName.getNameAsString());
      }
      int count=0;
      byte[] startRow=scan.getStartRow();
      byte[] stopRow=scan.getStopRow();
      RegionSizeCalculator sizeCalculator=new RegionSizeCalculator(regionLocator,conn.getAdmin());
      for (int i=0; i < keys.getFirst().length; i++) {
        if (!includeRegionInSplit(keys.getFirst()[i],keys.getSecond()[i])) {
          continue;
        }
        HRegionLocation hregionLocation=regionLocator.getRegionLocation(keys.getFirst()[i],false);
        String regionHostname=hregionLocation.getHostname();
        HRegionInfo regionInfo=hregionLocation.getRegionInfo();
        if ((startRow.length == 0 || keys.getSecond()[i].length == 0 || Bytes.compareTo(startRow,keys.getSecond()[i]) < 0) && (stopRow.length == 0 || Bytes.compareTo(stopRow,keys.getFirst()[i]) > 0)) {
          byte[] splitStart=startRow.length == 0 || Bytes.compareTo(keys.getFirst()[i],startRow) >= 0 ? keys.getFirst()[i] : startRow;
          byte[] splitStop=(stopRow.length == 0 || Bytes.compareTo(keys.getSecond()[i],stopRow) <= 0) && keys.getSecond()[i].length > 0 ? keys.getSecond()[i] : stopRow;
          long regionSize=sizeCalculator.getRegionSize(regionInfo.getRegionName());
          TableSplit split=new TableSplit(regionLocator.getName(),scan,splitStart,splitStop,regionHostname,regionSize);
          splits.add(split);
          if (LOG.isDebugEnabled())           LOG.debug("getSplits: split -> " + (count++) + " -> "+ split);
        }
      }
    }
  finally {
      if (null != table)       table.close();
      if (null != regionLocator)       regionLocator.close();
      if (null != conn)       conn.close();
    }
  }
  return splits;
}
