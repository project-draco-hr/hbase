{
  while (running) {
synchronized (leases) {
synchronized (sortedLeases) {
        Lease top;
        while ((sortedLeases.size() > 0) && ((top=sortedLeases.first()) != null)) {
          if (top.shouldExpire()) {
            leases.remove(top.getLeaseId());
            sortedLeases.remove(top);
            top.expired();
          }
 else {
            break;
          }
        }
      }
    }
    try {
      Thread.sleep(leaseCheckFrequency);
    }
 catch (    InterruptedException ie) {
    }
  }
}
