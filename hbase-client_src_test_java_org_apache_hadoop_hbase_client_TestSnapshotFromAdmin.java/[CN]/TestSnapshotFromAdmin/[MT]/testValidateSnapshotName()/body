{
  ConnectionImplementation mockConnection=Mockito.mock(ConnectionImplementation.class);
  Configuration conf=HBaseConfiguration.create();
  Mockito.when(mockConnection.getConfiguration()).thenReturn(conf);
  RpcRetryingCallerFactory callerFactory=new RpcRetryingCallerFactory(conf);
  RpcControllerFactory controllerFactory=Mockito.mock(RpcControllerFactory.class);
  Mockito.when(controllerFactory.newController()).thenReturn(Mockito.mock(PayloadCarryingRpcController.class));
  Mockito.when(mockConnection.getRpcRetryingCallerFactory()).thenReturn(callerFactory);
  Mockito.when(mockConnection.getRpcControllerFactory()).thenReturn(controllerFactory);
  Admin admin=new HBaseAdmin(mockConnection);
  SnapshotDescription.Builder builder=SnapshotDescription.newBuilder();
  failSnapshotStart(admin,builder.setName(HConstants.SNAPSHOT_DIR_NAME).build());
  failSnapshotStart(admin,builder.setName("-snapshot").build());
  failSnapshotStart(admin,builder.setName("snapshot fails").build());
  failSnapshotStart(admin,builder.setName("snap$hot").build());
  failSnapshotStart(admin,builder.setName("snap:hot").build());
  failSnapshotStart(admin,builder.setName("snapshot").setTable(".table").build());
  failSnapshotStart(admin,builder.setName("snapshot").setTable("-table").build());
  failSnapshotStart(admin,builder.setName("snapshot").setTable("table fails").build());
  failSnapshotStart(admin,builder.setName("snapshot").setTable("tab%le").build());
  MasterKeepAliveConnection master=Mockito.mock(MasterKeepAliveConnection.class);
  Mockito.when(mockConnection.getKeepAliveMasterService()).thenReturn(master);
  SnapshotResponse response=SnapshotResponse.newBuilder().setExpectedTimeout(0).build();
  Mockito.when(master.snapshot((RpcController)Mockito.any(),Mockito.any(SnapshotRequest.class))).thenReturn(response);
  IsSnapshotDoneResponse doneResponse=IsSnapshotDoneResponse.newBuilder().setDone(true).build();
  Mockito.when(master.isSnapshotDone((RpcController)Mockito.any(),Mockito.any(IsSnapshotDoneRequest.class))).thenReturn(doneResponse);
  admin.snapshot(builder.setName("snapshot").setTable("table").build());
}
