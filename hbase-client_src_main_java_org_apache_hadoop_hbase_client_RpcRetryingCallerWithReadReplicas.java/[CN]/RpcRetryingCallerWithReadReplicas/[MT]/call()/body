{
  RegionLocations rl=getRegionLocations(true);
  BoundedCompletionService<Result> cs=new BoundedCompletionService<Result>(pool,rl.size());
  addCallsForReplica(cs,rl,0,0);
  try {
    Future<Result> f=cs.poll(timeBeforeReplicas,TimeUnit.MICROSECONDS);
    if (f == null) {
      addCallsForReplica(cs,rl,1,rl.size() - 1);
      f=cs.take();
    }
    return f.get();
  }
 catch (  ExecutionException e) {
    throwEnrichedException(e);
    return null;
  }
catch (  CancellationException e) {
    throw new InterruptedIOException();
  }
catch (  InterruptedException e) {
    throw new InterruptedIOException();
  }
 finally {
    cs.cancelAll(true);
  }
}
