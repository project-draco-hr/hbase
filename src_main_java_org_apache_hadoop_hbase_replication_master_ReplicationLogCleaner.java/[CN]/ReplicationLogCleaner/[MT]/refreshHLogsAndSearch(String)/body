{
  this.hlogs.clear();
  final boolean lookForLog=searchedLog != null;
  List<String> rss=zkHelper.getListOfReplicators(this);
  if (rss == null) {
    LOG.debug("Didn't find any region server that replicates, deleting: " + searchedLog);
    return false;
  }
  for (  String rs : rss) {
    List<String> listOfPeers=zkHelper.getListPeersForRS(rs,this);
    if (listOfPeers == null) {
      continue;
    }
    for (    String id : listOfPeers) {
      List<String> peersHlogs=zkHelper.getListHLogsForPeerForRS(rs,id,this);
      if (peersHlogs != null) {
        this.hlogs.addAll(peersHlogs);
      }
      if (lookForLog && this.hlogs.contains(searchedLog)) {
        LOG.debug("Found log in ZK, keeping: " + searchedLog);
        return true;
      }
    }
  }
  LOG.debug("Didn't find this log in ZK, deleting: " + searchedLog);
  return false;
}
