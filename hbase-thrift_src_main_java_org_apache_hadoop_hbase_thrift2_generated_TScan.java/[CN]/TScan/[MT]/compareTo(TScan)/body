{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetStartRow()).compareTo(other.isSetStartRow());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStartRow()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.startRow,other.startRow);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStopRow()).compareTo(other.isSetStopRow());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStopRow()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.stopRow,other.stopRow);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumns()).compareTo(other.isSetColumns());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumns()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.columns,other.columns);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCaching()).compareTo(other.isSetCaching());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCaching()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.caching,other.caching);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMaxVersions()).compareTo(other.isSetMaxVersions());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMaxVersions()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.maxVersions,other.maxVersions);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimeRange()).compareTo(other.isSetTimeRange());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimeRange()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timeRange,other.timeRange);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetFilterString()).compareTo(other.isSetFilterString());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFilterString()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.filterString,other.filterString);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBatchSize()).compareTo(other.isSetBatchSize());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBatchSize()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.batchSize,other.batchSize);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAttributes()).compareTo(other.isSetAttributes());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAttributes()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.attributes,other.attributes);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAuthorizations()).compareTo(other.isSetAuthorizations());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAuthorizations()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.authorizations,other.authorizations);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
