{
  __isset_bitfield=other.__isset_bitfield;
  if (other.isSetStartRow()) {
    this.startRow=org.apache.thrift.TBaseHelper.copyBinary(other.startRow);
    ;
  }
  if (other.isSetStopRow()) {
    this.stopRow=org.apache.thrift.TBaseHelper.copyBinary(other.stopRow);
    ;
  }
  if (other.isSetColumns()) {
    List<TColumn> __this__columns=new ArrayList<TColumn>();
    for (    TColumn other_element : other.columns) {
      __this__columns.add(new TColumn(other_element));
    }
    this.columns=__this__columns;
  }
  this.caching=other.caching;
  this.maxVersions=other.maxVersions;
  if (other.isSetTimeRange()) {
    this.timeRange=new TTimeRange(other.timeRange);
  }
  if (other.isSetFilterString()) {
    this.filterString=org.apache.thrift.TBaseHelper.copyBinary(other.filterString);
    ;
  }
  this.batchSize=other.batchSize;
  if (other.isSetAttributes()) {
    Map<ByteBuffer,ByteBuffer> __this__attributes=new HashMap<ByteBuffer,ByteBuffer>();
    for (    Map.Entry<ByteBuffer,ByteBuffer> other_element : other.attributes.entrySet()) {
      ByteBuffer other_element_key=other_element.getKey();
      ByteBuffer other_element_value=other_element.getValue();
      ByteBuffer __this__attributes_copy_key=org.apache.thrift.TBaseHelper.copyBinary(other_element_key);
      ;
      ByteBuffer __this__attributes_copy_value=org.apache.thrift.TBaseHelper.copyBinary(other_element_value);
      ;
      __this__attributes.put(__this__attributes_copy_key,__this__attributes_copy_value);
    }
    this.attributes=__this__attributes;
  }
}
