{
  String namespacePath="/namespaces/";
  NamespacesModel model;
  Response response;
  Admin admin=TEST_UTIL.getHBaseAdmin();
  assertFalse(doesNamespaceExist(admin,NAMESPACE1));
  model=testNamespacesModel.buildTestModel();
  testNamespacesModel.checkModel(model);
  response=client.get(namespacePath,Constants.MIMETYPE_XML);
  assertEquals(200,response.getCode());
  model=fromXML(response.getBody());
  testNamespacesModel.checkModel(model,"hbase","default");
  response=client.get(namespacePath,Constants.MIMETYPE_JSON);
  assertEquals(200,response.getCode());
  model=testNamespacesModel.fromJSON(Bytes.toString(response.getBody()));
  testNamespacesModel.checkModel(model,"hbase","default");
  createNamespaceViaAdmin(admin,NAMESPACE1);
  response=client.get(namespacePath,Constants.MIMETYPE_XML);
  assertEquals(200,response.getCode());
  model=fromXML(response.getBody());
  testNamespacesModel.checkModel(model,NAMESPACE1,"hbase","default");
  response=client.get(namespacePath,Constants.MIMETYPE_JSON);
  assertEquals(200,response.getCode());
  model=testNamespacesModel.fromJSON(Bytes.toString(response.getBody()));
  testNamespacesModel.checkModel(model,NAMESPACE1,"hbase","default");
  createNamespaceViaAdmin(admin,NAMESPACE2);
  response=client.get(namespacePath,Constants.MIMETYPE_XML);
  assertEquals(200,response.getCode());
  model=fromXML(response.getBody());
  testNamespacesModel.checkModel(model,NAMESPACE1,NAMESPACE2,"hbase","default");
  response=client.get(namespacePath,Constants.MIMETYPE_JSON);
  assertEquals(200,response.getCode());
  model=testNamespacesModel.fromJSON(Bytes.toString(response.getBody()));
  testNamespacesModel.checkModel(model,NAMESPACE1,NAMESPACE2,"hbase","default");
  admin.deleteNamespace(NAMESPACE1);
  response=client.get(namespacePath,Constants.MIMETYPE_XML);
  assertEquals(200,response.getCode());
  model=fromXML(response.getBody());
  testNamespacesModel.checkModel(model,NAMESPACE2,"hbase","default");
  response=client.get(namespacePath,Constants.MIMETYPE_JSON);
  assertEquals(200,response.getCode());
  model=testNamespacesModel.fromJSON(Bytes.toString(response.getBody()));
  testNamespacesModel.checkModel(model,NAMESPACE2,"hbase","default");
  admin.deleteNamespace(NAMESPACE2);
}
