{
  final TableName tableName=TableName.valueOf("testEnableTableAssignment");
  byte[][] splitKeys={new byte[]{1,1,1},new byte[]{2,2,2},new byte[]{3,3,3},new byte[]{4,4,4},new byte[]{5,5,5},new byte[]{6,6,6},new byte[]{7,7,7},new byte[]{8,8,8},new byte[]{9,9,9}};
  int expectedRegions=splitKeys.length + 1;
  HTableDescriptor desc=new HTableDescriptor(tableName);
  desc.addFamily(new HColumnDescriptor(HConstants.CATALOG_FAMILY));
  admin.createTable(desc,splitKeys);
  HTable ht=new HTable(TEST_UTIL.getConfiguration(),tableName);
  Map<HRegionInfo,ServerName> regions=ht.getRegionLocations();
  assertEquals("Tried to create " + expectedRegions + " regions "+ "but only found "+ regions.size(),expectedRegions,regions.size());
  admin.disableTable(tableName);
  admin.enableTable(tableName);
  Map<HRegionInfo,ServerName> regions2=ht.getRegionLocations();
  assertEquals(regions.size(),regions2.size());
  for (  Map.Entry<HRegionInfo,ServerName> entry : regions.entrySet()) {
    assertEquals(regions2.get(entry.getKey()),entry.getValue());
  }
}
