{
  int count=read4Bytes();
  if (count < 0 || dataLengthBuffer.remaining() > 0) {
    return count;
  }
  if (!connectionPreambleRead) {
    count=readPreamble();
    if (!connectionPreambleRead) {
      return count;
    }
    count=read4Bytes();
    if (count < 0 || dataLengthBuffer.remaining() > 0) {
      return count;
    }
  }
  if (data == null) {
    dataLengthBuffer.flip();
    int dataLength=dataLengthBuffer.getInt();
    if (dataLength == RpcClient.PING_CALL_ID) {
      if (!useWrap) {
        dataLengthBuffer.clear();
        return 0;
      }
    }
    if (dataLength < 0) {
      throw new DoNotRetryIOException("Unexpected data length " + dataLength + "!! from "+ getHostAddress());
    }
    if (dataLength > maxRequestSize) {
      throw new DoNotRetryIOException("RPC data length of " + dataLength + " received from "+ getHostAddress()+ " is greater than max allowed "+ maxRequestSize+ ". Set \""+ MAX_REQUEST_SIZE+ "\" on server to override this limit (not recommended)");
    }
    data=ByteBuffer.allocate(dataLength);
    incRpcCount();
  }
  count=channelRead(channel,data);
  if (count >= 0 && data.remaining() == 0) {
    process();
  }
  return count;
}
