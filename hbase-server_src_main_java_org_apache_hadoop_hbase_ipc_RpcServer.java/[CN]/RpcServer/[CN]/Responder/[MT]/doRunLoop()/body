{
  long lastPurgeTime=0;
  while (running) {
    try {
      registerWrites();
      int keyCt=writeSelector.select(purgeTimeout);
      if (keyCt == 0) {
        continue;
      }
      Set<SelectionKey> keys=writeSelector.selectedKeys();
      Iterator<SelectionKey> iter=keys.iterator();
      while (iter.hasNext()) {
        SelectionKey key=iter.next();
        iter.remove();
        try {
          if (key.isValid() && key.isWritable()) {
            doAsyncWrite(key);
          }
        }
 catch (        IOException e) {
          LOG.debug(getName() + ": asyncWrite",e);
        }
      }
      lastPurgeTime=purge(lastPurgeTime);
    }
 catch (    OutOfMemoryError e) {
      if (errorHandler != null) {
        if (errorHandler.checkOOME(e)) {
          LOG.info(getName() + ": exiting on OutOfMemoryError");
          return;
        }
      }
 else {
        LOG.warn(getName() + ": OutOfMemoryError in server select",e);
        try {
          Thread.sleep(60000);
        }
 catch (        InterruptedException ex) {
          LOG.debug("Interrupted while sleeping");
          return;
        }
      }
    }
catch (    Exception e) {
      LOG.warn(getName() + ": exception in Responder " + StringUtils.stringifyException(e),e);
    }
  }
  LOG.info(getName() + ": stopped");
}
