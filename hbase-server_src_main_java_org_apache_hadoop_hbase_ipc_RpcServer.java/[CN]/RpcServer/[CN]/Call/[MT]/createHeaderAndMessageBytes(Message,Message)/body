{
  int headerSerializedSize=0, resultSerializedSize=0, headerVintSize=0, resultVintSize=0;
  if (header != null) {
    headerSerializedSize=header.getSerializedSize();
    headerVintSize=CodedOutputStream.computeRawVarint32Size(headerSerializedSize);
  }
  if (result != null) {
    resultSerializedSize=result.getSerializedSize();
    resultVintSize=CodedOutputStream.computeRawVarint32Size(resultSerializedSize);
  }
  int totalSize=headerSerializedSize + headerVintSize + (resultSerializedSize + resultVintSize)+ (this.cellBlock == null ? 0 : this.cellBlock.limit());
  byte[] b=new byte[headerSerializedSize + headerVintSize + resultSerializedSize+ resultVintSize+ Bytes.SIZEOF_INT];
  Bytes.putInt(b,0,totalSize);
  CodedOutputStream cos=CodedOutputStream.newInstance(b,Bytes.SIZEOF_INT,b.length - Bytes.SIZEOF_INT);
  if (header != null) {
    cos.writeMessageNoTag(header);
  }
  if (result != null) {
    cos.writeMessageNoTag(result);
  }
  cos.flush();
  cos.checkNoSpaceLeft();
  return b;
}
