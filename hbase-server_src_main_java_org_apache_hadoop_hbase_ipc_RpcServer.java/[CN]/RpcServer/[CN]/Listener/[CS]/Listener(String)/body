{
  super(name);
  backlogLength=conf.getInt("hbase.ipc.server.listen.queue.size",128);
  acceptChannel=ServerSocketChannel.open();
  acceptChannel.configureBlocking(false);
  bind(acceptChannel.socket(),bindAddress,backlogLength);
  port=acceptChannel.socket().getLocalPort();
  address=(InetSocketAddress)acceptChannel.socket().getLocalSocketAddress();
  selector=Selector.open();
  readers=new Reader[readThreads];
  readPool=Executors.newFixedThreadPool(readThreads,new ThreadFactoryBuilder().setNameFormat("RpcServer.reader=%d,bindAddress=" + bindAddress.getHostName() + ",port="+ port).setDaemon(true).build());
  for (int i=0; i < readThreads; ++i) {
    Reader reader=new Reader();
    readers[i]=reader;
    readPool.execute(reader);
  }
  LOG.info(getName() + ": started " + readThreads+ " reader(s).");
  acceptChannel.register(selector,SelectionKey.OP_ACCEPT);
  this.setName("RpcServer.listener,port=" + port);
  this.setDaemon(true);
}
