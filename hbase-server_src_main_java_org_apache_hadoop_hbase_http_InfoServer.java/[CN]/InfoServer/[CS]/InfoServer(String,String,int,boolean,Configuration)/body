{
  HttpConfig httpConfig=new HttpConfig(c);
  HttpServer.Builder builder=new org.apache.hadoop.hbase.http.HttpServer.Builder();
  builder.setName(name).addEndpoint(URI.create(httpConfig.getSchemePrefix() + bindAddress + ":"+ port)).setAppDir(HBASE_APP_DIR).setFindPort(findPort).setConf(c);
  String logDir=System.getProperty("hbase.log.dir");
  if (logDir != null) {
    builder.setLogDir(logDir);
  }
  if (httpConfig.isSecure()) {
    builder.keyPassword(HBaseConfiguration.getPassword(c,"ssl.server.keystore.keypassword",null)).keyStore(c.get("ssl.server.keystore.location"),HBaseConfiguration.getPassword(c,"ssl.server.keystore.password",null),c.get("ssl.server.keystore.type","jks")).trustStore(c.get("ssl.server.truststore.location"),HBaseConfiguration.getPassword(c,"ssl.server.truststore.password",null),c.get("ssl.server.truststore.type","jks"));
  }
  if ("kerberos".equalsIgnoreCase(c.get(HttpServer.HTTP_UI_AUTHENTICATION,null))) {
    builder.setUsernameConfKey(HttpServer.HTTP_SPNEGO_AUTHENTICATION_PRINCIPAL_KEY).setKeytabConfKey(HttpServer.HTTP_SPNEGO_AUTHENTICATION_KEYTAB_KEY).setKerberosNameRulesKey(HttpServer.HTTP_SPNEGO_AUTHENTICATION_KRB_NAME_KEY).setSignatureSecretFileKey(HttpServer.HTTP_AUTHENTICATION_SIGNATURE_SECRET_FILE_KEY).setSecurityEnabled(true);
  }
  this.httpServer=builder.build();
}
