{
  int countersMapSize=countersMap.size();
  dynamicallySetCoreSize(countersMapSize);
  totalIncrements.incrementAndGet();
  FullyQualifiedRow key=new FullyQualifiedRow(tableName,rowKey,fam,qual);
  long currentAmount=ammount;
  while (true) {
    Long value=countersMap.remove(key);
    if (value == null) {
      value=new Long(currentAmount);
    }
 else {
      value+=currentAmount;
      successfulCoalescings.incrementAndGet();
    }
    Long oldValue=countersMap.putIfAbsent(key,value);
    if (oldValue == null) {
      break;
    }
    currentAmount=value;
  }
  if (pool.getQueue().size() <= 1000) {
    Callable<Integer> callable=createIncCallable();
    pool.submit(callable);
  }
  return true;
}
