{
  if (end - start < 1) {
    throw new IllegalArgumentException(isSnapshot ? "Snapshot" : "Table" + " qualifier must not be empty");
  }
  if (qualifierName[start] == '.' || qualifierName[start] == '-') {
    throw new IllegalArgumentException("Illegal first character <" + qualifierName[start] + "> at 0. "+ (isSnapshot ? "Snapshot" : "User-space table")+ " qualifiers can only start with 'alphanumeric "+ "characters': i.e. [a-zA-Z_0-9]: "+ Bytes.toString(qualifierName,start,end));
  }
  for (int i=start; i < end; i++) {
    if (Character.isLetterOrDigit(qualifierName[i]) || qualifierName[i] == '_' || qualifierName[i] == '-' || qualifierName[i] == '.') {
      continue;
    }
    throw new IllegalArgumentException("Illegal character code:" + qualifierName[i] + ", <"+ (char)qualifierName[i]+ "> at "+ i+ ". "+ (isSnapshot ? "Snapshot" : "User-space table")+ " qualifiers can only contain "+ "'alphanumeric characters': i.e. [a-zA-Z_0-9-.]: "+ Bytes.toString(qualifierName,start,end));
  }
}
