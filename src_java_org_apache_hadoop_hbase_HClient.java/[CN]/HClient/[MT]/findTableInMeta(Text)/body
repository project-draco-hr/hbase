{
  TreeMap<Text,TableInfo> metaServers=this.tablesToServers.get(META_TABLE_NAME);
  if (metaServers == null) {
    loadMetaFromRoot(tableName);
    if (tableName.equals(META_TABLE_NAME) || tableName.equals(ROOT_TABLE_NAME)) {
      return;
    }
    metaServers=this.tablesToServers.get(META_TABLE_NAME);
  }
  this.tableServers=new TreeMap<Text,TableInfo>();
  for (int tries=0; this.tableServers.size() == 0 && tries < this.numRetries; tries++) {
    Text firstMetaRegion=null;
    if (metaServers.containsKey(tableName)) {
      firstMetaRegion=tableName;
    }
 else {
      firstMetaRegion=metaServers.headMap(tableName).lastKey();
    }
    for (Iterator<TableInfo> i=metaServers.tailMap(firstMetaRegion).values().iterator(); i.hasNext(); ) {
      TableInfo t=i.next();
      scanOneMetaRegion(t,tableName);
    }
    if (this.tableServers.size() == 0) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Sleeping. Table " + tableName + " not currently being served.");
      }
      try {
        Thread.sleep(this.clientTimeout);
      }
 catch (      InterruptedException e) {
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("Wake. Retry finding table " + tableName);
      }
    }
  }
  if (this.tableServers.size() == 0) {
    throw new IOException("failed to scan " + META_TABLE_NAME + " after "+ this.numRetries+ " retries");
  }
  this.tablesToServers.put(tableName,this.tableServers);
}
