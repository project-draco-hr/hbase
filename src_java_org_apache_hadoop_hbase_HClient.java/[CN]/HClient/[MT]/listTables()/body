{
  TreeSet<HTableDescriptor> uniqueTables=new TreeSet<HTableDescriptor>();
  SortedMap<Text,TableInfo> metaTables=this.tablesToServers.get(META_TABLE_NAME);
  if (metaTables == null) {
    metaTables=loadMetaFromRoot();
  }
  for (  TableInfo t : metaTables.values()) {
    HRegionInterface server=getHRegionConnection(t.serverAddress);
    long scannerId=-1L;
    try {
      scannerId=server.openScanner(t.regionInfo.regionName,META_COLUMNS,EMPTY_START_ROW);
      HStoreKey key=new HStoreKey();
      DataInputBuffer inbuf=new DataInputBuffer();
      while (true) {
        LabelledData[] values=server.next(scannerId,key);
        if (values.length == 0) {
          break;
        }
        for (int i=0; i < values.length; i++) {
          if (values[i].getLabel().equals(COL_REGIONINFO)) {
            byte[] bytes=values[i].getData().get();
            inbuf.reset(bytes,bytes.length);
            HRegionInfo info=new HRegionInfo();
            info.readFields(inbuf);
            if (info.startKey.getLength() == 0) {
              uniqueTables.add(info.tableDesc);
            }
          }
        }
      }
    }
  finally {
      if (scannerId != -1L) {
        server.close(scannerId);
      }
    }
  }
  return (HTableDescriptor[])uniqueTables.toArray(new HTableDescriptor[uniqueTables.size()]);
}
