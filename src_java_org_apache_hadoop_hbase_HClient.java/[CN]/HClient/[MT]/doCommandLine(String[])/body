{
  int errCode=-1;
  if (args.length < 1) {
    printUsage();
    return errCode;
  }
  try {
    for (int i=0; i < args.length; i++) {
      String cmd=args[i];
      if (cmd.equals("-h") || cmd.startsWith("--h")) {
        printUsage();
        errCode=0;
        break;
      }
      final String masterArgKey="--master=";
      if (cmd.startsWith(masterArgKey)) {
        this.conf.set(MASTER_ADDRESS,cmd.substring(masterArgKey.length()));
        continue;
      }
      if (cmd.equals("shutdown")) {
        shutdown();
        errCode=0;
        break;
      }
      if (cmd.equals("listTables")) {
        HTableDescriptor[] tables=listTables();
        for (int ii=0; ii < tables.length; ii++) {
          System.out.println(tables[ii].getName());
        }
        errCode=0;
        break;
      }
      if (cmd.equals("createTable")) {
        if (i + 3 > args.length) {
          throw new IllegalArgumentException("Must supply a table name " + ", at least one column family and maximum number of versions");
        }
        int maxVersions=(Integer.parseInt(args[args.length - 1]));
        HTableDescriptor desc=new HTableDescriptor(args[i + 1],maxVersions);
        boolean addedFamily=false;
        for (int ii=i + 2; ii < (args.length - 1); ii++) {
          desc.addFamily(new Text(args[ii]));
          addedFamily=true;
        }
        if (!addedFamily) {
          throw new IllegalArgumentException("Must supply at least one " + "column family");
        }
        createTable(desc);
        errCode=0;
        break;
      }
      if (cmd.equals("deleteTable")) {
        if (i + 1 > args.length) {
          throw new IllegalArgumentException("Must supply a table name");
        }
        deleteTable(new Text(args[i + 1]));
        errCode=0;
        break;
      }
      printUsage();
      break;
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
catch (  RuntimeException e) {
    e.printStackTrace();
  }
  return errCode;
}
