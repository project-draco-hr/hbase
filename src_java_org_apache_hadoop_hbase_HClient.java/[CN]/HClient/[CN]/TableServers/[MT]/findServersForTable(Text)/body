{
  if (this.tablesToServers.containsKey(tableName)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Wiping out all we know of " + tableName);
    }
    this.tablesToServers.remove(tableName);
  }
  SortedMap<Text,RegionLocation> servers=null;
  if (tableName.equals(ROOT_TABLE_NAME)) {
    servers=locateRootRegion();
  }
 else   if (tableName.equals(META_TABLE_NAME)) {
    if (tablesToServers.get(ROOT_TABLE_NAME) == null) {
      findServersForTable(ROOT_TABLE_NAME);
    }
    for (int tries=0; tries < numRetries; tries++) {
      try {
        servers=loadMetaFromRoot();
        break;
      }
 catch (      IOException e) {
        if (tries < numRetries - 1) {
          findServersForTable(ROOT_TABLE_NAME);
          continue;
        }
        throw e;
      }
    }
  }
 else {
    for (int tries=0; tries < numRetries; tries++) {
      boolean success=true;
      SortedMap<Text,RegionLocation> metaServers=this.tablesToServers.get(META_TABLE_NAME);
      if (metaServers == null) {
        metaServers=findServersForTable(META_TABLE_NAME);
      }
      Text firstMetaRegion=metaServers.headMap(tableName).lastKey();
      metaServers=metaServers.tailMap(firstMetaRegion);
      servers=new TreeMap<Text,RegionLocation>();
      for (      RegionLocation t : metaServers.values()) {
        try {
          servers.putAll(scanOneMetaRegion(t,tableName));
        }
 catch (        IOException e) {
          e.printStackTrace();
          if (tries < numRetries - 1) {
            findServersForTable(META_TABLE_NAME);
            success=false;
            break;
          }
          throw e;
        }
      }
      if (success) {
        break;
      }
    }
  }
  this.tablesToServers.put(tableName,servers);
  if (LOG.isDebugEnabled()) {
    if (servers != null) {
      for (      Map.Entry<Text,RegionLocation> e : servers.entrySet()) {
        LOG.debug("Server " + e.getKey() + " is serving: "+ e.getValue()+ " for table "+ tableName);
      }
    }
  }
  return servers;
}
