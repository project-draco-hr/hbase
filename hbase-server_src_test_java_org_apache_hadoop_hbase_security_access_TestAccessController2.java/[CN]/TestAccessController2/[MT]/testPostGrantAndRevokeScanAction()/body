{
  AccessTestAction scanTableActionForGroupWithTableLevelAccess=new AccessTestAction(){
    @Override public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
        Scan s1=new Scan();
        try (ResultScanner scanner1=table.getScanner(s1)){
          Result[] next1=scanner1.next(5);
          assertTrue("User having table level access should be able to scan all " + "the data in the table.",next1.length == 3);
        }
       }
       return null;
    }
  }
;
  AccessTestAction scanTableActionForGroupWithFamilyLevelAccess=new AccessTestAction(){
    @Override public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
        Scan s1=new Scan();
        try (ResultScanner scanner1=table.getScanner(s1)){
          Result[] next1=scanner1.next(5);
          assertTrue("User having column family level access should be able to scan all " + "the data belonging to that family.",next1.length == 2);
        }
       }
       return null;
    }
  }
;
  AccessTestAction scanFamilyActionForGroupWithFamilyLevelAccess=new AccessTestAction(){
    @Override public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
        Scan s1=new Scan();
        s1.addFamily(TEST_FAMILY_2);
        try (ResultScanner scanner1=table.getScanner(s1)){
        }
       }
       return null;
    }
  }
;
  AccessTestAction scanTableActionForGroupWithQualifierLevelAccess=new AccessTestAction(){
    @Override public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
        Scan s1=new Scan();
        try (ResultScanner scanner1=table.getScanner(s1)){
          Result[] next1=scanner1.next(5);
          assertTrue("User having column qualifier level access should be able to scan " + "that column family qualifier data.",next1.length == 1);
        }
       }
       return null;
    }
  }
;
  AccessTestAction scanFamilyActionForGroupWithQualifierLevelAccess=new AccessTestAction(){
    @Override public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
        Scan s1=new Scan();
        s1.addFamily(TEST_FAMILY_2);
        try (ResultScanner scanner1=table.getScanner(s1)){
        }
       }
       return null;
    }
  }
;
  AccessTestAction scanQualifierActionForGroupWithQualifierLevelAccess=new AccessTestAction(){
    @Override public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf);Table table=connection.getTable(tableName)){
        Scan s1=new Scan();
        s1.addColumn(TEST_FAMILY,Q2);
        try (ResultScanner scanner1=table.getScanner(s1)){
        }
       }
       return null;
    }
  }
;
  grantOnTable(TEST_UTIL,convertToGroup(TESTGROUP_1),tableName,null,null,Action.READ);
  verifyAllowed(TESTGROUP1_USER1,scanTableActionForGroupWithTableLevelAccess);
  verifyDenied(TESTGROUP2_USER1,scanTableActionForGroupWithTableLevelAccess);
  revokeFromTable(TEST_UTIL,convertToGroup(TESTGROUP_1),tableName,null,null);
  verifyDenied(TESTGROUP1_USER1,scanTableActionForGroupWithTableLevelAccess);
  grantOnTable(TEST_UTIL,convertToGroup(TESTGROUP_1),tableName,TEST_FAMILY,null,Permission.Action.READ);
  verifyAllowed(TESTGROUP1_USER1,scanTableActionForGroupWithFamilyLevelAccess);
  verifyDenied(TESTGROUP1_USER1,scanFamilyActionForGroupWithFamilyLevelAccess);
  verifyDenied(TESTGROUP2_USER1,scanTableActionForGroupWithFamilyLevelAccess);
  verifyDenied(TESTGROUP2_USER1,scanFamilyActionForGroupWithFamilyLevelAccess);
  revokeFromTable(TEST_UTIL,convertToGroup(TESTGROUP_1),tableName,TEST_FAMILY,null);
  verifyDenied(TESTGROUP1_USER1,scanTableActionForGroupWithFamilyLevelAccess);
  grantOnTable(TEST_UTIL,convertToGroup(TESTGROUP_1),tableName,TEST_FAMILY,Q1,Action.READ);
  verifyAllowed(TESTGROUP1_USER1,scanTableActionForGroupWithQualifierLevelAccess);
  verifyDenied(TESTGROUP1_USER1,scanFamilyActionForGroupWithQualifierLevelAccess);
  verifyDenied(TESTGROUP1_USER1,scanQualifierActionForGroupWithQualifierLevelAccess);
  verifyDenied(TESTGROUP2_USER1,scanTableActionForGroupWithQualifierLevelAccess);
  verifyDenied(TESTGROUP2_USER1,scanFamilyActionForGroupWithQualifierLevelAccess);
  verifyDenied(TESTGROUP2_USER1,scanQualifierActionForGroupWithQualifierLevelAccess);
  revokeFromTable(TEST_UTIL,convertToGroup(TESTGROUP_1),tableName,TEST_FAMILY,Q1);
  verifyDenied(TESTGROUP1_USER1,scanTableActionForGroupWithQualifierLevelAccess);
}
