{
  final Configuration conf=TEST_UTIL.getConfiguration();
  User superUser=User.createUserForTesting(conf,"admin",new String[]{"supergroup"});
  User globalRead=User.createUserForTesting(conf,"globalRead",new String[0]);
  User globalWrite=User.createUserForTesting(conf,"globalWrite",new String[0]);
  User globalCreate=User.createUserForTesting(conf,"globalCreate",new String[0]);
  User globalAdmin=User.createUserForTesting(conf,"globalAdmin",new String[0]);
  SecureTestUtil.grantGlobal(TEST_UTIL,globalRead.getShortName(),Action.READ);
  SecureTestUtil.grantGlobal(TEST_UTIL,globalWrite.getShortName(),Action.WRITE);
  SecureTestUtil.grantGlobal(TEST_UTIL,globalCreate.getShortName(),Action.CREATE);
  SecureTestUtil.grantGlobal(TEST_UTIL,globalAdmin.getShortName(),Action.ADMIN);
  User nsRead=User.createUserForTesting(conf,"nsRead",new String[0]);
  User nsWrite=User.createUserForTesting(conf,"nsWrite",new String[0]);
  User nsCreate=User.createUserForTesting(conf,"nsCreate",new String[0]);
  User nsAdmin=User.createUserForTesting(conf,"nsAdmin",new String[0]);
  SecureTestUtil.grantOnNamespace(TEST_UTIL,nsRead.getShortName(),TEST_TABLE.getTableName().getNamespaceAsString(),Action.READ);
  SecureTestUtil.grantOnNamespace(TEST_UTIL,nsWrite.getShortName(),TEST_TABLE.getTableName().getNamespaceAsString(),Action.WRITE);
  SecureTestUtil.grantOnNamespace(TEST_UTIL,nsCreate.getShortName(),TEST_TABLE.getTableName().getNamespaceAsString(),Action.CREATE);
  SecureTestUtil.grantOnNamespace(TEST_UTIL,nsAdmin.getShortName(),TEST_TABLE.getTableName().getNamespaceAsString(),Action.ADMIN);
  User tableRead=User.createUserForTesting(conf,"tableRead",new String[0]);
  User tableWrite=User.createUserForTesting(conf,"tableWrite",new String[0]);
  User tableCreate=User.createUserForTesting(conf,"tableCreate",new String[0]);
  User tableAdmin=User.createUserForTesting(conf,"tableAdmin",new String[0]);
  SecureTestUtil.grantOnTable(TEST_UTIL,tableRead.getShortName(),TEST_TABLE.getTableName(),null,null,Action.READ);
  SecureTestUtil.grantOnTable(TEST_UTIL,tableWrite.getShortName(),TEST_TABLE.getTableName(),null,null,Action.WRITE);
  SecureTestUtil.grantOnTable(TEST_UTIL,tableCreate.getShortName(),TEST_TABLE.getTableName(),null,null,Action.CREATE);
  SecureTestUtil.grantOnTable(TEST_UTIL,tableAdmin.getShortName(),TEST_TABLE.getTableName(),null,null,Action.ADMIN);
  grantGlobal(TEST_UTIL,TESTGROUP_1_NAME,Action.WRITE);
  try {
    AccessTestAction writeAction=new AccessTestAction(){
      @Override public Object run() throws Exception {
        try (Connection conn=ConnectionFactory.createConnection(conf);Table t=conn.getTable(AccessControlLists.ACL_TABLE_NAME)){
          t.put(new Put(TEST_ROW).add(AccessControlLists.ACL_LIST_FAMILY,TEST_QUALIFIER,TEST_VALUE));
          return null;
        }
  finally {
        }
      }
    }
;
    verifyDenied(writeAction,globalAdmin,globalCreate,globalRead,TESTGROUP2_USER1);
    verifyDenied(writeAction,nsAdmin,nsCreate,nsRead,nsWrite);
    verifyDenied(writeAction,tableAdmin,tableCreate,tableRead,tableWrite);
    verifyAllowed(writeAction,superUser,globalWrite,TESTGROUP1_USER1);
  }
  finally {
    revokeGlobal(TEST_UTIL,TESTGROUP_1_NAME,Action.WRITE);
  }
  grantGlobal(TEST_UTIL,TESTGROUP_1_NAME,Action.READ);
  try {
    AccessTestAction scanAction=new AccessTestAction(){
      @Override public Object run() throws Exception {
        try (Connection conn=ConnectionFactory.createConnection(conf);Table t=conn.getTable(AccessControlLists.ACL_TABLE_NAME)){
          ResultScanner s=t.getScanner(new Scan());
          try {
            for (Result r=s.next(); r != null; r=s.next()) {
            }
          }
  finally {
            s.close();
          }
          return null;
        }
       }
    }
;
    verifyDenied(scanAction,globalAdmin,globalCreate,globalWrite,TESTGROUP2_USER1);
    verifyDenied(scanAction,nsCreate,nsAdmin,nsRead,nsWrite);
    verifyDenied(scanAction,tableCreate,tableAdmin,tableRead,tableWrite);
    verifyAllowed(scanAction,superUser,globalRead,TESTGROUP1_USER1);
  }
  finally {
    revokeGlobal(TEST_UTIL,TESTGROUP_1_NAME,Action.READ);
  }
}
