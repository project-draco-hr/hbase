{
  int rackIndex=pickRandomRack(cluster);
  if (cluster.numRacks <= 1 || rackIndex == -1) {
    return super.generate(cluster);
  }
  int regionIndex=selectCoHostedRegionPerGroup(cluster.primariesOfRegionsPerRack[rackIndex],cluster.regionsPerRack[rackIndex],cluster.regionIndexToPrimaryIndex);
  if (regionIndex == -1) {
    return randomGenerator.generate(cluster);
  }
  int serverIndex=cluster.regionIndexToServerIndex[regionIndex];
  int toRackIndex=pickOtherRandomRack(cluster,rackIndex);
  int rand=RANDOM.nextInt(cluster.serversPerRack[toRackIndex].length);
  int toServerIndex=cluster.serversPerRack[toRackIndex][rand];
  int toRegionIndex=pickRandomRegion(cluster,toServerIndex,0.9f);
  return getAction(serverIndex,regionIndex,toServerIndex,toRegionIndex);
}
