{
  double moveCost=(moveCostMultiplier > 0) ? (moveCostMultiplier * computeMoveCost(cluster)) : 0;
  double regionCountSkewCost=(loadMultiplier > 0) ? (loadMultiplier * computeSkewLoadCost(cluster)) : 0;
  double tableSkewCost=(tableMultiplier > 0) ? (tableMultiplier * computeTableSkewLoadCost(cluster)) : 0;
  double localityCost=(localityMultiplier > 0) ? (localityMultiplier * computeDataLocalityCost(cluster)) : 0;
  double memstoreSizeCost=(memStoreSizeMultiplier > 0) ? (memStoreSizeMultiplier * computeRegionLoadCost(cluster,RegionLoadCostType.MEMSTORE_SIZE)) : 0;
  double storefileSizeCost=(storeFileSizeMultiplier > 0) ? (storeFileSizeMultiplier * computeRegionLoadCost(cluster,RegionLoadCostType.STOREFILE_SIZE)) : 0;
  double readRequestCost=(readRequestMultiplier > 0) ? (readRequestMultiplier * computeRegionLoadCost(cluster,RegionLoadCostType.READ_REQUEST)) : 0;
  double writeRequestCost=(writeRequestMultiplier > 0) ? (writeRequestMultiplier * computeRegionLoadCost(cluster,RegionLoadCostType.WRITE_REQUEST)) : 0;
  double total=moveCost + regionCountSkewCost + tableSkewCost+ localityCost+ memstoreSizeCost+ storefileSizeCost+ readRequestCost+ writeRequestCost;
  if (LOG.isTraceEnabled()) {
    LOG.trace("Computed weights for a potential balancing total = " + total + " moveCost = "+ moveCost+ " regionCountSkewCost = "+ regionCountSkewCost+ " tableSkewCost = "+ tableSkewCost+ " localityCost = "+ localityCost+ " memstoreSizeCost = "+ memstoreSizeCost+ " storefileSizeCost = "+ storefileSizeCost);
  }
  return total;
}
