{
  StringBuilder sb=new StringBuilder();
  sb.append("row=");
  sb.append(Bytes.toStringBinary(this.row));
  if (this.familyMap.size() == 0) {
    sb.append(", no columns set to be incremented");
    return sb.toString();
  }
  sb.append(", families=");
  boolean moreThanOne=false;
  for (  Map.Entry<byte[],List<Cell>> entry : this.familyMap.entrySet()) {
    if (moreThanOne) {
      sb.append("), ");
    }
 else {
      moreThanOne=true;
      sb.append("{");
    }
    sb.append("(family=");
    sb.append(Bytes.toString(entry.getKey()));
    sb.append(", columns=");
    if (entry.getValue() == null) {
      sb.append("NONE");
    }
 else {
      sb.append("{");
      boolean moreThanOneB=false;
      for (      Cell cell : entry.getValue()) {
        if (moreThanOneB) {
          sb.append(", ");
        }
 else {
          moreThanOneB=true;
        }
        KeyValue kv=KeyValueUtil.ensureKeyValue(cell);
        sb.append(Bytes.toStringBinary(kv.getKey()) + "+=" + Bytes.toLong(kv.getValueArray(),kv.getValueOffset(),kv.getValueLength()));
      }
      sb.append("}");
    }
  }
  sb.append("}");
  return sb.toString();
}
