{
  Class<? extends WALProvider> clazz;
  try {
    clazz=Providers.valueOf(conf.get(key,defaultValue)).clazz;
  }
 catch (  IllegalArgumentException exception) {
    clazz=conf.getClass(key,DefaultWALProvider.class,WALProvider.class);
  }
  try {
    final WALProvider result=clazz.newInstance();
    result.init(this,conf,listeners,providerId);
    return result;
  }
 catch (  InstantiationException exception) {
    LOG.error("couldn't set up WALProvider, check config key " + key);
    LOG.debug("Exception details for failure to load WALProvider.",exception);
    throw new IOException("couldn't set up WALProvider",exception);
  }
catch (  IllegalAccessException exception) {
    LOG.error("couldn't set up WALProvider, check config key " + key);
    LOG.debug("Exception details for failure to load WALProvider.",exception);
    throw new IOException("couldn't set up WALProvider",exception);
  }
}
