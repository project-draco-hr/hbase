{
  Configuration conf=new Configuration(this.conf);
  String currentUserName=UserGroupInformation.getCurrentUser().getShortUserName();
  FileStatus[] hbaseRootFileStat=fs.listStatus(new Path(conf.get(HConstants.HBASE_DIR)));
  if (hbaseRootFileStat.length > 0) {
    String owner=hbaseRootFileStat[0].getOwner();
    if (!owner.equals(currentUserName)) {
      String errorMsg="The current user[" + currentUserName + "] doesn't have hbase root credentials."+ " Please make sure the user is the root of the target HBase";
      LOG.error(errorMsg);
      throw new IOException(errorMsg);
    }
  }
 else {
    LOG.error("The target HBase doesn't exist");
    throw new IOException("The target HBase doesn't exist");
  }
  String familyName=family.getNameAsString();
  String id="SweepJob" + UUID.randomUUID().toString().replace("-","");
  ZooKeeperWatcher zkw=new ZooKeeperWatcher(conf,id,new DummyMobAbortable());
  try {
    ServerName serverName=getCurrentServerName(conf);
    tableLockManager=TableLockManager.createTableLockManager(conf,zkw,serverName);
    TableName lockName=MobUtils.getTableLockName(tn);
    TableLock lock=tableLockManager.writeLock(lockName,"Run sweep tool");
    String tableName=tn.getNameAsString();
    try {
      lock.acquire();
    }
 catch (    Exception e) {
      LOG.warn("Can not lock the table " + tableName + ". The major compaction in HBase may be in-progress or another sweep job is running."+ " Please re-run the job.");
      return 3;
    }
    Job job=null;
    try {
      Scan scan=new Scan();
      scan.addFamily(family.getName());
      scan.setAttribute(MobConstants.MOB_SCAN_RAW,Bytes.toBytes(Boolean.TRUE));
      scan.setAttribute(MobConstants.MOB_SCAN_REF_ONLY,Bytes.toBytes(Boolean.TRUE));
      scan.setCaching(SCAN_CACHING);
      scan.setCacheBlocks(false);
      scan.setMaxVersions(family.getMaxVersions());
      conf.set(CommonConfigurationKeys.IO_SERIALIZATIONS_KEY,JavaSerialization.class.getName() + "," + WritableSerialization.class.getName());
      conf.set(SWEEP_JOB_ID,id);
      conf.set(SWEEP_JOB_SERVERNAME,serverName.toString());
      String tableLockNode=ZKUtil.joinZNode(zkw.tableLockZNode,lockName.getNameAsString());
      conf.set(SWEEP_JOB_TABLE_NODE,tableLockNode);
      job=prepareJob(tn,familyName,scan,conf);
      job.getConfiguration().set(TableInputFormat.SCAN_COLUMN_FAMILY,familyName);
      job.getConfiguration().setLong(MobConstants.MOB_SWEEP_TOOL_COMPACTION_START_DATE,compactionStartTime);
      job.setPartitionerClass(MobFilePathHashPartitioner.class);
      submit(job,tn,familyName);
      if (job.waitForCompletion(true)) {
        removeUnusedFiles(job,tn,family);
      }
 else {
        System.err.println("Job was not successful");
        return 4;
      }
    }
  finally {
      try {
        cleanup(job,tn,familyName);
      }
  finally {
        try {
          lock.release();
        }
 catch (        IOException e) {
          LOG.error("Fail to release the table lock " + tableName,e);
        }
      }
    }
  }
  finally {
    zkw.close();
  }
  return 0;
}
