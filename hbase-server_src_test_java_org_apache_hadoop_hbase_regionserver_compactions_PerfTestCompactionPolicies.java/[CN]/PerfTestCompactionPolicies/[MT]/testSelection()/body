{
  int[][] fileSizes=new int[][]{{1000,350,200,100,20,10,10},{1000,450,200,100,20,10,10},{1000,550,200,100,20,10,10},{1000,650,200,100,20,10,10},{1000,250,25,25,25,25,25,25},{25,25,25,25,25,25,500},{1000,1000,1000,1000,900},{107,50,10,10,10,10},{2000,107,50,10,10,10,10},{9,8,7,6,5,4,3,2,1},{11,18,9,8,7,6,5,4,3,2,1},{110,18,18,18,18,9,8,7,6,5,4,3,2,1},{1,2,3,4,5,6,7,8,9,10,11,12,13,15}};
  for (  int[] fs : fileSizes) {
    List<StoreFile> storeFiles=createStoreFileList(fs);
    storeFiles=runIteration(storeFiles);
    runIteration(storeFiles);
  }
  for (int i=0; i < 100; i++) {
    List<StoreFile> storeFiles=new LinkedList<StoreFile>();
    storeFiles.add(createMockStoreFile(random.nextInt(1700) + 500));
    storeFiles.add(createMockStoreFile(random.nextInt(700) + 400));
    storeFiles.add(createMockStoreFile(random.nextInt(400) + 300));
    storeFiles.add(createMockStoreFile(random.nextInt(400) + 200));
    for (int x=0; x < 50; x++) {
      storeFiles.add(createMockStoreFile(random.nextInt(90) + 10));
      storeFiles.add(createMockStoreFile(random.nextInt(90) + 10));
      storeFiles.add(createMockStoreFile(random.nextInt(90) + 10));
      storeFiles.add(createMockStoreFile(random.nextInt(90) + 10));
      storeFiles.add(createMockStoreFile(random.nextInt(90) + 10));
      storeFiles.add(createMockStoreFile(random.nextInt(90) + 10));
      storeFiles=runIteration(storeFiles);
      storeFiles=runIteration(storeFiles);
    }
  }
  System.out.println(cp.getClass().getSimpleName() + "\t" + max+ "\t"+ min+ "\t"+ ratio+ "\t"+ written+ "\t"+ fileDiff);
}
