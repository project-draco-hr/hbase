{
  if (!cellFeaturesEnabled) {
    return newCell;
  }
  List<Tag> tags=Lists.newArrayList();
  ListMultimap<String,Permission> perms=ArrayListMultimap.create();
  if (oldCell != null) {
    if (oldCell.getTagsLength() > 0) {
      Iterator<Tag> tagIterator=CellUtil.tagsIterator(oldCell.getTagsArray(),oldCell.getTagsOffset(),oldCell.getTagsLength());
      while (tagIterator.hasNext()) {
        Tag tag=tagIterator.next();
        if (tag.getType() != AccessControlLists.ACL_TAG_TYPE) {
          if (LOG.isTraceEnabled()) {
            LOG.trace("Carrying forward tag from " + oldCell + ": type "+ tag.getType()+ " length "+ tag.getTagLength());
          }
          tags.add(tag);
        }
 else {
          ListMultimap<String,Permission> kvPerms=ProtobufUtil.toUsersAndPermissions(AccessControlProtos.UsersAndPermissions.newBuilder().mergeFrom(tag.getBuffer(),tag.getTagOffset(),tag.getTagLength()).build());
          perms.putAll(kvPerms);
        }
      }
    }
  }
  byte[] aclBytes=mutation.getACL();
  if (aclBytes != null) {
    tags.add(new Tag(AccessControlLists.ACL_TAG_TYPE,aclBytes));
  }
 else {
    if (perms != null) {
      if (LOG.isTraceEnabled()) {
        LOG.trace("Carrying forward ACLs from " + oldCell + ": "+ perms);
      }
      tags.add(new Tag(AccessControlLists.ACL_TAG_TYPE,ProtobufUtil.toUsersAndPermissions(perms).toByteArray()));
    }
  }
  if (tags.isEmpty()) {
    return newCell;
  }
  Cell rewriteCell=new TagRewriteCell(newCell,Tag.fromList(tags));
  return rewriteCell;
}
