{
  RegionCoprocessorEnvironment env=c.getEnvironment();
  Map<byte[],? extends Collection<byte[]>> families=makeFamilyMap(family,qualifier);
  User user=getActiveUser();
  AuthResult authResult=permissionGranted(OpType.CHECK_AND_PUT,user,env,families,Action.READ,Action.WRITE);
  if (!authResult.isAllowed() && cellFeaturesEnabled && !compatibleEarlyTermination) {
    authResult.setAllowed(checkCoveringPermission(OpType.CHECK_AND_PUT,env,row,families,HConstants.LATEST_TIMESTAMP,Action.READ));
    authResult.setReason("Covering cell set");
  }
  logResult(authResult);
  if (!authResult.isAllowed()) {
    throw new AccessDeniedException("Insufficient permissions " + authResult.toContextString());
  }
  byte[] bytes=put.getAttribute(AccessControlConstants.OP_ATTRIBUTE_ACL);
  if (bytes != null) {
    if (cellFeaturesEnabled) {
      addCellPermissions(bytes,put.getFamilyCellMap());
    }
 else {
      throw new DoNotRetryIOException("Cell ACLs cannot be persisted");
    }
  }
  return result;
}
