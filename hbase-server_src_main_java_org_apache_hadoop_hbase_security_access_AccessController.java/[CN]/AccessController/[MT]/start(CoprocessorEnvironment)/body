{
  canPersistCellACLs=HFile.getFormatVersion(env.getConfiguration()) >= HFile.MIN_FORMAT_VERSION_WITH_TAGS;
  if (!canPersistCellACLs) {
    LOG.info("A minimum HFile version of " + HFile.MIN_FORMAT_VERSION_WITH_TAGS + " is required to persist cell ACLs. Consider setting "+ HFile.FORMAT_VERSION_KEY+ " accordingly.");
  }
  ZooKeeperWatcher zk=null;
  if (env instanceof MasterCoprocessorEnvironment) {
    MasterCoprocessorEnvironment mEnv=(MasterCoprocessorEnvironment)env;
    zk=mEnv.getMasterServices().getZooKeeper();
  }
 else   if (env instanceof RegionServerCoprocessorEnvironment) {
    RegionServerCoprocessorEnvironment rsEnv=(RegionServerCoprocessorEnvironment)env;
    zk=rsEnv.getRegionServerServices().getZooKeeper();
  }
 else   if (env instanceof RegionCoprocessorEnvironment) {
    regionEnv=(RegionCoprocessorEnvironment)env;
    zk=regionEnv.getRegionServerServices().getZooKeeper();
  }
  this.userProvider=UserProvider.instantiate(env.getConfiguration());
  if (zk != null) {
    try {
      this.authManager=TableAuthManager.get(zk,env.getConfiguration());
    }
 catch (    IOException ioe) {
      throw new RuntimeException("Error obtaining TableAuthManager",ioe);
    }
  }
 else {
    throw new RuntimeException("Error obtaining TableAuthManager, zk found null.");
  }
}
