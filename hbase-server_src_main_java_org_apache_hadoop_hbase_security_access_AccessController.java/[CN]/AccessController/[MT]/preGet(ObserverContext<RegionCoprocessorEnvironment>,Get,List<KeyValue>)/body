{
  RegionCoprocessorEnvironment e=c.getEnvironment();
  User requestUser=getActiveUser();
  AuthResult authResult=permissionGranted("get",requestUser,Permission.Action.READ,e,get.getFamilyMap());
  if (!authResult.isAllowed()) {
    if (hasFamilyQualifierPermission(requestUser,Permission.Action.READ,e,get.getFamilyMap())) {
      byte[] table=getTableName(e);
      AccessControlFilter filter=new AccessControlFilter(authManager,requestUser,table);
      if (get.getFilter() != null) {
        FilterList wrapper=new FilterList(FilterList.Operator.MUST_PASS_ALL,Lists.newArrayList(filter,get.getFilter()));
        get.setFilter(wrapper);
      }
 else {
        get.setFilter(filter);
      }
      logResult(AuthResult.allow("get","Access allowed with filter",requestUser,Permission.Action.READ,authResult.getTable(),get.getFamilyMap()));
    }
 else {
      logResult(authResult);
      throw new AccessDeniedException("Insufficient permissions (table=" + e.getRegion().getTableDesc().getNameAsString() + ", action=READ)");
    }
  }
 else {
    logResult(authResult);
  }
}
