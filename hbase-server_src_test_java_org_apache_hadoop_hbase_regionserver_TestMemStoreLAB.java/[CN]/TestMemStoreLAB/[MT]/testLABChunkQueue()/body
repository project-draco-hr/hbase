{
  HeapMemStoreLAB mslab=new HeapMemStoreLAB();
  assertNull(mslab.getChunkQueue());
  Configuration conf=HBaseConfiguration.create();
  conf.setDouble(MemStoreChunkPool.CHUNK_POOL_MAXSIZE_KEY,0.1);
  conf.setLong(HeapMemStoreLAB.CHUNK_SIZE_KEY,HeapMemStoreLAB.MAX_ALLOC_DEFAULT);
  MemStoreChunkPool.clearDisableFlag();
  mslab=new HeapMemStoreLAB(conf);
  List<Thread> threads=new ArrayList<Thread>();
  for (int i=0; i < 10; i++) {
    threads.add(getChunkQueueTestThread(mslab,"testLABChunkQueue-" + i));
  }
  for (  Thread thread : threads) {
    thread.start();
  }
  Thread.sleep(1000);
  for (  Thread thread : threads) {
    thread.interrupt();
  }
  boolean threadsRunning=true;
  while (threadsRunning) {
    for (    Thread thread : threads) {
      if (thread.isAlive()) {
        threadsRunning=true;
        break;
      }
    }
    threadsRunning=false;
  }
  mslab.close();
  int queueLength=mslab.getChunkQueue().size();
  assertTrue("All chunks in chunk queue should be reclaimed or removed" + " after mslab closed but actually: " + queueLength,queueLength == 0);
}
