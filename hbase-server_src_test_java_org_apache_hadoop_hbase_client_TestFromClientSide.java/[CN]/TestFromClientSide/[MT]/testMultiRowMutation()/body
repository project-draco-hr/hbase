{
  LOG.info("Starting testMultiRowMutation");
  final byte[] TABLENAME=Bytes.toBytes("testMultiRowMutation");
  final byte[] ROW1=Bytes.toBytes("testRow1");
  HTable t=TEST_UTIL.createTable(TABLENAME,FAMILY);
  Put p=new Put(ROW);
  p.add(FAMILY,QUALIFIER,VALUE);
  MutationProto m1=ProtobufUtil.toMutation(MutationType.PUT,p);
  p=new Put(ROW1);
  p.add(FAMILY,QUALIFIER,VALUE);
  MutationProto m2=ProtobufUtil.toMutation(MutationType.PUT,p);
  MultiMutateRequest.Builder mrmBuilder=MultiMutateRequest.newBuilder();
  mrmBuilder.addMutationRequest(m1);
  mrmBuilder.addMutationRequest(m2);
  MultiMutateRequest mrm=mrmBuilder.build();
  CoprocessorRpcChannel channel=t.coprocessorService(ROW);
  MultiRowMutationService.BlockingInterface service=MultiRowMutationService.newBlockingStub(channel);
  service.mutateRows(null,mrm);
  Get g=new Get(ROW);
  Result r=t.get(g);
  assertEquals(0,Bytes.compareTo(VALUE,r.getValue(FAMILY,QUALIFIER)));
  g=new Get(ROW1);
  r=t.get(g);
  assertEquals(0,Bytes.compareTo(VALUE,r.getValue(FAMILY,QUALIFIER)));
}
