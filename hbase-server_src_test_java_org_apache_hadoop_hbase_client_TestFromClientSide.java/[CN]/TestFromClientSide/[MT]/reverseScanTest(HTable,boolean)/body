{
  Scan scan=new Scan();
  scan.setReversed(true);
  ResultScanner scanner=table.getScanner(scan);
  int count=0;
  byte[] lastRow=null;
  for (  Result r : scanner) {
    assertTrue(!r.isEmpty());
    count++;
    byte[] thisRow=r.getRow();
    if (lastRow != null) {
      assertTrue("Error scan order, last row= " + Bytes.toString(lastRow) + ",this row="+ Bytes.toString(thisRow),Bytes.compareTo(thisRow,lastRow) < 0);
    }
    lastRow=thisRow;
  }
  assertEquals(12,count);
  scan=new Scan();
  scan.setSmall(small);
  scan.setReversed(true);
  scan.setStartRow(Bytes.toBytes("002"));
  scanner=table.getScanner(scan);
  count=0;
  lastRow=null;
  for (  Result r : scanner) {
    assertTrue(!r.isEmpty());
    count++;
    byte[] thisRow=r.getRow();
    if (lastRow != null) {
      assertTrue("Error scan order, last row= " + Bytes.toString(lastRow) + ",this row="+ Bytes.toString(thisRow),Bytes.compareTo(thisRow,lastRow) < 0);
    }
    lastRow=thisRow;
  }
  assertEquals(3,count);
  scan=new Scan();
  scan.setSmall(small);
  scan.setReversed(true);
  scan.setStartRow(Bytes.toBytes("002"));
  scan.setStopRow(Bytes.toBytes("000"));
  scanner=table.getScanner(scan);
  count=0;
  lastRow=null;
  for (  Result r : scanner) {
    assertTrue(!r.isEmpty());
    count++;
    byte[] thisRow=r.getRow();
    if (lastRow != null) {
      assertTrue("Error scan order, last row= " + Bytes.toString(lastRow) + ",this row="+ Bytes.toString(thisRow),Bytes.compareTo(thisRow,lastRow) < 0);
    }
    lastRow=thisRow;
  }
  assertEquals(2,count);
  scan=new Scan();
  scan.setSmall(small);
  scan.setReversed(true);
  scan.setStartRow(Bytes.toBytes("001"));
  scanner=table.getScanner(scan);
  count=0;
  lastRow=null;
  for (  Result r : scanner) {
    assertTrue(!r.isEmpty());
    count++;
    byte[] thisRow=r.getRow();
    if (lastRow != null) {
      assertTrue("Error scan order, last row= " + Bytes.toString(lastRow) + ",this row="+ Bytes.toString(thisRow),Bytes.compareTo(thisRow,lastRow) < 0);
    }
    lastRow=thisRow;
  }
  assertEquals(2,count);
  scan=new Scan();
  scan.setSmall(small);
  scan.setReversed(true);
  scan.setStartRow(Bytes.toBytes("000"));
  scanner=table.getScanner(scan);
  count=0;
  lastRow=null;
  for (  Result r : scanner) {
    assertTrue(!r.isEmpty());
    count++;
    byte[] thisRow=r.getRow();
    if (lastRow != null) {
      assertTrue("Error scan order, last row= " + Bytes.toString(lastRow) + ",this row="+ Bytes.toString(thisRow),Bytes.compareTo(thisRow,lastRow) < 0);
    }
    lastRow=thisRow;
  }
  assertEquals(1,count);
  scan=new Scan();
  scan.setSmall(small);
  scan.setReversed(true);
  scan.setStartRow(Bytes.toBytes("006"));
  scan.setStopRow(Bytes.toBytes("002"));
  scanner=table.getScanner(scan);
  count=0;
  lastRow=null;
  for (  Result r : scanner) {
    assertTrue(!r.isEmpty());
    count++;
    byte[] thisRow=r.getRow();
    if (lastRow != null) {
      assertTrue("Error scan order, last row= " + Bytes.toString(lastRow) + ",this row="+ Bytes.toString(thisRow),Bytes.compareTo(thisRow,lastRow) < 0);
    }
    lastRow=thisRow;
  }
  assertEquals(4,count);
}
