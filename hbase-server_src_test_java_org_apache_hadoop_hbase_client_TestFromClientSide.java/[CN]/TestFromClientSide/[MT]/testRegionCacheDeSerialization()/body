{
  LOG.info("Starting testRegionCacheDeSerialization");
  final byte[] TABLENAME=Bytes.toBytes("testCachePrewarm2");
  final byte[] FAMILY=Bytes.toBytes("family");
  Configuration conf=TEST_UTIL.getConfiguration();
  TEST_UTIL.createTable(TABLENAME,FAMILY);
  HTable table=new HTable(conf,TABLENAME);
  TEST_UTIL.createMultiRegions(table,FAMILY);
  Scan s=new Scan();
  ResultScanner scanner=table.getScanner(s);
  while (scanner.next() != null)   continue;
  Path tempPath=new Path(TEST_UTIL.getDataTestDir(),"regions.dat");
  final String tempFileName=tempPath.toString();
  FileOutputStream fos=new FileOutputStream(tempFileName);
  DataOutputStream dos=new DataOutputStream(fos);
  table.serializeRegionInfo(dos);
  dos.flush();
  dos.close();
  FileInputStream fis=new FileInputStream(tempFileName);
  DataInputStream dis=new DataInputStream(fis);
  Map<HRegionInfo,HServerAddress> deserRegions=table.deserializeRegionInfo(dis);
  dis.close();
  Map<HRegionInfo,HServerAddress> loadedRegions=table.getRegionsInfo();
  table.getConnection().clearRegionCache();
  table.getConnection().prewarmRegionCache(table.getTableName(),deserRegions);
  assertEquals("Number of cached region is incorrect",HConnectionManager.getCachedRegionCount(conf,TABLENAME),loadedRegions.size());
  for (  Map.Entry<HRegionInfo,HServerAddress> e : loadedRegions.entrySet()) {
    HRegionInfo hri=e.getKey();
    assertTrue(HConnectionManager.isRegionCached(conf,hri.getTableName(),hri.getStartKey()));
  }
  File f=new java.io.File(tempFileName);
  f.delete();
  LOG.info("Finishing testRegionCacheDeSerialization");
}
