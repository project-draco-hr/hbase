{
  byte[] TABLE=Bytes.toBytes("testDeleteFamilyVersionWithOtherDeletes");
  byte[][] QUALIFIERS=makeNAscii(QUALIFIER,5);
  byte[][] VALUES=makeN(VALUE,5);
  long[] ts={1000,2000,3000,4000,5000};
  HBaseAdmin admin=TEST_UTIL.getHBaseAdmin();
  Table ht=TEST_UTIL.createTable(TABLE,FAMILY,5);
  Put put=null;
  Result result=null;
  Get get=null;
  Delete delete=null;
  put=new Put(ROW);
  for (int q=0; q < 5; q++)   for (int t=0; t < 5; t++)   put.add(FAMILY,QUALIFIERS[q],ts[t],VALUES[t]);
  ht.put(put);
  admin.flush(TABLE);
  byte[] ROW2=Bytes.toBytes("myRowForTest");
  put=new Put(ROW2);
  for (int q=0; q < 5; q++)   for (int t=0; t < 5; t++)   put.add(FAMILY,QUALIFIERS[q],ts[t],VALUES[t]);
  ht.put(put);
  admin.flush(TABLE);
  delete=new Delete(ROW);
  delete.deleteFamily(FAMILY,ts[1]);
  delete.deleteFamilyVersion(FAMILY,ts[3]);
  delete.deleteColumns(FAMILY,QUALIFIERS[0],ts[2]);
  delete.deleteColumns(FAMILY,QUALIFIERS[2],ts[4]);
  delete.deleteColumn(FAMILY,QUALIFIERS[4],ts[4]);
  ht.delete(delete);
  admin.flush(TABLE);
  delete=new Delete(ROW2);
  delete.deleteFamilyVersion(FAMILY,ts[1]);
  delete.deleteFamilyVersion(FAMILY,ts[3]);
  ht.delete(delete);
  admin.flush(TABLE);
  get=new Get(ROW);
  get.addColumn(FAMILY,QUALIFIERS[0]);
  get.setMaxVersions(Integer.MAX_VALUE);
  result=ht.get(get);
  assertNResult(result,ROW,FAMILY,QUALIFIERS[0],new long[]{ts[4]},new byte[][]{VALUES[4]},0,0);
  get=new Get(ROW);
  get.addColumn(FAMILY,QUALIFIERS[1]);
  get.setMaxVersions(Integer.MAX_VALUE);
  result=ht.get(get);
  assertNResult(result,ROW,FAMILY,QUALIFIERS[1],new long[]{ts[2],ts[4]},new byte[][]{VALUES[2],VALUES[4]},0,1);
  get=new Get(ROW);
  get.addColumn(FAMILY,QUALIFIERS[2]);
  get.setMaxVersions(Integer.MAX_VALUE);
  result=ht.get(get);
  assertEquals(0,result.size());
  get=new Get(ROW);
  get.addColumn(FAMILY,QUALIFIERS[3]);
  get.setMaxVersions(Integer.MAX_VALUE);
  result=ht.get(get);
  assertNResult(result,ROW,FAMILY,QUALIFIERS[3],new long[]{ts[2],ts[4]},new byte[][]{VALUES[2],VALUES[4]},0,1);
  get=new Get(ROW);
  get.addColumn(FAMILY,QUALIFIERS[4]);
  get.setMaxVersions(Integer.MAX_VALUE);
  result=ht.get(get);
  assertNResult(result,ROW,FAMILY,QUALIFIERS[4],new long[]{ts[2]},new byte[][]{VALUES[2]},0,0);
  for (int i=0; i < 5; i++) {
    get=new Get(ROW2);
    get.addColumn(FAMILY,QUALIFIERS[i]);
    get.setMaxVersions(Integer.MAX_VALUE);
    result=ht.get(get);
    assertNResult(result,ROW2,FAMILY,QUALIFIERS[i],new long[]{ts[0],ts[2],ts[4]},new byte[][]{VALUES[0],VALUES[2],VALUES[4]},0,2);
  }
  ht.close();
  admin.close();
}
