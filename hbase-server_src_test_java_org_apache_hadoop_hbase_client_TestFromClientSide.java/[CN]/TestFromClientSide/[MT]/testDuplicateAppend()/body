{
  HTableDescriptor hdt=TEST_UTIL.createTableDescriptor("HCM-testDuplicateAppend");
  Map<String,String> kvs=new HashMap<String,String>();
  kvs.put(HConnectionTestingUtility.SleepAtFirstRpcCall.SLEEP_TIME_CONF_KEY,"2000");
  hdt.addCoprocessor(HConnectionTestingUtility.SleepAtFirstRpcCall.class.getName(),null,1,kvs);
  TEST_UTIL.createTable(hdt,new byte[][]{ROW}).close();
  Configuration c=new Configuration(TEST_UTIL.getConfiguration());
  c.setInt(HConstants.HBASE_CLIENT_PAUSE,50);
  c.setInt(HConstants.HBASE_RPC_TIMEOUT_KEY,1500);
  Connection connection=ConnectionFactory.createConnection(c);
  Table t=connection.getTable(TableName.valueOf("HCM-testDuplicateAppend"));
  if (t instanceof HTable) {
    HTable table=(HTable)t;
    table.setOperationTimeout(3 * 1000);
    try {
      Append append=new Append(ROW);
      append.add(TEST_UTIL.fam1,QUALIFIER,VALUE);
      Result result=table.append(append);
      Cell[] cells=result.rawCells();
      assertEquals(1,cells.length);
      assertKey(cells[0],ROW,TEST_UTIL.fam1,QUALIFIER,VALUE);
      Result readResult=table.get(new Get(ROW));
      cells=readResult.rawCells();
      assertEquals(1,cells.length);
      assertKey(cells[0],ROW,TEST_UTIL.fam1,QUALIFIER,VALUE);
    }
  finally {
      table.close();
      connection.close();
    }
  }
}
