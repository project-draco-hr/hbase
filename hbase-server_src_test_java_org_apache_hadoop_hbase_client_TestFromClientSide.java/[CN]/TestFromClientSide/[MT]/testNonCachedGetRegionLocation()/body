{
  TableName TABLE=TableName.valueOf("testNonCachedGetRegionLocation");
  byte[] family1=Bytes.toBytes("f1");
  byte[] family2=Bytes.toBytes("f2");
  try (Table table=TEST_UTIL.createTable(TABLE,new byte[][]{family1,family2},10);Admin admin=TEST_UTIL.getHBaseAdmin();RegionLocator locator=TEST_UTIL.getConnection().getRegionLocator(TABLE)){
    List<HRegionLocation> allRegionLocations=locator.getAllRegionLocations();
    assertEquals(1,allRegionLocations.size());
    HRegionInfo regionInfo=allRegionLocations.get(0).getRegionInfo();
    ServerName addrBefore=allRegionLocations.get(0).getServerName();
    HRegionLocation addrCache=locator.getRegionLocation(regionInfo.getStartKey(),false);
    HRegionLocation addrNoCache=locator.getRegionLocation(regionInfo.getStartKey(),true);
    assertEquals(addrBefore.getPort(),addrCache.getPort());
    assertEquals(addrBefore.getPort(),addrNoCache.getPort());
    ServerName addrAfter=null;
    for (int i=0; i < SLAVES; i++) {
      HRegionServer regionServer=TEST_UTIL.getHBaseCluster().getRegionServer(i);
      ServerName addr=regionServer.getServerName();
      if (addr.getPort() != addrBefore.getPort()) {
        admin.move(regionInfo.getEncodedNameAsBytes(),Bytes.toBytes(addr.toString()));
        Thread.sleep(5000);
        addrAfter=addr;
        break;
      }
    }
    addrCache=locator.getRegionLocation(regionInfo.getStartKey(),false);
    addrNoCache=locator.getRegionLocation(regionInfo.getStartKey(),true);
    assertNotNull(addrAfter);
    assertTrue(addrAfter.getPort() != addrCache.getPort());
    assertEquals(addrAfter.getPort(),addrNoCache.getPort());
  }
 }
