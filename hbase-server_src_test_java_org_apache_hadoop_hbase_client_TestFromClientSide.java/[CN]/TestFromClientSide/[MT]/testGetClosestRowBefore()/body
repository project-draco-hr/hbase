{
  final TableName tableName=TableName.valueOf("testGetClosestRowBefore");
  final byte[] firstRow=Bytes.toBytes("row111");
  final byte[] secondRow=Bytes.toBytes("row222");
  final byte[] thirdRow=Bytes.toBytes("row333");
  final byte[] forthRow=Bytes.toBytes("row444");
  final byte[] beforeFirstRow=Bytes.toBytes("row");
  final byte[] beforeSecondRow=Bytes.toBytes("row22");
  final byte[] beforeThirdRow=Bytes.toBytes("row33");
  final byte[] beforeForthRow=Bytes.toBytes("row44");
  try (Table t=TEST_UTIL.createTable(tableName,new byte[][]{HConstants.CATALOG_FAMILY,Bytes.toBytes("info2")},1,1024);RegionLocator locator=TEST_UTIL.getConnection().getRegionLocator(tableName)){
    if (t instanceof HTableInterface) {
      HTableInterface table=(HTableInterface)t;
      String regionName=locator.getAllRegionLocations().get(0).getRegionInfo().getEncodedName();
      Region region=TEST_UTIL.getRSForFirstRegionInTable(tableName).getFromOnlineRegions(regionName);
      Put put1=new Put(firstRow);
      Put put2=new Put(secondRow);
      Put put3=new Put(thirdRow);
      Put put4=new Put(forthRow);
      byte[] one=new byte[]{1};
      byte[] two=new byte[]{2};
      byte[] three=new byte[]{3};
      byte[] four=new byte[]{4};
      put1.add(HConstants.CATALOG_FAMILY,null,one);
      put2.add(HConstants.CATALOG_FAMILY,null,two);
      put3.add(HConstants.CATALOG_FAMILY,null,three);
      put4.add(HConstants.CATALOG_FAMILY,null,four);
      table.put(put1);
      table.put(put2);
      table.put(put3);
      table.put(put4);
      region.flush(true);
      Result result;
      Get get=null;
      get=new Get(beforeFirstRow);
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.isEmpty());
      get=new Get(firstRow);
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.containsColumn(HConstants.CATALOG_FAMILY,null));
      assertTrue(Bytes.equals(result.getRow(),firstRow));
      assertTrue(Bytes.equals(result.getValue(HConstants.CATALOG_FAMILY,null),one));
      get=new Get(beforeSecondRow);
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.containsColumn(HConstants.CATALOG_FAMILY,null));
      assertTrue(Bytes.equals(result.getRow(),firstRow));
      assertTrue(Bytes.equals(result.getValue(HConstants.CATALOG_FAMILY,null),one));
      get=new Get(secondRow);
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.containsColumn(HConstants.CATALOG_FAMILY,null));
      assertTrue(Bytes.equals(result.getRow(),secondRow));
      assertTrue(Bytes.equals(result.getValue(HConstants.CATALOG_FAMILY,null),two));
      get=new Get(beforeThirdRow);
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.containsColumn(HConstants.CATALOG_FAMILY,null));
      assertTrue(Bytes.equals(result.getRow(),secondRow));
      assertTrue(Bytes.equals(result.getValue(HConstants.CATALOG_FAMILY,null),two));
      get=new Get(thirdRow);
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.containsColumn(HConstants.CATALOG_FAMILY,null));
      assertTrue(Bytes.equals(result.getRow(),thirdRow));
      assertTrue(Bytes.equals(result.getValue(HConstants.CATALOG_FAMILY,null),three));
      get=new Get(beforeForthRow);
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.containsColumn(HConstants.CATALOG_FAMILY,null));
      assertTrue(Bytes.equals(result.getRow(),thirdRow));
      assertTrue(Bytes.equals(result.getValue(HConstants.CATALOG_FAMILY,null),three));
      get=new Get(forthRow);
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.containsColumn(HConstants.CATALOG_FAMILY,null));
      assertTrue(Bytes.equals(result.getRow(),forthRow));
      assertTrue(Bytes.equals(result.getValue(HConstants.CATALOG_FAMILY,null),four));
      get=new Get(Bytes.add(forthRow,one));
      get.setClosestRowBefore(true);
      get.addFamily(HConstants.CATALOG_FAMILY);
      result=table.get(get);
      assertTrue(result.containsColumn(HConstants.CATALOG_FAMILY,null));
      assertTrue(Bytes.equals(result.getRow(),forthRow));
      assertTrue(Bytes.equals(result.getValue(HConstants.CATALOG_FAMILY,null),four));
    }
  }
 }
