{
  final byte[] value1=Bytes.toBytes("aaaa");
  final byte[] value2=Bytes.toBytes("bbbb");
  final byte[] value3=Bytes.toBytes("cccc");
  final byte[] value4=Bytes.toBytes("dddd");
  Table table=TEST_UTIL.createTable(TableName.valueOf("testCheckAndDeleteWithCompareOp"),FAMILY);
  Put put2=new Put(ROW);
  put2.addColumn(FAMILY,QUALIFIER,value2);
  table.put(put2);
  Put put3=new Put(ROW);
  put3.addColumn(FAMILY,QUALIFIER,value3);
  Delete delete=new Delete(ROW);
  delete.deleteColumns(FAMILY,QUALIFIER);
  boolean ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.GREATER,value1,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.EQUAL,value1,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.GREATER_OR_EQUAL,value1,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.LESS,value1,delete);
  assertEquals(ok,true);
  table.put(put2);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.LESS_OR_EQUAL,value1,delete);
  assertEquals(ok,true);
  table.put(put2);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.NOT_EQUAL,value1,delete);
  assertEquals(ok,true);
  table.put(put3);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.LESS,value4,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.LESS_OR_EQUAL,value4,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.EQUAL,value4,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.GREATER,value4,delete);
  assertEquals(ok,true);
  table.put(put3);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.GREATER_OR_EQUAL,value4,delete);
  assertEquals(ok,true);
  table.put(put3);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.NOT_EQUAL,value4,delete);
  assertEquals(ok,true);
  table.put(put2);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.GREATER,value2,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.NOT_EQUAL,value2,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.LESS,value2,delete);
  assertEquals(ok,false);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.GREATER_OR_EQUAL,value2,delete);
  assertEquals(ok,true);
  table.put(put2);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.LESS_OR_EQUAL,value2,delete);
  assertEquals(ok,true);
  table.put(put2);
  ok=table.checkAndDelete(ROW,FAMILY,QUALIFIER,CompareOp.EQUAL,value2,delete);
  assertEquals(ok,true);
}
