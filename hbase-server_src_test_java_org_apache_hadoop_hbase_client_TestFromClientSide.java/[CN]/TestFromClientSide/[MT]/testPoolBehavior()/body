{
  byte[] someBytes=Bytes.toBytes("pool");
  HTable table=TEST_UTIL.createTable(someBytes,someBytes);
  ThreadPoolExecutor pool=(ThreadPoolExecutor)table.getPool();
  assertEquals(1,pool.getCorePoolSize());
  assertEquals(0,pool.getPoolSize());
  final SynchronousQueue<Object> queue=new SynchronousQueue<Object>();
  List<Runnable> tasks=new ArrayList<Runnable>(5);
  for (int i=0; i < 5; i++) {
    tasks.add(new Runnable(){
      public void run(){
        try {
          queue.take();
        }
 catch (        InterruptedException ie) {
        }
      }
    }
);
  }
  pool.submit(tasks.get(0));
  assertEquals(1,pool.getPoolSize());
  pool.submit(tasks.get(1));
  assertEquals(2,pool.getPoolSize());
  queue.put(new Object());
  queue.put(new Object());
  assertEquals(2,pool.getPoolSize());
  while (pool.getCompletedTaskCount() < 2) {
    Threads.sleep(1);
  }
  pool.submit(tasks.get(2));
  pool.submit(tasks.get(3));
  pool.submit(tasks.get(4));
  assertEquals(3,pool.getPoolSize());
  queue.put(new Object());
  queue.put(new Object());
  queue.put(new Object());
}
