{
  TableName TABLE=TableName.valueOf("testEmptyFilterList");
  Table table=TEST_UTIL.createTable(TABLE,FAMILY);
  Put put=new Put(Bytes.toBytes("row"));
  put.addColumn(FAMILY,QUALIFIER,VALUE);
  table.put(put);
  List<Result> scanResults=new LinkedList<>();
  Scan scan=new Scan();
  scan.setFilter(new FilterList());
  try (ResultScanner scanner=table.getScanner(scan)){
    for (    Result r : scanner) {
      scanResults.add(r);
    }
  }
   assertEquals(1,scanResults.size());
  Get g=new Get(Bytes.toBytes("row"));
  g.setFilter(new FilterList());
  Result getResult=table.get(g);
  Result scanResult=scanResults.get(0);
  assertEquals(scanResult.rawCells().length,getResult.rawCells().length);
  for (int i=0; i != scanResult.rawCells().length; ++i) {
    Cell scanCell=scanResult.rawCells()[i];
    Cell getCell=getResult.rawCells()[i];
    assertEquals(0,Bytes.compareTo(CellUtil.cloneRow(scanCell),CellUtil.cloneRow(getCell)));
    assertEquals(0,Bytes.compareTo(CellUtil.cloneFamily(scanCell),CellUtil.cloneFamily(getCell)));
    assertEquals(0,Bytes.compareTo(CellUtil.cloneQualifier(scanCell),CellUtil.cloneQualifier(getCell)));
    assertEquals(0,Bytes.compareTo(CellUtil.cloneValue(scanCell),CellUtil.cloneValue(getCell)));
  }
}
