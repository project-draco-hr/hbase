{
  final TableName TABLENAME=TableName.valueOf("testKeepDeletesCells");
  final byte[] FAMILY=Bytes.toBytes("family");
  final byte[] C0=Bytes.toBytes("c0");
  final byte[] T1=Bytes.toBytes("T1");
  final byte[] T2=Bytes.toBytes("T2");
  final byte[] T3=Bytes.toBytes("T3");
  HColumnDescriptor hcd=new HColumnDescriptor(FAMILY).setKeepDeletedCells(KeepDeletedCells.TRUE).setMaxVersions(3);
  HTableDescriptor desc=new HTableDescriptor(TABLENAME);
  desc.addFamily(hcd);
  TEST_UTIL.getHBaseAdmin().createTable(desc);
  Table h=TEST_UTIL.getConnection().getTable(TABLENAME);
  long ts=System.currentTimeMillis();
  Put p=new Put(T1,ts);
  p.add(FAMILY,C0,T1);
  h.put(p);
  p=new Put(T1,ts + 2);
  p.add(FAMILY,C0,T2);
  h.put(p);
  p=new Put(T1,ts + 4);
  p.add(FAMILY,C0,T3);
  h.put(p);
  Delete d=new Delete(T1,ts + 3);
  h.delete(d);
  d=new Delete(T1,ts + 3);
  d.deleteColumns(FAMILY,C0,ts + 3);
  h.delete(d);
  Get g=new Get(T1);
  g.setTimeRange(0,ts + 3);
  Result r=h.get(g);
  assertArrayEquals(T2,r.getValue(FAMILY,C0));
  Scan s=new Scan(T1);
  s.setTimeRange(0,ts + 3);
  s.setMaxVersions();
  ResultScanner scanner=h.getScanner(s);
  Cell[] kvs=scanner.next().rawCells();
  assertArrayEquals(T2,CellUtil.cloneValue(kvs[0]));
  assertArrayEquals(T1,CellUtil.cloneValue(kvs[1]));
  scanner.close();
  s=new Scan(T1);
  s.setRaw(true);
  s.setMaxVersions();
  scanner=h.getScanner(s);
  kvs=scanner.next().rawCells();
  assertTrue(CellUtil.isDeleteFamily(kvs[0]));
  assertArrayEquals(T3,CellUtil.cloneValue(kvs[1]));
  assertTrue(CellUtil.isDelete(kvs[2]));
  assertArrayEquals(T2,CellUtil.cloneValue(kvs[3]));
  assertArrayEquals(T1,CellUtil.cloneValue(kvs[4]));
  scanner.close();
  h.close();
}
