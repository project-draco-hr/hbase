{
  final byte[] tableName=Bytes.toBytes("testClientPoolRoundRobin");
  int poolSize=3;
  int numVersions=poolSize * 2;
  Configuration conf=TEST_UTIL.getConfiguration();
  conf.set(HConstants.HBASE_CLIENT_IPC_POOL_TYPE,"round-robin");
  conf.setInt(HConstants.HBASE_CLIENT_IPC_POOL_SIZE,poolSize);
  HTable table=TEST_UTIL.createTable(tableName,new byte[][]{FAMILY},conf,Integer.MAX_VALUE);
  table.setAutoFlush(true);
  final long ts=EnvironmentEdgeManager.currentTimeMillis();
  Get get=new Get(ROW);
  get.addColumn(FAMILY,QUALIFIER);
  get.setMaxVersions();
  for (int versions=1; versions <= numVersions; versions++) {
    Put put=new Put(ROW);
    put.add(FAMILY,QUALIFIER,ts + versions,VALUE);
    table.put(put);
    Result result=table.get(get);
    NavigableMap<Long,byte[]> navigableMap=result.getMap().get(FAMILY).get(QUALIFIER);
    assertEquals("The number of versions of '" + FAMILY + ":"+ QUALIFIER+ " did not match "+ versions,versions,navigableMap.size());
    for (    Map.Entry<Long,byte[]> entry : navigableMap.entrySet()) {
      assertTrue("The value at time " + entry.getKey() + " did not match what was put",Bytes.equals(VALUE,entry.getValue()));
    }
  }
}
