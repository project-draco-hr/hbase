{
  String tableNameString="testScanNext";
  byte[] tableName=Bytes.toBytes(tableNameString);
  byte[] cf=Bytes.toBytes("d");
  byte[] qualifier=Bytes.toBytes("qual");
  byte[] val=Bytes.toBytes("One");
  TEST_UTIL.createTable(tableName,cf);
  HTable t=new HTable(conf,tableName);
  t.setAutoFlush(false,true);
  for (int insertCount=0; insertCount < 100; insertCount++) {
    Put p=new Put(Bytes.toBytes("" + insertCount + "row"));
    p.add(cf,qualifier,val);
    t.put(p);
  }
  t.flushCommits();
  Scan s=new Scan();
  s.setBatch(1);
  s.setCaching(1);
  ResultScanner resultScanners=t.getScanner(s);
  for (int nextCount=0; nextCount < 30; nextCount++) {
    Result result=resultScanners.next();
    assertNotNull(result);
    assertEquals(1,result.size());
  }
  for (  HRegionInfo i : t.getRegionLocations().keySet()) {
    MetricsRegionAggregateSource agg=rs.getRegion(i.getRegionName()).getMetrics().getSource().getAggregateSource();
    String prefix="namespace_" + NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR + "_table_"+ tableNameString+ "_region_"+ i.getEncodedName()+ "_metric";
    metricsHelper.assertCounter(prefix + "_scanNextNumOps",30,agg);
  }
}
