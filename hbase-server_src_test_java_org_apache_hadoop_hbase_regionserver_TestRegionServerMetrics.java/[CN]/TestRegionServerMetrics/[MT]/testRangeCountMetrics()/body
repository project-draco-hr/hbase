{
  final long[] timeranges={1,3,10,30,100,300,1000,3000,10000,30000,60000,120000,300000,600000};
  final String timeRangeType="TimeRangeCount";
  final String timeRangeMetricName="Mutate";
  boolean timeRangeCountUpdated=false;
  Put p=new Put(row);
  p.addColumn(cf,qualifier,val);
  table.put(p);
  for (int i=0; i < 10; i++) {
    table.put(p);
  }
  Get g=new Get(row);
  for (int i=0; i < 10; i++) {
    table.get(g);
  }
  metricsRegionServer.getRegionServerWrapper().forceRecompute();
  long prior=0;
  String dynamicMetricName;
  for (int i=0; i < timeranges.length; i++) {
    dynamicMetricName=timeRangeMetricName + "_" + timeRangeType+ "_"+ prior+ "-"+ timeranges[i];
    if (metricsHelper.checkCounterExists(dynamicMetricName,serverSource)) {
      long count=metricsHelper.getGaugeLong(dynamicMetricName,serverSource);
      if (count > 0) {
        timeRangeCountUpdated=true;
        break;
      }
    }
    prior=timeranges[i];
  }
  dynamicMetricName=timeRangeMetricName + "_" + timeRangeType+ "_"+ timeranges[timeranges.length - 1]+ "-inf";
  if (metricsHelper.checkCounterExists(dynamicMetricName,serverSource)) {
    long count=metricsHelper.getCounter(dynamicMetricName,serverSource);
    if (count > 0) {
      timeRangeCountUpdated=true;
    }
  }
  assertEquals(true,timeRangeCountUpdated);
}
