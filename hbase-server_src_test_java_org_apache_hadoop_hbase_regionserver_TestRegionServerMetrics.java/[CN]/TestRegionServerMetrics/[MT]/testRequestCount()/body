{
  String tableNameString="testRequestCount";
  TableName tName=TableName.valueOf(tableNameString);
  byte[] cfName=Bytes.toBytes("d");
  byte[] row=Bytes.toBytes("rk");
  byte[] qualifier=Bytes.toBytes("qual");
  byte[] initValue=Bytes.toBytes("Value");
  TEST_UTIL.createTable(tName,cfName);
  TEST_UTIL.getConnection().getTable(tName).close();
  HTable table=(HTable)TEST_UTIL.getConnection().getTable(tName);
  Put p=new Put(row);
  p.add(cfName,qualifier,initValue);
  table.put(p);
  metricsRegionServer.getRegionServerWrapper().forceRecompute();
  long requests=metricsHelper.getCounter("totalRequestCount",serverSource);
  long readRequests=metricsHelper.getCounter("readRequestCount",serverSource);
  long writeRequests=metricsHelper.getCounter("writeRequestCount",serverSource);
  for (int i=0; i < 30; i++) {
    table.put(p);
  }
  metricsRegionServer.getRegionServerWrapper().forceRecompute();
  metricsHelper.assertCounter("totalRequestCount",requests + 30,serverSource);
  metricsHelper.assertCounter("readRequestCount",readRequests,serverSource);
  metricsHelper.assertCounter("writeRequestCount",writeRequests + 30,serverSource);
  Get g=new Get(row);
  for (int i=0; i < 10; i++) {
    table.get(g);
  }
  metricsRegionServer.getRegionServerWrapper().forceRecompute();
  metricsHelper.assertCounter("totalRequestCount",requests + 40,serverSource);
  metricsHelper.assertCounter("readRequestCount",readRequests + 10,serverSource);
  metricsHelper.assertCounter("writeRequestCount",writeRequests + 30,serverSource);
  for (  HRegionInfo i : table.getRegionLocations().keySet()) {
    MetricsRegionAggregateSource agg=rs.getRegion(i.getRegionName()).getMetrics().getSource().getAggregateSource();
    String prefix="namespace_" + NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR + "_table_"+ tableNameString+ "_region_"+ i.getEncodedName()+ "_metric";
    metricsHelper.assertCounter(prefix + "_getNumOps",10,agg);
    metricsHelper.assertCounter(prefix + "_mutateCount",31,agg);
  }
  List<Get> gets=new ArrayList<Get>();
  for (int i=0; i < 10; i++) {
    gets.add(new Get(row));
  }
  table.get(gets);
  metricsRegionServer.getRegionServerWrapper().forceRecompute();
  metricsHelper.assertCounter("totalRequestCount",requests + 50,serverSource);
  metricsHelper.assertCounter("readRequestCount",readRequests + 20,serverSource);
  metricsHelper.assertCounter("writeRequestCount",writeRequests + 30,serverSource);
  table.setAutoFlushTo(false);
  for (int i=0; i < 30; i++) {
    table.put(p);
  }
  table.flushCommits();
  metricsRegionServer.getRegionServerWrapper().forceRecompute();
  metricsHelper.assertCounter("totalRequestCount",requests + 80,serverSource);
  metricsHelper.assertCounter("readRequestCount",readRequests + 20,serverSource);
  metricsHelper.assertCounter("writeRequestCount",writeRequests + 60,serverSource);
  table.close();
}
