{
  String rowName="row1";
  byte[] ROW=Bytes.toBytes(rowName);
  String tableName="SizeMetricTest";
  byte[] TABLE=Bytes.toBytes(tableName);
  String cf1Name="cf1";
  String cf2Name="cf2";
  String[] cfs=new String[]{cf1Name,cf2Name};
  byte[] CF1=Bytes.toBytes(cf1Name);
  byte[] CF2=Bytes.toBytes(cf2Name);
  long ts=1234;
  HTable hTable=TEST_UTIL.createTable(TABLE,new byte[][]{CF1,CF2});
  HBaseAdmin admin=new HBaseAdmin(TEST_UTIL.getConfiguration());
  Put p=new Put(ROW);
  p.add(CF1,CF1,ts,CF1);
  p.add(CF2,CF2,ts,CF2);
  hTable.put(p);
  KeyValue kv1=new KeyValue(ROW,CF1,CF1,ts,CF1);
  KeyValue kv2=new KeyValue(ROW,CF2,CF2,ts,CF2);
  int kvLength=kv1.getLength();
  assertEquals(kvLength,kv2.getLength());
  hTable.get(new Get(ROW).addFamily(CF1));
  assertSizeMetric(tableName,cfs,new int[]{kvLength,0,0,0});
  hTable.get(new Get(ROW).addFamily(CF2));
  assertSizeMetric(tableName,cfs,new int[]{kvLength,kvLength,0,0});
  for (  Result res : hTable.getScanner(CF2)) {
  }
  assertSizeMetric(tableName,cfs,new int[]{kvLength,kvLength,0,kvLength});
  for (  Result res : hTable.getScanner(CF1)) {
  }
  assertSizeMetric(tableName,cfs,new int[]{kvLength,kvLength,kvLength,kvLength});
  for (  HRegion hr : TEST_UTIL.getMiniHBaseCluster().getRegions(TABLE)) {
    hr.flushcache();
    hr.compactStores();
  }
  assertSizeMetric(tableName,cfs,new int[]{kvLength,kvLength,kvLength,kvLength});
}
