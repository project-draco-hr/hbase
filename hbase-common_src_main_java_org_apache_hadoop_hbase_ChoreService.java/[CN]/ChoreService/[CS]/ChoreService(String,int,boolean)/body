{
  this.coreThreadPoolPrefix=coreThreadPoolPrefix;
  if (corePoolSize < MIN_CORE_POOL_SIZE) {
    corePoolSize=MIN_CORE_POOL_SIZE;
  }
  final ThreadFactory threadFactory=new ChoreServiceThreadFactory(coreThreadPoolPrefix);
  if (jitter) {
    scheduler=new JitterScheduledThreadPoolExecutorImpl(corePoolSize,threadFactory,0.1);
  }
 else {
    scheduler=new ScheduledThreadPoolExecutor(corePoolSize,threadFactory);
  }
  scheduler.setRemoveOnCancelPolicy(true);
  scheduledChores=new HashMap<ScheduledChore,ScheduledFuture<?>>();
  choresMissingStartTime=new HashMap<ScheduledChore,Boolean>();
}
