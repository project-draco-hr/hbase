{
  TableName tableName=TableName.valueOf(TEST_TABLE.getNameAsString() + ".testRegionObserver");
  HTable table=util.createTable(tableName,new byte[][]{A,B,C});
  try {
    verifyMethodResult(SimpleRegionObserver.class,new String[]{"hadPreGet","hadPostGet","hadPrePut","hadPostPut","hadDelete"},tableName,new Boolean[]{false,false,false,false,false});
    Put put=new Put(ROW);
    put.add(A,A,A);
    put.add(B,B,B);
    put.add(C,C,C);
    table.put(put);
    verifyMethodResult(SimpleRegionObserver.class,new String[]{"hadPreGet","hadPostGet","hadPrePut","hadPostPut","hadPreBatchMutate","hadPostBatchMutate","hadDelete"},tableName,new Boolean[]{false,false,true,true,true,true,false});
    verifyMethodResult(SimpleRegionObserver.class,new String[]{"getCtPreOpen","getCtPostOpen","getCtPreClose","getCtPostClose"},tableName,new Integer[]{1,1,0,0});
    Get get=new Get(ROW);
    get.addColumn(A,A);
    get.addColumn(B,B);
    get.addColumn(C,C);
    table.get(get);
    verifyMethodResult(SimpleRegionObserver.class,new String[]{"hadPreGet","hadPostGet","hadPrePut","hadPostPut","hadDelete"},tableName,new Boolean[]{true,true,true,true,false});
    Delete delete=new Delete(ROW);
    delete.deleteColumn(A,A);
    delete.deleteColumn(B,B);
    delete.deleteColumn(C,C);
    table.delete(delete);
    verifyMethodResult(SimpleRegionObserver.class,new String[]{"hadPreGet","hadPostGet","hadPrePut","hadPostPut","hadPreBatchMutate","hadPostBatchMutate","hadDelete"},tableName,new Boolean[]{true,true,true,true,true,true,true});
  }
  finally {
    util.deleteTable(tableName);
    table.close();
  }
  verifyMethodResult(SimpleRegionObserver.class,new String[]{"getCtPreOpen","getCtPostOpen","getCtPreClose","getCtPostClose"},tableName,new Integer[]{1,1,1,1});
}
