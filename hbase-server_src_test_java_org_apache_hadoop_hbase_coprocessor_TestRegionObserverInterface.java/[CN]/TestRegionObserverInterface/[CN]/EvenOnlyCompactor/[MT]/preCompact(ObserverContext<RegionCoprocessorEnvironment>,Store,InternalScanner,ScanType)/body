{
  return new InternalScanner(){
    @Override public boolean next(    List<Cell> results) throws IOException {
      return next(results,NoLimitScannerContext.getInstance());
    }
    @Override public boolean next(    List<Cell> results,    ScannerContext scannerContext) throws IOException {
      List<Cell> internalResults=new ArrayList<Cell>();
      boolean hasMore;
      do {
        hasMore=scanner.next(internalResults,scannerContext);
        if (!internalResults.isEmpty()) {
          long row=Bytes.toLong(CellUtil.cloneValue(internalResults.get(0)));
          if (row % 2 == 0) {
            break;
          }
          internalResults.clear();
        }
      }
 while (hasMore);
      if (!internalResults.isEmpty()) {
        results.addAll(internalResults);
      }
      return hasMore;
    }
    @Override public void close() throws IOException {
      scanner.close();
    }
  }
;
}
