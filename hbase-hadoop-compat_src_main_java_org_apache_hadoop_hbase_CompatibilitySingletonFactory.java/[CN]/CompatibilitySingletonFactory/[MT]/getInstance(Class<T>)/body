{
synchronized (SingletonStorage.INSTANCE.lock) {
    T instance=(T)SingletonStorage.INSTANCE.instances.get(klass);
    if (instance == null) {
      try {
        ServiceLoader<T> loader=ServiceLoader.load(klass);
        Iterator<T> it=loader.iterator();
        instance=it.next();
        if (it.hasNext()) {
          StringBuilder msg=new StringBuilder();
          msg.append("ServiceLoader provided more than one implementation for class: ").append(klass).append(", using implementation: ").append(instance.getClass()).append(", other implementations: {");
          while (it.hasNext()) {
            msg.append(it.next()).append(" ");
          }
          msg.append("}");
          LOG.warn(msg);
        }
      }
 catch (      Exception e) {
        throw new RuntimeException(createExceptionString(klass),e);
      }
catch (      Error e) {
        throw new RuntimeException(createExceptionString(klass),e);
      }
      if (instance == null) {
        throw new RuntimeException(createExceptionString(klass));
      }
      SingletonStorage.INSTANCE.instances.put(klass,instance);
    }
    return instance;
  }
}
