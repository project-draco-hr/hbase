{
  kvs.clear();
  if (scopes != null) {
    scopes.clear();
  }
  int versionOrLength=in.readInt();
  if (versionOrLength == VERSION_2) {
    int numEdits=in.readInt();
    for (int idx=0; idx < numEdits; idx++) {
      KeyValue kv=new KeyValue();
      kv.readFields(in);
      this.add(kv);
    }
    int numFamilies=in.readInt();
    if (numFamilies > 0) {
      if (scopes == null) {
        scopes=new TreeMap<byte[],Integer>(Bytes.BYTES_COMPARATOR);
      }
      for (int i=0; i < numFamilies; i++) {
        byte[] fam=Bytes.readByteArray(in);
        int scope=in.readInt();
        scopes.put(fam,scope);
      }
    }
  }
 else {
    KeyValue kv=new KeyValue();
    kv.readFields(versionOrLength,in);
    this.add(kv);
  }
}
