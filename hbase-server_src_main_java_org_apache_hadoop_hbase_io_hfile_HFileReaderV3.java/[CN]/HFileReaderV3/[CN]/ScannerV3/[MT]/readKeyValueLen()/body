{
  blockBuffer.mark();
  currKeyLen=blockBuffer.getInt();
  currValueLen=blockBuffer.getInt();
  if (currKeyLen < 0 || currValueLen < 0 || currKeyLen > blockBuffer.limit() || currValueLen > blockBuffer.limit()) {
    throw new IllegalStateException("Invalid currKeyLen " + currKeyLen + " or currValueLen "+ currValueLen+ ". Block offset: "+ block.getOffset()+ ", block length: "+ blockBuffer.limit()+ ", position: "+ blockBuffer.position()+ " (without header).");
  }
  ByteBufferUtils.skip(blockBuffer,currKeyLen + currValueLen);
  if (reader.hfileContext.isIncludesTags()) {
    currTagsLen=((blockBuffer.get() & 0xff) << 8) ^ (blockBuffer.get() & 0xff);
    if (currTagsLen < 0 || currTagsLen > blockBuffer.limit()) {
      throw new IllegalStateException("Invalid currTagsLen " + currTagsLen + ". Block offset: "+ block.getOffset()+ ", block length: "+ blockBuffer.limit()+ ", position: "+ blockBuffer.position()+ " (without header).");
    }
    ByteBufferUtils.skip(blockBuffer,currTagsLen);
  }
  readMvccVersion();
  blockBuffer.reset();
}
