{
  index+=estimateConsecutiveAscii(buffer,index,limit);
  for (; ; ) {
    int byte1;
    do {
      if (index >= limit) {
        return COMPLETE;
      }
    }
 while ((byte1=buffer.get(index++)) >= 0);
    if (byte1 < (byte)0xE0) {
      if (index >= limit) {
        return byte1;
      }
      if (byte1 < (byte)0xC2 || buffer.get(index) > (byte)0xBF) {
        return MALFORMED;
      }
      index++;
    }
 else     if (byte1 < (byte)0xF0) {
      if (index >= limit - 1) {
        return incompleteStateFor(buffer,byte1,index,limit - index);
      }
      final byte byte2=buffer.get(index++);
      if (byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || buffer.get(index) > (byte)0xBF) {
        return MALFORMED;
      }
      index++;
    }
 else {
      if (index >= limit - 2) {
        return incompleteStateFor(buffer,byte1,index,limit - index);
      }
      final int byte2=buffer.get(index++);
      if (byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || buffer.get(index++) > (byte)0xBF || buffer.get(index++) > (byte)0xBF) {
        return MALFORMED;
      }
    }
  }
}
