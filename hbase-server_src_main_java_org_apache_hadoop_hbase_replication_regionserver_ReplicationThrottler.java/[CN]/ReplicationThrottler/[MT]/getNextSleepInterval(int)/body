{
  if (!this.enabled) {
    return 0;
  }
  long sleepTicks=0;
  long now=EnvironmentEdgeManager.currentTimeMillis();
  if ((double)this.cyclePushSize > bandwidth) {
    double cycles=Math.ceil((double)this.cyclePushSize / bandwidth);
    long shouldTillTo=this.cycleStartTick + (long)(cycles * 100);
    if (shouldTillTo > now) {
      sleepTicks=shouldTillTo - now;
    }
 else {
      this.cycleStartTick=now;
    }
    this.cyclePushSize=0;
  }
 else {
    long nextCycleTick=this.cycleStartTick + 100;
    if (now >= nextCycleTick) {
      this.cycleStartTick=now;
      this.cyclePushSize=0;
    }
 else     if (this.cyclePushSize > 0 && (double)(this.cyclePushSize + size) >= bandwidth) {
      sleepTicks=nextCycleTick - now;
      this.cyclePushSize=0;
    }
  }
  return sleepTicks;
}
