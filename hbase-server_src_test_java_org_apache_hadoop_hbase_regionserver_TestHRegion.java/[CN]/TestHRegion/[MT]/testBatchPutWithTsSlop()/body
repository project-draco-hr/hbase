{
  byte[] b=Bytes.toBytes(getName());
  byte[] cf=Bytes.toBytes(COLUMN_FAMILY);
  byte[] qual=Bytes.toBytes("qual");
  byte[] val=Bytes.toBytes("val");
  Configuration conf=HBaseConfiguration.create(this.conf);
  conf.setInt("hbase.hregion.keyvalue.timestamp.slop.millisecs",1000);
  this.region=initHRegion(b,getName(),conf,cf);
  try {
    MetricsWALSource source=CompatibilitySingletonFactory.getInstance(MetricsWALSource.class);
    long syncs=metricsAssertHelper.getCounter("syncTimeNumOps",source);
    metricsAssertHelper.assertCounter("syncTimeNumOps",syncs,source);
    final Put[] puts=new Put[10];
    for (int i=0; i < 10; i++) {
      puts[i]=new Put(Bytes.toBytes("row_" + i),Long.MAX_VALUE - 100);
      puts[i].add(cf,qual,val);
    }
    OperationStatus[] codes=this.region.put(puts);
    assertEquals(10,codes.length);
    for (int i=0; i < 10; i++) {
      assertEquals(OperationStatusCode.SANITY_CHECK_FAILURE,codes[i].getOperationStatusCode());
    }
    metricsAssertHelper.assertCounter("syncTimeNumOps",syncs,source);
  }
  finally {
    HRegion.closeHRegion(this.region);
    this.region=null;
  }
}
