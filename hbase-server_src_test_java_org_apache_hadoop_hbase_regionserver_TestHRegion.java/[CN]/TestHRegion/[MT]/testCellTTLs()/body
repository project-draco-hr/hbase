{
  IncrementingEnvironmentEdge edge=new IncrementingEnvironmentEdge();
  EnvironmentEdgeManager.injectEdge(edge);
  final byte[] row=Bytes.toBytes("testRow");
  final byte[] q1=Bytes.toBytes("q1");
  final byte[] q2=Bytes.toBytes("q2");
  final byte[] q3=Bytes.toBytes("q3");
  final byte[] q4=Bytes.toBytes("q4");
  HTableDescriptor htd=new HTableDescriptor(TableName.valueOf("testCellTTLs"));
  HColumnDescriptor hcd=new HColumnDescriptor(fam1);
  hcd.setTimeToLive(10);
  htd.addFamily(hcd);
  Configuration conf=new Configuration(TEST_UTIL.getConfiguration());
  conf.setInt(HFile.FORMAT_VERSION_KEY,HFile.MIN_FORMAT_VERSION_WITH_TAGS);
  HRegion region=HBaseTestingUtility.createRegionAndWAL(new HRegionInfo(htd.getTableName(),HConstants.EMPTY_BYTE_ARRAY,HConstants.EMPTY_BYTE_ARRAY),TEST_UTIL.getDataTestDir(),conf,htd);
  assertNotNull(region);
  try {
    long now=EnvironmentEdgeManager.currentTime();
    region.put(new Put(row).add(new KeyValue(row,fam1,q1,now,HConstants.EMPTY_BYTE_ARRAY,new Tag[]{new Tag(TagType.TTL_TAG_TYPE,Bytes.toBytes(5000L))})));
    region.put(new Put(row).add(fam1,q2,now,HConstants.EMPTY_BYTE_ARRAY));
    region.put(new Put(row).add(new KeyValue(row,fam1,q3,now + 10000 - 1,HConstants.EMPTY_BYTE_ARRAY,new Tag[]{new Tag(TagType.TTL_TAG_TYPE,Bytes.toBytes(5000L))})));
    region.put(new Put(row).add(fam1,q4,now + 10000 - 1,HConstants.EMPTY_BYTE_ARRAY));
    region.flush(true);
    Result r=region.get(new Get(row));
    assertNotNull(r.getValue(fam1,q1));
    assertNotNull(r.getValue(fam1,q2));
    assertNotNull(r.getValue(fam1,q3));
    assertNotNull(r.getValue(fam1,q4));
    edge.incrementTime(5000);
    r=region.get(new Get(row));
    assertNull(r.getValue(fam1,q1));
    assertNotNull(r.getValue(fam1,q2));
    assertNotNull(r.getValue(fam1,q3));
    assertNotNull(r.getValue(fam1,q4));
    edge.incrementTime(5000);
    r=region.get(new Get(row));
    assertNull(r.getValue(fam1,q1));
    assertNull(r.getValue(fam1,q2));
    assertNotNull(r.getValue(fam1,q3));
    assertNotNull(r.getValue(fam1,q4));
    edge.incrementTime(5000);
    r=region.get(new Get(row));
    assertNull(r.getValue(fam1,q1));
    assertNull(r.getValue(fam1,q2));
    assertNull(r.getValue(fam1,q3));
    assertNotNull(r.getValue(fam1,q4));
    edge.incrementTime(10000);
    r=region.get(new Get(row));
    assertNull(r.getValue(fam1,q1));
    assertNull(r.getValue(fam1,q2));
    assertNull(r.getValue(fam1,q3));
    assertNull(r.getValue(fam1,q4));
    region.put(new Put(row).add(fam1,q1,Bytes.toBytes(1L)));
    r=region.get(new Get(row));
    byte[] val=r.getValue(fam1,q1);
    assertNotNull(val);
    assertEquals(Bytes.toLong(val),1L);
    Increment incr=new Increment(row).addColumn(fam1,q1,1L);
    incr.setTTL(5000);
    region.increment(incr);
    r=region.get(new Get(row));
    val=r.getValue(fam1,q1);
    assertNotNull(val);
    assertEquals(Bytes.toLong(val),2L);
    edge.incrementTime(5000);
    r=region.get(new Get(row));
    val=r.getValue(fam1,q1);
    assertNotNull(val);
    assertEquals(Bytes.toLong(val),1L);
    edge.incrementTime(5000);
    r=region.get(new Get(row));
    assertNull(r.getValue(fam1,q1));
  }
  finally {
    HBaseTestingUtility.closeRegionAndWAL(region);
  }
}
