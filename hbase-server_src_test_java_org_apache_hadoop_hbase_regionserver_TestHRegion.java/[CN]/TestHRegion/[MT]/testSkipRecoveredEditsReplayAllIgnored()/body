{
  String method="testSkipRecoveredEditsReplayAllIgnored";
  byte[] tableName=Bytes.toBytes(method);
  byte[] family=Bytes.toBytes("family");
  this.region=initHRegion(tableName,method,conf,family);
  try {
    Path regiondir=region.getRegionFileSystem().getRegionDir();
    FileSystem fs=region.getRegionFileSystem().getFileSystem();
    Path recoveredEditsDir=HLogUtil.getRegionDirRecoveredEditsDir(regiondir);
    for (int i=1000; i < 1050; i+=10) {
      Path recoveredEdits=new Path(recoveredEditsDir,String.format("%019d",i));
      FSDataOutputStream dos=fs.create(recoveredEdits);
      dos.writeInt(i);
      dos.close();
    }
    long minSeqId=2000;
    Path recoveredEdits=new Path(recoveredEditsDir,String.format("%019d",minSeqId - 1));
    FSDataOutputStream dos=fs.create(recoveredEdits);
    dos.close();
    Map<byte[],Long> maxSeqIdInStores=new TreeMap<byte[],Long>(Bytes.BYTES_COMPARATOR);
    for (    Store store : region.getStores().values()) {
      maxSeqIdInStores.put(store.getColumnFamilyName().getBytes(),minSeqId);
    }
    long seqId=region.replayRecoveredEditsIfAny(regiondir,maxSeqIdInStores,null,null);
    assertEquals(minSeqId,seqId);
  }
  finally {
    HRegion.closeHRegion(this.region);
    this.region=null;
  }
}
