{
  byte[] family=Bytes.toBytes("family");
  ;
  byte[] qualifier=Bytes.toBytes("qualifier");
  byte[] row=Bytes.toBytes("putRow");
  byte[] value=null;
  this.region=initHRegion(tableName,method,CONF,family);
  Put put=null;
  Get get=null;
  List<Cell> kvs=null;
  Result res=null;
  put=new Put(row);
  value=Bytes.toBytes("value0");
  put.addColumn(family,qualifier,1234567l,value);
  region.put(put);
  get=new Get(row);
  get.addColumn(family,qualifier);
  get.setMaxVersions();
  res=this.region.get(get);
  kvs=res.getColumnCells(family,qualifier);
  assertEquals(1,kvs.size());
  assertArrayEquals(Bytes.toBytes("value0"),CellUtil.cloneValue(kvs.get(0)));
  region.flush(true);
  get=new Get(row);
  get.addColumn(family,qualifier);
  get.setMaxVersions();
  res=this.region.get(get);
  kvs=res.getColumnCells(family,qualifier);
  assertEquals(1,kvs.size());
  assertArrayEquals(Bytes.toBytes("value0"),CellUtil.cloneValue(kvs.get(0)));
  put=new Put(row);
  value=Bytes.toBytes("value1");
  put.addColumn(family,qualifier,1234567l,value);
  region.put(put);
  get=new Get(row);
  get.addColumn(family,qualifier);
  get.setMaxVersions();
  res=this.region.get(get);
  kvs=res.getColumnCells(family,qualifier);
  assertEquals(1,kvs.size());
  assertArrayEquals(Bytes.toBytes("value1"),CellUtil.cloneValue(kvs.get(0)));
  region.flush(true);
  get=new Get(row);
  get.addColumn(family,qualifier);
  get.setMaxVersions();
  res=this.region.get(get);
  kvs=res.getColumnCells(family,qualifier);
  assertEquals(1,kvs.size());
  assertArrayEquals(Bytes.toBytes("value1"),CellUtil.cloneValue(kvs.get(0)));
}
