{
  String method=this.getName();
  this.region=initHRegion(HConstants.ROOT_TABLE_NAME,method,conf,HConstants.CATALOG_FAMILY);
  try {
    Put put=new Put(HConstants.EMPTY_START_ROW);
    put.add(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER,null);
    region.put(put);
    Get get=new Get(HConstants.EMPTY_START_ROW);
    get.addColumn(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
    KeyValue kv1=new KeyValue(HConstants.EMPTY_START_ROW,HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
    KeyValue[] expected={kv1};
    Result res=region.get(get);
    assertEquals(expected.length,res.size());
    for (int i=0; i < res.size(); i++) {
      assertEquals(0,Bytes.compareTo(expected[i].getRow(),res.raw()[i].getRow()));
      assertEquals(0,Bytes.compareTo(expected[i].getFamily(),res.raw()[i].getFamily()));
      assertEquals(0,Bytes.compareTo(expected[i].getQualifier(),res.raw()[i].getQualifier()));
    }
    region.flushcache();
    res=region.get(get);
    assertEquals(expected.length,res.size());
    for (int i=0; i < res.size(); i++) {
      assertEquals(0,Bytes.compareTo(expected[i].getRow(),res.raw()[i].getRow()));
      assertEquals(0,Bytes.compareTo(expected[i].getFamily(),res.raw()[i].getFamily()));
      assertEquals(0,Bytes.compareTo(expected[i].getQualifier(),res.raw()[i].getQualifier()));
    }
    Scan scan=new Scan();
    scan.addFamily(HConstants.CATALOG_FAMILY);
    InternalScanner s=region.getScanner(scan);
    List<KeyValue> result=new ArrayList<KeyValue>();
    s.next(result);
    assertEquals(expected.length,result.size());
    for (int i=0; i < res.size(); i++) {
      assertEquals(0,Bytes.compareTo(expected[i].getRow(),result.get(i).getRow()));
      assertEquals(0,Bytes.compareTo(expected[i].getFamily(),result.get(i).getFamily()));
      assertEquals(0,Bytes.compareTo(expected[i].getQualifier(),result.get(i).getQualifier()));
    }
  }
  finally {
    HRegion.closeHRegion(this.region);
    this.region=null;
  }
}
