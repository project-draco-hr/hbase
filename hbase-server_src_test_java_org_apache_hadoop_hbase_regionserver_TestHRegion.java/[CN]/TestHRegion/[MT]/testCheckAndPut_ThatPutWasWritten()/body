{
  byte[] row1=Bytes.toBytes("row1");
  byte[] fam1=Bytes.toBytes("fam1");
  byte[] fam2=Bytes.toBytes("fam2");
  byte[] qf1=Bytes.toBytes("qualifier");
  byte[] val1=Bytes.toBytes("value1");
  byte[] val2=Bytes.toBytes("value2");
  byte[][] families={fam1,fam2};
  String method=this.getName();
  this.region=initHRegion(tableName,method,CONF,families);
  try {
    Put put=new Put(row1);
    put.add(fam1,qf1,val1);
    region.put(put);
    long ts=System.currentTimeMillis();
    KeyValue kv=new KeyValue(row1,fam2,qf1,ts,KeyValue.Type.Put,val2);
    put=new Put(row1);
    put.add(kv);
    boolean res=region.checkAndMutate(row1,fam1,qf1,CompareOp.EQUAL,new BinaryComparator(val1),put,true);
    assertEquals(true,res);
    Get get=new Get(row1);
    get.addColumn(fam2,qf1);
    Cell[] actual=region.get(get).rawCells();
    Cell[] expected={kv};
    assertEquals(expected.length,actual.length);
    for (int i=0; i < actual.length; i++) {
      assertEquals(expected[i],actual[i]);
    }
  }
  finally {
    HRegion.closeHRegion(this.region);
    this.region=null;
  }
}
