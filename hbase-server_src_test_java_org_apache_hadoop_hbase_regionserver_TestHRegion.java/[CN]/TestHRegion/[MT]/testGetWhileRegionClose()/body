{
  Configuration hc=initSplit();
  int numRows=100;
  byte[][] families={fam1,fam2,fam3};
  String method=this.getName();
  this.region=initHRegion(tableName,method,hc,families);
  try {
    final int startRow=100;
    putData(startRow,numRows,qual1,families);
    putData(startRow,numRows,qual2,families);
    putData(startRow,numRows,qual3,families);
    final AtomicBoolean done=new AtomicBoolean(false);
    final AtomicInteger gets=new AtomicInteger(0);
    GetTillDoneOrException[] threads=new GetTillDoneOrException[10];
    try {
      for (int i=0; i < threads.length / 2; i++) {
        threads[i]=new GetTillDoneOrException(i,Bytes.toBytes("" + startRow),done,gets);
        threads[i].setDaemon(true);
        threads[i].start();
      }
      this.region.closing.set(true);
      for (int i=threads.length / 2; i < threads.length; i++) {
        threads[i]=new GetTillDoneOrException(i,Bytes.toBytes("" + startRow),done,gets);
        threads[i].setDaemon(true);
        threads[i].start();
      }
    }
  finally {
      if (this.region != null) {
        HRegion.closeHRegion(this.region);
      }
    }
    done.set(true);
    for (    GetTillDoneOrException t : threads) {
      try {
        t.join();
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
      if (t.e != null) {
        LOG.info("Exception=" + t.e);
        assertFalse("Found a NPE in " + t.getName(),t.e instanceof NullPointerException);
      }
    }
  }
  finally {
    HRegion.closeHRegion(this.region);
    this.region=null;
  }
}
