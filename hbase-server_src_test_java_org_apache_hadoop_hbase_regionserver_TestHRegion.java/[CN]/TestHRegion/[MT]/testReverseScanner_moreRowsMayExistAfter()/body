{
  byte[] rowA=Bytes.toBytes("rowA");
  byte[] rowB=Bytes.toBytes("rowB");
  byte[] rowC=Bytes.toBytes("rowC");
  byte[] rowD=Bytes.toBytes("rowD");
  byte[] rowE=Bytes.toBytes("rowE");
  byte[] cf=Bytes.toBytes("CF");
  byte[][] families={cf};
  byte[] col1=Bytes.toBytes("col1");
  byte[] col2=Bytes.toBytes("col2");
  long ts=1;
  String method=this.getName();
  this.region=initHRegion(tableName,method,families);
  try {
    KeyValue kv1=new KeyValue(rowA,cf,col1,ts,KeyValue.Type.Put,null);
    KeyValue kv2=new KeyValue(rowB,cf,col1,ts,KeyValue.Type.Put,null);
    KeyValue kv3=new KeyValue(rowC,cf,col1,ts,KeyValue.Type.Put,null);
    KeyValue kv4_1=new KeyValue(rowD,cf,col1,ts,KeyValue.Type.Put,null);
    KeyValue kv4_2=new KeyValue(rowD,cf,col2,ts,KeyValue.Type.Put,null);
    KeyValue kv5=new KeyValue(rowE,cf,col1,ts,KeyValue.Type.Put,null);
    Put put=null;
    put=new Put(rowA);
    put.add(kv1);
    region.put(put);
    put=new Put(rowB);
    put.add(kv2);
    region.put(put);
    put=new Put(rowC);
    put.add(kv3);
    region.put(put);
    put=new Put(rowD);
    put.add(kv4_1);
    region.put(put);
    put=new Put(rowD);
    put.add(kv4_2);
    region.put(put);
    put=new Put(rowE);
    put.add(kv5);
    region.put(put);
    region.flushcache();
    Scan scan=new Scan(rowD,rowA);
    scan.addColumn(families[0],col1);
    scan.setReversed(true);
    List<Cell> currRow=new ArrayList<Cell>();
    InternalScanner scanner=region.getScanner(scan);
    boolean hasNext=scanner.next(currRow);
    assertEquals(1,currRow.size());
    assertTrue(Bytes.equals(currRow.get(0).getRow(),rowD));
    assertTrue(hasNext);
    currRow.clear();
    hasNext=scanner.next(currRow);
    assertEquals(1,currRow.size());
    assertTrue(Bytes.equals(currRow.get(0).getRow(),rowC));
    assertTrue(hasNext);
    currRow.clear();
    hasNext=scanner.next(currRow);
    assertEquals(1,currRow.size());
    assertTrue(Bytes.equals(currRow.get(0).getRow(),rowB));
    assertFalse(hasNext);
    scanner.close();
    scan=new Scan(rowD,rowA);
    scan.addColumn(families[0],col2);
    scan.setReversed(true);
    currRow.clear();
    scanner=region.getScanner(scan);
    hasNext=scanner.next(currRow);
    assertEquals(1,currRow.size());
    assertTrue(Bytes.equals(currRow.get(0).getRow(),rowD));
    scanner.close();
  }
  finally {
    HRegion.closeHRegion(this.region);
    this.region=null;
  }
}
