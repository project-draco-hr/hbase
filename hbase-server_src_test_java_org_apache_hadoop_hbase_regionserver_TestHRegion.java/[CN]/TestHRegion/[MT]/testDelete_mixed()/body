{
  byte[] fam=Bytes.toBytes("info");
  byte[][] families={fam};
  String method=this.getName();
  this.region=initHRegion(tableName,method,CONF,families);
  try {
    EnvironmentEdgeManagerTestHelper.injectEdge(new IncrementingEnvironmentEdge());
    byte[] row=Bytes.toBytes("table_name");
    byte[] serverinfo=Bytes.toBytes("serverinfo");
    byte[] splitA=Bytes.toBytes("splitA");
    byte[] splitB=Bytes.toBytes("splitB");
    Put put=new Put(row);
    put.addColumn(fam,splitA,Bytes.toBytes("reference_A"));
    region.put(put);
    put=new Put(row);
    put.addColumn(fam,splitB,Bytes.toBytes("reference_B"));
    region.put(put);
    put=new Put(row);
    put.addColumn(fam,serverinfo,Bytes.toBytes("ip_address"));
    region.put(put);
    Delete delete=new Delete(row);
    delete.deleteColumns(fam,splitA);
    region.delete(delete);
    Get get=new Get(row).addColumn(fam,serverinfo);
    Result result=region.get(get);
    assertEquals(1,result.size());
    get=new Get(row).addColumn(fam,splitA);
    result=region.get(get);
    assertEquals(0,result.size());
    get=new Get(row).addColumn(fam,splitB);
    result=region.get(get);
    assertEquals(1,result.size());
    put=new Put(row);
    put.addColumn(fam,splitA,Bytes.toBytes("reference_A"));
    region.put(put);
    get=new Get(row);
    result=region.get(get);
    assertEquals(3,result.size());
    delete=new Delete(row);
    region.delete(delete);
    assertEquals(0,region.get(get).size());
    region.put(new Put(row).addColumn(fam,splitA,Bytes.toBytes("reference_A")));
    result=region.get(get);
    assertEquals(1,result.size());
  }
  finally {
    HBaseTestingUtility.closeRegionAndWAL(this.region);
    this.region=null;
  }
}
