{
  int numUnique=uniqueValues.size();
  if (numUnique == 1) {
    min=CollectionUtils.getFirst(uniqueValues);
    sortedUniqueValues=new long[]{min};
    return this;
  }
  sortedUniqueValues=new long[numUnique];
  int lastIndex=-1;
  for (  long value : uniqueValues) {
    sortedUniqueValues[++lastIndex]=value;
  }
  Arrays.sort(sortedUniqueValues);
  min=ArrayUtils.getFirst(sortedUniqueValues);
  max=ArrayUtils.getLast(sortedUniqueValues);
  maxDelta=max - min;
  if (maxDelta > 0) {
    bytesPerDelta=UFIntTool.numBytes(maxDelta);
  }
 else {
    bytesPerDelta=0;
  }
  int maxIndex=numUnique - 1;
  bytesPerIndex=UFIntTool.numBytes(maxIndex);
  totalCompressedBytes=numUnique * bytesPerDelta;
  return this;
}
