{
  int thisOffset=0;
  Iterator<LeafByteString> thisIter=new PieceIterator(this);
  LeafByteString thisString=thisIter.next();
  int thatOffset=0;
  Iterator<LeafByteString> thatIter=new PieceIterator(other);
  LeafByteString thatString=thatIter.next();
  int pos=0;
  while (true) {
    int thisRemaining=thisString.size() - thisOffset;
    int thatRemaining=thatString.size() - thatOffset;
    int bytesToCompare=Math.min(thisRemaining,thatRemaining);
    boolean stillEqual=(thisOffset == 0) ? thisString.equalsRange(thatString,thatOffset,bytesToCompare) : thatString.equalsRange(thisString,thisOffset,bytesToCompare);
    if (!stillEqual) {
      return false;
    }
    pos+=bytesToCompare;
    if (pos >= totalLength) {
      if (pos == totalLength) {
        return true;
      }
      throw new IllegalStateException();
    }
    if (bytesToCompare == thisRemaining) {
      thisOffset=0;
      thisString=thisIter.next();
    }
 else {
      thisOffset+=bytesToCompare;
    }
    if (bytesToCompare == thatRemaining) {
      thatOffset=0;
      thatString=thatIter.next();
    }
 else {
      thatOffset+=bytesToCompare;
    }
  }
}
