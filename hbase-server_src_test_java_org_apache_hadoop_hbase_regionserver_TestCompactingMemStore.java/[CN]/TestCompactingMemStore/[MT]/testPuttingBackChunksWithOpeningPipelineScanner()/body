{
  byte[] row=Bytes.toBytes("testrow");
  byte[] fam=Bytes.toBytes("testfamily");
  byte[] qf1=Bytes.toBytes("testqualifier1");
  byte[] qf2=Bytes.toBytes("testqualifier2");
  byte[] qf3=Bytes.toBytes("testqualifier3");
  byte[] val=Bytes.toBytes("testval");
  memstore.add(new KeyValue(row,fam,qf1,1,val));
  memstore.add(new KeyValue(row,fam,qf2,1,val));
  memstore.add(new KeyValue(row,fam,qf3,1,val));
  ((CompactingMemStore)memstore).disableCompaction();
  ((CompactingMemStore)memstore).flushInMemory();
  assertEquals(0,memstore.getActive().getCellsCount());
  memstore.add(new KeyValue(row,fam,qf1,2,val));
  memstore.add(new KeyValue(row,fam,qf2,2,val));
  assertEquals(2,memstore.getActive().getCellsCount());
  ((CompactingMemStore)memstore).flushInMemory();
  List<KeyValueScanner> scanners=memstore.getScanners(0);
  ((CompactingMemStore)memstore).enableCompaction();
  ((CompactingMemStore)memstore).flushInMemory();
  assertEquals(0,memstore.getActive().getCellsCount());
  memstore.add(new KeyValue(row,fam,qf3,3,val));
  memstore.add(new KeyValue(row,fam,qf2,3,val));
  memstore.add(new KeyValue(row,fam,qf1,3,val));
  assertEquals(3,memstore.getActive().getCellsCount());
  assertTrue(chunkPool.getPoolSize() == 0);
  for (  KeyValueScanner scanner : scanners) {
    scanner.close();
  }
  assertTrue(chunkPool.getPoolSize() > 0);
  chunkPool.clearChunks();
  MemStoreSnapshot snapshot=memstore.snapshot();
  memstore.clearSnapshot(snapshot.getId());
  snapshot=memstore.snapshot();
  memstore.add(new KeyValue(row,fam,qf2,4,val));
  memstore.add(new KeyValue(row,fam,qf3,4,val));
  scanners=memstore.getScanners(0);
  for (  KeyValueScanner scanner : scanners) {
    scanner.close();
  }
  memstore.clearSnapshot(snapshot.getId());
  assertTrue(chunkPool.getPoolSize() > 0);
}
