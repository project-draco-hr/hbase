{
  MapWritable appendValue=new MapWritable();
  String joinKey=null;
  this.secondRelation=secondRelation;
  if (numCols > 0) {
    for (    Map.Entry<Writable,Writable> e : value.entrySet()) {
      Text column=(Text)e.getKey();
      for (int i=0; i < numCols; i++) {
        if (column.equals(new Text(joinKeyColumn))) {
          joinKey=new String(((ImmutableBytesWritable)e.getValue()).get());
          break;
        }
      }
    }
  }
  if (joinKey == null) {
{
      if (true)       return appendValue;
    }
  }
  try {
    HTable table=new HTable(conf,new Text(secondRelation));
    secondValue=table.getRow(new Text(joinKey));
    for (    Map.Entry<Text,byte[]> e : secondValue.entrySet()) {
      appendValue.put(e.getKey(),new ImmutableBytesWritable(e.getValue()));
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
{
    if (true)     return appendValue;
  }
  throw new Error("Missing return statement in function");
}
