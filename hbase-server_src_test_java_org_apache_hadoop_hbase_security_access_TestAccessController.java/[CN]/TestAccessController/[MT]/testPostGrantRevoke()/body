{
  final TableName tableName=TableName.valueOf("TempTable");
  final byte[] family1=Bytes.toBytes("f1");
  final byte[] family2=Bytes.toBytes("f2");
  final byte[] qualifier=Bytes.toBytes("q");
  Admin admin=TEST_UTIL.getHBaseAdmin();
  if (admin.tableExists(tableName)) {
    admin.disableTable(tableName);
    admin.deleteTable(tableName);
  }
  HTableDescriptor htd=new HTableDescriptor(tableName);
  htd.addFamily(new HColumnDescriptor(family1));
  htd.addFamily(new HColumnDescriptor(family2));
  admin.createTable(htd);
  TEST_UTIL.waitUntilAllRegionsAssigned(tableName);
  User tblUser=User.createUserForTesting(TEST_UTIL.getConfiguration(),"tbluser",new String[0]);
  User gblUser=User.createUserForTesting(TEST_UTIL.getConfiguration(),"gbluser",new String[0]);
  AccessTestAction putActionAll=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Put p=new Put(Bytes.toBytes("a"));
      p.add(family1,qualifier,Bytes.toBytes("v1"));
      p.add(family2,qualifier,Bytes.toBytes("v2"));
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  AccessTestAction putAction1=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Put p=new Put(Bytes.toBytes("a"));
      p.add(family1,qualifier,Bytes.toBytes("v1"));
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  AccessTestAction putAction2=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Put p=new Put(Bytes.toBytes("a"));
      p.add(family2,qualifier,Bytes.toBytes("v2"));
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  AccessTestAction getActionAll=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get g=new Get(TEST_ROW);
      g.addFamily(family1);
      g.addFamily(family2);
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.get(g);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  AccessTestAction getAction1=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get g=new Get(TEST_ROW);
      g.addFamily(family1);
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.get(g);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  AccessTestAction getAction2=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get g=new Get(TEST_ROW);
      g.addFamily(family2);
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.get(g);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  AccessTestAction deleteActionAll=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Delete d=new Delete(TEST_ROW);
      d.deleteFamily(family1);
      d.deleteFamily(family2);
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.delete(d);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  AccessTestAction deleteAction1=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Delete d=new Delete(TEST_ROW);
      d.deleteFamily(family1);
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.delete(d);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  AccessTestAction deleteAction2=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Delete d=new Delete(TEST_ROW);
      d.deleteFamily(family2);
      Table t=TEST_UTIL.getConnection().getTable(tableName);
      try {
        t.delete(d);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  verifyDenied(tblUser,getActionAll,getAction1,getAction2);
  verifyDenied(tblUser,putActionAll,putAction1,putAction2);
  verifyDenied(tblUser,deleteActionAll,deleteAction1,deleteAction2);
  verifyDenied(gblUser,getActionAll,getAction1,getAction2);
  verifyDenied(gblUser,putActionAll,putAction1,putAction2);
  verifyDenied(gblUser,deleteActionAll,deleteAction1,deleteAction2);
  grantGlobal(TEST_UTIL,gblUser.getShortName(),Permission.Action.READ);
  grantOnTable(TEST_UTIL,tblUser.getShortName(),tableName,null,null,Permission.Action.READ);
  verifyAllowed(tblUser,getActionAll,getAction1,getAction2);
  verifyDenied(tblUser,putActionAll,putAction1,putAction2);
  verifyDenied(tblUser,deleteActionAll,deleteAction1,deleteAction2);
  verifyAllowed(gblUser,getActionAll,getAction1,getAction2);
  verifyDenied(gblUser,putActionAll,putAction1,putAction2);
  verifyDenied(gblUser,deleteActionAll,deleteAction1,deleteAction2);
  grantGlobal(TEST_UTIL,gblUser.getShortName(),Permission.Action.WRITE);
  grantOnTable(TEST_UTIL,tblUser.getShortName(),tableName,null,null,Permission.Action.WRITE);
  verifyDenied(tblUser,getActionAll,getAction1,getAction2);
  verifyAllowed(tblUser,putActionAll,putAction1,putAction2);
  verifyAllowed(tblUser,deleteActionAll,deleteAction1,deleteAction2);
  verifyDenied(gblUser,getActionAll,getAction1,getAction2);
  verifyAllowed(gblUser,putActionAll,putAction1,putAction2);
  verifyAllowed(gblUser,deleteActionAll,deleteAction1,deleteAction2);
  revokeGlobal(TEST_UTIL,gblUser.getShortName());
  revokeFromTable(TEST_UTIL,tblUser.getShortName(),tableName,null,null);
  verifyDenied(tblUser,getActionAll,getAction1,getAction2);
  verifyDenied(tblUser,putActionAll,putAction1,putAction2);
  verifyDenied(tblUser,deleteActionAll,deleteAction1,deleteAction2);
  verifyDenied(gblUser,getActionAll,getAction1,getAction2);
  verifyDenied(gblUser,putActionAll,putAction1,putAction2);
  verifyDenied(gblUser,deleteActionAll,deleteAction1,deleteAction2);
  grantGlobal(TEST_UTIL,gblUser.getShortName(),Permission.Action.READ);
  grantOnTable(TEST_UTIL,tblUser.getShortName(),tableName,family1,null,Permission.Action.READ);
  verifyAllowed(tblUser,getActionAll,getAction1);
  verifyDenied(tblUser,getAction2);
  verifyDenied(tblUser,putActionAll,putAction1,putAction2);
  verifyDenied(tblUser,deleteActionAll,deleteAction1,deleteAction2);
  verifyAllowed(gblUser,getActionAll,getAction1,getAction2);
  verifyDenied(gblUser,putActionAll,putAction1,putAction2);
  verifyDenied(gblUser,deleteActionAll,deleteAction1,deleteAction2);
  grantGlobal(TEST_UTIL,gblUser.getShortName(),Permission.Action.WRITE);
  grantOnTable(TEST_UTIL,tblUser.getShortName(),tableName,family2,null,Permission.Action.WRITE);
  verifyAllowed(tblUser,getActionAll,getAction1);
  verifyAllowed(tblUser,putAction2,deleteAction2);
  verifyDenied(tblUser,getAction2);
  verifyDenied(tblUser,putActionAll,putAction1);
  verifyDenied(tblUser,deleteActionAll,deleteAction1);
  verifyDenied(gblUser,getActionAll,getAction1,getAction2);
  verifyAllowed(gblUser,putActionAll,putAction1,putAction2);
  verifyAllowed(gblUser,deleteActionAll,deleteAction1,deleteAction2);
  revokeGlobal(TEST_UTIL,gblUser.getShortName());
  revokeFromTable(TEST_UTIL,tblUser.getShortName(),tableName,family2,null);
  verifyAllowed(tblUser,getActionAll,getAction1);
  verifyDenied(tblUser,getAction2);
  verifyDenied(tblUser,putActionAll,putAction1,putAction2);
  verifyDenied(tblUser,deleteActionAll,deleteAction1,deleteAction2);
  verifyDenied(gblUser,getActionAll,getAction1,getAction2);
  verifyDenied(gblUser,putActionAll,putAction1,putAction2);
  verifyDenied(gblUser,deleteActionAll,deleteAction1,deleteAction2);
  admin.disableTable(tableName);
  admin.deleteTable(tableName);
}
