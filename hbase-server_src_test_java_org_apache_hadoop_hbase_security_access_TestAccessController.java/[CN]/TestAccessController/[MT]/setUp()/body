{
  HBaseAdmin admin=TEST_UTIL.getHBaseAdmin();
  HTableDescriptor htd=new HTableDescriptor(TEST_TABLE.getTableName());
  htd.addFamily(new HColumnDescriptor(TEST_FAMILY));
  htd.setOwner(USER_OWNER);
  admin.createTable(htd);
  TEST_UTIL.waitTableEnabled(TEST_TABLE.getTableName().getName());
  HRegion region=TEST_UTIL.getHBaseCluster().getRegions(TEST_TABLE.getTableName()).get(0);
  RegionCoprocessorHost rcpHost=region.getCoprocessorHost();
  RCP_ENV=rcpHost.createEnvironment(AccessController.class,ACCESS_CONTROLLER,Coprocessor.PRIORITY_HIGHEST,1,conf);
  HTable acl=new HTable(conf,AccessControlLists.ACL_TABLE_NAME);
  try {
    BlockingRpcChannel service=acl.coprocessorService(TEST_TABLE.getTableName().getName());
    AccessControlService.BlockingInterface protocol=AccessControlService.newBlockingStub(service);
    protocol.grant(null,RequestConverter.buildGrantRequest(USER_ADMIN.getShortName(),AccessControlProtos.Permission.Action.ADMIN,AccessControlProtos.Permission.Action.CREATE,AccessControlProtos.Permission.Action.READ,AccessControlProtos.Permission.Action.WRITE));
    protocol.grant(null,RequestConverter.buildGrantRequest(USER_RW.getShortName(),TEST_TABLE.getTableName(),TEST_FAMILY,null,AccessControlProtos.Permission.Action.READ,AccessControlProtos.Permission.Action.WRITE));
    protocol.grant(null,RequestConverter.buildGrantRequest(USER_CREATE.getShortName(),TEST_TABLE.getTableName(),null,null,AccessControlProtos.Permission.Action.CREATE,AccessControlProtos.Permission.Action.READ,AccessControlProtos.Permission.Action.WRITE));
    protocol.grant(null,RequestConverter.buildGrantRequest(USER_RO.getShortName(),TEST_TABLE.getTableName(),TEST_FAMILY,null,AccessControlProtos.Permission.Action.READ));
    assertEquals(4,AccessControlLists.getTablePermissions(conf,TEST_TABLE.getTableName()).size());
  }
  finally {
    acl.close();
  }
}
