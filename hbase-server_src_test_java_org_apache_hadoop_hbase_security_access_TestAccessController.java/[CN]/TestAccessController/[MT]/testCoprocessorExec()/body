{
  for (  JVMClusterUtil.RegionServerThread thread : TEST_UTIL.getMiniHBaseCluster().getRegionServerThreads()) {
    HRegionServer rs=thread.getRegionServer();
    for (    Region region : rs.getOnlineRegions(TEST_TABLE)) {
      region.getCoprocessorHost().load(PingCoprocessor.class,Coprocessor.PRIORITY_USER,conf);
    }
  }
  User userA=User.createUserForTesting(conf,"UserA",new String[0]);
  User userB=User.createUserForTesting(conf,"UserB",new String[0]);
  grantOnTable(TEST_UTIL,userA.getShortName(),TEST_TABLE,null,null,Permission.Action.EXEC);
  try {
    AccessTestAction execEndpointAction=new AccessTestAction(){
      @Override public Object run() throws Exception {
        try (Connection conn=ConnectionFactory.createConnection(conf);Table t=conn.getTable(TEST_TABLE)){
          BlockingRpcChannel service=t.coprocessorService(HConstants.EMPTY_BYTE_ARRAY);
          PingCoprocessor.newBlockingStub(service).noop(null,NoopRequest.newBuilder().build());
        }
         return null;
      }
    }
;
    String namespace=TEST_TABLE.getNamespaceAsString();
    grantOnNamespace(TEST_UTIL,userB.getShortName(),namespace,Permission.Action.EXEC);
    verifyAllowed(execEndpointAction,userA,userB);
    revokeFromNamespace(TEST_UTIL,userB.getShortName(),namespace,Permission.Action.EXEC);
    verifyDenied(execEndpointAction,userB);
    verifyAllowed(execEndpointAction,userA);
  }
  finally {
    revokeFromTable(TEST_UTIL,userA.getShortName(),TEST_TABLE,null,null,Permission.Action.EXEC);
  }
}
