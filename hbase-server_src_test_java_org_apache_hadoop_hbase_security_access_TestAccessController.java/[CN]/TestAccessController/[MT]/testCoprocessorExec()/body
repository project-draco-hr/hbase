{
  for (  JVMClusterUtil.RegionServerThread thread : TEST_UTIL.getMiniHBaseCluster().getRegionServerThreads()) {
    HRegionServer rs=thread.getRegionServer();
    for (    HRegion region : rs.getOnlineRegions(TEST_TABLE.getTableName())) {
      region.getCoprocessorHost().load(PingCoprocessor.class,Coprocessor.PRIORITY_USER,conf);
    }
  }
  User userA=User.createUserForTesting(conf,"UserA",new String[0]);
  User userB=User.createUserForTesting(conf,"UserB",new String[0]);
  SecureTestUtil.grantOnTable(TEST_UTIL,userA.getShortName(),TEST_TABLE.getTableName(),null,null,Permission.Action.EXEC);
  AccessTestAction execEndpointAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        BlockingRpcChannel service=t.coprocessorService(HConstants.EMPTY_BYTE_ARRAY);
        PingCoprocessor.newBlockingStub(service).noop(null,NoopRequest.newBuilder().build());
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  verifyDenied(execEndpointAction,userB);
  verifyAllowed(execEndpointAction,userA);
  SecureTestUtil.grantOnNamespace(TEST_UTIL,userB.getShortName(),TEST_TABLE.getTableName().getNamespaceAsString(),Permission.Action.EXEC);
  verifyAllowed(execEndpointAction,userA,userB);
}
