{
  AccessTestAction grantAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection conn=ConnectionFactory.createConnection(conf);Table acl=conn.getTable(AccessControlLists.ACL_TABLE_NAME)){
        BlockingRpcChannel service=acl.coprocessorService(TEST_TABLE.getName());
        AccessControlService.BlockingInterface protocol=AccessControlService.newBlockingStub(service);
        ProtobufUtil.grant(protocol,USER_RO.getShortName(),TEST_TABLE,TEST_FAMILY,null,Action.READ);
      }
       return null;
    }
  }
;
  AccessTestAction revokeAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection conn=ConnectionFactory.createConnection(conf);Table acl=conn.getTable(AccessControlLists.ACL_TABLE_NAME)){
        BlockingRpcChannel service=acl.coprocessorService(TEST_TABLE.getName());
        AccessControlService.BlockingInterface protocol=AccessControlService.newBlockingStub(service);
        ProtobufUtil.revoke(protocol,USER_RO.getShortName(),TEST_TABLE,TEST_FAMILY,null,Action.READ);
      }
       return null;
    }
  }
;
  AccessTestAction getTablePermissionsAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection conn=ConnectionFactory.createConnection(conf);Table acl=conn.getTable(AccessControlLists.ACL_TABLE_NAME)){
        BlockingRpcChannel service=acl.coprocessorService(TEST_TABLE.getName());
        AccessControlService.BlockingInterface protocol=AccessControlService.newBlockingStub(service);
        ProtobufUtil.getUserPermissions(protocol,TEST_TABLE);
      }
       return null;
    }
  }
;
  AccessTestAction getGlobalPermissionsAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection conn=ConnectionFactory.createConnection(conf);Table acl=conn.getTable(AccessControlLists.ACL_TABLE_NAME)){
        BlockingRpcChannel service=acl.coprocessorService(HConstants.EMPTY_START_ROW);
        AccessControlService.BlockingInterface protocol=AccessControlService.newBlockingStub(service);
        ProtobufUtil.getUserPermissions(protocol);
      }
       return null;
    }
  }
;
  verifyAllowed(grantAction,SUPERUSER,USER_ADMIN,USER_OWNER,USER_GROUP_ADMIN);
  verifyDenied(grantAction,USER_CREATE,USER_RW,USER_RO,USER_NONE,USER_GROUP_READ,USER_GROUP_WRITE,USER_GROUP_CREATE);
  try {
    verifyAllowed(revokeAction,SUPERUSER,USER_ADMIN,USER_OWNER,USER_GROUP_ADMIN);
    verifyDenied(revokeAction,USER_CREATE,USER_RW,USER_RO,USER_NONE,USER_GROUP_READ,USER_GROUP_WRITE,USER_GROUP_CREATE);
    verifyAllowed(getTablePermissionsAction,SUPERUSER,USER_ADMIN,USER_OWNER,USER_GROUP_ADMIN);
    verifyDenied(getTablePermissionsAction,USER_CREATE,USER_RW,USER_RO,USER_NONE,USER_GROUP_READ,USER_GROUP_WRITE,USER_GROUP_CREATE);
    verifyAllowed(getGlobalPermissionsAction,SUPERUSER,USER_ADMIN,USER_GROUP_ADMIN);
    verifyDenied(getGlobalPermissionsAction,USER_CREATE,USER_OWNER,USER_RW,USER_RO,USER_NONE,USER_GROUP_READ,USER_GROUP_WRITE,USER_GROUP_CREATE);
  }
  finally {
    grantOnTable(TEST_UTIL,USER_RO.getShortName(),TEST_TABLE,TEST_FAMILY,null,Permission.Action.READ);
  }
}
