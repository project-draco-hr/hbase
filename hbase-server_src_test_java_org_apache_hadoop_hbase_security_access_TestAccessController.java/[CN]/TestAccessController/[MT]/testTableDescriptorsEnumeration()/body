{
  User TABLE_ADMIN=User.createUserForTesting(conf,"UserA",new String[0]);
  grantOnTable(TEST_UTIL,TABLE_ADMIN.getShortName(),TEST_TABLE,null,null,Permission.Action.ADMIN);
  try {
    AccessTestAction listTablesAction=new AccessTestAction(){
      @Override public Object run() throws Exception {
        try (Connection conn=ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());Admin admin=conn.getAdmin()){
          return Arrays.asList(admin.listTables());
        }
       }
    }
;
    AccessTestAction getTableDescAction=new AccessTestAction(){
      @Override public Object run() throws Exception {
        try (Connection conn=ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());Admin admin=conn.getAdmin()){
          return admin.getTableDescriptor(TEST_TABLE);
        }
       }
    }
;
    verifyAllowed(listTablesAction,SUPERUSER,USER_ADMIN,USER_CREATE,USER_OWNER,TABLE_ADMIN);
    verifyIfEmptyList(listTablesAction,USER_RW,USER_RO,USER_NONE);
    verifyAllowed(getTableDescAction,SUPERUSER,USER_ADMIN,USER_CREATE,USER_OWNER,TABLE_ADMIN);
    verifyDenied(getTableDescAction,USER_RW,USER_RO,USER_NONE);
  }
  finally {
    revokeFromTable(TEST_UTIL,TABLE_ADMIN.getShortName(),TEST_TABLE,null,null,Permission.Action.ADMIN);
  }
}
