{
  conf=TEST_UTIL.getConfiguration();
  SecureTestUtil.enableSecurity(conf);
  TEST_UTIL.startMiniCluster();
  MasterCoprocessorHost cpHost=TEST_UTIL.getMiniHBaseCluster().getMaster().getCoprocessorHost();
  cpHost.load(AccessController.class,Coprocessor.PRIORITY_HIGHEST,conf);
  ACCESS_CONTROLLER=(AccessController)cpHost.findCoprocessor(AccessController.class.getName());
  CP_ENV=cpHost.createEnvironment(AccessController.class,ACCESS_CONTROLLER,Coprocessor.PRIORITY_HIGHEST,1,conf);
  TEST_UTIL.waitTableAvailable(AccessControlLists.ACL_TABLE_NAME,5000);
  SUPERUSER=User.createUserForTesting(conf,"admin",new String[]{"supergroup"});
  USER_ADMIN=User.createUserForTesting(conf,"admin2",new String[0]);
  USER_RW=User.createUserForTesting(conf,"rwuser",new String[0]);
  USER_RO=User.createUserForTesting(conf,"rouser",new String[0]);
  USER_OWNER=User.createUserForTesting(conf,"owner",new String[0]);
  USER_CREATE=User.createUserForTesting(conf,"tbl_create",new String[0]);
  USER_NONE=User.createUserForTesting(conf,"nouser",new String[0]);
  HBaseAdmin admin=TEST_UTIL.getHBaseAdmin();
  HTableDescriptor htd=new HTableDescriptor(TEST_TABLE);
  htd.addFamily(new HColumnDescriptor(TEST_FAMILY));
  htd.setOwner(USER_OWNER);
  admin.createTable(htd);
  HTable meta=new HTable(conf,AccessControlLists.ACL_TABLE_NAME);
  AccessControllerProtocol protocol=meta.coprocessorProxy(AccessControllerProtocol.class,TEST_TABLE);
  HRegion region=TEST_UTIL.getHBaseCluster().getRegions(TEST_TABLE).get(0);
  RegionCoprocessorHost rcpHost=region.getCoprocessorHost();
  RCP_ENV=rcpHost.createEnvironment(AccessController.class,ACCESS_CONTROLLER,Coprocessor.PRIORITY_HIGHEST,1,conf);
  protocol.grant(new UserPermission(Bytes.toBytes(USER_ADMIN.getShortName()),Permission.Action.ADMIN,Permission.Action.CREATE,Permission.Action.READ,Permission.Action.WRITE));
  protocol.grant(new UserPermission(Bytes.toBytes(USER_RW.getShortName()),TEST_TABLE,TEST_FAMILY,Permission.Action.READ,Permission.Action.WRITE));
  protocol.grant(new UserPermission(Bytes.toBytes(USER_RO.getShortName()),TEST_TABLE,TEST_FAMILY,Permission.Action.READ));
  protocol.grant(new UserPermission(Bytes.toBytes(USER_CREATE.getShortName()),TEST_TABLE,null,Permission.Action.CREATE));
}
