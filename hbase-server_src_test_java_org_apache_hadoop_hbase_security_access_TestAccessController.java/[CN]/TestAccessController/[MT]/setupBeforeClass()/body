{
  conf=TEST_UTIL.getConfiguration();
  conf.set("hbase.master.hfilecleaner.plugins","org.apache.hadoop.hbase.master.cleaner.HFileLinkCleaner," + "org.apache.hadoop.hbase.master.snapshot.SnapshotHFileCleaner");
  conf.set("hbase.master.logcleaner.plugins","org.apache.hadoop.hbase.master.snapshot.SnapshotLogCleaner");
  enableSecurity(conf);
  conf.set(CoprocessorHost.REGION_COPROCESSOR_CONF_KEY,AccessController.class.getName());
  verifyConfiguration(conf);
  conf.setBoolean(AccessControlConstants.EXEC_PERMISSION_CHECKS_KEY,true);
  TEST_UTIL.startMiniCluster();
  MasterCoprocessorHost cpHost=TEST_UTIL.getMiniHBaseCluster().getMaster().getMasterCoprocessorHost();
  cpHost.load(AccessController.class,Coprocessor.PRIORITY_HIGHEST,conf);
  ACCESS_CONTROLLER=(AccessController)cpHost.findCoprocessor(AccessController.class.getName());
  CP_ENV=cpHost.createEnvironment(AccessController.class,ACCESS_CONTROLLER,Coprocessor.PRIORITY_HIGHEST,1,conf);
  RegionServerCoprocessorHost rsHost=TEST_UTIL.getMiniHBaseCluster().getRegionServer(0).getRegionServerCoprocessorHost();
  RSCP_ENV=rsHost.createEnvironment(AccessController.class,ACCESS_CONTROLLER,Coprocessor.PRIORITY_HIGHEST,1,conf);
  TEST_UTIL.waitTableEnabled(AccessControlLists.ACL_TABLE_NAME.getName());
  SUPERUSER=User.createUserForTesting(conf,"admin",new String[]{"supergroup"});
  USER_ADMIN=User.createUserForTesting(conf,"admin2",new String[0]);
  USER_RW=User.createUserForTesting(conf,"rwuser",new String[0]);
  USER_RO=User.createUserForTesting(conf,"rouser",new String[0]);
  USER_OWNER=User.createUserForTesting(conf,"owner",new String[0]);
  USER_CREATE=User.createUserForTesting(conf,"tbl_create",new String[0]);
  USER_NONE=User.createUserForTesting(conf,"nouser",new String[0]);
}
