{
  byte[] fam=Bytes.equals(table,TABLE_NAME1) ? FAM_NAME1 : FAM_NAME2;
  byte[] rowBytes=Bytes.toBytes(row);
  try {
    Thread.sleep(1);
  }
 catch (  InterruptedException e) {
    LOG.info("Was interrupted while sleep, meh",e);
  }
  final long now=System.currentTimeMillis();
  KeyValue kv=null;
  if (type.getCode() == KeyValue.Type.Put.getCode()) {
    kv=new KeyValue(rowBytes,fam,fam,now,KeyValue.Type.Put,Bytes.toBytes(row));
  }
 else   if (type.getCode() == KeyValue.Type.DeleteColumn.getCode()) {
    kv=new KeyValue(rowBytes,fam,fam,now,KeyValue.Type.DeleteColumn);
  }
 else   if (type.getCode() == KeyValue.Type.DeleteFamily.getCode()) {
    kv=new KeyValue(rowBytes,fam,null,now,KeyValue.Type.DeleteFamily);
  }
  WALEntry.Builder builder=WALEntry.newBuilder();
  builder.setAssociatedCellCount(1);
  WALKey.Builder keyBuilder=WALKey.newBuilder();
  UUID.Builder uuidBuilder=UUID.newBuilder();
  uuidBuilder.setLeastSigBits(HConstants.DEFAULT_CLUSTER_ID.getLeastSignificantBits());
  uuidBuilder.setMostSigBits(HConstants.DEFAULT_CLUSTER_ID.getMostSignificantBits());
  keyBuilder.setClusterId(uuidBuilder.build());
  keyBuilder.setTableName(HBaseZeroCopyByteString.wrap(table));
  keyBuilder.setWriteTime(now);
  keyBuilder.setEncodedRegionName(HBaseZeroCopyByteString.wrap(HConstants.EMPTY_BYTE_ARRAY));
  keyBuilder.setLogSequenceNumber(-1);
  builder.setKey(keyBuilder.build());
  cells.add(kv);
  return builder.build();
}
