{
  Map<byte[],List<StoreFile>> hstoreFilesToMerge=null;
  Exception exceptionToThrow=null;
  try {
    hstoreFilesToMerge=region.close(false);
  }
 catch (  Exception e) {
    exceptionToThrow=e;
  }
  if (exceptionToThrow == null && hstoreFilesToMerge == null) {
    exceptionToThrow=closedByOtherException;
  }
  if (exceptionToThrow != closedByOtherException) {
    this.journal.add(isRegionA ? JournalEntry.CLOSED_REGION_A : JournalEntry.CLOSED_REGION_B);
  }
  if (exceptionToThrow != null) {
    if (exceptionToThrow instanceof IOException)     throw (IOException)exceptionToThrow;
    throw new IOException(exceptionToThrow);
  }
  if (!testing) {
    services.removeFromOnlineRegions(region,null);
  }
  this.journal.add(isRegionA ? JournalEntry.OFFLINED_REGION_A : JournalEntry.OFFLINED_REGION_B);
  return hstoreFilesToMerge;
}
