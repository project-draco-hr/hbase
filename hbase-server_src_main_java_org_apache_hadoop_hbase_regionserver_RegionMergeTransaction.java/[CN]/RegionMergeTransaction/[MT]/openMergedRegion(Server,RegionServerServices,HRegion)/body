{
  boolean stopped=server != null && server.isStopped();
  boolean stopping=services != null && services.isStopping();
  if (stopped || stopping) {
    LOG.info("Not opening merged region  " + merged.getRegionNameAsString() + " because stopping="+ stopping+ ", stopped="+ stopped);
    return;
  }
  HRegionInfo hri=merged.getRegionInfo();
  LoggingProgressable reporter=server == null ? null : new LoggingProgressable(hri,server.getConfiguration().getLong("hbase.regionserver.regionmerge.open.log.interval",10000));
  merged.openHRegion(reporter);
  if (services != null) {
    try {
      if (useCoordinationForAssignment) {
        services.postOpenDeployTasks(merged,server.getCatalogTracker());
      }
 else       if (!services.reportRegionTransition(TransitionCode.MERGED,mergedRegionInfo,region_a.getRegionInfo(),region_b.getRegionInfo())) {
        throw new IOException("Failed to report merged region to master: " + mergedRegionInfo.getShortNameToLog());
      }
      services.addToOnlineRegions(merged);
    }
 catch (    KeeperException ke) {
      throw new IOException(ke);
    }
  }
}
