{
  Configuration conf=TEST_UTIL.getConfiguration();
  conf.set(StoreEngine.STORE_ENGINE_CLASS_KEY,StripeStoreEngine.class.getName());
  conf.setBoolean(StripeStoreConfig.FLUSH_TO_L0_KEY,false);
  conf.setInt(StripeStoreConfig.INITIAL_STRIPE_COUNT_KEY,2);
  conf.setInt(StripeStoreConfig.MIN_FILES_KEY,4);
  conf.setInt(HStore.BLOCKING_STOREFILES_KEY,12);
  TEST_UTIL.startMiniCluster(1);
  Connection conn=ConnectionFactory.createConnection(conf);
  try {
    HTableDescriptor htd=new HTableDescriptor(tableName);
    htd.addFamily(new HColumnDescriptor(family));
    htd.setCompactionEnabled(false);
    TEST_UTIL.getHBaseAdmin().createTable(htd);
    TEST_UTIL.waitTableAvailable(tableName);
    HStore store=(HStore)getStoreWithName(tableName);
    assertEquals(0,store.getStorefilesCount());
    assertEquals(0.0,store.getCompactionPressure(),EPSILON);
    Table table=conn.getTable(tableName);
    for (int i=0; i < 4; i++) {
      byte[] value1=new byte[0];
      table.put(new Put(Bytes.toBytes(i)).addColumn(family,qualifier,value1));
      byte[] value=new byte[0];
      table.put(new Put(Bytes.toBytes(100 + i)).addColumn(family,qualifier,value));
      TEST_UTIL.flush(tableName);
    }
    assertEquals(8,store.getStorefilesCount());
    assertEquals(0.0,store.getCompactionPressure(),EPSILON);
    byte[] value5=new byte[0];
    table.put(new Put(Bytes.toBytes(4)).addColumn(family,qualifier,value5));
    byte[] value4=new byte[0];
    table.put(new Put(Bytes.toBytes(104)).addColumn(family,qualifier,value4));
    TEST_UTIL.flush(tableName);
    assertEquals(10,store.getStorefilesCount());
    assertEquals(0.5,store.getCompactionPressure(),EPSILON);
    byte[] value3=new byte[0];
    table.put(new Put(Bytes.toBytes(5)).addColumn(family,qualifier,value3));
    byte[] value2=new byte[0];
    table.put(new Put(Bytes.toBytes(105)).addColumn(family,qualifier,value2));
    TEST_UTIL.flush(tableName);
    assertEquals(12,store.getStorefilesCount());
    assertEquals(1.0,store.getCompactionPressure(),EPSILON);
    byte[] value1=new byte[0];
    table.put(new Put(Bytes.toBytes(6)).addColumn(family,qualifier,value1));
    byte[] value=new byte[0];
    table.put(new Put(Bytes.toBytes(106)).addColumn(family,qualifier,value));
    TEST_UTIL.flush(tableName);
    assertEquals(14,store.getStorefilesCount());
    assertEquals(2.0,store.getCompactionPressure(),EPSILON);
  }
  finally {
    conn.close();
    TEST_UTIL.shutdownMiniCluster();
  }
}
