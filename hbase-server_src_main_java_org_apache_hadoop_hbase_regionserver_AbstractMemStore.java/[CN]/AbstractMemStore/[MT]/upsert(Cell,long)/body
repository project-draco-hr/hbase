{
  cell=deepCopyIfNeeded(cell);
  long addedSize=internalAdd(cell,false);
  Cell firstCell=CellUtil.createFirstOnRow(cell.getRowArray(),cell.getRowOffset(),cell.getRowLength(),cell.getFamilyArray(),cell.getFamilyOffset(),cell.getFamilyLength(),cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());
  SortedSet<Cell> ss=active.tailSet(firstCell);
  Iterator<Cell> it=ss.iterator();
  int versionsVisible=0;
  while (it.hasNext()) {
    Cell cur=it.next();
    if (cell == cur) {
      continue;
    }
    if (CellUtil.matchingRow(cell,cur) && CellUtil.matchingQualifier(cell,cur)) {
      if (cur.getTypeByte() == KeyValue.Type.Put.getCode() && cur.getSequenceId() <= readpoint) {
        if (versionsVisible >= 1) {
          long delta=heapSizeChange(cur,true);
          addedSize-=delta;
          active.incSize(-delta);
          it.remove();
          setOldestEditTimeToNow();
        }
 else {
          versionsVisible++;
        }
      }
    }
 else {
      break;
    }
  }
  return addedSize;
}
