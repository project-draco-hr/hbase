{
  ServerName sn=ServerName.valueOf("hn",450,1398);
  String hl=FSUtils.getRootDir(conf) + "/" + AbstractFSWALProvider.getWALDirectoryName(sn.toString());
  assertNull(AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,null));
  assertNull(AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,FSUtils.getRootDir(conf).toUri().toString()));
  assertNull(AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,""));
  assertNull(AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,"                  "));
  assertNull(AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,hl));
  assertNull(AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,hl + "qdf"));
  assertNull(AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,"sfqf" + hl + "qdf"));
  final String wals="/WALs/";
  ServerName parsed=AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,FSUtils.getRootDir(conf).toUri().toString() + wals + sn+ "/localhost%2C32984%2C1343316388997.1343316390417");
  assertEquals("standard",sn,parsed);
  parsed=AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,hl + "/qdf");
  assertEquals("subdir",sn,parsed);
  parsed=AbstractFSWALProvider.getServerNameFromWALDirectoryName(conf,FSUtils.getRootDir(conf).toUri().toString() + wals + sn+ "-splitting/localhost%3A57020.1340474893931");
  assertEquals("split",sn,parsed);
}
