{
  return new SaslClientHandler(realTicket,authMethod,token,serverPrincipal,client.fallbackAllowed,client.conf.get("hbase.rpc.protection",SaslUtil.QualityOfProtection.AUTHENTICATION.name().toLowerCase(Locale.ROOT)),getChannelHeaderBytes(authMethod),new SaslClientHandler.SaslExceptionHandler(){
    @Override public void handle(    int retryCount,    Random random,    Throwable cause){
      try {
        handleSaslConnectionFailure(retryCount,cause,realTicket);
        retryOrClose(bootstrap,failureCounter++,random.nextInt(reloginMaxBackoff) + 1,cause);
      }
 catch (      IOException|InterruptedException e) {
        close(e);
      }
    }
  }
,new SaslClientHandler.SaslSuccessfulConnectHandler(){
    @Override public void onSuccess(    Channel channel){
      startHBaseConnection(channel);
    }
    @Override public void onSaslProtectionSucess(    Channel channel){
      startConnectionWithEncryption(channel);
    }
  }
);
}
