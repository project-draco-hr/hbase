{
  int klen, vlen;
  int lastLen=0;
  do {
    klen=blockBuffer.getInt();
    vlen=blockBuffer.getInt();
    int comp=reader.getComparator().compare(key,offset,length,blockBuffer.array(),blockBuffer.arrayOffset() + blockBuffer.position(),klen);
    if (comp == 0) {
      if (seekBefore) {
        blockBuffer.position(blockBuffer.position() - lastLen - 16);
        currKeyLen=blockBuffer.getInt();
        currValueLen=blockBuffer.getInt();
        return 1;
      }
      currKeyLen=klen;
      currValueLen=vlen;
      return 0;
    }
    if (comp < 0) {
      blockBuffer.position(blockBuffer.position() - lastLen - 16);
      currKeyLen=blockBuffer.getInt();
      currValueLen=blockBuffer.getInt();
      return 1;
    }
    blockBuffer.position(blockBuffer.position() + klen + vlen);
    lastLen=klen + vlen;
  }
 while (blockBuffer.remaining() > 0);
  blockBuffer.position(blockBuffer.position() - lastLen - 8);
  currKeyLen=blockBuffer.getInt();
  currValueLen=blockBuffer.getInt();
  return 1;
}
