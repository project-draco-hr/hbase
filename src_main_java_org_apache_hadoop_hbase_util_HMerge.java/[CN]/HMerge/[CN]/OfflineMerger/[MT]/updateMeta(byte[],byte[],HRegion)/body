{
  byte[][] regionsToDelete={oldRegion1,oldRegion2};
  for (int r=0; r < regionsToDelete.length; r++) {
    Delete delete=new Delete(regionsToDelete[r]);
    delete.deleteColumns(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
    delete.deleteColumns(HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER);
    delete.deleteColumns(HConstants.CATALOG_FAMILY,HConstants.STARTCODE_QUALIFIER);
    delete.deleteColumns(HConstants.CATALOG_FAMILY,HConstants.SPLITA_QUALIFIER);
    delete.deleteColumns(HConstants.CATALOG_FAMILY,HConstants.SPLITB_QUALIFIER);
    root.delete(delete,null,true);
    if (LOG.isDebugEnabled()) {
      LOG.debug("updated columns in row: " + Bytes.toString(regionsToDelete[r]));
    }
  }
  HRegionInfo newInfo=newRegion.getRegionInfo();
  newInfo.setOffline(true);
  Put put=new Put(newRegion.getRegionName());
  put.add(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER,Writables.getBytes(newInfo));
  root.put(put);
  if (LOG.isDebugEnabled()) {
    LOG.debug("updated columns in row: " + Bytes.toString(newRegion.getRegionName()));
  }
}
