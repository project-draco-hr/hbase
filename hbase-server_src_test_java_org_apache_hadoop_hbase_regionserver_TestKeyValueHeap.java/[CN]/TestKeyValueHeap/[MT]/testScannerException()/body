{
  List<Cell> l1=new ArrayList<Cell>();
  l1.add(new KeyValue(row1,fam1,col5,data));
  l1.add(new KeyValue(row2,fam1,col1,data));
  l1.add(new KeyValue(row2,fam1,col2,data));
  SeekScanner s1=new SeekScanner(l1);
  scanners.add(s1);
  List<Cell> l2=new ArrayList<Cell>();
  l2.add(new KeyValue(row1,fam1,col1,data));
  l2.add(new KeyValue(row1,fam1,col2,data));
  SeekScanner s2=new SeekScanner(l2);
  scanners.add(s2);
  List<Cell> l3=new ArrayList<Cell>();
  l3.add(new KeyValue(row1,fam1,col3,data));
  l3.add(new KeyValue(row1,fam1,col4,data));
  l3.add(new KeyValue(row1,fam2,col1,data));
  l3.add(new KeyValue(row1,fam2,col2,data));
  l3.add(new KeyValue(row2,fam1,col3,data));
  SeekScanner s3=new SeekScanner(l3);
  scanners.add(s3);
  List<Cell> l4=new ArrayList<Cell>();
  SeekScanner s4=new SeekScanner(l4);
  scanners.add(s4);
  KeyValueHeap kvh=new KeyValueHeap(scanners,CellComparator.COMPARATOR);
  try {
    for (    KeyValueScanner scanner : scanners) {
      ((SeekScanner)scanner).setRealSeekDone(false);
    }
    while (kvh.next() != null)     ;
    assertTrue(false);
  }
 catch (  IOException ioe) {
    kvh.close();
  }
  for (  KeyValueScanner scanner : scanners) {
    assertTrue(((SeekScanner)scanner).isClosed());
    assertEquals(((SeekScanner)scanner).getClosedNum(),1);
  }
}
