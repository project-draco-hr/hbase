{
  LOG.debug(zkw.prefix("Creating (or updating) unassigned node for " + region.getEncodedName() + " with OFFLINE state"));
  RegionTransition rt=RegionTransition.createRegionTransition(EventType.M_ZK_REGION_OFFLINE,region.getRegionName(),serverName,HConstants.EMPTY_BYTE_ARRAY);
  byte[] data=rt.toByteArray();
  String node=getNodeName(zkw,region.getEncodedName());
  Stat stat=new Stat();
  zkw.sync(node);
  int version=ZKUtil.checkExists(zkw,node);
  if (version == -1) {
    if (hijack && !allowCreation) {
      return -1;
    }
    return ZKUtil.createAndWatch(zkw,node,data);
  }
 else {
    byte[] curDataInZNode=ZKAssign.getDataNoWatch(zkw,region.getEncodedName(),stat);
    RegionTransition curRt=getRegionTransition(curDataInZNode);
    if (hijack && curRt != null) {
      EventType eventType=curRt.getEventType();
      if (eventType.equals(EventType.M_ZK_REGION_CLOSING) || eventType.equals(EventType.RS_ZK_REGION_CLOSED) || eventType.equals(EventType.RS_ZK_REGION_OPENED)) {
        return -1;
      }
    }
    boolean setData=false;
    try {
      setData=ZKUtil.setData(zkw,node,data,version);
    }
 catch (    KeeperException kpe) {
      LOG.info("Version mismatch while setting the node to OFFLINE state.");
      return -1;
    }
    if (!setData) {
      return -1;
    }
 else {
      byte[] bytes=ZKAssign.getData(zkw,region.getEncodedName());
      rt=getRegionTransition(bytes);
      if (rt.getEventType() != EventType.M_ZK_REGION_OFFLINE) {
        return -1;
      }
    }
  }
  return stat.getVersion() + 1;
}
