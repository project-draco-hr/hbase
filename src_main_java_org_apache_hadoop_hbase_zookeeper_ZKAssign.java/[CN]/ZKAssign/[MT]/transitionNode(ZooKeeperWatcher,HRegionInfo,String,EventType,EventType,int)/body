{
  String encoded=region.getEncodedName();
  if (zkw.isDebugEnabled()) {
    zkw.debug("Attempting to transition node " + HRegionInfo.prettyPrint(encoded) + " from "+ beginState.toString()+ " to "+ endState.toString());
  }
  String node=getNodeName(zkw,encoded);
  Stat stat=new Stat();
  byte[] existingBytes=ZKUtil.getDataNoWatch(zkw,node,stat);
  RegionTransitionData existingData=RegionTransitionData.fromBytes(existingBytes);
  if (expectedVersion != -1 && stat.getVersion() != expectedVersion) {
    zkw.warn("Attempt to transition the unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, "+ "the node existed but was version "+ stat.getVersion()+ " not the expected version "+ expectedVersion);
    return -1;
  }
  if (!existingData.getEventType().equals(beginState)) {
    zkw.warn("Attempt to transition the unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, "+ "the node existed but was in the state "+ existingData.getEventType());
    return -1;
  }
  try {
    RegionTransitionData data=new RegionTransitionData(endState,region.getRegionName(),serverName);
    if (!ZKUtil.setData(zkw,node,data.getBytes(),stat.getVersion())) {
      zkw.warn("Attempt to transition the unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, "+ "the node existed and was in the expected state but then when "+ "setting data we got a version mismatch");
      return -1;
    }
    if (zkw.isDebugEnabled()) {
      zkw.debug("Successfully transitioned node " + encoded + " from "+ beginState+ " to "+ endState);
    }
    return stat.getVersion() + 1;
  }
 catch (  KeeperException.NoNodeException nne) {
    zkw.warn("Attempt to transition the unassigned node for " + encoded + " from "+ beginState+ " to "+ endState+ " failed, "+ "the node existed and was in the expected state but then when "+ "setting data it no longer existed");
    return -1;
  }
}
