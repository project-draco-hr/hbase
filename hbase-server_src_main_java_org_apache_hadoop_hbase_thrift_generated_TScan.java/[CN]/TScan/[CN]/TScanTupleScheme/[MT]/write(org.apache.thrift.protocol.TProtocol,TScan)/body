{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetStartRow()) {
    optionals.set(0);
  }
  if (struct.isSetStopRow()) {
    optionals.set(1);
  }
  if (struct.isSetTimestamp()) {
    optionals.set(2);
  }
  if (struct.isSetColumns()) {
    optionals.set(3);
  }
  if (struct.isSetCaching()) {
    optionals.set(4);
  }
  if (struct.isSetFilterString()) {
    optionals.set(5);
  }
  if (struct.isSetBatchSize()) {
    optionals.set(6);
  }
  if (struct.isSetSortColumns()) {
    optionals.set(7);
  }
  oprot.writeBitSet(optionals,8);
  if (struct.isSetStartRow()) {
    oprot.writeBinary(struct.startRow);
  }
  if (struct.isSetStopRow()) {
    oprot.writeBinary(struct.stopRow);
  }
  if (struct.isSetTimestamp()) {
    oprot.writeI64(struct.timestamp);
  }
  if (struct.isSetColumns()) {
{
      oprot.writeI32(struct.columns.size());
      for (      ByteBuffer _iter30 : struct.columns) {
        oprot.writeBinary(_iter30);
      }
    }
  }
  if (struct.isSetCaching()) {
    oprot.writeI32(struct.caching);
  }
  if (struct.isSetFilterString()) {
    oprot.writeBinary(struct.filterString);
  }
  if (struct.isSetBatchSize()) {
    oprot.writeI32(struct.batchSize);
  }
  if (struct.isSetSortColumns()) {
    oprot.writeBool(struct.sortColumns);
  }
}
