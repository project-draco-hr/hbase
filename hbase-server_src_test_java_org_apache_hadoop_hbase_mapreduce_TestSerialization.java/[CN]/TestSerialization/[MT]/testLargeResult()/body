{
  Result res=Result.create(new KeyValue[]{new KeyValue(row,family,qualifier,0L,value)});
  ResultSerialization serialization=new ResultSerialization();
  Serializer<Result> serializer=serialization.getSerializer(Result.class);
  Deserializer<Result> deserializer=serialization.getDeserializer(Result.class);
  ByteArrayOutputStream os=new ByteArrayOutputStream();
  ByteArrayInputStream is=null;
  try {
    serializer.open(os);
    serializer.serialize(res);
    os.flush();
    is=new ByteArrayInputStream(os.toByteArray());
    deserializer.open(is);
    deserializer.deserialize(null);
  }
 catch (  InvalidProtocolBufferException e) {
    assertTrue("Got InvalidProtocolBufferException in " + name.getMethodName(),e.getCause() instanceof InvalidProtocolBufferException);
  }
catch (  Exception e) {
    fail("Got an invalid exception: " + e);
  }
}
