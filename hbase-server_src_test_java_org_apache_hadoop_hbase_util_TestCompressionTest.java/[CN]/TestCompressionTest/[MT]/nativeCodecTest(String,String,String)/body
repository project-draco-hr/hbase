{
  if (isCompressionAvailable(codecClassName)) {
    try {
      if (libName != null) {
        System.loadLibrary(libName);
      }
      try {
        Configuration conf=new Configuration();
        CompressionCodec codec=(CompressionCodec)ReflectionUtils.newInstance(conf.getClassByName(codecClassName),conf);
        DataOutputBuffer compressedDataBuffer=new DataOutputBuffer();
        CompressionOutputStream deflateFilter=codec.createOutputStream(compressedDataBuffer);
        byte[] data=new byte[1024];
        DataOutputStream deflateOut=new DataOutputStream(new BufferedOutputStream(deflateFilter));
        deflateOut.write(data,0,data.length);
        deflateOut.flush();
        deflateFilter.finish();
        assertTrue(CompressionTest.testCompression(codecName));
      }
 catch (      UnsatisfiedLinkError e) {
        LOG.debug("No JNI for codec '" + codecName + "' "+ e.getMessage());
      }
catch (      Exception e) {
        LOG.error(codecName,e);
      }
    }
 catch (    UnsatisfiedLinkError e) {
      LOG.debug("Native lib not available: " + codecName);
      assertFalse(CompressionTest.testCompression(codecName));
    }
  }
 else {
    LOG.debug("Codec class not available: " + codecName);
    assertFalse(CompressionTest.testCompression(codecName));
  }
}
