{
  InputStream in=new DataInputStream(new ByteArrayInputStream(onDiskBlock,offset,onDiskSizeWithoutHeader));
  Encryption.Context cryptoContext=fileContext.getEncryptionContext();
  if (cryptoContext != Encryption.Context.NONE) {
    Cipher cipher=cryptoContext.getCipher();
    Decryptor decryptor=cipher.getDecryptor();
    decryptor.setKey(cryptoContext.getKey());
    int ivLength=in.read();
    if (ivLength > 0) {
      byte[] iv=new byte[ivLength];
      IOUtils.readFully(in,iv);
      decryptor.setIv(iv);
      decryptor.reset();
      in=decryptor.createDecryptionStream(in);
    }
    onDiskSizeWithoutHeader-=Bytes.SIZEOF_BYTE + ivLength;
  }
  Compression.Algorithm compression=fileContext.getCompression();
  if (compression != Compression.Algorithm.NONE) {
    Compression.decompress(blockBufferWithoutHeader.array(),blockBufferWithoutHeader.arrayOffset(),in,onDiskSizeWithoutHeader,uncompressedSizeWithoutHeader,compression);
  }
 else {
    IOUtils.readFully(in,blockBufferWithoutHeader.array(),blockBufferWithoutHeader.arrayOffset(),onDiskSizeWithoutHeader);
  }
}
