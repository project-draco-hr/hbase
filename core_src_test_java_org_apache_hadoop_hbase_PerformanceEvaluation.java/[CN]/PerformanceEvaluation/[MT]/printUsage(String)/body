{
  if (message != null && message.length() > 0) {
    System.err.println(message);
  }
  System.err.println("Usage: java " + this.getClass().getName() + " \\");
  System.err.println("  [--miniCluster] [--nomapred] [--rows=ROWS] <command> <nclients>");
  System.err.println();
  System.err.println("Options:");
  System.err.println(" miniCluster     Run the test on an HBaseMiniCluster");
  System.err.println(" nomapred        Run multiple clients using threads " + "(rather than use mapreduce)");
  System.err.println(" rows            Rows each client runs. Default: One million");
  System.err.println(" flushCommits    Used to determine if the test should flush the table.  Default: false");
  System.err.println(" writeToWAL      Set writeToWAL on puts. Default: True");
  System.err.println();
  System.err.println("Command:");
  for (  CmdDescriptor command : commands.values()) {
    System.err.println(String.format(" %-15s %s",command.getName(),command.getDescription()));
  }
  System.err.println();
  System.err.println("Args:");
  System.err.println(" nclients        Integer. Required. Total number of " + "clients (and HRegionServers)");
  System.err.println("                 running: 1 <= value <= 500");
  System.err.println("Examples:");
  System.err.println(" To run a single evaluation client:");
  System.err.println(" $ bin/hbase " + this.getClass().getName() + " sequentialWrite 1");
}
