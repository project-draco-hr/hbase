{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case SUCCESS:
      if (field.type == TType.MAP) {
{
          TMap _map13=iprot.readMapBegin();
          this.success=new HashMap<byte[],ColumnDescriptor>(2 * _map13.size);
          for (int _i14=0; _i14 < _map13.size; ++_i14) {
            byte[] _key15;
            ColumnDescriptor _val16;
            _key15=iprot.readBinary();
            _val16=new ColumnDescriptor();
            _val16.read(iprot);
            this.success.put(_key15,_val16);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case IO:
  if (field.type == TType.STRUCT) {
    this.io=new IOError();
    this.io.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
