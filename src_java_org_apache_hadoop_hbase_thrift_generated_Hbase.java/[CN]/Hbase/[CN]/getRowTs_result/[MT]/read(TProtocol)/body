{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map39=iprot.readMapBegin();
          this.success=new HashMap<byte[],byte[]>(2 * _map39.size);
          for (int _i40=0; _i40 < _map39.size; ++_i40) {
            byte[] _key41;
            byte[] _val42;
            _key41=iprot.readBinary();
            _val42=iprot.readBinary();
            this.success.put(_key41,_val42);
          }
          iprot.readMapEnd();
        }
        this.__isset.success=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == TType.STRUCT) {
    this.io=new IOError();
    this.io.read(iprot);
    this.__isset.io=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
}
