{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == TType.STRING) {
        this.tableName=iprot.readBinary();
        this.__isset.tableName=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == TType.STRING) {
    this.startRow=iprot.readBinary();
    this.__isset.startRow=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == TType.STRING) {
this.stopRow=iprot.readBinary();
this.__isset.stopRow=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == TType.LIST) {
{
TList _list64=iprot.readListBegin();
this.columns=new ArrayList<byte[]>(_list64.size);
for (int _i65=0; _i65 < _list64.size; ++_i65) {
byte[] _elem66=null;
_elem66=iprot.readBinary();
this.columns.add(_elem66);
}
iprot.readListEnd();
}
this.__isset.columns=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
}
