{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case TABLENAME:
      if (field.type == TType.STRING) {
        this.tableName=iprot.readBinary();
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case STARTROW:
  if (field.type == TType.STRING) {
    this.startRow=iprot.readBinary();
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case STOPROW:
if (field.type == TType.STRING) {
this.stopRow=iprot.readBinary();
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case COLUMNS:
if (field.type == TType.LIST) {
{
TList _list82=iprot.readListBegin();
this.columns=new ArrayList<byte[]>(_list82.size);
for (int _i83=0; _i83 < _list82.size; ++_i83) {
byte[] _elem84;
_elem84=iprot.readBinary();
this.columns.add(_elem84);
}
iprot.readListEnd();
}
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
