{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == TType.STRING) {
        this.tableName=iprot.readBinary();
        this.__isset.tableName=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == TType.STRING) {
    this.row=iprot.readBinary();
    this.__isset.row=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == TType.LIST) {
{
  TList _list42=iprot.readListBegin();
  this.mutations=new ArrayList<Mutation>(_list42.size);
  for (int _i43=0; _i43 < _list42.size; ++_i43) {
    Mutation _elem44=new Mutation();
    _elem44=new Mutation();
    _elem44.read(iprot);
    this.mutations.add(_elem44);
  }
  iprot.readListEnd();
}
this.__isset.mutations=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
}
