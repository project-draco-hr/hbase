{
  LOG.debug("atempting to commit trasaction: " + transactionState.toString());
  try {
    for (    HRegionLocation location : transactionState.getParticipatingRegions()) {
      TransactionalRegionInterface transactionalRegionServer=(TransactionalRegionInterface)connection.getHRegionConnection(location.getServerAddress());
      boolean canCommit=transactionalRegionServer.commitRequest(location.getRegionInfo().getRegionName(),transactionState.getTransactionId());
      if (LOG.isTraceEnabled()) {
        LOG.trace("Region [" + location.getRegionInfo().getRegionNameAsString() + "] votes "+ (canCommit ? "to commit" : "to abort")+ " transaction "+ transactionState.getTransactionId());
      }
      if (!canCommit) {
        LOG.debug("Aborting [" + transactionState.getTransactionId() + "]");
        abort(transactionState,location);
        throw new CommitUnsuccessfulException();
      }
    }
    LOG.debug("Commiting [" + transactionState.getTransactionId() + "]");
    transactionLogger.setStatusForTransaction(transactionState.getTransactionId(),TransactionLogger.TransactionStatus.COMMITTED);
    for (    HRegionLocation location : transactionState.getParticipatingRegions()) {
      TransactionalRegionInterface transactionalRegionServer=(TransactionalRegionInterface)connection.getHRegionConnection(location.getServerAddress());
      transactionalRegionServer.commit(location.getRegionInfo().getRegionName(),transactionState.getTransactionId());
    }
  }
 catch (  RemoteException e) {
    LOG.debug("Commit of transaction [" + transactionState.getTransactionId() + "] was unsucsessful",e);
    throw new CommitUnsuccessfulException(e);
  }
}
