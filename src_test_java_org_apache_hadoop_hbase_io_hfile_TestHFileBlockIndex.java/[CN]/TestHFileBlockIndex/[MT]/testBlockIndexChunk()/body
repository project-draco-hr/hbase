{
  BlockIndexChunk c=new BlockIndexChunk();
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  int N=1000;
  int[] numSubEntriesAt=new int[N];
  int numSubEntries=0;
  for (int i=0; i < N; ++i) {
    baos.reset();
    DataOutputStream dos=new DataOutputStream(baos);
    c.writeNonRoot(dos);
    assertEquals(c.getNonRootSize(),dos.size());
    baos.reset();
    dos=new DataOutputStream(baos);
    c.writeRoot(dos);
    assertEquals(c.getRootSize(),dos.size());
    byte[] k=TestHFileWriterV2.randomOrderedKey(rand,i);
    numSubEntries+=rand.nextInt(5) + 1;
    keys.add(k);
    c.add(k,getDummyFileOffset(i),getDummyOnDiskSize(i),numSubEntries);
  }
  for (int i=0; i < N; ++i) {
    for (int j=i == 0 ? 0 : numSubEntriesAt[i - 1]; j < numSubEntriesAt[i]; ++j) {
      assertEquals(i,c.getEntryBySubEntry(j));
    }
  }
}
