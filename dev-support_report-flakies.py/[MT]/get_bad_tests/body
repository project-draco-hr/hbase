def get_bad_tests(build_url):
    "\n    Given url of an executed build, analyzes its console text, and returns\n    [list of all tests, list of timeout tests, list of failed tests].\n    Returns None if can't get console text or if there is any other error.\n    "
    logger.info('Analyzing %s', build_url)
    response = requests.get((build_url + '/api/json')).json()
    if response['building']:
        logger.info('Skipping this build since it is in progress.')
        return {}
    console_url = (build_url + '/consoleText')
    build_result = findHangingTests.get_bad_tests(console_url)
    if (not build_result):
        logger.info('Ignoring build %s', build_url)
        return
    return build_result
