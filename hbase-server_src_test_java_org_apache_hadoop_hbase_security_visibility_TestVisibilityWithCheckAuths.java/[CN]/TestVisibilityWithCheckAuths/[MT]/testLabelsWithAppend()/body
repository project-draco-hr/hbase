{
  PrivilegedExceptionAction<VisibilityLabelsResponse> action=new PrivilegedExceptionAction<VisibilityLabelsResponse>(){
    @Override public VisibilityLabelsResponse run() throws Exception {
      try {
        return VisibilityClient.setAuths(conf,new String[]{TOPSECRET},USER.getShortName());
      }
 catch (      Throwable e) {
      }
      return null;
    }
  }
;
  SUPERUSER.runAs(action);
  final TableName tableName=TableName.valueOf(TEST_NAME.getMethodName());
  Table table=null;
  try {
    table=TEST_UTIL.createTable(tableName,fam);
    final byte[] row1=Bytes.toBytes("row1");
    final byte[] val=Bytes.toBytes("a");
    PrivilegedExceptionAction<Void> actiona=new PrivilegedExceptionAction<Void>(){
      @Override public Void run() throws Exception {
        Connection connection=ConnectionFactory.createConnection(conf);
        Table table=null;
        try {
          table=connection.getTable(tableName);
          Put put=new Put(row1);
          put.add(fam,qual,HConstants.LATEST_TIMESTAMP,val);
          put.setCellVisibility(new CellVisibility(TOPSECRET));
          table.put(put);
        }
  finally {
          table.close();
          connection.close();
        }
        return null;
      }
    }
;
    USER.runAs(actiona);
    actiona=new PrivilegedExceptionAction<Void>(){
      @Override public Void run() throws Exception {
        Connection connection=ConnectionFactory.createConnection(conf);
        Table table=null;
        try {
          table=TEST_UTIL.getConnection().getTable(tableName);
          Append append=new Append(row1);
          append.add(fam,qual,Bytes.toBytes("b"));
          table.append(append);
        }
  finally {
          table.close();
          connection.close();
        }
        return null;
      }
    }
;
    USER.runAs(actiona);
    actiona=new PrivilegedExceptionAction<Void>(){
      @Override public Void run() throws Exception {
        Table table=null;
        Connection connection=null;
        try {
          connection=ConnectionFactory.createConnection(conf);
          table=connection.getTable(tableName);
          Append append=new Append(row1);
          append.add(fam,qual,Bytes.toBytes("c"));
          append.setCellVisibility(new CellVisibility(PUBLIC));
          table.append(append);
          Assert.fail("Testcase should fail with AccesDeniedException");
        }
 catch (        Throwable t) {
          assertTrue(t.getMessage().contains("AccessDeniedException"));
        }
 finally {
          if (table != null) {
            table.close();
          }
          if (connection != null) {
            connection.close();
          }
        }
        return null;
      }
    }
;
    USER.runAs(actiona);
  }
  finally {
    if (table != null) {
      table.close();
    }
  }
}
