{
  invocations++;
  if (HTableDescriptor.ROOT_TABLEDESC.getNameAsString().equals(tablename)) {
    cachehits++;
    return HTableDescriptor.ROOT_TABLEDESC;
  }
  if (HTableDescriptor.META_TABLEDESC.getNameAsString().equals(tablename)) {
    cachehits++;
    return HTableDescriptor.META_TABLEDESC;
  }
  if (HConstants.HBASE_NON_USER_TABLE_DIRS.contains(tablename)) {
    throw new IOException("No descriptor found for table = " + tablename);
  }
  TableDescriptorModtime tdm=this.cache.get(tablename);
  long modtime=getTableInfoModtime(this.fs,this.rootdir,tablename);
  if (tdm != null) {
    if (modtime <= tdm.getModtime()) {
      cachehits++;
      return tdm.getTableDescriptor();
    }
  }
  HTableDescriptor htd=null;
  try {
    htd=getTableDescriptor(this.fs,this.rootdir,tablename);
  }
 catch (  NullPointerException e) {
    LOG.debug("Exception during readTableDecriptor. Current table name = " + tablename,e);
  }
catch (  IOException ioe) {
    LOG.debug("Exception during readTableDecriptor. Current table name = " + tablename,ioe);
  }
  if (htd == null) {
    LOG.warn("The following folder is in HBase's root directory and " + "doesn't contain a table descriptor, " + "do consider deleting it: "+ tablename);
  }
 else {
    this.cache.put(tablename,new TableDescriptorModtime(modtime,htd));
  }
  return htd;
}
