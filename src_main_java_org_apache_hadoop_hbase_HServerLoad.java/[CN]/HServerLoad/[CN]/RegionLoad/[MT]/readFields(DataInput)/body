{
  super.readFields(in);
  int version=in.readByte();
  if (version > VERSION)   throw new IOException("Version mismatch; " + version);
  int namelen=WritableUtils.readVInt(in);
  this.name=new byte[namelen];
  in.readFully(this.name);
  this.stores=WritableUtils.readVInt(in);
  this.storefiles=WritableUtils.readVInt(in);
  this.storeUncompressedSizeMB=WritableUtils.readVInt(in);
  this.storefileSizeMB=WritableUtils.readVInt(in);
  this.memstoreSizeMB=WritableUtils.readVInt(in);
  this.storefileIndexSizeMB=WritableUtils.readVInt(in);
  this.readRequestsCount=WritableUtils.readVInt(in);
  this.writeRequestsCount=WritableUtils.readVInt(in);
  this.rootIndexSizeKB=WritableUtils.readVInt(in);
  this.totalStaticIndexSizeKB=WritableUtils.readVInt(in);
  this.totalStaticBloomSizeKB=WritableUtils.readVInt(in);
  this.totalCompactingKVs=WritableUtils.readVLong(in);
  this.currentCompactedKVs=WritableUtils.readVLong(in);
  int coprocessorsSize=WritableUtils.readVInt(in);
  coprocessors=new TreeSet<String>();
  for (int i=0; i < coprocessorsSize; i++) {
    coprocessors.add(in.readUTF());
  }
}
