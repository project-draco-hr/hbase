{
  Class<?> cl;
  long expected;
  long actual;
  cl=TimeRange.class;
  actual=ClassSize.TIMERANGE;
  expected=ClassSize.estimateBase(cl,false);
  if (expected != actual) {
    ClassSize.estimateBase(cl,true);
    assertEquals(expected,actual);
  }
  byte[] row=new byte[]{0};
  cl=Put.class;
  actual=Mutation.MUTATION_OVERHEAD + ClassSize.align(ClassSize.ARRAY);
  expected=ClassSize.estimateBase(cl,false);
  expected+=ClassSize.align(ClassSize.TREEMAP);
  if (expected != actual) {
    ClassSize.estimateBase(cl,true);
    assertEquals(expected,actual);
  }
  cl=Delete.class;
  actual=Mutation.MUTATION_OVERHEAD + ClassSize.align(ClassSize.ARRAY);
  expected=ClassSize.estimateBase(cl,false);
  expected+=ClassSize.align(ClassSize.TREEMAP);
  if (expected != actual) {
    ClassSize.estimateBase(cl,true);
    assertEquals(expected,actual);
  }
}
