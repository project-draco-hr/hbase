{
  if (masters == null || masters.isEmpty()) {
    return null;
  }
  for (  JVMClusterUtil.MasterThread t : masters) {
    t.start();
  }
  long startTime=System.currentTimeMillis();
  while (findActiveMaster(masters) == null) {
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException e) {
      throw (InterruptedIOException)new InterruptedIOException().initCause(e);
    }
    if (System.currentTimeMillis() > startTime + 30000) {
      throw new RuntimeException("Master not active after 30 seconds");
    }
  }
  if (regionservers != null) {
    for (    JVMClusterUtil.RegionServerThread t : regionservers) {
      HRegionServer hrs=t.getRegionServer();
      ShutdownHook.install(hrs.getConfiguration(),FileSystem.get(hrs.getConfiguration()),hrs,t);
      t.start();
    }
  }
  startTime=System.currentTimeMillis();
  final int maxwait=200000;
  while (true) {
    JVMClusterUtil.MasterThread t=findActiveMaster(masters);
    if (t != null && t.master.isInitialized()) {
      return t.master.getServerName().toString();
    }
    if (System.currentTimeMillis() > startTime + 10000) {
      try {
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
        throw (InterruptedIOException)new InterruptedIOException().initCause(e);
      }
    }
    if (System.currentTimeMillis() > startTime + maxwait) {
      String msg="Master not initialized after " + maxwait + "ms seconds";
      ReflectionUtils.printThreadInfo(new PrintWriter(System.out),"Thread dump because: " + msg);
      throw new RuntimeException(msg);
    }
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException e) {
      throw (InterruptedIOException)new InterruptedIOException().initCause(e);
    }
  }
}
