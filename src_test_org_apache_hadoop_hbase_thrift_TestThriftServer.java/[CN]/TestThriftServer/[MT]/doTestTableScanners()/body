{
  ThriftServer.HBaseHandler handler=new ThriftServer.HBaseHandler();
  handler.createTable(tableAname,getColumnDescriptors());
  long time1=System.currentTimeMillis();
  handler.mutateRowTs(tableAname,rowAname,getMutations(),time1);
  long time2=System.currentTimeMillis();
  handler.mutateRowsTs(tableAname,getBatchMutations(),time2);
  int scanner1=handler.scannerOpen(tableAname,rowAname,getColumnList(true,true));
  TRowResult rowResult1a=handler.scannerGet(scanner1);
  assertTrue(Bytes.equals(rowResult1a.row,rowAname));
  assertEquals(rowResult1a.columns.size(),1);
  assertTrue(Bytes.equals(rowResult1a.columns.get(columnBname).value,valueCname));
  TRowResult rowResult1b=handler.scannerGet(scanner1);
  assertTrue(Bytes.equals(rowResult1b.row,rowBname));
  assertEquals(rowResult1b.columns.size(),2);
  assertTrue(Bytes.equals(rowResult1b.columns.get(columnAname).value,valueCname));
  assertTrue(Bytes.equals(rowResult1b.columns.get(columnBname).value,valueDname));
  closeScanner(scanner1,handler);
  int scanner2=handler.scannerOpenTs(tableAname,rowAname,getColumnList(true,true),time1);
  TRowResult rowResult2a=handler.scannerGet(scanner2);
  assertEquals(rowResult2a.columns.size(),2);
  assertTrue(Bytes.equals(rowResult2a.columns.get(columnAname).value,valueAname));
  assertTrue(Bytes.equals(rowResult2a.columns.get(columnBname).value,valueBname));
  closeScanner(scanner2,handler);
  int scanner3=handler.scannerOpenWithStop(tableAname,rowAname,rowBname,getColumnList(true,false));
  closeScanner(scanner3,handler);
  int scanner4=handler.scannerOpenWithStopTs(tableAname,rowAname,rowBname,getColumnList(false,true),time1);
  TRowResult rowResult4a=handler.scannerGet(scanner4);
  assertEquals(rowResult4a.columns.size(),1);
  assertTrue(Bytes.equals(rowResult4a.columns.get(columnBname).value,valueBname));
  handler.disableTable(tableAname);
  handler.deleteTable(tableAname);
}
