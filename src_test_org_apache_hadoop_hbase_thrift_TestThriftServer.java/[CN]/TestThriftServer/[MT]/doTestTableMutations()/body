{
  ThriftServer.HBaseHandler handler=new ThriftServer.HBaseHandler();
  handler.createTable(tableAname,getColumnDescriptors());
  handler.mutateRow(tableAname,rowAname,getMutations());
  assertTrue(Bytes.equals(valueAname,handler.get(tableAname,rowAname,columnAname).get(0).value));
  TRowResult rowResult1=handler.getRow(tableAname,rowAname).get(0);
  assertTrue(Bytes.equals(rowAname,rowResult1.row));
  assertTrue(Bytes.equals(valueBname,rowResult1.columns.get(columnBname).value));
  handler.mutateRows(tableAname,getBatchMutations());
  assertFalse(handler.get(tableAname,rowAname,columnAname).size() > 0);
  assertTrue(Bytes.equals(valueCname,handler.get(tableAname,rowAname,columnBname).get(0).value));
  List<TCell> versions=handler.getVer(tableAname,rowAname,columnBname,MAXVERSIONS);
  assertTrue(Bytes.equals(valueCname,versions.get(0).value));
  assertTrue(Bytes.equals(valueBname,versions.get(1).value));
  TRowResult rowResult2=handler.getRow(tableAname,rowBname).get(0);
  assertTrue(Bytes.equals(rowBname,rowResult2.row));
  assertTrue(Bytes.equals(valueCname,rowResult2.columns.get(columnAname).value));
  assertTrue(Bytes.equals(valueDname,rowResult2.columns.get(columnBname).value));
  handler.deleteAll(tableAname,rowAname,columnBname);
  handler.deleteAllRow(tableAname,rowBname);
  int size=handler.get(tableAname,rowAname,columnBname).size();
  assertEquals(0,size);
  size=handler.getRow(tableAname,rowBname).size();
  assertEquals(0,size);
  handler.disableTable(tableAname);
  handler.deleteTable(tableAname);
}
