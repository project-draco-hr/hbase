{
  member=buildCohortMember();
  EmptySubprocedure subproc=new EmptySubprocedure(member,mockListener);
  EmptySubprocedure spy=spy(subproc);
  when(mockBuilder.buildSubprocedure(op,data)).thenReturn(spy);
  addCommitAnswer();
  Subprocedure subproc1=member.createSubprocedure(op,data);
  member.submitSubprocedure(subproc1);
  subproc.waitForLocallyCompleted();
  InOrder order=inOrder(mockMemberComms,spy);
  order.verify(spy).acquireBarrier();
  order.verify(mockMemberComms).sendMemberAcquired(eq(spy));
  order.verify(spy).insideBarrier();
  order.verify(mockMemberComms).sendMemberCompleted(eq(spy),eq(data));
  order.verify(mockMemberComms,never()).sendMemberAborted(eq(spy),any(ForeignException.class));
}
