{
  buildCohortMemberPair();
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      throw new IOException("Forced IOException in memeber prepare");
    }
  }
).when(mockMemberComms).sendMemberAcquired(any(Subprocedure.class));
  Subprocedure subproc=member.createSubprocedure(op,data);
  member.submitSubprocedure(subproc);
  member.closeAndWait(TIMEOUT);
  InOrder order=inOrder(mockMemberComms,spySub);
  order.verify(spySub).acquireBarrier();
  order.verify(mockMemberComms).sendMemberAcquired(eq(spySub));
  order.verify(spySub,never()).insideBarrier();
  order.verify(mockMemberComms,never()).sendMemberCompleted(eq(spySub));
  order.verify(spySub).cancel(anyString(),any(Exception.class));
  order.verify(spySub).cleanup(any(Exception.class));
}
