{
  Path dir=util.getDataTestDirOnTestFS(testName);
  FileSystem fs=util.getTestFileSystem();
  dir=dir.makeQualified(fs);
  Path familyDir=new Path(dir,Bytes.toString(FAMILY));
  int hfileIdx=0;
  for (  byte[][] range : hfileRanges) {
    byte[] from=range[0];
    byte[] to=range[1];
    createHFile(util.getConfiguration(),fs,new Path(familyDir,"hfile_" + hfileIdx++),FAMILY,QUALIFIER,from,to,1000);
  }
  int expectedRows=hfileIdx * 1000;
  final byte[] TABLE=Bytes.toBytes("mytable_" + testName);
  HTableDescriptor htd=new HTableDescriptor(TABLE);
  HColumnDescriptor familyDesc=new HColumnDescriptor(FAMILY);
  familyDesc.setBloomFilterType(bloomType);
  htd.addFamily(familyDesc);
  LoadIncrementalHFiles loader=new LoadIncrementalHFiles(util.getConfiguration(),useSecure);
  String[] args={dir.toString(),"mytable_" + testName};
  loader.run(args);
  HTable table=new HTable(util.getConfiguration(),TABLE);
  assertEquals(expectedRows,util.countRows(table));
}
