{
  if (server != null) {
    LOG.error("ServletContainer already running");
    return;
  }
  RESTServlet.getInstance(conf,UserProvider.instantiate(conf));
  ServletHolder sh=new ServletHolder(ServletContainer.class);
  sh.setInitParameter("com.sun.jersey.config.property.resourceConfigClass",ResourceConfig.class.getCanonicalName());
  sh.setInitParameter("com.sun.jersey.config.property.packages","jetty");
  LOG.info("configured " + ServletContainer.class.getName());
  server=new Server(0);
  server.setSendServerVersion(false);
  server.setSendDateHeader(false);
  Context context=new Context(server,"/",Context.SESSIONS);
  context.addServlet(sh,"/*");
  String[] filterClasses=conf.getStrings(Constants.FILTER_CLASSES,ArrayUtils.EMPTY_STRING_ARRAY);
  for (  String filter : filterClasses) {
    filter=filter.trim();
    context.addFilter(Class.forName(filter),"/*",0);
  }
  conf.set(RESTServer.REST_CSRF_BROWSER_USERAGENTS_REGEX_KEY,".*");
  RESTServer.addCSRFFilter(context,conf);
  HttpServerUtil.constrainHttpMethods(context);
  LOG.info("Loaded filter classes :" + filterClasses);
  server.start();
  testServletPort=server.getConnectors()[0].getLocalPort();
  LOG.info("started " + server.getClass().getName() + " on port "+ testServletPort);
}
