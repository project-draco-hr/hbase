{
  final String tableName="testGetRowVersions";
  final byte[] contents=Bytes.toBytes("contents");
  final byte[] row=Bytes.toBytes("row");
  final byte[] value1=Bytes.toBytes("value1");
  final byte[] value2=Bytes.toBytes("value2");
  final long timestamp1=100L;
  final long timestamp2=200L;
  final HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(tableName));
  HColumnDescriptor hcd=new HColumnDescriptor(contents);
  hcd.setMaxVersions(3);
  desc.addFamily(hcd);
  this.admin.createTable(desc);
  Put put=new Put(row,timestamp1);
  put.add(contents,contents,value1);
  Table table=UTIL.getConnection().getTable(desc.getTableName());
  table.put(put);
  table.close();
  UTIL.shutdownMiniHBaseCluster();
  LOG.debug("HBase cluster shut down -- restarting");
  UTIL.startMiniHBaseCluster(1,NUM_SLAVES);
  table=UTIL.getConnection().getTable(desc.getTableName());
  put=new Put(row,timestamp2);
  put.add(contents,contents,value2);
  table.put(put);
  Get get=new Get(row);
  Result r=table.get(get);
  assertNotNull(r);
  assertFalse(r.isEmpty());
  assertTrue(r.size() == 1);
  byte[] value=r.getValue(contents,contents);
  assertTrue(value.length != 0);
  assertTrue(Bytes.equals(value,value2));
  get=new Get(row);
  get.setMaxVersions();
  r=table.get(get);
  assertTrue(r.size() == 2);
  value=r.getValue(contents,contents);
  assertTrue(value.length != 0);
  assertTrue(Bytes.equals(value,value2));
  NavigableMap<byte[],NavigableMap<byte[],NavigableMap<Long,byte[]>>> map=r.getMap();
  NavigableMap<byte[],NavigableMap<Long,byte[]>> familyMap=map.get(contents);
  NavigableMap<Long,byte[]> versionMap=familyMap.get(contents);
  assertTrue(versionMap.size() == 2);
  assertTrue(Bytes.equals(value1,versionMap.get(timestamp1)));
  assertTrue(Bytes.equals(value2,versionMap.get(timestamp2)));
  table.close();
}
