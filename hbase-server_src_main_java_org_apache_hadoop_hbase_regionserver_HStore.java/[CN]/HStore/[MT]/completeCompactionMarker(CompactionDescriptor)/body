{
  LOG.debug("Completing compaction from the WAL marker");
  List<String> compactionInputs=compaction.getCompactionInputList();
  List<String> compactionOutputs=compaction.getCompactionOutputList();
  List<StoreFile> outputStoreFiles=new ArrayList<StoreFile>(compactionOutputs.size());
  for (  String compactionOutput : compactionOutputs) {
    boolean found=false;
    Path outputPath=new Path(fs.getStoreDir(family.getNameAsString()),compactionOutput);
    outputPath=outputPath.makeQualified(fs.getFileSystem());
    for (    StoreFile sf : this.getStorefiles()) {
      if (sf.getPath().makeQualified(sf.getPath().getFileSystem(conf)).equals(outputPath)) {
        found=true;
        break;
      }
    }
    if (!found) {
      if (getFileSystem().exists(outputPath)) {
        outputStoreFiles.add(createStoreFileAndReader(outputPath));
      }
    }
  }
  List<Path> inputPaths=new ArrayList<Path>(compactionInputs.size());
  for (  String compactionInput : compactionInputs) {
    Path inputPath=new Path(fs.getStoreDir(family.getNameAsString()),compactionInput);
    inputPath=inputPath.makeQualified(fs.getFileSystem());
    inputPaths.add(inputPath);
  }
  List<StoreFile> inputStoreFiles=new ArrayList<StoreFile>(compactionInputs.size());
  for (  StoreFile sf : this.getStorefiles()) {
    if (inputPaths.contains(sf.getPath().makeQualified(fs.getFileSystem()))) {
      inputStoreFiles.add(sf);
    }
  }
  this.completeCompaction(inputStoreFiles,outputStoreFiles);
}
