{
  this.conf=conf;
  boolean doCompress=initializeCompressionContext(conf,path);
  this.trailerWarnSize=conf.getInt(WAL_TRAILER_WARN_SIZE,DEFAULT_WAL_TRAILER_WARN_SIZE);
  int bufferSize=FSUtils.getDefaultBufferSize(fs);
  short replication=(short)conf.getInt("hbase.regionserver.hlog.replication",FSUtils.getDefaultReplication(fs,path));
  long blockSize=conf.getLong("hbase.regionserver.hlog.blocksize",FSUtils.getDefaultBlockSize(fs,path));
  initOutput(fs,path,overwritable,bufferSize,replication,blockSize);
  boolean doTagCompress=doCompress && conf.getBoolean(CompressionContext.ENABLE_WAL_TAGS_COMPRESSION,true);
  length.set(writeMagicAndWALHeader(ProtobufLogReader.PB_WAL_MAGIC,buildWALHeader(conf,WALHeader.newBuilder().setHasCompression(doCompress).setHasTagCompression(doTagCompress))));
  initAfterHeader(doCompress);
  trailer=WALTrailer.newBuilder().build();
  if (LOG.isTraceEnabled()) {
    LOG.trace("Initialized protobuf WAL=" + path + ", compression="+ doCompress);
  }
}
