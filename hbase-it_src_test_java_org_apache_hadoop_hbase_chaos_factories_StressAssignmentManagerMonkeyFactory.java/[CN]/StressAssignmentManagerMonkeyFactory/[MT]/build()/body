{
  Action[] actions1=new Action[]{new CompactTableAction(tableName,0.5f),new CompactRandomRegionOfTableAction(tableName,0.6f),new FlushTableAction(tableName),new FlushRandomRegionOfTableAction(tableName)};
  Action[] actions2=new Action[]{new SplitRandomRegionOfTableAction(tableName),new MergeRandomAdjacentRegionsOfTableAction(tableName),new AddColumnAction(tableName),new RemoveColumnAction(tableName,columnFamilies),new MoveRegionsOfTableAction(MonkeyConstants.DEFAULT_MOVE_REGIONS_SLEEP_TIME,1600,tableName),new MoveRandomRegionOfTableAction(MonkeyConstants.DEFAULT_MOVE_RANDOM_REGION_SLEEP_TIME,tableName),new RestartRandomRsAction(MonkeyConstants.DEFAULT_RESTART_RANDOM_RS_SLEEP_TIME),new BatchRestartRsAction(MonkeyConstants.DEFAULT_ROLLING_BATCH_RESTART_RS_SLEEP_TIME,0.5f),new RollingBatchRestartRsAction(MonkeyConstants.DEFAULT_BATCH_RESTART_RS_SLEEP_TIME,1.0f),new RestartRsHoldingMetaAction(MonkeyConstants.DEFAULT_RESTART_RS_HOLDING_META_SLEEP_TIME),new ChangeSplitPolicyAction(tableName),new SplitAllRegionOfTableAction(tableName),new DecreaseMaxHFileSizeAction(MonkeyConstants.DEFAULT_DECREASE_HFILE_SIZE_SLEEP_TIME,tableName)};
  Action[] actions3=new Action[]{new DumpClusterStatusAction()};
  return new PolicyBasedChaosMonkey(util,new PeriodicRandomActionPolicy(90 * 1000,actions1),new CompositeSequentialPolicy(new DoActionsOncePolicy(90 * 1000,actions2),new PeriodicRandomActionPolicy(90 * 1000,actions2)),new PeriodicRandomActionPolicy(90 * 1000,actions3));
}
