{
  FileStatus[] fileStats=listStatus(familyDir,id.getStartKey());
  if (null == fileStats) {
    return;
  }
  int smallFileCount=0;
  float compactionRatio=conf.getFloat(MobConstants.MOB_SWEEP_TOOL_COMPACTION_RATIO,MobConstants.DEFAULT_SWEEP_TOOL_MOB_COMPACTION_RATIO);
  long compactionMergeableSize=conf.getLong(MobConstants.MOB_SWEEP_TOOL_COMPACTION_MERGEABLE_SIZE,MobConstants.DEFAULT_SWEEP_TOOL_MOB_COMPACTION_MERGEABLE_SIZE);
  for (  FileStatus fileStat : fileStats) {
    MobFileStatus mobFileStatus=null;
    if (!HFileLink.isHFileLink(fileStat.getPath())) {
      mobFileStatus=new MobFileStatus(fileStat,compactionRatio,compactionMergeableSize);
      if (mobFileStatus.needMerge()) {
        smallFileCount++;
      }
      fileStatusMap.put(fileStat.getPath().getName(),mobFileStatus);
    }
  }
  if (smallFileCount >= 2) {
    this.mergeSmall=true;
  }
}
