{
  if (null == values) {
    return;
  }
  MobFileName mobFileName=MobFileName.create(fileName.toString());
  LOG.info("[In reducer] The file name: " + fileName.toString());
  MobFileStatus mobFileStat=fileStatusMap.get(mobFileName.getFileName());
  if (null == mobFileStat) {
    LOG.info("[In reducer] Cannot find the file, probably this record is obsolete");
    return;
  }
  if (compactionBegin - mobFileStat.getFileStatus().getModificationTime() <= mobCompactionDelay) {
    return;
  }
  writer.append(mobFileName.getFileName(),MobConstants.EMPTY_STRING);
  Set<Cell> kvs=new HashSet<Cell>();
  for (  KeyValue kv : values) {
    if (kv.getValueLength() > Bytes.SIZEOF_INT) {
      mobFileStat.addValidSize(Bytes.toInt(kv.getValueArray(),kv.getValueOffset(),Bytes.SIZEOF_INT));
    }
    kvs.add(kv);
  }
  if (mobFileStat.needClean() || (mergeSmall && mobFileStat.needMerge())) {
    context.getCounter(SweepCounter.INPUT_FILE_COUNT).increment(1);
    MobFile file=MobFile.create(fs,new Path(familyDir,mobFileName.getFileName()),conf,cacheConfig);
    StoreFileScanner scanner=null;
    file.open();
    try {
      scanner=file.getScanner();
      scanner.seek(KeyValueUtil.createFirstOnRow(HConstants.EMPTY_BYTE_ARRAY));
      Cell cell;
      while (null != (cell=scanner.next())) {
        if (kvs.contains(cell)) {
          memstore.addToMemstore(cell);
          memstoreUpdated=true;
        }
      }
    }
  finally {
      if (scanner != null) {
        scanner.close();
      }
      file.close();
    }
    toBeDeleted.add(mobFileStat.getFileStatus().getPath());
  }
}
