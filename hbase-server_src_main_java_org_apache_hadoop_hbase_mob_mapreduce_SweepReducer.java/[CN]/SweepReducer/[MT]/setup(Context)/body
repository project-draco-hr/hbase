{
  this.conf=context.getConfiguration();
  this.fs=FileSystem.get(conf);
  mobCompactionDelay=conf.getLong(SweepJob.MOB_COMPACTION_DELAY,SweepJob.ONE_DAY);
  String tableName=conf.get(TableInputFormat.INPUT_TABLE);
  String familyName=conf.get(TableInputFormat.SCAN_COLUMN_FAMILY);
  TableName tn=TableName.valueOf(tableName);
  this.familyDir=MobUtils.getMobFamilyPath(conf,tn,familyName);
  HBaseAdmin admin=new HBaseAdmin(this.conf);
  try {
    family=admin.getTableDescriptor(tn).getFamily(Bytes.toBytes(familyName));
    if (family == null) {
      throw new InvalidFamilyOperationException("Column family '" + familyName + "' does not exist. It might be removed.");
    }
  }
  finally {
    try {
      admin.close();
    }
 catch (    IOException e) {
      LOG.warn("Fail to close the HBaseAdmin",e);
    }
  }
  Configuration copyOfConf=new Configuration(conf);
  copyOfConf.setFloat(HConstants.HFILE_BLOCK_CACHE_SIZE_KEY,0.00001f);
  this.cacheConfig=new CacheConfig(copyOfConf);
  table=new HTable(this.conf,Bytes.toBytes(tableName));
  table.setAutoFlush(false,false);
  table.setWriteBufferSize(1 * 1024 * 1024);
  memstore=new MemStoreWrapper(context,fs,table,family,new DefaultMemStore(),cacheConfig);
  this.compactionBegin=conf.getLong(MobConstants.MOB_SWEEP_TOOL_COMPACTION_START_DATE,0);
  mobTableDir=FSUtils.getTableDir(MobUtils.getMobHome(conf),tn);
}
