{
  Bytes.writeByteArray(out,this.startRow);
  Bytes.writeByteArray(out,this.stopRow);
  out.writeInt(this.maxVersions);
  if (this.filter == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    Bytes.writeByteArray(out,Bytes.toBytes(filter.getClass().getName()));
    filter.write(out);
  }
  if (this.oldFilter == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    Bytes.writeByteArray(out,Bytes.toBytes(oldFilter.getClass().getName()));
    oldFilter.write(out);
  }
  tr.write(out);
  out.writeInt(familyMap.size());
  for (  Map.Entry<byte[],NavigableSet<byte[]>> entry : familyMap.entrySet()) {
    Bytes.writeByteArray(out,entry.getKey());
    NavigableSet<byte[]> columnSet=entry.getValue();
    if (columnSet != null) {
      out.writeInt(columnSet.size());
      for (      byte[] qualifier : columnSet) {
        Bytes.writeByteArray(out,qualifier);
      }
    }
 else {
      out.writeInt(0);
    }
  }
}
