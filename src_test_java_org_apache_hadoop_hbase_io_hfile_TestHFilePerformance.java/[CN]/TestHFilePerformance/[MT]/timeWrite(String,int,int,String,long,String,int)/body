{
  System.out.println("File Type: " + fileType);
  System.out.println("Writing " + fileType + " with codecName: "+ codecName);
  long totalBytesWritten=0;
  byte[] key=new byte[keyLength];
  byte[] value=new byte[valueLength];
  KeyValueGenerator generator=new KeyValueGenerator();
  startTime();
  Path path=new Path(ROOT_DIR,fileType + ".Performance");
  System.out.println(ROOT_DIR + path.getName());
  FSDataOutputStream fout=createFSOutput(path);
  if ("HFile".equals(fileType)) {
    System.out.println("HFile write method: ");
    HFile.Writer writer=HFile.getWriterFactory(conf).createWriter(fout,minBlockSize,codecName,null);
    for (long l=0; l < rows; l++) {
      generator.getKey(key);
      generator.getValue(value);
      writer.append(key,value);
      totalBytesWritten+=key.length;
      totalBytesWritten+=value.length;
    }
    writer.close();
  }
 else   if ("SequenceFile".equals(fileType)) {
    CompressionCodec codec=null;
    if ("gz".equals(codecName))     codec=new GzipCodec();
 else     if (!"none".equals(codecName))     throw new IOException("Codec not supported.");
    SequenceFile.Writer writer;
    if (!"none".equals(codecName))     writer=SequenceFile.createWriter(conf,fout,BytesWritable.class,BytesWritable.class,SequenceFile.CompressionType.BLOCK,codec);
 else     writer=SequenceFile.createWriter(conf,fout,BytesWritable.class,BytesWritable.class,SequenceFile.CompressionType.NONE,null);
    BytesWritable keyBsw;
    BytesWritable valBsw;
    for (long l=0; l < rows; l++) {
      generator.getKey(key);
      keyBsw=new BytesWritable(key);
      totalBytesWritten+=keyBsw.getSize();
      generator.getValue(value);
      valBsw=new BytesWritable(value);
      writer.append(keyBsw,valBsw);
      totalBytesWritten+=valBsw.getSize();
    }
    writer.close();
  }
 else   throw new IOException("File Type is not supported");
  fout.close();
  stopTime();
  printlnWithTimestamp("Data written: ");
  printlnWithTimestamp("  rate  = " + totalBytesWritten / getIntervalMillis() * 1000 / 1024 / 1024 + "MB/s");
  printlnWithTimestamp("  total = " + totalBytesWritten + "B");
  printlnWithTimestamp("File written: ");
  printlnWithTimestamp("  rate  = " + fs.getFileStatus(path).getLen() / getIntervalMillis() * 1000 / 1024 / 1024 + "MB/s");
  printlnWithTimestamp("  total = " + fs.getFileStatus(path).getLen() + "B");
}
