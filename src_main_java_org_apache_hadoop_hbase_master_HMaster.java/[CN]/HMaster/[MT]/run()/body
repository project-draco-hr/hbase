{
  try {
    startServiceThreads();
    int regionCount=this.serverManager.waitForRegionServers();
    this.fileSystemManager.splitLogAfterStartup(this.serverManager.getOnlineServers());
    assignRootAndMeta();
    if (regionCount == 0) {
      this.assignmentManager.cleanoutUnassigned();
      this.assignmentManager.assignAllUserRegions();
    }
 else {
      this.assignmentManager.processFailover();
    }
    this.balancerChore=getAndStartBalancerChore(this);
    this.catalogJanitorChore=Threads.setDaemonThreadRunning(new CatalogJanitor(this,this));
    Sleeper sleeper=new Sleeper(1000,this);
    while (!this.stopped)     sleeper.sleep();
  }
 catch (  Throwable t) {
    abort("Unhandled exception. Starting shutdown.",t);
  }
  if (this.balancerChore != null)   this.balancerChore.interrupt();
  if (this.catalogJanitorChore != null)   this.catalogJanitorChore.interrupt();
  if (!this.abort && this.serverManager.isClusterShutdown()) {
    this.serverManager.letRegionServersShutdown();
  }
  stopServiceThreads();
  this.activeMasterManager.stop();
  HConnectionManager.deleteConnection(this.conf,true);
  this.zooKeeper.close();
  LOG.info("HMaster main thread exiting");
}
