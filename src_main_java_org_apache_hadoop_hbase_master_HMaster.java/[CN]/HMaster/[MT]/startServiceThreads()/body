{
  this.executorService.startExecutorService(ExecutorType.MASTER_OPEN_REGION,conf.getInt("hbase.master.executor.openregion.threads",5));
  this.executorService.startExecutorService(ExecutorType.MASTER_CLOSE_REGION,conf.getInt("hbase.master.executor.closeregion.threads",5));
  this.executorService.startExecutorService(ExecutorType.MASTER_SERVER_OPERATIONS,conf.getInt("hbase.master.executor.serverops.threads",3));
  this.executorService.startExecutorService(ExecutorType.MASTER_META_SERVER_OPERATIONS,conf.getInt("hbase.master.executor.serverops.threads",5));
  this.executorService.startExecutorService(ExecutorType.MASTER_TABLE_OPERATIONS,1);
  String n=Thread.currentThread().getName();
  this.logCleaner=new LogCleaner(conf.getInt("hbase.master.cleaner.interval",60 * 1000),this,conf,getMasterFileSystem().getFileSystem(),getMasterFileSystem().getOldLogDir());
  Threads.setDaemonThreadRunning(logCleaner,n + ".oldLogCleaner");
  int port=this.conf.getInt("hbase.master.info.port",60010);
  if (port >= 0) {
    String a=this.conf.get("hbase.master.info.bindAddress","0.0.0.0");
    this.infoServer=new InfoServer(MASTER,a,port,false);
    this.infoServer.addServlet("status","/master-status",MasterStatusServlet.class);
    this.infoServer.setAttribute(MASTER,this);
    this.infoServer.start();
  }
  this.rpcServer.openServer();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Started service threads");
  }
}
