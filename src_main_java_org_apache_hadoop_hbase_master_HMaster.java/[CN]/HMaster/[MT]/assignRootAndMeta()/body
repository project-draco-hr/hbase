{
  int assigned=0;
  long timeout=this.conf.getLong("hbase.catalog.verification.timeout",1000);
  boolean rit=this.assignmentManager.processRegionInTransitionAndBlockUntilAssigned(HRegionInfo.ROOT_REGIONINFO);
  if (!catalogTracker.verifyRootRegionLocation(timeout)) {
    this.assignmentManager.assignRoot();
    this.catalogTracker.waitForRoot();
    assigned++;
  }
 else {
    this.assignmentManager.regionOnline(HRegionInfo.ROOT_REGIONINFO,this.serverManager.getHServerInfo(this.catalogTracker.getRootLocation()));
  }
  LOG.info("-ROOT- assigned=" + assigned + ", rit="+ rit+ ", location="+ catalogTracker.getRootLocation());
  rit=this.assignmentManager.processRegionInTransitionAndBlockUntilAssigned(HRegionInfo.FIRST_META_REGIONINFO);
  if (!this.catalogTracker.verifyMetaRegionLocation(timeout)) {
    this.assignmentManager.assignMeta();
    this.catalogTracker.waitForMeta();
    this.assignmentManager.waitForAssignment(HRegionInfo.FIRST_META_REGIONINFO);
    assigned++;
  }
 else {
    this.assignmentManager.regionOnline(HRegionInfo.FIRST_META_REGIONINFO,this.serverManager.getHServerInfo(this.catalogTracker.getMetaLocation()));
  }
  LOG.info(".META. assigned=" + assigned + ", rit="+ rit+ ", location="+ catalogTracker.getMetaLocation());
  return assigned;
}
