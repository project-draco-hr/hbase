{
  long maxSize=100000;
  long blockSize=calculateBlockSize(maxSize,10);
  LruBlockCache cache=new LruBlockCache(maxSize,blockSize,false,(int)Math.ceil(1.2 * maxSize / blockSize),LruBlockCache.DEFAULT_LOAD_FACTOR,LruBlockCache.DEFAULT_CONCURRENCY_LEVEL,0.66f,0.99f,0.33f,0.33f,0.34f,1.2f,false,1024);
  CachedItem[] tooLong=generateFixedBlocks(10,1024 + 5,"long");
  CachedItem[] small=generateFixedBlocks(15,600,"small");
  for (  CachedItem i : tooLong) {
    cache.cacheBlock(i.cacheKey,i);
  }
  for (  CachedItem i : small) {
    cache.cacheBlock(i.cacheKey,i);
  }
  assertEquals(15,cache.getBlockCount());
  for (  CachedItem i : small) {
    assertNotNull(cache.getBlock(i.cacheKey,true,false,false));
  }
  for (  CachedItem i : tooLong) {
    assertNull(cache.getBlock(i.cacheKey,true,false,false));
  }
  assertEquals(10,cache.getStats().getFailedInserts());
}
