{
  double delta=0.01;
  CacheStats stats=new CacheStats("test",3);
  stats.rollMetricsPeriod();
  assertEquals(0.0,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(0.0,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.hit(false,true,BlockType.DATA);
  stats.hit(true,true,BlockType.DATA);
  stats.miss(false,false,BlockType.DATA);
  stats.miss(false,false,BlockType.DATA);
  stats.rollMetricsPeriod();
  assertEquals(0.5,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(1.0,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.miss(true,false,BlockType.DATA);
  stats.miss(false,false,BlockType.DATA);
  stats.miss(false,false,BlockType.DATA);
  stats.miss(false,false,BlockType.DATA);
  stats.rollMetricsPeriod();
  assertEquals(0.25,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(0.5,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.hit(false,true,BlockType.DATA);
  stats.hit(true,true,BlockType.DATA);
  stats.hit(false,true,BlockType.DATA);
  stats.hit(true,true,BlockType.DATA);
  stats.rollMetricsPeriod();
  assertEquals(0.5,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(0.75,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.miss(true,false,BlockType.DATA);
  stats.miss(true,false,BlockType.DATA);
  stats.rollMetricsPeriod();
  assertEquals(0.4,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(0.4,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.miss(true,false,BlockType.DATA);
  stats.miss(true,false,BlockType.DATA);
  stats.hit(false,true,BlockType.DATA);
  stats.hit(false,true,BlockType.DATA);
  stats.rollMetricsPeriod();
  assertEquals(0.6,stats.getHitRatioPastNPeriods(),delta);
  assertEquals((double)1 / 3,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.rollMetricsPeriod();
  assertEquals((double)1 / 3,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(0.0,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.rollMetricsPeriod();
  assertEquals(0.5,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(0.0,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.rollMetricsPeriod();
  assertEquals(0.0,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(0.0,stats.getHitCachingRatioPastNPeriods(),delta);
  stats.miss(true,false,BlockType.DATA);
  stats.miss(false,false,BlockType.DATA);
  stats.hit(true,true,BlockType.DATA);
  stats.hit(false,true,BlockType.DATA);
  stats.rollMetricsPeriod();
  assertEquals(0.5,stats.getHitRatioPastNPeriods(),delta);
  assertEquals(0.5,stats.getHitCachingRatioPastNPeriods(),delta);
}
