{
  Table sourceTable=TEST_UTIL.getConnection().getTable(sourceTableName);
  Table targetTable=TEST_UTIL.getConnection().getTable(targetTableName);
  ResultScanner sourceScanner=sourceTable.getScanner(new Scan());
  ResultScanner targetScanner=targetTable.getScanner(new Scan());
  for (int i=0; i < expectedRows; i++) {
    Result sourceRow=sourceScanner.next();
    Result targetRow=targetScanner.next();
    LOG.debug("SOURCE row: " + (sourceRow == null ? "null" : Bytes.toInt(sourceRow.getRow())) + " cells:"+ sourceRow);
    LOG.debug("TARGET row: " + (targetRow == null ? "null" : Bytes.toInt(targetRow.getRow())) + " cells:"+ targetRow);
    if (sourceRow == null) {
      Assert.fail("Expected " + expectedRows + " source rows but only found "+ i);
    }
    if (targetRow == null) {
      Assert.fail("Expected " + expectedRows + " target rows but only found "+ i);
    }
    Cell[] sourceCells=sourceRow.rawCells();
    Cell[] targetCells=targetRow.rawCells();
    if (sourceCells.length != targetCells.length) {
      LOG.debug("Source cells: " + Arrays.toString(sourceCells));
      LOG.debug("Target cells: " + Arrays.toString(targetCells));
      Assert.fail("Row " + Bytes.toInt(sourceRow.getRow()) + " has "+ sourceCells.length+ " cells in source table but "+ targetCells.length+ " cells in target table");
    }
    for (int j=0; j < sourceCells.length; j++) {
      Cell sourceCell=sourceCells[j];
      Cell targetCell=targetCells[j];
      try {
        if (!CellUtil.matchingRow(sourceCell,targetCell)) {
          Assert.fail("Rows don't match");
        }
        if (!CellUtil.matchingFamily(sourceCell,targetCell)) {
          Assert.fail("Families don't match");
        }
        if (!CellUtil.matchingQualifier(sourceCell,targetCell)) {
          Assert.fail("Qualifiers don't match");
        }
        if (!CellUtil.matchingTimestamp(sourceCell,targetCell)) {
          Assert.fail("Timestamps don't match");
        }
        if (!CellUtil.matchingValue(sourceCell,targetCell)) {
          Assert.fail("Values don't match");
        }
      }
 catch (      Throwable t) {
        LOG.debug("Source cell: " + sourceCell + " target cell: "+ targetCell);
        Throwables.propagate(t);
      }
    }
  }
  Result sourceRow=sourceScanner.next();
  if (sourceRow != null) {
    Assert.fail("Source table has more than " + expectedRows + " rows.  Next row: "+ Bytes.toInt(sourceRow.getRow()));
  }
  Result targetRow=targetScanner.next();
  if (targetRow != null) {
    Assert.fail("Target table has more than " + expectedRows + " rows.  Next row: "+ Bytes.toInt(targetRow.getRow()));
  }
  sourceScanner.close();
  targetScanner.close();
  sourceTable.close();
  targetTable.close();
}
