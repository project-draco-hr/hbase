{
  List<Text> keyList=new ArrayList<Text>();
  long scannerId=-1L;
  Text startRow=new Text(tableName.toString() + ",,999999999999999");
  HRegionLocation metaLocation=null;
  HRegionInterface server;
  do {
    try {
      metaLocation=connection.locateRegion(META_TABLE_NAME,startRow);
      server=connection.getHRegionConnection(metaLocation.getServerAddress());
      scannerId=server.openScanner(metaLocation.getRegionInfo().getRegionName(),COLUMN_FAMILY_ARRAY,tableName,LATEST_TIMESTAMP,null);
      SCANNER_LOOP:       while (true) {
        HbaseMapWritable values=server.next(scannerId);
        if (values == null || values.size() == 0) {
          break;
        }
        for (        Map.Entry<Writable,Writable> e : values.entrySet()) {
          HStoreKey key=(HStoreKey)e.getKey();
          if (key.getColumn().equals(COL_REGIONINFO)) {
            HRegionInfo info=new HRegionInfo();
            info=(HRegionInfo)Writables.getWritable(((ImmutableBytesWritable)e.getValue()).get(),info);
            if (!info.getTableDesc().getName().equals(this.tableName)) {
              break SCANNER_LOOP;
            }
            if (info.isOffline()) {
              continue SCANNER_LOOP;
            }
            if (info.isSplit()) {
              continue SCANNER_LOOP;
            }
            keyList.add(info.getStartKey());
          }
        }
      }
      server.close(scannerId);
      startRow=metaLocation.getRegionInfo().getEndKey();
    }
 catch (    IOException e) {
      throw e;
    }
  }
 while (startRow.compareTo(EMPTY_START_ROW) != 0);
  Text[] arr=new Text[keyList.size()];
  for (int i=0; i < keyList.size(); i++) {
    arr[i]=keyList.get(i);
  }
  return arr;
}
