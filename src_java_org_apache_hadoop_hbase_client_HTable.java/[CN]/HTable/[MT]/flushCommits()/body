{
  try {
    if (writeBuffer.isEmpty()) {
      return;
    }
    Collections.sort(writeBuffer);
    List<BatchUpdate> tempUpdates=new ArrayList<BatchUpdate>();
    byte[] currentRegion=connection.getRegionLocation(tableName,writeBuffer.get(0).getRow(),false).getRegionInfo().getRegionName();
    byte[] region=currentRegion;
    boolean isLastRow=false;
    for (int i=0; i < writeBuffer.size(); i++) {
      BatchUpdate batchUpdate=writeBuffer.get(i);
      tempUpdates.add(batchUpdate);
      isLastRow=(i + 1) == writeBuffer.size();
      if (!isLastRow) {
        region=connection.getRegionLocation(tableName,writeBuffer.get(i + 1).getRow(),false).getRegionInfo().getRegionName();
      }
      if (!Bytes.equals(currentRegion,region) || isLastRow) {
        final BatchUpdate[] updates=tempUpdates.toArray(new BatchUpdate[0]);
        int index=connection.getRegionServerForWithoutRetries(new ServerCallable<Integer>(connection,tableName,batchUpdate.getRow()){
          public Integer call() throws IOException {
            int i=server.batchUpdates(location.getRegionInfo().getRegionName(),updates);
            return i;
          }
        }
);
        if (index != -1) {
          try {
            Thread.sleep(1000);
          }
 catch (          InterruptedException e) {
          }
          i=i - updates.length + index;
          region=connection.getRegionLocation(tableName,writeBuffer.get(i + 1).getRow(),true).getRegionInfo().getRegionName();
        }
        currentRegion=region;
        tempUpdates.clear();
      }
    }
  }
  finally {
    currentWriteBufferSize=0;
    writeBuffer.clear();
  }
}
