{
  if (cache.size() == 0 && this.closed) {
    return null;
  }
  if (cache.size() == 0) {
    RowResult[] values=null;
    int countdown=this.scannerCaching;
    callable.setCaching(this.scannerCaching);
    do {
      try {
        values=getConnection().getRegionServerWithRetries(callable);
      }
 catch (      IOException e) {
        if (e instanceof UnknownScannerException && lastNext + scannerTimeout < System.currentTimeMillis()) {
          ScannerTimeoutException ex=new ScannerTimeoutException();
          ex.initCause(e);
          throw ex;
        }
        throw e;
      }
      lastNext=System.currentTimeMillis();
      if (values != null && values.length > 0) {
        for (        RowResult rs : values) {
          cache.add(rs);
          countdown--;
        }
      }
    }
 while (countdown > 0 && nextScanner(countdown));
  }
  if (cache.size() > 0) {
    return cache.poll();
  }
  return null;
}
