{
  Assume.assumeTrue(!util.isReadShortCircuitOn());
  try {
    util.getConfiguration().setInt("hbase.regionserver.optionallogflushinterval",Integer.MAX_VALUE);
    util.getConfiguration().setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,3);
    util.startMiniCluster(1);
    byte[] tableName=Bytes.toBytes("table");
    byte[] fam=Bytes.toBytes("fam");
    HBaseAdmin admin=new HBaseAdmin(util.getConfiguration());
    HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(tableName));
    desc.addFamily(new HColumnDescriptor(fam).setMaxVersions(1).setBlockCacheEnabled(false));
    admin.createTable(desc);
    util.getConfiguration().setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,1);
    HTable table=new HTable(new Configuration(util.getConfiguration()),tableName);
    util.loadTable(table,fam);
    table.flushCommits();
    util.flush();
    util.countRows(table);
    util.getDFSCluster().shutdownDataNodes();
    try {
      util.countRows(table);
      fail("Did not fail to count after removing data");
    }
 catch (    Exception e) {
      LOG.info("Got expected error",e);
      assertTrue(e.getMessage().contains("Could not seek"));
    }
    util.getDFSCluster().restartDataNodes();
  }
  finally {
    util.getMiniHBaseCluster().killAll();
    util.shutdownMiniCluster();
  }
}
