{
  this.dynamicLogicExpression=dynamicLogicExpression;
  this.valueFromQueryArray=valueFromQueryArray;
  this.currentCellToColumnIndexMap=new HashMap<>();
  for (int i=0; i < fields.size(); i++) {
    Field field=fields.apply(i);
    byte[] cfBytes=field.cfBytes();
    ByteArrayComparable familyByteComparable=new ByteArrayComparable(cfBytes,0,cfBytes.length);
    HashMap<ByteArrayComparable,String> qualifierIndexMap=currentCellToColumnIndexMap.get(familyByteComparable);
    if (qualifierIndexMap == null) {
      qualifierIndexMap=new HashMap<>();
      currentCellToColumnIndexMap.put(familyByteComparable,qualifierIndexMap);
    }
    byte[] qBytes=field.colBytes();
    ByteArrayComparable qualifierByteComparable=new ByteArrayComparable(qBytes,0,qBytes.length);
    qualifierIndexMap.put(qualifierByteComparable,field.colName());
  }
}
