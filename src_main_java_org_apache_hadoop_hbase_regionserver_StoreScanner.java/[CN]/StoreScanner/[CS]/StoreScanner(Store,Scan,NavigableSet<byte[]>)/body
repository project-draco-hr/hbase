{
  this(store,scan.getCacheBlocks(),scan,columns);
  matcher=new ScanQueryMatcher(scan,store.getFamily().getName(),columns,store.ttl,store.comparator.getRawComparator(),store.minVersions,store.versionsToReturn(scan.getMaxVersions()),false);
  List<KeyValueScanner> scanners=getScanners(scan,columns);
  if (explicitColumnQuery && lazySeekEnabledGlobally) {
    for (    KeyValueScanner scanner : scanners) {
      scanner.requestSeek(matcher.getStartKey(),false,true);
    }
  }
 else {
    for (    KeyValueScanner scanner : scanners) {
      scanner.seek(matcher.getStartKey());
    }
  }
  heap=new KeyValueHeap(scanners,store.comparator);
  this.store.addChangedReaderObserver(this);
}
