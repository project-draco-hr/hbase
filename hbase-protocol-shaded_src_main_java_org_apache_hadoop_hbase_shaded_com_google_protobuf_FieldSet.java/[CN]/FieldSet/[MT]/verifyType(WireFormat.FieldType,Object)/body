{
  if (value == null) {
    throw new NullPointerException();
  }
  boolean isValid=false;
switch (type.getJavaType()) {
case INT:
    isValid=value instanceof Integer;
  break;
case LONG:
isValid=value instanceof Long;
break;
case FLOAT:
isValid=value instanceof Float;
break;
case DOUBLE:
isValid=value instanceof Double;
break;
case BOOLEAN:
isValid=value instanceof Boolean;
break;
case STRING:
isValid=value instanceof String;
break;
case BYTE_STRING:
isValid=value instanceof ByteString || value instanceof byte[];
break;
case ENUM:
isValid=(value instanceof Integer || value instanceof Internal.EnumLite);
break;
case MESSAGE:
isValid=(value instanceof MessageLite) || (value instanceof LazyField);
break;
}
if (!isValid) {
throw new IllegalArgumentException("Wrong object type used with protocol message reflection.");
}
}
