{
  this.conf=conf;
  this.storeConfigInfo=storeConfigInfo;
  maxCompactSize=conf.getLong(CONFIG_PREFIX + "max.size",Long.MAX_VALUE);
  minCompactSize=conf.getLong(CONFIG_PREFIX + "min.size",storeConfigInfo.getMemstoreFlushSize());
  minFilesToCompact=Math.max(2,conf.getInt(CONFIG_PREFIX + "min",conf.getInt("hbase.hstore.compactionThreshold",3)));
  maxFilesToCompact=conf.getInt(CONFIG_PREFIX + "max",10);
  compactionRatio=conf.getFloat(CONFIG_PREFIX + "ratio",1.2F);
  offPeekCompactionRatio=conf.getFloat(CONFIG_PREFIX + "ratio.offpeak",5.0F);
  throttlePoint=conf.getLong("hbase.regionserver.thread.compaction.throttle",2 * maxFilesToCompact * storeConfigInfo.getMemstoreFlushSize());
  shouldDeleteExpired=conf.getBoolean("hbase.store.delete.expired.storefile",true);
  majorCompactionPeriod=conf.getLong(HConstants.MAJOR_COMPACTION_PERIOD,1000 * 60 * 60* 24* 7);
  majorCompactionJitter=conf.getFloat("hbase.hregion.majorcompaction.jitter",0.50F);
  LOG.info(this);
}
