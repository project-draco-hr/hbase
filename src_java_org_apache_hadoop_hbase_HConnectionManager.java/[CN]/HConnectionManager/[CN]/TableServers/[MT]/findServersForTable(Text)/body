{
  if (this.tablesToServers.remove(tableName) != null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Wiping out all we know of " + tableName);
    }
  }
  SortedMap<Text,HRegionLocation> srvrs=new TreeMap<Text,HRegionLocation>();
  if (tableName.equals(ROOT_TABLE_NAME)) {
synchronized (rootRegionLock) {
      srvrs=this.tablesToServers.get(ROOT_TABLE_NAME);
      if (srvrs == null) {
        srvrs=locateRootRegion();
      }
      this.tablesToServers.put(tableName,srvrs);
    }
  }
 else   if (tableName.equals(META_TABLE_NAME)) {
synchronized (metaRegionLock) {
      SortedMap<Text,HRegionLocation> rootServers=tablesToServers.get(ROOT_TABLE_NAME);
      for (boolean refindRoot=true; refindRoot; ) {
        if (rootServers == null || rootServers.size() == 0) {
          rootServers=findServersForTable(ROOT_TABLE_NAME);
          refindRoot=false;
        }
        try {
          srvrs=getTableServers(rootServers,META_TABLE_NAME);
          break;
        }
 catch (        NotServingRegionException e) {
          if (!refindRoot) {
            throw e;
          }
          rootServers.clear();
        }
      }
      this.tablesToServers.put(tableName,srvrs);
    }
  }
 else {
    boolean waited=false;
synchronized (this.tablesBeingLocated) {
      while (this.tablesBeingLocated.contains(tableName)) {
        waited=true;
        try {
          this.tablesBeingLocated.wait(threadWakeFrequency);
        }
 catch (        InterruptedException e) {
        }
      }
      if (!waited) {
        this.tablesBeingLocated.add(tableName);
      }
 else {
        SortedMap<Text,HRegionLocation> tableServers=this.tablesToServers.get(tableName);
        if (tableServers == null) {
          throw new TableNotFoundException("table not found: " + tableName);
        }
        srvrs.putAll(tableServers);
      }
    }
    if (!waited) {
      try {
        SortedMap<Text,HRegionLocation> metaServers=this.tablesToServers.get(META_TABLE_NAME);
        for (boolean refindMeta=true; refindMeta; ) {
          if (metaServers == null || metaServers.size() == 0) {
            metaServers=findServersForTable(META_TABLE_NAME);
            refindMeta=false;
          }
          try {
            srvrs=getTableServers(metaServers,tableName);
            break;
          }
 catch (          NotServingRegionException e) {
            if (!refindMeta) {
              throw e;
            }
            metaServers.clear();
          }
        }
        this.tablesToServers.put(tableName,srvrs);
      }
  finally {
synchronized (this.tablesBeingLocated) {
          this.tablesBeingLocated.remove(tableName);
          this.tablesBeingLocated.notifyAll();
        }
      }
    }
  }
  this.tablesToServers.put(tableName,srvrs);
  return srvrs;
}
