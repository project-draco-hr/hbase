{
  if (this.tablesToServers.remove(tableName) != null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Wiping out all we know of " + tableName);
    }
  }
  SortedMap<Text,HRegionLocation> servers=new TreeMap<Text,HRegionLocation>();
  if (tableName.equals(ROOT_TABLE_NAME)) {
synchronized (rootRegionLock) {
      SortedMap<Text,HRegionLocation> tableServers=this.tablesToServers.get(ROOT_TABLE_NAME);
      if (tableServers == null) {
        tableServers=locateRootRegion();
      }
      servers.putAll(tableServers);
    }
  }
 else   if (tableName.equals(META_TABLE_NAME)) {
synchronized (metaRegionLock) {
      if (tablesToServers.get(ROOT_TABLE_NAME) == null) {
        findServersForTable(ROOT_TABLE_NAME);
      }
      SortedMap<Text,HRegionLocation> tableServers=this.tablesToServers.get(META_TABLE_NAME);
      if (tableServers == null) {
        for (int tries=0; tries < numRetries; tries++) {
          try {
            tableServers=loadMetaFromRoot();
            break;
          }
 catch (          IOException e) {
            if (tries < numRetries - 1) {
              findServersForTable(ROOT_TABLE_NAME);
              continue;
            }
            throw e;
          }
        }
      }
      servers.putAll(tableServers);
    }
  }
 else {
    boolean waited=false;
synchronized (this.tablesBeingLocated) {
      while (this.tablesBeingLocated.contains(tableName)) {
        waited=true;
        try {
          this.tablesBeingLocated.wait(threadWakeFrequency);
        }
 catch (        InterruptedException e) {
        }
      }
      if (!waited) {
        this.tablesBeingLocated.add(tableName);
      }
 else {
        SortedMap<Text,HRegionLocation> tableServers=this.tablesToServers.get(tableName);
        if (tableServers == null) {
          throw new TableNotFoundException("table not found: " + tableName);
        }
        servers.putAll(tableServers);
      }
    }
    if (!waited) {
      try {
        for (int tries=0; tries < numRetries; tries++) {
          boolean success=true;
          SortedMap<Text,HRegionLocation> metaServers=this.tablesToServers.get(META_TABLE_NAME);
          if (metaServers == null) {
            metaServers=findServersForTable(META_TABLE_NAME);
          }
          Text firstMetaRegion=metaServers.headMap(tableName).lastKey();
          metaServers=metaServers.tailMap(firstMetaRegion);
          for (          HRegionLocation t : metaServers.values()) {
            try {
              servers.putAll(scanOneMetaRegion(t,tableName));
            }
 catch (            IOException e) {
              if (tries < numRetries - 1) {
                findServersForTable(META_TABLE_NAME);
                success=false;
                break;
              }
              throw e;
            }
          }
          if (success) {
            break;
          }
        }
      }
  finally {
synchronized (this.tablesBeingLocated) {
          this.tablesBeingLocated.remove(tableName);
          this.tablesBeingLocated.notifyAll();
        }
      }
    }
  }
  this.tablesToServers.put(tableName,servers);
  if (LOG.isDebugEnabled()) {
    for (    Map.Entry<Text,HRegionLocation> e : servers.entrySet()) {
      LOG.debug("Server " + e.getKey() + " is serving: "+ e.getValue()+ " for table "+ tableName);
    }
  }
  return servers;
}
