{
  HashSet<HTableDescriptor> uniqueTables=new HashSet<HTableDescriptor>();
  SortedMap<Text,HRegionLocation> metaTables=getTableServers(META_TABLE_NAME);
  for (  HRegionLocation t : metaTables.values()) {
    HRegionInterface server=getHRegionConnection(t.getServerAddress());
    long scannerId=-1L;
    try {
      scannerId=server.openScanner(t.getRegionInfo().getRegionName(),COLUMN_FAMILY_ARRAY,EMPTY_START_ROW,System.currentTimeMillis(),null);
      HRegionInfo info=new HRegionInfo();
      while (true) {
        MapWritable values=server.next(scannerId);
        if (values == null || values.size() == 0) {
          break;
        }
        for (        Map.Entry<Writable,Writable> e : values.entrySet()) {
          HStoreKey key=(HStoreKey)e.getKey();
          if (key.getColumn().equals(COL_REGIONINFO)) {
            info=(HRegionInfo)Writables.getWritable(((ImmutableBytesWritable)e.getValue()).get(),info);
            if (info.startKey.getLength() == 0) {
              uniqueTables.add(info.tableDesc);
            }
          }
        }
      }
    }
 catch (    RemoteException ex) {
      throw RemoteExceptionHandler.decodeRemoteException(ex);
    }
 finally {
      if (scannerId != -1L) {
        server.close(scannerId);
      }
    }
  }
  return uniqueTables.toArray(new HTableDescriptor[uniqueTables.size()]);
}
