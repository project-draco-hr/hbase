{
  String tableName="testCompactFilesWithDstDirFull";
  fs=FileSystem.get(conf);
  FaultyDistributedFileSystem faultyFs=(FaultyDistributedFileSystem)fs;
  Path testDir=FSUtils.getRootDir(conf);
  Path mobTestDir=new Path(testDir,MobConstants.MOB_DIR_NAME);
  basePath=new Path(new Path(mobTestDir,tableName),family);
  try {
    int count=2;
    createStoreFiles(basePath,family,qf,count,Type.Put,true);
    listFiles();
    TableName tName=TableName.valueOf(tableName);
    MobCompactor compactor=new PartitionedMobCompactor(conf,faultyFs,tName,hcd,pool);
    faultyFs.setThrowException(true);
    try {
      compactor.compact(allFiles,true);
    }
 catch (    IOException e) {
      System.out.println("Expected exception, ignore");
    }
    Path tempPath=new Path(MobUtils.getMobHome(conf),MobConstants.TEMP_DIR_NAME);
    FileStatus[] ls=faultyFs.listStatus(tempPath);
    assertTrue(ls.length == 1);
    assertTrue(MobConstants.BULKLOAD_DIR_NAME.equalsIgnoreCase(ls[0].getPath().getName()));
    Path bulkloadPath=new Path(tempPath,new Path(MobConstants.BULKLOAD_DIR_NAME,new Path(tName.getNamespaceAsString(),tName.getQualifierAsString())));
    FileStatus[] lsBulkload=faultyFs.listStatus(bulkloadPath);
    assertTrue(lsBulkload.length == 0);
  }
  finally {
    faultyFs.setThrowException(false);
  }
}
