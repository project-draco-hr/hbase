{
  if (this.closed) {
    return;
  }
  try {
    backgroundFlushCommits(true);
    this.pool.shutdown();
    boolean terminated=false;
    int loopCnt=0;
    do {
      terminated=this.pool.awaitTermination(60,TimeUnit.SECONDS);
      loopCnt+=1;
      if (loopCnt >= 10) {
        LOG.warn("close() failed to terminate pool after 10 minutes. Abandoning pool.");
        break;
      }
    }
 while (!terminated);
  }
 catch (  InterruptedException e) {
    LOG.warn("waitForTermination interrupted");
  }
 finally {
    this.closed=true;
  }
}
