{
  Map<HRegionInfo,ServerName[]> secondaryAndTertiaryMap=new HashMap<HRegionInfo,ServerName[]>();
  for (  Map.Entry<HRegionInfo,ServerName> entry : primaryRSMap.entrySet()) {
    HRegionInfo regionInfo=entry.getKey();
    ServerName primaryRS=entry.getValue();
    try {
      ServerName[] favoredNodes;
      String primaryRack=rackManager.getRack(primaryRS);
      if (getTotalNumberOfRacks() == 1) {
        favoredNodes=singleRackCase(regionInfo,primaryRS,primaryRack);
      }
 else {
        favoredNodes=multiRackCase(regionInfo,primaryRS,primaryRack);
      }
      if (favoredNodes != null) {
        secondaryAndTertiaryMap.put(regionInfo,favoredNodes);
        LOG.debug("Place the secondary and tertiary region server for region " + regionInfo.getRegionNameAsString());
      }
    }
 catch (    Exception e) {
      LOG.warn("Cannot place the favored nodes for region " + regionInfo.getRegionNameAsString() + " because "+ e);
      continue;
    }
  }
  return secondaryAndTertiaryMap;
}
