{
  assertTrue(HFileBlock.BYTE_BUFFER_HEAP_SIZE == 64 || HFileBlock.BYTE_BUFFER_HEAP_SIZE == 80);
  for (  int size : new int[]{100,256,12345}) {
    byte[] byteArr=new byte[HFileBlock.HEADER_SIZE + size];
    ByteBuffer buf=ByteBuffer.wrap(byteArr,0,size);
    HFileBlock block=new HFileBlock(BlockType.DATA,size,size,-1,buf,true,-1);
    assertEquals(80,HFileBlock.BYTE_BUFFER_HEAP_SIZE);
    long byteBufferExpectedSize=ClassSize.align(ClassSize.estimateBase(buf.getClass(),true) + HFileBlock.HEADER_SIZE + size);
    long hfileBlockExpectedSize=ClassSize.align(ClassSize.estimateBase(HFileBlock.class,true));
    long expected=hfileBlockExpectedSize + byteBufferExpectedSize;
    assertEquals("Block data size: " + size + ", byte buffer expected "+ "size: "+ byteBufferExpectedSize+ ", HFileBlock class expected "+ "size: "+ hfileBlockExpectedSize+ ";",expected,block.heapSize());
  }
}
