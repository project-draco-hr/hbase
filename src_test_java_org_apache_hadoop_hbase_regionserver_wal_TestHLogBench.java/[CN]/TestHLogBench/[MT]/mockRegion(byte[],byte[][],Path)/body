{
  HBaseTestingUtility htu=new HBaseTestingUtility();
  Configuration conf=htu.getConfiguration();
  conf.setBoolean("hbase.rs.cacheblocksonwrite",true);
  conf.setBoolean("hbase.hregion.use.incrementnew",true);
  conf.setBoolean("dfs.support.append",true);
  FileSystem fs=FileSystem.get(conf);
  int numQualifiers=10;
  byte[][] qualifiers=new byte[numQualifiers][];
  for (int i=0; i < numQualifiers; i++)   qualifiers[i]=Bytes.toBytes("qf" + i);
  int numRows=10;
  byte[][] rows=new byte[numRows][];
  for (int i=0; i < numRows; i++)   rows[i]=Bytes.toBytes("r" + i);
  ((Log4JLogger)HRegion.LOG).getLogger().setLevel(Level.WARN);
  HTableDescriptor htd=new HTableDescriptor(tableName);
  for (  byte[] family : familyNames)   htd.addFamily(new HColumnDescriptor(family));
  HRegionInfo hri=new HRegionInfo(tableName,Bytes.toBytes(0L),Bytes.toBytes(0xffffffffL));
  if (fs.exists(rootDir)) {
    if (!fs.delete(rootDir,true)) {
      throw new IOException("Failed delete of " + rootDir);
    }
  }
  return HRegion.createHRegion(hri,rootDir,conf,htd);
}
