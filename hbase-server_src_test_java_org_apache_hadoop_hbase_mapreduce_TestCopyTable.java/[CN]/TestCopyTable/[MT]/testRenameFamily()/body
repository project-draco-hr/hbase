{
  TableName sourceTable=TableName.valueOf("sourceTable");
  TableName targetTable=TableName.valueOf("targetTable");
  byte[][] families={FAMILY_A,FAMILY_B};
  Table t=TEST_UTIL.createTable(sourceTable,families);
  Table t2=TEST_UTIL.createTable(targetTable,families);
  Put p=new Put(ROW1);
  p.addColumn(FAMILY_A,QUALIFIER,Bytes.toBytes("Data11"));
  p.addColumn(FAMILY_B,QUALIFIER,Bytes.toBytes("Data12"));
  p.addColumn(FAMILY_A,QUALIFIER,Bytes.toBytes("Data13"));
  t.put(p);
  p=new Put(ROW2);
  p.addColumn(FAMILY_B,QUALIFIER,Bytes.toBytes("Dat21"));
  p.addColumn(FAMILY_A,QUALIFIER,Bytes.toBytes("Data22"));
  p.addColumn(FAMILY_B,QUALIFIER,Bytes.toBytes("Data23"));
  t.put(p);
  long currentTime=System.currentTimeMillis();
  String[] args=new String[]{"--new.name=" + targetTable,"--families=a:b","--all.cells","--starttime=" + (currentTime - 100000),"--endtime=" + (currentTime + 100000),"--versions=1",sourceTable.getNameAsString()};
  assertNull(t2.get(new Get(ROW1)).getRow());
  assertTrue(runCopy(args));
  assertNotNull(t2.get(new Get(ROW1)).getRow());
  Result res=t2.get(new Get(ROW1));
  byte[] b1=res.getValue(FAMILY_B,QUALIFIER);
  assertEquals("Data13",new String(b1));
  assertNotNull(t2.get(new Get(ROW2)).getRow());
  res=t2.get(new Get(ROW2));
  b1=res.getValue(FAMILY_A,QUALIFIER);
  assertNull(b1);
}
