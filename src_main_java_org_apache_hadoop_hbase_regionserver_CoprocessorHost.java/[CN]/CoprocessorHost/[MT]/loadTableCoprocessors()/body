{
  for (  Map.Entry<ImmutableBytesWritable,ImmutableBytesWritable> e : region.getTableDesc().getValues().entrySet()) {
    String key=Bytes.toString(e.getKey().get());
    if (key.startsWith("COPROCESSOR")) {
      try {
        String spec=Bytes.toString(e.getValue().get());
        Matcher matcher=attrSpecMatch.matcher(spec);
        if (matcher.matches()) {
          Path path=new Path(matcher.group(1));
          String className=matcher.group(2);
          Coprocessor.Priority priority=Coprocessor.Priority.valueOf(matcher.group(3));
          load(path,className,priority);
          LOG.info("Load coprocessor " + className + " from HTD of "+ Bytes.toString(region.getTableDesc().getName())+ " successfully.");
        }
 else {
          LOG.warn("attribute '" + key + "' has invalid coprocessor spec");
        }
      }
 catch (      IOException ex) {
        LOG.warn(StringUtils.stringifyException(ex));
      }
    }
  }
}
