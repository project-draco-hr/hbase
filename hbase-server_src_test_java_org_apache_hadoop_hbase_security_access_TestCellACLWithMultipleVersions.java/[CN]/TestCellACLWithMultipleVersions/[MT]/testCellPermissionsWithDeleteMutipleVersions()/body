{
  final byte[] TEST_ROW1=Bytes.toBytes("r1");
  final byte[] TEST_ROW2=Bytes.toBytes("r2");
  final byte[] TEST_Q1=Bytes.toBytes("q1");
  final byte[] TEST_Q2=Bytes.toBytes("q2");
  final byte[] ZERO=Bytes.toBytes(0L);
  final User user1=User.createUserForTesting(conf,"user1",new String[0]);
  final User user2=User.createUserForTesting(conf,"user2",new String[0]);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          Put p=new Put(TEST_ROW1);
          p.add(TEST_FAMILY1,TEST_Q1,ZERO);
          p.add(TEST_FAMILY1,TEST_Q2,ZERO);
          p.setACL(user1.getShortName(),new Permission(Permission.Action.READ,Permission.Action.WRITE));
          t.put(p);
          p=new Put(TEST_ROW2);
          p.add(TEST_FAMILY1,TEST_Q1,ZERO);
          p.add(TEST_FAMILY1,TEST_Q2,ZERO);
          p.setACL(user1.getShortName(),new Permission(Permission.Action.READ,Permission.Action.WRITE));
          t.put(p);
        }
       }
       return null;
    }
  }
,USER_OWNER);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          Put p=new Put(TEST_ROW1);
          p.add(TEST_FAMILY1,TEST_Q1,ZERO);
          p.add(TEST_FAMILY1,TEST_Q2,ZERO);
          Map<String,Permission> perms=prepareCellPermissions(new String[]{user1.getShortName(),user2.getShortName(),AuthUtil.toGroupEntry(GROUP)},Action.READ,Action.WRITE);
          p.setACL(perms);
          t.put(p);
          p=new Put(TEST_ROW2);
          p.add(TEST_FAMILY1,TEST_Q1,ZERO);
          p.add(TEST_FAMILY1,TEST_Q2,ZERO);
          p.setACL(perms);
          t.put(p);
        }
       }
       return null;
    }
  }
,user1);
  user1.runAs(new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          Delete d=new Delete(TEST_ROW1);
          d.deleteColumns(TEST_FAMILY1,TEST_Q1);
          d.deleteColumns(TEST_FAMILY1,TEST_Q2);
          t.delete(d);
        }
       }
       return null;
    }
  }
);
  verifyUserDeniedForDeleteMultipleVersions(user2,TEST_ROW2,TEST_Q1,TEST_Q2);
  verifyUserDeniedForDeleteMultipleVersions(GROUP_USER,TEST_ROW2,TEST_Q1,TEST_Q2);
  user1.runAs(new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          Delete d=new Delete(TEST_ROW2);
          d.deleteFamily(TEST_FAMILY1);
          t.delete(d);
        }
       }
       return null;
    }
  }
);
}
