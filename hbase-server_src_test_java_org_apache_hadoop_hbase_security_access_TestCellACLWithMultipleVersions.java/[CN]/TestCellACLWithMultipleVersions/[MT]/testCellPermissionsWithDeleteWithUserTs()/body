{
  USER_OWNER.runAs(new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          Put p=new Put(TEST_ROW);
          p.addColumn(TEST_FAMILY1,TEST_Q1,123L,ZERO);
          p.addColumn(TEST_FAMILY1,TEST_Q2,123L,ZERO);
          p.setACL(prepareCellPermissions(new String[]{USER_OTHER.getShortName(),AuthUtil.toGroupEntry(GROUP),USER_OTHER2.getShortName()},Permission.Action.READ,Permission.Action.WRITE));
          t.put(p);
          p=new Put(TEST_ROW);
          p.addColumn(TEST_FAMILY1,TEST_Q1,125L,ONE);
          p.addColumn(TEST_FAMILY1,TEST_Q2,125L,ONE);
          p.setACL(prepareCellPermissions(new String[]{USER_OTHER.getShortName(),AuthUtil.toGroupEntry(GROUP)},Action.READ,Action.WRITE));
          t.put(p);
          p=new Put(TEST_ROW);
          p.addColumn(TEST_FAMILY1,TEST_Q1,127L,TWO);
          p.addColumn(TEST_FAMILY1,TEST_Q2,127L,TWO);
          p.setACL(prepareCellPermissions(new String[]{USER_OTHER.getShortName(),AuthUtil.toGroupEntry(GROUP)},Action.READ,Action.WRITE));
          t.put(p);
          return null;
        }
       }
     }
  }
);
  USER_OTHER2.runAs(new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          Delete d=new Delete(TEST_ROW,124L);
          d.deleteColumns(TEST_FAMILY1,TEST_Q1);
          t.delete(d);
        }
       }
       return null;
    }
  }
);
  USER_OTHER2.runAs(new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          Delete d=new Delete(TEST_ROW);
          d.deleteColumns(TEST_FAMILY1,TEST_Q2,124L);
          t.delete(d);
        }
       }
       return null;
    }
  }
);
}
