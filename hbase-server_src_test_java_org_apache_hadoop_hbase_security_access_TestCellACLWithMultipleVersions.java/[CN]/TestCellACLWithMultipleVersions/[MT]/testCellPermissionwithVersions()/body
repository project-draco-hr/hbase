{
  final byte[] TEST_ROW=Bytes.toBytes("cellpermtest");
  final byte[] TEST_ROW1=Bytes.toBytes("cellpermtest1");
  final byte[] TEST_Q1=Bytes.toBytes("q1");
  final byte[] ZERO=Bytes.toBytes(0L);
  final User userOther=User.createUserForTesting(conf,"user_check_cell_perms_other",new String[0]);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        Put p;
        p=new Put(TEST_ROW).add(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(userOther.getShortName(),new Permission(Permission.Action.WRITE));
        t.put(p);
        p=new Put(TEST_ROW).add(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(userOther.getShortName(),new Permission(Permission.Action.READ));
        t.put(p);
        p=new Put(TEST_ROW).add(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(userOther.getShortName(),new Permission(Permission.Action.WRITE));
        t.put(p);
        p=new Put(TEST_ROW).add(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(userOther.getShortName(),new Permission(Permission.Action.READ));
        t.put(p);
        p=new Put(TEST_ROW).add(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(userOther.getShortName(),new Permission(Permission.Action.WRITE));
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
,USER_OWNER);
  AccessTestAction getQ1=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get get=new Get(TEST_ROW);
      get.setMaxVersions(10);
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        return t.get(get).listCells();
      }
  finally {
        t.close();
      }
    }
  }
;
  AccessTestAction get2=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get get=new Get(TEST_ROW1);
      get.setMaxVersions(10);
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        return t.get(get).listCells();
      }
  finally {
        t.close();
      }
    }
  }
;
  verifyAllowed(userOther,getQ1,2);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        Put p;
        p=new Put(TEST_ROW1).add(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(userOther.getShortName(),new Permission(Permission.Action.WRITE));
        t.put(p);
        p=new Put(TEST_ROW1).add(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(userOther.getShortName(),new Permission(Permission.Action.READ));
        t.put(p);
        p=new Put(TEST_ROW1).add(TEST_FAMILY,TEST_Q1,ZERO);
        p.setACL(userOther.getShortName(),new Permission(Permission.Action.WRITE));
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
,USER_OWNER);
  verifyAllowed(userOther,get2,1);
}
