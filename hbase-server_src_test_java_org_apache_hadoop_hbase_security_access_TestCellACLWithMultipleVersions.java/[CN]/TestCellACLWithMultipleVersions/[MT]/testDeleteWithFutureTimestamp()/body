{
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          Put p=new Put(TEST_ROW).add(TEST_FAMILY1,TEST_Q2,ONE);
          p.setACL(USER_OTHER.getShortName(),new Permission(Permission.Action.READ,Permission.Action.WRITE));
          t.put(p);
          LOG.info("Stored at current time");
          p=new Put(TEST_ROW).add(TEST_FAMILY1,TEST_Q1,EnvironmentEdgeManager.currentTime() + 1000000,ZERO);
          p.setACL(USER_OTHER.getShortName(),new Permission(Permission.Action.READ));
          t.put(p);
        }
       }
       return null;
    }
  }
,USER_OWNER);
  AccessTestAction getQ1=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get get=new Get(TEST_ROW).addColumn(TEST_FAMILY1,TEST_Q1);
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          return t.get(get).listCells();
        }
       }
     }
  }
;
  AccessTestAction getQ2=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get get=new Get(TEST_ROW).addColumn(TEST_FAMILY1,TEST_Q2);
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          return t.get(get).listCells();
        }
       }
     }
  }
;
  verifyAllowed(getQ1,USER_OWNER,USER_OTHER);
  verifyAllowed(getQ2,USER_OWNER,USER_OTHER);
  AccessTestAction deleteFamily=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Delete delete=new Delete(TEST_ROW).deleteFamily(TEST_FAMILY1);
      try (Connection connection=ConnectionFactory.createConnection(conf)){
        try (Table t=connection.getTable(TEST_TABLE.getTableName())){
          t.delete(delete);
        }
       }
       return null;
    }
  }
;
  verifyAllowed(deleteFamily,USER_OTHER);
  verifyAllowed(getQ1,USER_OWNER,USER_OTHER);
  verifyIfNull(getQ2,USER_OTHER);
}
