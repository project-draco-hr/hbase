{
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        Put p=new Put(TEST_ROW).add(TEST_FAMILY1,TEST_Q1,EnvironmentEdgeManager.currentTime() + 1000000,ZERO);
        p.setACL(USER_OTHER.getShortName(),new Permission(Permission.Action.READ));
        t.put(p);
        p=new Put(TEST_ROW).add(TEST_FAMILY1,TEST_Q2,ONE);
        p.setACL(USER_OTHER.getShortName(),new Permission(Permission.Action.READ,Permission.Action.WRITE));
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
,USER_OWNER);
  AccessTestAction getQ1=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get get=new Get(TEST_ROW).addColumn(TEST_FAMILY1,TEST_Q1);
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        return t.get(get).listCells();
      }
  finally {
        t.close();
      }
    }
  }
;
  AccessTestAction getQ2=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Get get=new Get(TEST_ROW).addColumn(TEST_FAMILY1,TEST_Q2);
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        return t.get(get).listCells();
      }
  finally {
        t.close();
      }
    }
  }
;
  verifyAllowed(getQ1,USER_OWNER,USER_OTHER);
  verifyAllowed(getQ2,USER_OWNER,USER_OTHER);
  AccessTestAction deleteFamily=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Delete delete=new Delete(TEST_ROW).deleteFamily(TEST_FAMILY1);
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        t.delete(delete);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
;
  verifyAllowed(deleteFamily,USER_OTHER);
  verifyAllowed(getQ1,USER_OWNER,USER_OTHER);
  verifyDenied(getQ2,USER_OTHER);
}
