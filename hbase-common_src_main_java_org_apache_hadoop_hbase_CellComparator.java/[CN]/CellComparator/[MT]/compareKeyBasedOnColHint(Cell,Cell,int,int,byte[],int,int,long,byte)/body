{
  int compare=compareRows(nextIndexedCell,currentCell);
  if (compare != 0) {
    return compare;
  }
  if (nextIndexedCell.getFamilyLength() + nextIndexedCell.getQualifierLength() == 0 && nextIndexedCell.getTypeByte() == Type.Minimum.getCode()) {
    return 1;
  }
  int qualLen=currentCell.getQualifierLength();
  if (flen + clen == 0 && type == Type.Minimum.getCode()) {
    return -1;
  }
  compare=compareFamilies(nextIndexedCell,nextIndexedCell.getFamilyOffset(),nextIndexedCell.getFamilyLength(),currentCell,currentCell.getFamilyOffset(),flen);
  if (compare != 0) {
    return compare;
  }
  if (colHint == null) {
    compare=compareQualifiers(nextIndexedCell,nextIndexedCell.getQualifierOffset(),nextIndexedCell.getQualifierLength(),currentCell,currentCell.getQualifierOffset(),qualLen);
  }
 else {
    compare=compareQualifiers(nextIndexedCell,nextIndexedCell.getQualifierOffset(),nextIndexedCell.getQualifierLength(),colHint,coff,clen);
  }
  if (compare != 0) {
    return compare;
  }
  compare=compareTimestamps(nextIndexedCell.getTimestamp(),ts);
  if (compare != 0) {
    return compare;
  }
  return (0xff & type) - (0xff & nextIndexedCell.getTypeByte());
}
