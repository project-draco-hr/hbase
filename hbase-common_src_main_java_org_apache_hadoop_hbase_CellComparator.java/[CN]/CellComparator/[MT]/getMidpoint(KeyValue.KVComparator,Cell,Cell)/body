{
  if (right == null) {
    throw new IllegalArgumentException("right cell can not be null");
  }
  if (left == null) {
    return right;
  }
  if (comparator != null && comparator instanceof KeyValue.MetaComparator) {
    return right;
  }
  int diff=compareRows(left,right);
  if (diff > 0) {
    throw new IllegalArgumentException("Left row sorts after right row; left=" + CellUtil.getCellKeyAsString(left) + ", right="+ CellUtil.getCellKeyAsString(right));
  }
  if (diff < 0) {
    byte[] midRow=getMinimumMidpointArray(left.getRowArray(),left.getRowOffset(),left.getRowLength(),right.getRowArray(),right.getRowOffset(),right.getRowLength());
    if (midRow == null)     return right;
    return CellUtil.createCell(midRow);
  }
  diff=compareFamilies(left,right);
  if (diff > 0) {
    throw new IllegalArgumentException("Left family sorts after right family; left=" + CellUtil.getCellKeyAsString(left) + ", right="+ CellUtil.getCellKeyAsString(right));
  }
  if (diff < 0) {
    byte[] midRow=getMinimumMidpointArray(left.getFamilyArray(),left.getFamilyOffset(),left.getFamilyLength(),right.getFamilyArray(),right.getFamilyOffset(),right.getFamilyLength());
    if (midRow == null)     return right;
    return CellUtil.createCell(right.getRowArray(),right.getRowOffset(),right.getRowLength(),midRow,0,midRow.length,HConstants.EMPTY_BYTE_ARRAY,0,HConstants.EMPTY_BYTE_ARRAY.length);
  }
  diff=compareQualifiers(left,right);
  if (diff > 0) {
    throw new IllegalArgumentException("Left qualifier sorts after right qualifier; left=" + CellUtil.getCellKeyAsString(left) + ", right="+ CellUtil.getCellKeyAsString(right));
  }
  if (diff < 0) {
    byte[] midRow=getMinimumMidpointArray(left.getQualifierArray(),left.getQualifierOffset(),left.getQualifierLength(),right.getQualifierArray(),right.getQualifierOffset(),right.getQualifierLength());
    if (midRow == null)     return right;
    return CellUtil.createCell(right.getRowArray(),right.getRowOffset(),right.getRowLength(),right.getFamilyArray(),right.getFamilyOffset(),right.getFamilyLength(),midRow,0,midRow.length);
  }
  return right;
}
