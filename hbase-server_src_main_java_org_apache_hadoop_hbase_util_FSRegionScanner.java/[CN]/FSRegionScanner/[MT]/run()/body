{
  try {
    Map<String,AtomicInteger> blockCountMap=new HashMap<String,AtomicInteger>();
    String tableName=regionPath.getParent().getName();
    int totalBlkCount=0;
    FileStatus[] cfList=fs.listStatus(regionPath);
    if (null == cfList) {
      return;
    }
    for (    FileStatus cfStatus : cfList) {
      if (!cfStatus.isDirectory()) {
        continue;
      }
      if (cfStatus.getPath().getName().startsWith(".") || HConstants.HBASE_NON_USER_TABLE_DIRS.contains(cfStatus.getPath().getName())) {
        continue;
      }
      FileStatus[] storeFileLists=fs.listStatus(cfStatus.getPath());
      if (null == storeFileLists) {
        continue;
      }
      for (      FileStatus storeFile : storeFileLists) {
        BlockLocation[] blkLocations=fs.getFileBlockLocations(storeFile,0,storeFile.getLen());
        if (null == blkLocations) {
          continue;
        }
        totalBlkCount+=blkLocations.length;
        for (        BlockLocation blk : blkLocations) {
          for (          String host : blk.getHosts()) {
            AtomicInteger count=blockCountMap.get(host);
            if (count == null) {
              count=new AtomicInteger(0);
              blockCountMap.put(host,count);
            }
            count.incrementAndGet();
          }
        }
      }
    }
    if (regionToBestLocalityRSMapping != null) {
      int largestBlkCount=0;
      String hostToRun=null;
      for (      Map.Entry<String,AtomicInteger> entry : blockCountMap.entrySet()) {
        String host=entry.getKey();
        int tmp=entry.getValue().get();
        if (tmp > largestBlkCount) {
          largestBlkCount=tmp;
          hostToRun=host;
        }
      }
      if (null == hostToRun) {
        return;
      }
      if (hostToRun.endsWith(".")) {
        hostToRun=hostToRun.substring(0,hostToRun.length() - 1);
      }
      String name=tableName + ":" + regionPath.getName();
synchronized (regionToBestLocalityRSMapping) {
        regionToBestLocalityRSMapping.put(name,hostToRun);
      }
    }
    if (regionDegreeLocalityMapping != null && totalBlkCount > 0) {
      Map<String,Float> hostLocalityMap=new HashMap<String,Float>();
      for (      Map.Entry<String,AtomicInteger> entry : blockCountMap.entrySet()) {
        String host=entry.getKey();
        if (host.endsWith(".")) {
          host=host.substring(0,host.length() - 1);
        }
        float locality=((float)entry.getValue().get()) / totalBlkCount;
        hostLocalityMap.put(host,locality);
      }
      regionDegreeLocalityMapping.put(regionPath.getName(),hostLocalityMap);
    }
  }
 catch (  IOException e) {
    LOG.warn("Problem scanning file system",e);
  }
catch (  RuntimeException e) {
    LOG.warn("Problem scanning file system",e);
  }
}
