{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Processing unserved regions");
  }
  for (  HRegionInfo i : this.unservedRegions) {
    if (i.isOffline() && i.isSplit()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Skipping region " + i.toString() + " because it is offline and split");
      }
      continue;
    }
    if (!this.online && this.master.getRegionManager().isPendingOpen(i.getRegionNameAsString())) {
      LOG.debug("Skipping region " + i.toString() + " because it is pending open, will tell it to close later");
      continue;
    }
    Put put=updateRegionInfo(i);
    server.put(m.getRegionName(),put);
    Delete delete=new Delete(i.getRegionName());
    delete.deleteColumns(CATALOG_FAMILY,SERVER_QUALIFIER);
    delete.deleteColumns(CATALOG_FAMILY,STARTCODE_QUALIFIER);
    server.delete(m.getRegionName(),delete);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Removed server and startcode from row and set online=" + this.online + ": "+ i.getRegionNameAsString());
    }
synchronized (master.getRegionManager()) {
      if (this.online) {
        if (!this.master.getRegionManager().regionIsOpening(i.getRegionNameAsString())) {
          this.master.getRegionManager().setUnassigned(i,false);
        }
      }
 else {
        this.master.getRegionManager().removeRegion(i);
      }
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Processing regions currently being served");
  }
synchronized (this.master.getRegionManager()) {
    for (    Map.Entry<String,HashSet<HRegionInfo>> e : this.servedRegions.entrySet()) {
      String serverName=e.getKey();
      if (this.online) {
        LOG.debug("Already online");
        continue;
      }
      for (      HRegionInfo i : e.getValue()) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Adding region " + i.getRegionNameAsString() + " to setClosing list");
        }
        this.master.getRegionManager().setClosing(serverName,i,true);
      }
    }
  }
  this.servedRegions.clear();
}
