{
  TreeSet<BackupImage> restoreImageSet=new TreeSet<BackupImage>();
  for (int i=0; i < sTableArray.length; i++) {
    restoreImageSet.clear();
    String table=sTableArray[i];
    BackupManifest manifest=backupManifestMap.get(table);
    if (autoRestore) {
      TreeSet<BackupImage> restoreList=new TreeSet<BackupImage>(manifest.getDependentListByTable(table));
      LOG.debug("need to clear merged Image. to be implemented in future jira");
      for (      BackupImage image : restoreList) {
        restoreImage(image,table,tTableArray[i]);
      }
      restoreImageSet.addAll(restoreList);
    }
 else {
      BackupImage image=manifest.getBackupImage();
      List<BackupImage> depList=manifest.getDependentListByTable(table);
      if (depList != null && depList.size() > 1) {
        LOG.warn("Backup image " + image.getBackupId() + " depends on other images.\n"+ "this operation will only restore the delta contained within backupImage "+ image.getBackupId());
      }
      restoreImage(image,table,tTableArray[i]);
      restoreImageSet.add(image);
    }
    if (autoRestore) {
      if (restoreImageSet != null && !restoreImageSet.isEmpty()) {
        LOG.info("Restore includes the following image(s):");
        for (        BackupImage image : restoreImageSet) {
          LOG.info("  Backup: " + image.getBackupId() + " "+ HBackupFileSystem.getTableBackupDir(image.getRootDir(),image.getBackupId(),table));
        }
      }
    }
  }
  return restoreImageSet;
}
