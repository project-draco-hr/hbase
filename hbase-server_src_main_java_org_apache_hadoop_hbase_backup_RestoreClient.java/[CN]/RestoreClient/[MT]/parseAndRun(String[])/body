{
  CommandLine cmd=null;
  try {
    cmd=new PosixParser().parse(opt,args);
  }
 catch (  ParseException e) {
    LOG.error("Could not parse command",e);
    System.exit(-1);
  }
  Logger backupClientLogger=Logger.getLogger("org.apache.hadoop.hbase.backup");
  if (cmd.hasOption("debug")) {
    backupClientLogger.setLevel(Level.DEBUG);
  }
  boolean isOverwrite=cmd.hasOption(OPTION_OVERWRITE);
  if (isOverwrite) {
    LOG.debug("Found -overwrite option in restore command, " + "will overwrite to existing table if any in the restore target");
  }
  boolean check=cmd.hasOption(OPTION_CHECK);
  if (check) {
    LOG.debug("Found -check option in restore command, " + "will check and verify the dependencies");
  }
  boolean autoRestore=cmd.hasOption(OPTION_AUTOMATIC);
  if (autoRestore) {
    LOG.debug("Found -automatic option in restore command, " + "will automatically retore all the dependencies");
  }
  String[] remainArgs=cmd.getArgs();
  if (remainArgs.length < 3) {
    System.out.println("ERROR: missing arguments");
    System.out.println(USAGE);
    System.exit(-1);
  }
  String backupRootDir=remainArgs[0];
  String backupId=remainArgs[1];
  String tables=remainArgs[2];
  String tableMapping=(remainArgs.length > 3) ? remainArgs[3] : null;
  String[] sTableArray=(tables != null) ? tables.split(DELIMITER_IN_COMMAND) : null;
  String[] tTableArray=(tableMapping != null) ? tableMapping.split(DELIMITER_IN_COMMAND) : null;
  if (tableMapping != null && tTableArray != null && (sTableArray.length != tTableArray.length)) {
    System.err.println("ERROR: table mapping mismatch: " + tables + " : "+ tableMapping);
    System.out.println(USAGE);
    System.exit(-1);
  }
  try {
    HBackupFileSystem hBackupFS=new HBackupFileSystem(conf,new Path(backupRootDir),backupId);
    restore_stage1(hBackupFS,backupRootDir,backupId,check,autoRestore,sTableArray,tTableArray,isOverwrite);
  }
 catch (  IOException e) {
    System.err.println("ERROR: " + e.getMessage());
    System.exit(-1);
  }
}
