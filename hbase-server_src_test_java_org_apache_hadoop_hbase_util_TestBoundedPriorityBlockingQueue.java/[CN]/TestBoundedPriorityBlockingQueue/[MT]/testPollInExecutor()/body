{
  final TestObject testObj=new TestObject(0,0);
  final CyclicBarrier threadsStarted=new CyclicBarrier(2);
  ExecutorService executor=Executors.newFixedThreadPool(2);
  executor.execute(new Runnable(){
    public void run(){
      try {
        assertNull(queue.poll(1000,TimeUnit.MILLISECONDS));
        threadsStarted.await();
        assertSame(testObj,queue.poll(1000,TimeUnit.MILLISECONDS));
        assertTrue(queue.isEmpty());
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  executor.execute(new Runnable(){
    public void run(){
      try {
        threadsStarted.await();
        queue.offer(testObj);
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  executor.shutdown();
  assertTrue(executor.awaitTermination(8000,TimeUnit.MILLISECONDS));
}
