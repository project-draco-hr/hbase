{
  final TableName tableName=TableName.valueOf("testDeleteColumnFamilyTwice");
  final ProcedureExecutor<MasterProcedureEnv> procExec=getMasterProcedureExecutor();
  final String cf2="cf2";
  MasterProcedureTestingUtility.createTable(procExec,tableName,null,"f1",cf2);
  long procId1=procExec.submitProcedure(new DeleteColumnFamilyProcedure(procExec.getEnvironment(),tableName,cf2.getBytes()),nonceGroup,nonce);
  ProcedureTestingUtility.waitProcedure(procExec,procId1);
  ProcedureTestingUtility.assertProcNotFailed(procExec,procId1);
  MasterProcedureTestingUtility.validateColumnFamilyDeletion(UTIL.getHBaseCluster().getMaster(),tableName,cf2);
  long procId2=procExec.submitProcedure(new DeleteColumnFamilyProcedure(procExec.getEnvironment(),tableName,cf2.getBytes()),nonceGroup + 1,nonce + 1);
  ProcedureTestingUtility.waitProcedure(procExec,procId2);
  ProcedureInfo result=procExec.getResult(procId2);
  assertTrue(result.isFailed());
  LOG.debug("Delete online failed with exception: " + result.getExceptionFullMessage());
  assertTrue(ProcedureTestingUtility.getExceptionCause(result) instanceof InvalidFamilyOperationException);
  UTIL.getHBaseAdmin().disableTable(tableName);
  long procId3=procExec.submitProcedure(new DeleteColumnFamilyProcedure(procExec.getEnvironment(),tableName,cf2.getBytes()),nonceGroup + 2,nonce + 2);
  ProcedureTestingUtility.waitProcedure(procExec,procId3);
  result=procExec.getResult(procId2);
  assertTrue(result.isFailed());
  LOG.debug("Delete offline failed with exception: " + result.getExceptionFullMessage());
  assertTrue(ProcedureTestingUtility.getExceptionCause(result) instanceof InvalidFamilyOperationException);
}
