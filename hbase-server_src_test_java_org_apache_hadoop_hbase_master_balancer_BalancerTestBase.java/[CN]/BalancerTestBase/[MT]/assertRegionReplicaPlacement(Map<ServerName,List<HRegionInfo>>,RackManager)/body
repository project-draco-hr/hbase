{
  TreeMap<String,Set<HRegionInfo>> regionsPerHost=new TreeMap<String,Set<HRegionInfo>>();
  TreeMap<String,Set<HRegionInfo>> regionsPerRack=new TreeMap<String,Set<HRegionInfo>>();
  for (  Entry<ServerName,List<HRegionInfo>> entry : serverMap.entrySet()) {
    String hostname=entry.getKey().getHostname();
    Set<HRegionInfo> infos=regionsPerHost.get(hostname);
    if (infos == null) {
      infos=new HashSet<HRegionInfo>();
      regionsPerHost.put(hostname,infos);
    }
    for (    HRegionInfo info : entry.getValue()) {
      HRegionInfo primaryInfo=RegionReplicaUtil.getRegionInfoForDefaultReplica(info);
      if (!infos.add(primaryInfo)) {
        Assert.fail("Two or more region replicas are hosted on the same host after balance");
      }
    }
  }
  if (rackManager == null) {
    return;
  }
  for (  Entry<ServerName,List<HRegionInfo>> entry : serverMap.entrySet()) {
    String rack=rackManager.getRack(entry.getKey());
    Set<HRegionInfo> infos=regionsPerRack.get(rack);
    if (infos == null) {
      infos=new HashSet<HRegionInfo>();
      regionsPerRack.put(rack,infos);
    }
    for (    HRegionInfo info : entry.getValue()) {
      HRegionInfo primaryInfo=RegionReplicaUtil.getRegionInfoForDefaultReplica(info);
      if (!infos.add(primaryInfo)) {
        Assert.fail("Two or more region replicas are hosted on the same rack after balance");
      }
    }
  }
}
