{
  if (newRegions == null)   return null;
  int regionNumber=newRegions.length;
  CompletionService<HRegionInfo> completionService=new ExecutorCompletionService<HRegionInfo>(exec);
  List<HRegionInfo> regionInfos=new ArrayList<HRegionInfo>();
  for (  final HRegionInfo newRegion : newRegions) {
    completionService.submit(new Callable<HRegionInfo>(){
      @Override public HRegionInfo call() throws IOException {
        return createRegion(conf,rootDir,tableDir,hTableDescriptor,newRegion,task);
      }
    }
);
  }
  try {
    for (int i=0; i < regionNumber; i++) {
      Future<HRegionInfo> future=completionService.take();
      HRegionInfo regionInfo=future.get();
      regionInfos.add(regionInfo);
    }
  }
 catch (  InterruptedException e) {
    LOG.error("Caught " + e + " during region creation");
    throw new InterruptedIOException(e.getMessage());
  }
catch (  ExecutionException e) {
    throw new IOException(e);
  }
  return regionInfos;
}
