{
  final long counter=testCounter.incrementAndGet();
  final String classNamePrefix=name.getMethodName();
  String pkgNameSuffix=name.getMethodName();
  Log.info("Created jar " + createAndLoadJar(pkgNameSuffix,classNamePrefix,counter));
  final String classNameToFilterOut=classNamePrefix + counter;
  final ClassFinder.FileNameFilter notThisFilter=new ClassFinder.FileNameFilter(){
    @Override public boolean isCandidateFile(    String fileName,    String absFilePath){
      return !fileName.equals(classNameToFilterOut + ".class");
    }
  }
;
  String pkgName=makePackageName(pkgNameSuffix,counter);
  ClassFinder allClassesFinder=new ClassFinder();
  Set<Class<?>> allClasses=allClassesFinder.findClasses(pkgName,false);
  assertTrue("Classes in " + pkgName,allClasses.size() > 0);
  ClassFinder notThisClassFinder=new ClassFinder(null,notThisFilter,null);
  Set<Class<?>> notAllClasses=notThisClassFinder.findClasses(pkgName,false);
  assertFalse(contains(notAllClasses,classNameToFilterOut));
  assertEquals(allClasses.size() - 1,notAllClasses.size());
}
