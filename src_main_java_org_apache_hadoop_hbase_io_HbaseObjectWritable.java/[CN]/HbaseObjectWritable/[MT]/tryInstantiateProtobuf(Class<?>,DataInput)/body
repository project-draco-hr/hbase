{
  try {
    if (dataIn instanceof InputStream) {
      Method parseMethod=getStaticProtobufMethod(protoClass,"parseDelimitedFrom",InputStream.class);
      return (Message)parseMethod.invoke(null,(InputStream)dataIn);
    }
 else {
      int size=ProtoUtil.readRawVarint32(dataIn);
      if (size < 0) {
        throw new IOException("Invalid size: " + size);
      }
      byte[] data=new byte[size];
      dataIn.readFully(data);
      Method parseMethod=getStaticProtobufMethod(protoClass,"parseFrom",byte[].class);
      return (Message)parseMethod.invoke(null,data);
    }
  }
 catch (  InvocationTargetException e) {
    if (e.getCause() instanceof IOException) {
      throw (IOException)e.getCause();
    }
 else {
      throw new IOException(e.getCause());
    }
  }
catch (  IllegalAccessException iae) {
    throw new AssertionError("Could not access parse method in " + protoClass);
  }
}
