{
  List<HRegionInfo> regionsToMove=new ArrayList<HRegionInfo>();
  regionsToMove=getRegions(this.conf,server);
  if (regionsToMove.size() == 0) {
    LOG.info("No Regions to move....Quitting now");
    return;
  }
 else   if (regionServers.size() == 0) {
    LOG.warn("No Regions were moved - no servers available");
    throw new Exception("No online region servers");
  }
  while (true) {
    regionsToMove=getRegions(this.conf,server);
    regionsToMove.removeAll(movedRegions);
    if (regionsToMove.size() == 0) {
      break;
    }
    int counter=0;
    LOG.info("Moving " + regionsToMove.size() + " regions from "+ this.hostname+ " to "+ regionServers.size()+ " servers using "+ this.maxthreads+ " threads .Ack Mode:"+ ack);
    ExecutorService moveRegionsPool=Executors.newFixedThreadPool(this.maxthreads);
    List<Future<Boolean>> taskList=new ArrayList<Future<Boolean>>();
    int serverIndex=0;
    while (counter < regionsToMove.size()) {
      if (ack) {
        Future<Boolean> task=moveRegionsPool.submit(new MoveWithAck(admin,regionsToMove.get(counter),server,regionServers.get(serverIndex),movedRegions));
        taskList.add(task);
      }
 else {
        Future<Boolean> task=moveRegionsPool.submit(new MoveWithoutAck(admin,regionsToMove.get(counter),server,regionServers.get(serverIndex),movedRegions));
        taskList.add(task);
      }
      counter++;
      serverIndex=(serverIndex + 1) % regionServers.size();
    }
    moveRegionsPool.shutdown();
    long timeoutInSeconds=regionsToMove.size() * admin.getConfiguration().getInt(MOVE_WAIT_MAX_KEY,DEFAULT_MOVE_WAIT_MAX);
    try {
      if (!moveRegionsPool.awaitTermination(timeoutInSeconds,TimeUnit.SECONDS)) {
        moveRegionsPool.shutdownNow();
      }
    }
 catch (    InterruptedException e) {
      moveRegionsPool.shutdownNow();
      Thread.currentThread().interrupt();
    }
    for (    Future<Boolean> future : taskList) {
      try {
        if (!future.get(5,TimeUnit.SECONDS)) {
          LOG.error("Was Not able to move region....Exiting Now");
          throw new Exception("Could not move region Exception");
        }
      }
 catch (      InterruptedException e) {
        LOG.error("Interrupted while waiting for Thread to Complete " + e.getMessage(),e);
        throw e;
      }
catch (      ExecutionException e) {
        LOG.error("Got Exception From Thread While moving region " + e.getMessage(),e);
        throw e;
      }
catch (      CancellationException e) {
        LOG.error("Thread for moving region cancelled. Timeout for cancellation:" + timeoutInSeconds + "secs",e);
        throw e;
      }
    }
  }
}
