{
  KeyValue pkv=null;
  do {
    KeyValue kv=KeyValueUtil.ensureKeyValue(scanner.getKeyValue());
    if (row != null && row.length != 0) {
      int result=Bytes.compareTo(kv.getRow(),row);
      if (result > 0) {
        break;
      }
 else       if (result < 0) {
        continue;
      }
    }
    if (printStats) {
      fileStats.collect(kv);
    }
    if (printKey) {
      System.out.print("K: " + kv);
      if (printValue) {
        System.out.print(" V: " + Bytes.toStringBinary(kv.getValue()));
        int i=0;
        List<Tag> tags=kv.getTags();
        for (        Tag tag : tags) {
          System.out.print(String.format(" T[%d]: %s",i++,Bytes.toStringBinary(tag.getValue())));
        }
      }
      System.out.println();
    }
    if (checkRow && pkv != null) {
      if (Bytes.compareTo(pkv.getRow(),kv.getRow()) > 0) {
        System.err.println("WARNING, previous row is greater then" + " current row\n\tfilename -> " + file + "\n\tprevious -> "+ Bytes.toStringBinary(pkv.getKey())+ "\n\tcurrent  -> "+ Bytes.toStringBinary(kv.getKey()));
      }
    }
    if (checkFamily) {
      String fam=Bytes.toString(kv.getFamily());
      if (!file.toString().contains(fam)) {
        System.err.println("WARNING, filename does not match kv family," + "\n\tfilename -> " + file + "\n\tkeyvalue -> "+ Bytes.toStringBinary(kv.getKey()));
      }
      if (pkv != null && !Bytes.equals(pkv.getFamily(),kv.getFamily())) {
        System.err.println("WARNING, previous kv has different family" + " compared to current key\n\tfilename -> " + file + "\n\tprevious -> "+ Bytes.toStringBinary(pkv.getKey())+ "\n\tcurrent  -> "+ Bytes.toStringBinary(kv.getKey()));
      }
    }
    pkv=kv;
    ++count;
  }
 while (scanner.next());
}
