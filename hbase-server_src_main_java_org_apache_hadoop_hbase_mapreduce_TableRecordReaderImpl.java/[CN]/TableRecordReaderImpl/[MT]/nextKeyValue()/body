{
  if (key == null)   key=new ImmutableBytesWritable();
  if (value == null)   value=new Result();
  try {
    try {
      value=this.scanner.next();
      if (value != null && value.isStale())       numStale++;
      if (logScannerActivity) {
        rowcount++;
        if (rowcount >= logPerRowCount) {
          long now=System.currentTimeMillis();
          LOG.info("Mapper took " + (now - timestamp) + "ms to process "+ rowcount+ " rows");
          timestamp=now;
          rowcount=0;
        }
      }
    }
 catch (    IOException e) {
      LOG.info("recovered from " + StringUtils.stringifyException(e));
      if (lastSuccessfulRow == null) {
        LOG.warn("We are restarting the first next() invocation," + " if your mapper has restarted a few other times like this" + " then you should consider killing this job and investigate"+ " why it's taking so long.");
      }
      if (lastSuccessfulRow == null) {
        restart(scan.getStartRow());
      }
 else {
        restart(lastSuccessfulRow);
        scanner.next();
      }
      value=scanner.next();
      if (value != null && value.isStale())       numStale++;
      numRestarts++;
    }
    if (value != null && value.size() > 0) {
      key.set(value.getRow());
      lastSuccessfulRow=key.get();
      return true;
    }
    updateCounters();
    return false;
  }
 catch (  IOException ioe) {
    if (logScannerActivity) {
      long now=System.currentTimeMillis();
      LOG.info("Mapper took " + (now - timestamp) + "ms to process "+ rowcount+ " rows");
      LOG.info(ioe);
      String lastRow=lastSuccessfulRow == null ? "null" : Bytes.toStringBinary(lastSuccessfulRow);
      LOG.info("lastSuccessfulRow=" + lastRow);
    }
    throw ioe;
  }
}
