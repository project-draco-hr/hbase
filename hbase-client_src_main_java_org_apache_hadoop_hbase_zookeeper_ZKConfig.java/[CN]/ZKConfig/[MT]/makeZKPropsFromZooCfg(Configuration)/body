{
  if (conf.getBoolean(HConstants.HBASE_CONFIG_READ_ZOOKEEPER_CONFIG,false)) {
    LOG.warn("Parsing ZooKeeper's " + HConstants.ZOOKEEPER_CONFIG_NAME + " file for ZK properties "+ "has been deprecated. Please instead place all ZK related HBase "+ "configuration under the hbase-site.xml, using prefixes "+ "of the form '"+ HConstants.ZK_CFG_PROPERTY_PREFIX+ "', and "+ "set property '"+ HConstants.HBASE_CONFIG_READ_ZOOKEEPER_CONFIG+ "' to false");
    ClassLoader cl=HQuorumPeer.class.getClassLoader();
    final InputStream inputStream=cl.getResourceAsStream(HConstants.ZOOKEEPER_CONFIG_NAME);
    if (inputStream != null) {
      try {
        return parseZooCfg(conf,inputStream);
      }
 catch (      IOException e) {
        LOG.warn("Cannot read " + HConstants.ZOOKEEPER_CONFIG_NAME + ", loading from XML files",e);
      }
    }
  }
 else {
    if (LOG.isTraceEnabled()) {
      LOG.trace("Skipped reading ZK properties file '" + HConstants.ZOOKEEPER_CONFIG_NAME + "' since '"+ HConstants.HBASE_CONFIG_READ_ZOOKEEPER_CONFIG+ "' was not set to true");
    }
  }
  return null;
}
