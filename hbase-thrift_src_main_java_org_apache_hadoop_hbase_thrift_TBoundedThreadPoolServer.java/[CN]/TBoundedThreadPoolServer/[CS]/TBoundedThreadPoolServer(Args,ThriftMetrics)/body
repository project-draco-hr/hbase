{
  super(options);
  int minWorkerThreads=options.minWorkerThreads;
  int maxWorkerThreads=options.maxWorkerThreads;
  if (options.maxQueuedRequests > 0) {
    this.callQueue=new CallQueue(new LinkedBlockingQueue<Call>(options.maxQueuedRequests),metrics);
    minWorkerThreads=maxWorkerThreads;
  }
 else {
    this.callQueue=new CallQueue(new SynchronousQueue<Call>(),metrics);
  }
  ThreadFactoryBuilder tfb=new ThreadFactoryBuilder();
  tfb.setDaemon(true);
  tfb.setNameFormat("thrift-worker-%d");
  executorService=new ThreadPoolExecutor(minWorkerThreads,maxWorkerThreads,options.threadKeepAliveTimeSec,TimeUnit.SECONDS,this.callQueue,tfb.build());
  executorService.allowCoreThreadTimeOut(true);
  serverOptions=options;
}
