{
  validateParameters(scan);
class RowNumCallback implements Batch.Callback<Long> {
    private long rowCountL=0l;
    public long getRowNumCount(){
      return rowCountL;
    }
    @Override public void update(    byte[] region,    byte[] row,    Long result){
      rowCountL+=result.longValue();
    }
  }
  RowNumCallback rowNum=new RowNumCallback();
  HTable table=new HTable(conf,tableName);
  table.coprocessorExec(AggregateProtocol.class,scan.getStartRow(),scan.getStopRow(),new Batch.Call<AggregateProtocol,Long>(){
    @Override public Long call(    AggregateProtocol instance) throws IOException {
      return instance.getRowNum(ci,scan);
    }
  }
,rowNum);
  return rowNum.getRowNumCount();
}
