{
  validateParameters(scan);
class MinCallBack implements Batch.Callback<R> {
    private R min=null;
    public R getMinimum(){
      return min;
    }
    @Override public void update(    byte[] region,    byte[] row,    R result){
      min=(min == null || ci.compare(result,min) < 0) ? result : min;
    }
  }
  HTable table=new HTable(conf,tableName);
  MinCallBack minCallBack=new MinCallBack();
  table.coprocessorExec(AggregateProtocol.class,scan.getStartRow(),scan.getStopRow(),new Batch.Call<AggregateProtocol,R>(){
    @Override public R call(    AggregateProtocol instance) throws IOException {
      return instance.getMin(ci,scan);
    }
  }
,minCallBack);
  log.debug("Min fom all regions is: " + minCallBack.getMinimum());
  return minCallBack.getMinimum();
}
