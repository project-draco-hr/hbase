{
  if (method.getService() != getDescriptor()) {
    throw new java.lang.IllegalArgumentException("Service.callMethod() given method descriptor for wrong " + "service type.");
  }
switch (method.getIndex()) {
case 0:
    this.grant(controller,(org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.GrantRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.GrantResponse>specializeCallback(done));
  return;
case 1:
this.revoke(controller,(org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.RevokeRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.RevokeResponse>specializeCallback(done));
return;
case 2:
this.getUserPermissions(controller,(org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.GetUserPermissionsRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.GetUserPermissionsResponse>specializeCallback(done));
return;
case 3:
this.checkPermissions(controller,(org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.CheckPermissionsRequest)request,com.google.protobuf.RpcUtil.<org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.CheckPermissionsResponse>specializeCallback(done));
return;
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
