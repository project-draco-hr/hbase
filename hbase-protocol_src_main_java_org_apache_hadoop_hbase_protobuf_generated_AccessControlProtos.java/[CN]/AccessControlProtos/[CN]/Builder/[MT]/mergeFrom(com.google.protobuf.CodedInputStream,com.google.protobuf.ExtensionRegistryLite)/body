{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 8:
{
int rawValue=input.readEnum();
org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.Permission.Type value=org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.Permission.Type.valueOf(rawValue);
if (value == null) {
  unknownFields.mergeVarintField(1,rawValue);
}
 else {
  bitField0_|=0x00000001;
  type_=value;
}
break;
}
case 18:
{
org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.GlobalPermission.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.GlobalPermission.newBuilder();
if (hasGlobalPermission()) {
subBuilder.mergeFrom(getGlobalPermission());
}
input.readMessage(subBuilder,extensionRegistry);
setGlobalPermission(subBuilder.buildPartial());
break;
}
case 26:
{
org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.NamespacePermission.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.NamespacePermission.newBuilder();
if (hasNamespacePermission()) {
subBuilder.mergeFrom(getNamespacePermission());
}
input.readMessage(subBuilder,extensionRegistry);
setNamespacePermission(subBuilder.buildPartial());
break;
}
case 34:
{
org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.TablePermission.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.TablePermission.newBuilder();
if (hasTablePermission()) {
subBuilder.mergeFrom(getTablePermission());
}
input.readMessage(subBuilder,extensionRegistry);
setTablePermission(subBuilder.buildPartial());
break;
}
}
}
}
