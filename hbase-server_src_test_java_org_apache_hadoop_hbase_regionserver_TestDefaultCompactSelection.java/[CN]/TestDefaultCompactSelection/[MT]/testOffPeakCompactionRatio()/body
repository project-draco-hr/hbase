{
  Calendar calendar=new GregorianCalendar();
  int hourOfDay=calendar.get(Calendar.HOUR_OF_DAY);
  LOG.debug("Hour of day = " + hourOfDay);
  int hourPlusOne=((hourOfDay + 1) % 24);
  int hourMinusOne=((hourOfDay - 1 + 24) % 24);
  int hourMinusTwo=((hourOfDay - 2 + 24) % 24);
  LOG.debug("Testing compact selection without off-peak settings...");
  compactEquals(sfCreate(999,50,12,12,1),12,12,1);
  this.conf.setFloat("hbase.hstore.compaction.ratio.offpeak",5.0F);
  this.conf.setLong("hbase.offpeak.start.hour",hourMinusOne);
  this.conf.setLong("hbase.offpeak.end.hour",hourPlusOne);
  LOG.debug("Testing compact selection with off-peak settings (" + hourMinusOne + ", "+ hourPlusOne+ ")");
  store.compactionPolicy.updateConfiguration();
  compactEquals(sfCreate(999,50,12,12,1),50,12,12,1);
  this.conf.setLong("hbase.offpeak.start.hour",hourMinusTwo);
  this.conf.setLong("hbase.offpeak.end.hour",hourMinusOne);
  store.compactionPolicy.updateConfiguration();
  LOG.debug("Testing compact selection with off-peak settings (" + hourMinusTwo + ", "+ hourMinusOne+ ")");
  compactEquals(sfCreate(999,50,12,12,1),12,12,1);
}
