{
  Map<String,Integer> rackToServerCount=new HashMap<String,Integer>();
  rackToServerCount.put("rack1",10);
  rackToServerCount.put("rack2",10);
  Triple<Map<HRegionInfo,ServerName>,FavoredNodeAssignmentHelper,List<HRegionInfo>> primaryRSMapAndHelper=secondaryAndTertiaryRSPlacementHelper(60000,rackToServerCount);
  FavoredNodeAssignmentHelper helper=primaryRSMapAndHelper.getSecond();
  Map<HRegionInfo,ServerName> primaryRSMap=primaryRSMapAndHelper.getFirst();
  assertTrue(primaryRSMap.size() == 60000);
  Map<HRegionInfo,ServerName[]> secondaryAndTertiaryMap=helper.placeSecondaryAndTertiaryRS(primaryRSMap);
  assertTrue(secondaryAndTertiaryMap.size() == 60000);
  for (  Map.Entry<HRegionInfo,ServerName[]> entry : secondaryAndTertiaryMap.entrySet()) {
    ServerName[] allServersForRegion=entry.getValue();
    String primaryRSRack=rackManager.getRack(primaryRSMap.get(entry.getKey()));
    String secondaryRSRack=rackManager.getRack(allServersForRegion[0]);
    String tertiaryRSRack=rackManager.getRack(allServersForRegion[1]);
    assertTrue(!primaryRSRack.equals(secondaryRSRack));
    assertTrue(secondaryRSRack.equals(tertiaryRSRack));
  }
}
