{
  Path rootDir=FSUtils.getRootDir(getConf());
  FileSystem fs=rootDir.getFileSystem(getConf());
  List<FileStatus> tableDirs=Lists.newArrayList();
  boolean foundVersionFile=false;
  FileStatus[] files=fs.listStatus(rootDir);
  for (  FileStatus file : files) {
    String dirName=file.getPath().getName();
    if (dirName.equals(HConstants.VERSION_FILE_NAME)) {
      foundVersionFile=true;
    }
 else {
      if ((!checkMetaOnly && isTableIncluded(dirName)) || dirName.equals("-ROOT-") || dirName.equals(".META.")) {
        tableDirs.add(file);
      }
    }
  }
  if (!foundVersionFile) {
    errors.reportError(ERROR_CODE.NO_VERSION_FILE,"Version file does not exist in root dir " + rootDir);
    if (shouldFixVersionFile()) {
      LOG.info("Trying to create a new " + HConstants.VERSION_FILE_NAME + " file.");
      setShouldRerun();
      FSUtils.setVersion(fs,rootDir,getConf().getInt(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000),getConf().getInt(HConstants.VERSION_FILE_WRITE_ATTEMPTS,HConstants.DEFAULT_VERSION_FILE_WRITE_ATTEMPTS));
    }
  }
  List<WorkItemHdfsDir> dirs=new ArrayList<WorkItemHdfsDir>(tableDirs.size());
  List<Future<Void>> dirsFutures;
  for (  FileStatus tableDir : tableDirs) {
    LOG.debug("Loading region dirs from " + tableDir.getPath());
    dirs.add(new WorkItemHdfsDir(this,fs,errors,tableDir));
  }
  dirsFutures=executor.invokeAll(dirs);
  for (  Future<Void> f : dirsFutures) {
    try {
      f.get();
    }
 catch (    ExecutionException e) {
      LOG.warn("Could not load region dir ",e.getCause());
    }
  }
}
