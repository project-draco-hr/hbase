{
  MetaTableAccessor.Visitor visitor=new MetaTableAccessor.Visitor(){
    int countRecord=1;
    final Comparator<Cell> comp=new Comparator<Cell>(){
      @Override public int compare(      Cell k1,      Cell k2){
        return (int)(k1.getTimestamp() - k2.getTimestamp());
      }
    }
;
    @Override public boolean visit(    Result result) throws IOException {
      try {
        long ts=Collections.max(result.listCells(),comp).getTimestamp();
        RegionLocations rl=MetaTableAccessor.getRegionLocations(result);
        if (rl == null) {
          emptyRegionInfoQualifiers.add(result);
          errors.reportError(ERROR_CODE.EMPTY_META_CELL,"Empty REGIONINFO_QUALIFIER found in hbase:meta");
          return true;
        }
        ServerName sn=null;
        if (rl.getRegionLocation(HRegionInfo.DEFAULT_REPLICA_ID) == null || rl.getRegionLocation(HRegionInfo.DEFAULT_REPLICA_ID).getRegionInfo() == null) {
          emptyRegionInfoQualifiers.add(result);
          errors.reportError(ERROR_CODE.EMPTY_META_CELL,"Empty REGIONINFO_QUALIFIER found in hbase:meta");
          return true;
        }
        HRegionInfo hri=rl.getRegionLocation(HRegionInfo.DEFAULT_REPLICA_ID).getRegionInfo();
        if (!(isTableIncluded(hri.getTable()) || hri.isMetaRegion())) {
          return true;
        }
        PairOfSameType<HRegionInfo> daughters=HRegionInfo.getDaughterRegions(result);
        for (        HRegionLocation h : rl.getRegionLocations()) {
          if (h == null || h.getRegionInfo() == null) {
            continue;
          }
          sn=h.getServerName();
          hri=h.getRegionInfo();
          MetaEntry m=null;
          if (hri.getReplicaId() == HRegionInfo.DEFAULT_REPLICA_ID) {
            m=new MetaEntry(hri,sn,ts,daughters.getFirst(),daughters.getSecond());
          }
 else {
            m=new MetaEntry(hri,sn,ts,null,null);
          }
          HbckInfo previous=regionInfoMap.get(hri.getEncodedName());
          if (previous == null) {
            regionInfoMap.put(hri.getEncodedName(),new HbckInfo(m));
          }
 else           if (previous.metaEntry == null) {
            previous.metaEntry=m;
          }
 else {
            throw new IOException("Two entries in hbase:meta are same " + previous);
          }
        }
        PairOfSameType<HRegionInfo> mergeRegions=HRegionInfo.getMergeRegions(result);
        for (        HRegionInfo mergeRegion : new HRegionInfo[]{mergeRegions.getFirst(),mergeRegions.getSecond()}) {
          if (mergeRegion != null) {
            HbckInfo hbInfo=getOrCreateInfo(mergeRegion.getEncodedName());
            hbInfo.setMerged(true);
          }
        }
        if (countRecord % 100 == 0) {
          errors.progress();
        }
        countRecord++;
        return true;
      }
 catch (      RuntimeException e) {
        LOG.error("Result=" + result);
        throw e;
      }
    }
  }
;
  if (!checkMetaOnly) {
    MetaTableAccessor.fullScanRegions(connection,visitor);
  }
  errors.print("");
  return true;
}
