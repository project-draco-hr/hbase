{
  if (shouldFixTableOrphans() && !orphanTableDirs.isEmpty()) {
    List<TableName> tmpList=new ArrayList<TableName>();
    tmpList.addAll(orphanTableDirs.keySet());
    HTableDescriptor[] htds=getHTableDescriptors(tmpList);
    Iterator<Entry<TableName,Set<String>>> iter=orphanTableDirs.entrySet().iterator();
    int j=0;
    int numFailedCase=0;
    FSTableDescriptors fstd=new FSTableDescriptors(getConf());
    while (iter.hasNext()) {
      Entry<TableName,Set<String>> entry=iter.next();
      TableName tableName=entry.getKey();
      LOG.info("Trying to fix orphan table error: " + tableName);
      if (j < htds.length) {
        if (tableName.equals(htds[j].getTableName())) {
          HTableDescriptor htd=htds[j];
          LOG.info("fixing orphan table: " + tableName + " from cache");
          fstd.createTableDescriptor(new TableDescriptor(htd,TableState.State.ENABLED),true);
          j++;
          iter.remove();
        }
      }
 else {
        if (fabricateTableInfo(fstd,tableName,entry.getValue())) {
          LOG.warn("fixing orphan table: " + tableName + " with a default .tableinfo file");
          LOG.warn("Strongly recommend to modify the HTableDescriptor if necessary for: " + tableName);
          iter.remove();
        }
 else {
          LOG.error("Unable to create default .tableinfo for " + tableName + " while missing column family information");
          numFailedCase++;
        }
      }
      fixes++;
    }
    if (orphanTableDirs.isEmpty()) {
      setShouldRerun();
      LOG.warn("Strongly recommend to re-run manually hfsck after all orphanTableDirs being fixed");
    }
 else     if (numFailedCase > 0) {
      LOG.error("Failed to fix " + numFailedCase + " OrphanTables with default .tableinfo files");
    }
  }
  orphanTableDirs.clear();
}
