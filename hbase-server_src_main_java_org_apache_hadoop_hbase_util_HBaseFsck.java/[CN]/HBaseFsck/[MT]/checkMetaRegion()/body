{
  List<HbckInfo> metaRegions=Lists.newArrayList();
  for (  HbckInfo value : regionInfoMap.values()) {
    if (value.metaEntry != null && value.metaEntry.isMetaRegion()) {
      metaRegions.add(value);
    }
  }
  HbckInfo metaHbckInfo=metaRegions.get(0);
  List<ServerName> servers=metaHbckInfo.deployedOn;
  if (servers.size() != 1) {
    if (servers.size() == 0) {
      errors.reportError(ERROR_CODE.NO_META_REGION,".META. is not found on any region.");
      if (shouldFixAssignments()) {
        errors.print("Trying to fix a problem with .META...");
        setShouldRerun();
        HBaseFsckRepair.fixUnassigned(admin,metaHbckInfo.metaEntry);
        HBaseFsckRepair.waitUntilAssigned(admin,metaHbckInfo.metaEntry);
      }
    }
 else     if (servers.size() > 1) {
      errors.reportError(ERROR_CODE.MULTI_META_REGION,".META. is found on more than one region.");
      if (shouldFixAssignments()) {
        errors.print("Trying to fix a problem with .META...");
        setShouldRerun();
        HBaseFsckRepair.fixMultiAssignment(admin,metaHbckInfo.metaEntry,servers);
      }
    }
    return false;
  }
  return true;
}
