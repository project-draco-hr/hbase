{
  StringBuilder sb=new StringBuilder();
  int numOfSkippedRegions;
  errors.print("Summary:");
  for (  TableInfo tInfo : tablesInfo.values()) {
    numOfSkippedRegions=(skippedRegions.containsKey(tInfo.getName())) ? skippedRegions.get(tInfo.getName()).size() : 0;
    if (errors.tableHasErrors(tInfo)) {
      errors.print("Table " + tInfo.getName() + " is inconsistent.");
    }
 else     if (numOfSkippedRegions > 0) {
      errors.print("Table " + tInfo.getName() + " is okay (with "+ numOfSkippedRegions+ " skipped regions).");
    }
 else {
      errors.print("Table " + tInfo.getName() + " is okay.");
    }
    errors.print("    Number of regions: " + tInfo.getNumRegions());
    if (numOfSkippedRegions > 0) {
      Set<String> skippedRegionStrings=skippedRegions.get(tInfo.getName());
      System.out.println("    Number of skipped regions: " + numOfSkippedRegions);
      System.out.println("      List of skipped regions:");
      for (      String sr : skippedRegionStrings) {
        System.out.println("        " + sr);
      }
    }
    sb.setLength(0);
    sb.append("    Deployed on: ");
    for (    ServerName server : tInfo.deployedOn) {
      sb.append(" " + server.toString());
    }
    errors.print(sb.toString());
  }
}
