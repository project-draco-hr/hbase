{
  LOG.info("Loading HBase regioninfo from HDFS...");
  loadHdfsRegionDirs();
  int errs=errors.getErrorList().size();
  tablesInfo=loadHdfsRegionInfos();
  checkHdfsIntegrity(false,false);
  if (errors.getErrorList().size() != errs) {
    while (true) {
      fixes=0;
      suggestFixes(tablesInfo);
      errors.clear();
      loadHdfsRegionInfos();
      checkHdfsIntegrity(shouldFixHdfsHoles(),shouldFixHdfsOverlaps());
      int errCount=errors.getErrorList().size();
      if (fixes == 0) {
        if (errCount > 0) {
          return false;
        }
 else {
          break;
        }
      }
    }
  }
  LOG.info("HDFS regioninfo's seems good.  Sidelining old hbase:meta");
  Path backupDir=sidelineOldMeta();
  LOG.info("Creating new hbase:meta");
  HRegion meta=createNewMeta();
  List<Put> puts=generatePuts(tablesInfo);
  if (puts == null) {
    LOG.fatal("Problem encountered when creating new hbase:meta entries.  " + "You may need to restore the previously sidelined hbase:meta");
    return false;
  }
  meta.batchMutate(puts.toArray(new Put[puts.size()]));
  HRegion.closeHRegion(meta);
  LOG.info("Success! hbase:meta table rebuilt.");
  LOG.info("Old hbase:meta is moved into " + backupDir);
  return true;
}
