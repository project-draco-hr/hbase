{
  List<WorkItemRegionConsistency> workItems=new ArrayList<WorkItemRegionConsistency>(regionInfoMap.size());
  for (  java.util.Map.Entry<String,HbckInfo> e : regionInfoMap.entrySet()) {
    if (e.getValue().getReplicaId() == HRegionInfo.DEFAULT_REPLICA_ID) {
      workItems.add(new WorkItemRegionConsistency(e.getKey(),e.getValue()));
    }
  }
  List<Future<Void>> workFutures=executor.invokeAll(workItems);
  for (  Future<Void> f : workFutures) {
    try {
      f.get();
    }
 catch (    ExecutionException e1) {
      LOG.warn("Could not check region consistency ",e1.getCause());
    }
  }
  boolean prevHdfsCheck=shouldCheckHdfs();
  setCheckHdfs(false);
  for (  java.util.Map.Entry<String,HbckInfo> e : regionInfoMap.entrySet()) {
    if (e.getValue().getReplicaId() != HRegionInfo.DEFAULT_REPLICA_ID) {
      checkRegionConsistency(e.getKey(),e.getValue());
    }
  }
  setCheckHdfs(prevHdfsCheck);
}
