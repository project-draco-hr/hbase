{
  int fileMoves=0;
  String thread=Thread.currentThread().getName();
  LOG.debug("[" + thread + "] Contained region dir after close and pause");
  debugLsr(contained.getHdfsRegionDir());
  FileSystem fs=targetRegionDir.getFileSystem(getConf());
  FileStatus[] dirs=null;
  try {
    dirs=fs.listStatus(contained.getHdfsRegionDir());
  }
 catch (  FileNotFoundException fnfe) {
    if (!fs.exists(contained.getHdfsRegionDir())) {
      LOG.warn("[" + thread + "] HDFS region dir "+ contained.getHdfsRegionDir()+ " is missing. Assuming already sidelined or moved.");
    }
 else {
      sidelineRegionDir(fs,contained);
    }
    return fileMoves;
  }
  if (dirs == null) {
    if (!fs.exists(contained.getHdfsRegionDir())) {
      LOG.warn("[" + thread + "] HDFS region dir "+ contained.getHdfsRegionDir()+ " already sidelined.");
    }
 else {
      sidelineRegionDir(fs,contained);
    }
    return fileMoves;
  }
  for (  FileStatus cf : dirs) {
    Path src=cf.getPath();
    Path dst=new Path(targetRegionDir,src.getName());
    if (src.getName().equals(HRegionFileSystem.REGION_INFO_FILE)) {
      continue;
    }
    if (src.getName().equals(HConstants.HREGION_OLDLOGDIR_NAME)) {
      continue;
    }
    LOG.info("[" + thread + "] Moving files from "+ src+ " into containing region "+ dst);
    for (    FileStatus hfile : fs.listStatus(src)) {
      boolean success=fs.rename(hfile.getPath(),dst);
      if (success) {
        fileMoves++;
      }
    }
    LOG.debug("[" + thread + "] Sideline directory contents:");
    debugLsr(targetRegionDir);
  }
  sidelineRegionDir(fs,contained);
  LOG.info("[" + thread + "] Sidelined region dir "+ contained.getHdfsRegionDir()+ " into "+ getSidelineDir());
  debugLsr(contained.getHdfsRegionDir());
  return fileMoves;
}
