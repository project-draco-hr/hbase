{
  List<WorkItemOverlapMerge> merges=new ArrayList<WorkItemOverlapMerge>(overlapGroups.size());
  List<Future<Void>> rets;
  for (  Collection<HbckInfo> overlap : overlapGroups.asMap().values()) {
    merges.add(new WorkItemOverlapMerge(overlap,handler));
  }
  try {
    rets=executor.invokeAll(merges);
  }
 catch (  InterruptedException e) {
    LOG.error("Overlap merges were interrupted",e);
    return false;
  }
  for (int i=0; i < merges.size(); i++) {
    WorkItemOverlapMerge work=merges.get(i);
    Future<Void> f=rets.get(i);
    try {
      f.get();
    }
 catch (    ExecutionException e) {
      LOG.warn("Failed to merge overlap group" + work,e.getCause());
    }
catch (    InterruptedException e) {
      LOG.error("Waiting for overlap merges was interrupted",e);
      return false;
    }
  }
  return true;
}
