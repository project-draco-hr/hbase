{
  int overlapsToSideline=bigOverlap.size() - maxMerge;
  if (overlapsToSideline > maxOverlapsToSideline) {
    overlapsToSideline=maxOverlapsToSideline;
  }
  List<HbckInfo> regionsToSideline=RegionSplitCalculator.findBigRanges(bigOverlap,overlapsToSideline);
  FileSystem fs=FileSystem.get(conf);
  for (  HbckInfo regionToSideline : regionsToSideline) {
    try {
      LOG.info("Closing region: " + regionToSideline);
      closeRegion(regionToSideline);
    }
 catch (    InterruptedException ie) {
      LOG.warn("Was unable to close region " + regionToSideline.getRegionNameAsString() + ".  Interrupted.");
      throw new IOException(ie);
    }
    LOG.info("Offlining region: " + regionToSideline);
    offline(regionToSideline.getRegionName());
    LOG.info("Before sideline big overlapped region: " + regionToSideline.toString());
    Path sidelineRegionDir=sidelineRegionDir(fs,regionToSideline);
    if (sidelineRegionDir != null) {
      sidelinedRegions.put(sidelineRegionDir,regionToSideline);
      LOG.info("After sidelined big overlapped region: " + regionToSideline.getRegionNameAsString() + " to "+ sidelineRegionDir.toString());
      fixes++;
    }
  }
}
