{
  HColumnDescriptor col=new HColumnDescriptor(Bytes.toBytes("foo"));
  StoreFileWritersCapture writers=new StoreFileWritersCapture();
  Store store=mock(Store.class);
  HRegionInfo info=mock(HRegionInfo.class);
  when(info.getRegionNameAsString()).thenReturn("testRegion");
  when(store.getFamily()).thenReturn(col);
  when(store.getRegionInfo()).thenReturn(info);
  when(store.createWriterInTmp(anyLong(),any(Compression.Algorithm.class),anyBoolean(),anyBoolean(),anyBoolean())).thenAnswer(writers);
  Configuration conf=HBaseConfiguration.create();
  final Scanner scanner=new Scanner();
  return new StripeCompactor(conf,store){
    @Override protected InternalScanner createScanner(    Store store,    List<StoreFileScanner> scanners,    long smallestReadPoint,    long earliestPutTs,    byte[] dropDeletesFromRow,    byte[] dropDeletesToRow) throws IOException {
      return scanner;
    }
    @Override protected InternalScanner createScanner(    Store store,    List<StoreFileScanner> scanners,    ScanType scanType,    long smallestReadPoint,    long earliestPutTs) throws IOException {
      return scanner;
    }
  }
;
}
