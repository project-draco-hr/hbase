{
  Configuration conf=HBaseConfiguration.create();
  conf.unset("hbase.hstore.compaction.min.size");
  conf.setFloat(CompactionConfiguration.HBASE_HSTORE_COMPACTION_RATIO_KEY,1.0F);
  conf.setInt(StripeStoreConfig.MIN_FILES_KEY,3);
  conf.setInt(StripeStoreConfig.MAX_FILES_KEY,4);
  conf.setLong(StripeStoreConfig.SIZE_TO_SPLIT_KEY,1000);
  StoreConfigInformation sci=mock(StoreConfigInformation.class);
  StripeStoreConfig ssc=new StripeStoreConfig(conf,sci);
  StripeCompactionPolicy policy=new StripeCompactionPolicy(conf,sci,ssc){
    @Override public StripeCompactionRequest selectCompaction(    StripeInformationProvider si,    List<StoreFile> filesCompacting,    boolean isOffpeak) throws IOException {
      if (!filesCompacting.isEmpty())       return null;
      return selectSingleStripeCompaction(si,false,false,isOffpeak);
    }
    @Override public boolean needsCompactions(    StripeInformationProvider si,    List<StoreFile> filesCompacting){
      if (!filesCompacting.isEmpty())       return false;
      return needsSingleStripeCompaction(si);
    }
  }
;
  StripeInformationProvider si=createStripesWithSizes(0,0,new Long[]{2L},new Long[]{3L,3L},new Long[]{5L,1L});
  verifyNoCompaction(policy,si);
  si=createStripesWithSizes(0,0,new Long[]{2L},new Long[]{3L,3L},new Long[]{5L,1L,1L});
  assertNull(policy.selectCompaction(si,al(),false));
  assertTrue(policy.needsCompactions(si,al()));
  si=createStripesWithSizes(0,0,new Long[]{2L},new Long[]{3L,3L},new Long[]{5L,4L,3L});
  verifySingleStripeCompaction(policy,si,2,null);
  si=createStripesWithSizes(0,0,new Long[]{3L,2L,2L},new Long[]{2L,2L,1L},new Long[]{3L,2L,2L,1L});
  verifySingleStripeCompaction(policy,si,2,null);
  si=createStripesWithSizes(0,0,new Long[]{5L},new Long[]{3L,2L,2L,1L},new Long[]{3L,2L,2L});
  verifySingleStripeCompaction(policy,si,1,null);
  si=createStripesWithSizes(0,0,new Long[]{3L,3L,3L},new Long[]{3L,1L,2L},new Long[]{3L,2L,2L});
  verifySingleStripeCompaction(policy,si,1,null);
  si=createStripesWithSizes(0,0,new Long[]{5L},new Long[]{5L,4L,4L,4L,4L});
  List<StoreFile> sfs=si.getStripes().get(1).subList(1,5);
  verifyCompaction(policy,si,sfs,null,1,null,si.getStartRow(1),si.getEndRow(1),true);
  si=createStripesWithSizes(0,0,new Long[]{5L},new Long[]{50L,4L,4L,4L,4L});
  sfs=si.getStripes().get(1).subList(1,5);
  verifyCompaction(policy,si,sfs,null,1,null,si.getStartRow(1),si.getEndRow(1),true);
}
