{
  byte[][] KEYS={HConstants.EMPTY_BYTE_ARRAY,Bytes.toBytes("bbb"),Bytes.toBytes("ccc"),Bytes.toBytes("ddd"),Bytes.toBytes("eee"),Bytes.toBytes("fff"),Bytes.toBytes("ggg"),Bytes.toBytes("hhh"),Bytes.toBytes("iii"),Bytes.toBytes("jjj"),Bytes.toBytes("kkk"),Bytes.toBytes("lll"),Bytes.toBytes("mmm"),Bytes.toBytes("nnn"),Bytes.toBytes("ooo"),Bytes.toBytes("ppp"),Bytes.toBytes("qqq"),Bytes.toBytes("rrr"),Bytes.toBytes("sss"),Bytes.toBytes("ttt"),Bytes.toBytes("uuu"),Bytes.toBytes("vvv"),Bytes.toBytes("www"),Bytes.toBytes("xxx"),Bytes.toBytes("yyy")};
  HBaseConfiguration c=getConfiguration();
  HTable meta=new HTable(c,HConstants.META_TABLE_NAME);
  HTableDescriptor htd=table.getTableDescriptor();
  if (!htd.hasFamily(columnFamily)) {
    HColumnDescriptor hcd=new HColumnDescriptor(columnFamily);
    htd.addFamily(hcd);
  }
  List<byte[]> rows=getMetaTableRows();
  for (int i=0; i < KEYS.length; i++) {
    int j=(i + 1) % KEYS.length;
    HRegionInfo hri=new HRegionInfo(table.getTableDescriptor(),KEYS[i],KEYS[j]);
    Put put=new Put(hri.getRegionName());
    put.add(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER,Writables.getBytes(hri));
    meta.put(put);
    LOG.info("createMultiRegions: inserted " + hri.toString());
  }
  for (  byte[] row : rows) {
    LOG.info("createMultiRegions: deleting meta row -> " + Bytes.toStringBinary(row));
    meta.delete(new Delete(row));
  }
  HConnection conn=table.getConnection();
  conn.clearRegionCache();
}
