{
  final int NUM_MASTERS=1;
  final int NUM_RS=0;
  Configuration conf=HBaseConfiguration.create();
  conf.setInt("hbase.ipc.client.failed.servers.expiry",200);
  conf.setInt(ServerManager.WAIT_ON_REGIONSERVERS_MINTOSTART,1);
  final HBaseTestingUtility util=new HBaseTestingUtility(conf);
  util.startMiniDFSCluster(3);
  util.startMiniZKCluster();
  util.createRootDir();
  final LocalHBaseCluster cluster=new LocalHBaseCluster(conf,NUM_MASTERS,NUM_RS,HMaster.class,MiniHBaseCluster.MiniHBaseClusterRegionServer.class);
  final int MASTER_INDEX=0;
  final MasterThread master=cluster.getMasters().get(MASTER_INDEX);
  master.start();
  LOG.info("Called master start on " + master.getName());
  Thread shutdownThread=new Thread(){
    public void run(){
      LOG.info("Before call to shutdown master");
      try {
        try (Connection connection=ConnectionFactory.createConnection(util.getConfiguration())){
          try (Admin admin=connection.getAdmin()){
            admin.shutdown();
          }
         }
         LOG.info("After call to shutdown master");
        cluster.waitOnMaster(MASTER_INDEX);
      }
 catch (      Exception e) {
      }
    }
  }
;
  shutdownThread.start();
  LOG.info("Called master join on " + master.getName());
  master.join();
  shutdownThread.join();
  List<MasterThread> masterThreads=cluster.getMasters();
  assertEquals(0,masterThreads.size());
  util.shutdownMiniZKCluster();
  util.shutdownMiniDFSCluster();
  util.cleanupTestDir();
}
