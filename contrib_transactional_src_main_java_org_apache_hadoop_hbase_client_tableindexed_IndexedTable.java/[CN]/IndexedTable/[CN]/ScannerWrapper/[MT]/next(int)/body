{
  Result[] indexResult=indexScanner.next(nbRows);
  if (indexResult == null) {
    return null;
  }
  Result[] result=new Result[indexResult.length];
  for (int i=0; i < indexResult.length; i++) {
    Result row=indexResult[i];
    byte[] baseRow=row.getValue(INDEX_COL_FAMILY_NAME,INDEX_BASE_ROW);
    LOG.debug("next index row [" + Bytes.toString(row.getRow()) + "] -> base row ["+ Bytes.toString(baseRow)+ "]");
    Result baseResult=null;
    if (columns != null && columns.length > 0) {
      LOG.debug("Going to base table for remaining columns");
      Get baseGet=new Get(baseRow);
      for (      byte[] column : columns) {
        byte[][] famQf=KeyValue.parseColumn(column);
        if (famQf.length == 1) {
          baseGet.addFamily(famQf[0]);
        }
 else {
          baseGet.addColumn(famQf[0],famQf[1]);
        }
      }
      baseResult=IndexedTable.this.get(baseGet);
    }
    List<KeyValue> results=new ArrayList<KeyValue>();
    for (    KeyValue indexKV : row.list()) {
      if (indexKV.matchingFamily(INDEX_COL_FAMILY_NAME)) {
        continue;
      }
      results.add(new KeyValue(baseRow,indexKV.getFamily(),indexKV.getQualifier(),indexKV.getTimestamp(),KeyValue.Type.Put,indexKV.getValue()));
    }
    if (baseResult != null) {
      results.addAll(baseResult.list());
    }
    result[i]=new Result(results);
  }
  return result;
}
