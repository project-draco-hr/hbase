{
  if (scanner.seekTo(startKey.getBuffer(),startKey.getKeyOffset(),startKey.getKeyLength()) == -1) {
    byte[] firstKey=scanner.getReader().getFirstKey();
    if (firstKey == null)     return false;
    short rowLen=Bytes.toShort(firstKey,0,Bytes.SIZEOF_SHORT);
    int rowOffset=Bytes.SIZEOF_SHORT;
    if (this.matcher.rowComparator.compareRows(firstKey,rowOffset,rowLen,startKey.getBuffer(),startKey.getRowOffset(),startKey.getRowLength()) != 0)     return false;
    scanner.seekTo();
  }
  do {
    KeyValue kv=scanner.getKeyValue();
switch (matcher.match(kv)) {
case INCLUDE:
      result.add(kv);
    break;
case SKIP:
  break;
case NEXT:
return false;
case DONE:
return true;
}
}
 while (scanner.next());
return false;
}
