{
  this.conf=HBaseConfiguration.create();
  Logger log=Logger.getLogger("org.apache.hadoop.ipc.HBaseServer");
  log.setLevel(Level.DEBUG);
  log=Logger.getLogger("org.apache.hadoop.ipc.HBaseServer.trace");
  log.setLevel(Level.TRACE);
  PBServerImpl serverImpl=new PBServerImpl();
  BlockingService service=TestRpcServiceProtos.TestProtobufRpcProto.newReflectiveBlockingService(serverImpl);
  this.server=new RpcServer(null,"testrpc",Lists.newArrayList(new RpcServer.BlockingServiceAndInterface(service,null)),new InetSocketAddress(ADDRESS,PORT),conf,new FifoRpcScheduler(conf,10));
  InetSocketAddress address=server.getListenerAddress();
  if (address == null) {
    throw new IOException("Listener channel is closed");
  }
  this.isa=address;
  this.server.start();
}
