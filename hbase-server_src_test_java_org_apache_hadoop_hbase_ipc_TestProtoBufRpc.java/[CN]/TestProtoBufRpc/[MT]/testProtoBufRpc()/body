{
  RpcClient rpcClient=RpcClientFactory.createClient(conf,HConstants.CLUSTER_ID_DEFAULT);
  try {
    BlockingRpcChannel channel=rpcClient.createBlockingRpcChannel(ServerName.valueOf(this.isa.getHostName(),this.isa.getPort(),System.currentTimeMillis()),User.getCurrent(),0);
    TestRpcServiceProtos.TestProtobufRpcProto.BlockingInterface stub=TestRpcServiceProtos.TestProtobufRpcProto.newBlockingStub(channel);
    TestProtos.EmptyRequestProto emptyRequest=TestProtos.EmptyRequestProto.newBuilder().build();
    stub.ping(null,emptyRequest);
    EchoRequestProto echoRequest=EchoRequestProto.newBuilder().setMessage("hello").build();
    EchoResponseProto echoResponse=stub.echo(null,echoRequest);
    Assert.assertEquals(echoResponse.getMessage(),"hello");
    try {
      stub.error(null,emptyRequest);
      Assert.fail("Expected exception is not thrown");
    }
 catch (    ServiceException e) {
    }
  }
  finally {
    rpcClient.close();
  }
}
