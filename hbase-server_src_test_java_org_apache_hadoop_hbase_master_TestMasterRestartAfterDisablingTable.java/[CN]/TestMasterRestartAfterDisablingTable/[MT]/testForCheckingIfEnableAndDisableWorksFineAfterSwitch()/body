{
  final int NUM_MASTERS=2;
  final int NUM_RS=1;
  final int NUM_REGIONS_TO_CREATE=4;
  log("Starting cluster");
  Configuration conf=HBaseConfiguration.create();
  HBaseTestingUtility TEST_UTIL=new HBaseTestingUtility(conf);
  TEST_UTIL.startMiniCluster(NUM_MASTERS,NUM_RS);
  MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
  log("Waiting for active/ready master");
  cluster.waitForActiveAndReadyMaster();
  ZooKeeperWatcher zkw=new ZooKeeperWatcher(conf,"testmasterRestart",null);
  HMaster master=cluster.getMaster();
  byte[] table=Bytes.toBytes("tableRestart");
  byte[] family=Bytes.toBytes("family");
  log("Creating table with " + NUM_REGIONS_TO_CREATE + " regions");
  HTable ht=TEST_UTIL.createTable(table,family);
  int numRegions=TEST_UTIL.createMultiRegions(conf,ht,family,NUM_REGIONS_TO_CREATE);
  numRegions+=1;
  log("Waiting for no more RIT\n");
  blockUntilNoRIT(zkw,master);
  log("Disabling table\n");
  TEST_UTIL.getHBaseAdmin().disableTable(table);
  NavigableSet<String> regions=HBaseTestingUtility.getAllOnlineRegions(cluster);
  assertEquals("The number of regions for the table tableRestart should be 0 and only" + "the catalog and namespace tables should be present.",2,regions.size());
  List<MasterThread> masterThreads=cluster.getMasterThreads();
  MasterThread activeMaster=null;
  if (masterThreads.get(0).getMaster().isActiveMaster()) {
    activeMaster=masterThreads.get(0);
  }
 else {
    activeMaster=masterThreads.get(1);
  }
  activeMaster.getMaster().stop("stopping the active master so that the backup can become active");
  cluster.hbaseCluster.waitOnMaster(activeMaster);
  cluster.waitForActiveAndReadyMaster();
  assertTrue("The table should not be in enabled state",cluster.getMaster().getAssignmentManager().getTableStateManager().isTableState(TableName.valueOf("tableRestart"),ZooKeeperProtos.Table.State.DISABLED,ZooKeeperProtos.Table.State.DISABLING));
  log("Enabling table\n");
  HBaseAdmin admin=new HBaseAdmin(TEST_UTIL.getConfiguration());
  admin.enableTable(table);
  admin.close();
  log("Waiting for no more RIT\n");
  blockUntilNoRIT(zkw,master);
  log("Verifying there are " + numRegions + " assigned on cluster\n");
  regions=HBaseTestingUtility.getAllOnlineRegions(cluster);
  assertEquals("The assigned regions were not onlined after master" + " switch except for the catalog and namespace tables.",6,regions.size());
  assertTrue("The table should be in enabled state",cluster.getMaster().getAssignmentManager().getTableStateManager().isTableState(TableName.valueOf("tableRestart"),ZooKeeperProtos.Table.State.ENABLED));
  ht.close();
  TEST_UTIL.shutdownMiniCluster();
}
