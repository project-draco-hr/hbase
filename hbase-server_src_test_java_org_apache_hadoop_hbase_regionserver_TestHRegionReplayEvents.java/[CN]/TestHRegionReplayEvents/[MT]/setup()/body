{
  TEST_UTIL=HBaseTestingUtility.createLocalHTU();
  FILESYSTEM=TEST_UTIL.getTestFileSystem();
  CONF=TEST_UTIL.getConfiguration();
  dir=TEST_UTIL.getDataTestDir("TestHRegionReplayEvents").toString();
  method=name.getMethodName();
  tableName=Bytes.toBytes(name.getMethodName());
  rootDir=new Path(dir + method);
  TEST_UTIL.getConfiguration().set(HConstants.HBASE_DIR,rootDir.toString());
  method=name.getMethodName();
  htd=new HTableDescriptor(TableName.valueOf(method));
  for (  byte[] family : families) {
    htd.addFamily(new HColumnDescriptor(family));
  }
  time=System.currentTimeMillis();
  primaryHri=new HRegionInfo(htd.getTableName(),HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW,false,time,0);
  secondaryHri=new HRegionInfo(htd.getTableName(),HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW,false,time,1);
  wals=TestHRegion.createWALFactory(CONF,rootDir);
  walPrimary=wals.getWAL(primaryHri.getEncodedNameAsBytes(),primaryHri.getTable().getNamespace());
  walSecondary=wals.getWAL(secondaryHri.getEncodedNameAsBytes(),secondaryHri.getTable().getNamespace());
  rss=mock(RegionServerServices.class);
  when(rss.getServerName()).thenReturn(ServerName.valueOf("foo",1,1));
  when(rss.getConfiguration()).thenReturn(CONF);
  when(rss.getRegionServerAccounting()).thenReturn(new RegionServerAccounting());
  primaryRegion=HRegion.createHRegion(primaryHri,rootDir,CONF,htd,walPrimary);
  primaryRegion.close();
  primaryRegion=HRegion.openHRegion(rootDir,primaryHri,htd,walPrimary,CONF,rss,null);
  secondaryRegion=HRegion.openHRegion(secondaryHri,htd,null,CONF,rss,null);
  reader=null;
}
