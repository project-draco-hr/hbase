{
  LOG.info("Merging regions " + Bytes.toStringBinary(this.region1) + " and "+ Bytes.toStringBinary(this.region2)+ " in table "+ this.tableName);
  HRegion meta=this.utils.getMetaRegion();
  Get get=new Get(region1);
  get.addColumn(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
  Result result1=meta.get(get);
  Preconditions.checkState(!result1.isEmpty(),"First region cells can not be null");
  HRegionInfo info1=HRegionInfo.getHRegionInfo(result1);
  if (info1 == null) {
    throw new NullPointerException("info1 is null using key " + Bytes.toStringBinary(region1) + " in "+ meta);
  }
  get=new Get(region2);
  get.addColumn(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
  Result result2=meta.get(get);
  Preconditions.checkState(!result2.isEmpty(),"Second region cells can not be null");
  HRegionInfo info2=HRegionInfo.getHRegionInfo(result2);
  if (info2 == null) {
    throw new NullPointerException("info2 is null using key " + meta);
  }
  HTableDescriptor htd=FSTableDescriptors.getTableDescriptorFromFs(FileSystem.get(getConf()),this.rootdir,this.tableName);
  HRegion merged=merge(htd,meta,info1,info2);
  LOG.info("Adding " + merged.getRegionInfo() + " to "+ meta.getRegionInfo());
  HRegion.addRegionToMETA(meta,merged);
  merged.close();
}
