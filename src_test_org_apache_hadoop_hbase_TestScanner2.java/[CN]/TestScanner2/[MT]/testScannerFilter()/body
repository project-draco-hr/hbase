{
  HClient client=new HClient(this.conf);
  HTableDescriptor htd=new HTableDescriptor(getName());
  Text tableName=new Text(getName());
  Text[] colKeys=new Text[(LAST_COLKEY - FIRST_COLKEY) + 1];
  for (char i=0; i < colKeys.length; i++) {
    colKeys[i]=new Text(new String(new char[]{(char)(FIRST_COLKEY + i),':'}));
    htd.addFamily(new HColumnDescriptor(colKeys[i].toString()));
  }
  client.createTable(htd);
  assertTrue("Table with name " + tableName + " created successfully.",client.tableExists(tableName));
  assertTrue("Master is running.",client.isMasterRunning());
  client.openTable(tableName);
  for (char i=FIRST_ROWKEY; i <= LAST_ROWKEY; i++) {
    Text rowKey=new Text(new String(new char[]{i}));
    long lockID=client.startUpdate(rowKey);
    for (char j=0; j < colKeys.length; j++) {
      client.put(lockID,colKeys[j],(i >= FIRST_BAD_RANGE_ROWKEY && i <= LAST_BAD_RANGE_ROWKEY) ? BAD_BYTES : GOOD_BYTES);
    }
    client.commit(lockID);
  }
  regExpFilterTest(client,colKeys);
  rowFilterSetTest(client,colKeys);
}
