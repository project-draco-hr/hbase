{
  List<HRegionInfo> regions=new ArrayList<HRegionInfo>();
  HRegionInterface regionServer=null;
  long scannerId=-1L;
  try {
    HRegionLocation rl=t.getRegionLocation(t.getTableName());
    regionServer=t.getConnection().getHRegionConnection(rl.getServerAddress());
    scannerId=regionServer.openScanner(rl.getRegionInfo().getRegionName(),HConstants.COLUMN_FAMILY_ARRAY,new Text(),System.currentTimeMillis(),null);
    while (true) {
      TreeMap<Text,byte[]> results=new TreeMap<Text,byte[]>();
      MapWritable values=regionServer.next(scannerId);
      if (values == null || values.size() == 0) {
        break;
      }
      for (      Map.Entry<Writable,Writable> e : values.entrySet()) {
        HStoreKey k=(HStoreKey)e.getKey();
        results.put(k.getColumn(),((ImmutableBytesWritable)e.getValue()).get());
      }
      HRegionInfo info=(HRegionInfo)Writables.getWritable(results.get(HConstants.COL_REGIONINFO),new HRegionInfo());
      byte[] bytes=results.get(HConstants.COL_SERVER);
      String serverName=Writables.bytesToString(bytes);
      long startCode=Writables.bytesToLong(results.get(HConstants.COL_STARTCODE));
      LOG.info(Thread.currentThread().getName() + " scanner: " + Long.valueOf(scannerId)+ ": regioninfo: {"+ info.toString()+ "}, server: "+ serverName+ ", startCode: "+ startCode);
      regions.add(info);
    }
  }
  finally {
    try {
      if (scannerId != -1L) {
        if (regionServer != null) {
          regionServer.close(scannerId);
        }
      }
    }
 catch (    IOException e) {
      LOG.error(e);
    }
  }
  return regions;
}
