{
  final int NUM_GLOBAL_THROTTLE_1=3;
  final int NUM_GLOBAL_THROTTLE_2=11;
  final long LAST_UPDATE_1=10;
  final long LAST_UPDATE_2=20;
  final long LAST_UPDATE_3=30;
  QuotaState quotaInfo=new QuotaState();
  assertEquals(0,quotaInfo.getLastUpdate());
  assertTrue(quotaInfo.isBypass());
  QuotaState otherQuotaState=new QuotaState(LAST_UPDATE_1);
  otherQuotaState.setQuotas(buildReqNumThrottle(NUM_GLOBAL_THROTTLE_1));
  assertEquals(LAST_UPDATE_1,otherQuotaState.getLastUpdate());
  assertFalse(otherQuotaState.isBypass());
  quotaInfo.update(otherQuotaState);
  assertEquals(LAST_UPDATE_1,quotaInfo.getLastUpdate());
  assertFalse(quotaInfo.isBypass());
  assertThrottleException(quotaInfo.getGlobalLimiter(),NUM_GLOBAL_THROTTLE_1);
  otherQuotaState=new QuotaState(LAST_UPDATE_2);
  otherQuotaState.setQuotas(buildReqNumThrottle(NUM_GLOBAL_THROTTLE_2));
  assertEquals(LAST_UPDATE_2,otherQuotaState.getLastUpdate());
  assertFalse(otherQuotaState.isBypass());
  quotaInfo.update(otherQuotaState);
  assertEquals(LAST_UPDATE_2,quotaInfo.getLastUpdate());
  assertFalse(quotaInfo.isBypass());
  assertThrottleException(quotaInfo.getGlobalLimiter(),NUM_GLOBAL_THROTTLE_2 - NUM_GLOBAL_THROTTLE_1);
  otherQuotaState=new QuotaState(LAST_UPDATE_3);
  assertEquals(LAST_UPDATE_3,otherQuotaState.getLastUpdate());
  assertTrue(otherQuotaState.isBypass());
  quotaInfo.update(otherQuotaState);
  assertEquals(LAST_UPDATE_3,quotaInfo.getLastUpdate());
  assertTrue(quotaInfo.isBypass());
  assertNoopLimiter(quotaInfo.getGlobalLimiter());
}
