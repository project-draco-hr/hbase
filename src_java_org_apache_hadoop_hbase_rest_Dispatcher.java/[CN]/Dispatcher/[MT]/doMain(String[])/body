{
  if (args.length < 1) {
    printUsageAndExit();
  }
  int port=60050;
  String bindAddress="0.0.0.0";
  int numThreads=256;
  final String addressArgKey="--bind=";
  final String portArgKey="--port=";
  final String numThreadsKey="--max-num-threads=";
  for (  String cmd : args) {
    if (cmd.startsWith(addressArgKey)) {
      bindAddress=cmd.substring(addressArgKey.length());
      continue;
    }
 else     if (cmd.startsWith(portArgKey)) {
      port=Integer.parseInt(cmd.substring(portArgKey.length()));
      continue;
    }
 else     if (cmd.equals("--help") || cmd.equals("-h")) {
      printUsageAndExit();
    }
 else     if (cmd.equals("start")) {
      continue;
    }
 else     if (cmd.equals("stop")) {
      printUsageAndExit("To shutdown the REST server run " + "bin/hbase-daemon.sh stop rest or send a kill signal to " + "the REST server pid");
    }
 else     if (cmd.startsWith(numThreadsKey)) {
      numThreads=Integer.parseInt(cmd.substring(numThreadsKey.length()));
      continue;
    }
    printUsageAndExit();
  }
  org.mortbay.jetty.Server webServer=new org.mortbay.jetty.Server();
  Connector connector=new SocketConnector();
  connector.setPort(port);
  connector.setHost(bindAddress);
  QueuedThreadPool pool=new QueuedThreadPool();
  pool.setMaxThreads(numThreads);
  webServer.addConnector(connector);
  webServer.setThreadPool(pool);
  WebAppContext wac=new WebAppContext();
  wac.setContextPath("/");
  wac.setWar(InfoServer.getWebAppDir("rest"));
  NCSARequestLog ncsa=new NCSARequestLog();
  ncsa.setLogLatency(true);
  RequestLogHandler rlh=new RequestLogHandler();
  rlh.setRequestLog(ncsa);
  rlh.setHandler(wac);
  webServer.addHandler(rlh);
  webServer.start();
}
