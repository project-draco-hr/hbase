{
  FSHLog wal1=null;
  FSHLog walMeta=null;
  try {
    wal1=new FSHLog(fs,FSUtils.getRootDir(conf),dir.toString(),HConstants.HREGION_OLDLOGDIR_NAME,conf,null,true,null,null);
    LOG.debug("Log obtained is: " + wal1);
    Comparator<Path> comp=wal1.LOG_NAME_COMPARATOR;
    Path p1=wal1.computeFilename(11);
    Path p2=wal1.computeFilename(12);
    assertTrue(comp.compare(p1,p1) == 0);
    assertTrue(comp.compare(p1,p2) < 0);
    walMeta=new FSHLog(fs,FSUtils.getRootDir(conf),dir.toString(),HConstants.HREGION_OLDLOGDIR_NAME,conf,null,true,null,DefaultWALProvider.META_WAL_PROVIDER_ID);
    Comparator<Path> compMeta=walMeta.LOG_NAME_COMPARATOR;
    Path p1WithMeta=walMeta.computeFilename(11);
    Path p2WithMeta=walMeta.computeFilename(12);
    assertTrue(compMeta.compare(p1WithMeta,p1WithMeta) == 0);
    assertTrue(compMeta.compare(p1WithMeta,p2WithMeta) < 0);
    boolean ex=false;
    try {
      comp.compare(p1WithMeta,p2);
    }
 catch (    IllegalArgumentException e) {
      ex=true;
    }
    assertTrue("Comparator doesn't complain while checking meta log files",ex);
    boolean exMeta=false;
    try {
      compMeta.compare(p1WithMeta,p2);
    }
 catch (    IllegalArgumentException e) {
      exMeta=true;
    }
    assertTrue("Meta comparator doesn't complain while checking log files",exMeta);
  }
  finally {
    if (wal1 != null) {
      wal1.close();
    }
    if (walMeta != null) {
      walMeta.close();
    }
  }
}
