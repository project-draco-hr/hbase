{
  RegionServerOperation op=null;
  if (rootRegionLocation != null) {
    op=delayedToDoQueue.poll();
  }
 else {
    try {
      op=toDoQueue.poll(threadWakeFrequency,TimeUnit.MILLISECONDS);
    }
 catch (    InterruptedException e) {
      LOG.debug("Interrupted",e);
    }
  }
  if (op == null || closed.get()) {
    return ProcessingResultCode.NOOP;
  }
  try {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Processing todo: " + op.toString());
    }
    if (!process(op)) {
      putOnDelayQueue(op);
    }
 else     if (op.process()) {
      processed(op);
    }
 else {
      if (toDoQueue.size() == 0) {
        this.sleeper.sleep();
      }
      try {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Put " + op.toString() + " back on queue");
        }
        toDoQueue.put(op);
      }
 catch (      InterruptedException e) {
        throw new RuntimeException("Putting into toDoQueue was interrupted.",e);
      }
    }
  }
 catch (  Exception ex) {
    if (ex instanceof RemoteException) {
      try {
        ex=RemoteExceptionHandler.decodeRemoteException((RemoteException)ex);
      }
 catch (      IOException e) {
        ex=e;
        LOG.warn("main processing loop: " + op.toString(),e);
      }
    }
    LOG.warn("Failed processing: " + op.toString() + "; putting onto delayed todo queue",ex);
    putOnDelayQueue(op);
    return ProcessingResultCode.REQUEUED_BUT_PROBLEM;
  }
  return ProcessingResultCode.REQUEUED;
}
