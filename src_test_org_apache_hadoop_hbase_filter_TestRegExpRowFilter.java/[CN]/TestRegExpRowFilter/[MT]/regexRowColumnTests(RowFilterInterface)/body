{
  for (char c=FIRST_CHAR; c <= LAST_CHAR; c++) {
    byte[] t=createRow(c);
    for (    Map.Entry<byte[],byte[]> e : this.colvalues.entrySet()) {
      assertFalse("Failed on " + c,filter.filterColumn(t,e.getKey(),e.getValue()));
    }
  }
  char c='c';
  byte[] r=createRow(c);
  byte[] col=Bytes.toBytes(Character.toString(c));
  assertFalse("Failed with character " + c,filter.filterColumn(r,col,GOOD_BYTES));
  assertTrue("Failed with character " + c,filter.filterColumn(r,col,"badbytes".getBytes(HConstants.UTF8_ENCODING)));
  assertFalse("Failed with character " + c,filter.filterColumn(r,Bytes.toBytes("badcolumn"),GOOD_BYTES));
  assertTrue("Failed with character " + c,filter.filterColumn(Bytes.toBytes("bad row"),Bytes.toBytes("badcolumn"),GOOD_BYTES));
}
