{
  for (char c=FIRST_CHAR; c <= LAST_CHAR; c++) {
    Text t=createRow(c);
    for (    Map.Entry<Text,byte[]> e : this.colvalues.entrySet()) {
      assertFalse("Failed on " + c,filter.filter(t,e.getKey(),e.getValue()));
    }
  }
  char c='c';
  Text r=createRow(c);
  Text col=new Text(Character.toString(c));
  assertFalse("Failed with character " + c,filter.filter(r,col,GOOD_BYTES));
  assertTrue("Failed with character " + c,filter.filter(r,col,"badbytes".getBytes()));
  assertFalse("Failed with character " + c,filter.filter(r,new Text("badcolumn"),GOOD_BYTES));
  assertTrue("Failed with character " + c,filter.filter(new Text("bad row"),new Text("badcolumn"),GOOD_BYTES));
}
