{
synchronized (this.regionsInQueue) {
    FlushRegionEntry fqe=this.regionsInQueue.remove(region);
    if (fqe != null && emergencyFlush) {
      flushQueue.remove(fqe);
    }
    lock.lock();
  }
  try {
    boolean shouldCompact=region.flushcache();
    boolean shouldSplit=region.checkSplit() != null;
    if (shouldSplit) {
      this.server.compactSplitThread.requestSplit(region);
    }
 else     if (shouldCompact) {
      server.compactSplitThread.requestCompaction(region,getName());
    }
    server.getMetrics().addFlush(region.getRecentFlushInfo());
  }
 catch (  DroppedSnapshotException ex) {
    server.abort("Replay of HLog required. Forcing server shutdown",ex);
    return false;
  }
catch (  IOException ex) {
    LOG.error("Cache flush failed" + (region != null ? (" for region " + Bytes.toStringBinary(region.getRegionName())) : ""),RemoteExceptionHandler.checkIOException(ex));
    if (!server.checkFileSystem()) {
      return false;
    }
  }
 finally {
    try {
      flushOccurred.signalAll();
    }
  finally {
      lock.unlock();
    }
  }
  return true;
}
