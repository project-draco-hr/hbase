{
  if (isTraceEnabled()) {
    LOG.trace(this + " execute state=" + state);
  }
  try {
switch (state) {
case MODIFY_NAMESPACE_PREPARE:
      prepareModify(env);
    setNextState(ModifyNamespaceState.MODIFY_NAMESPACE_UPDATE_NS_TABLE);
  break;
case MODIFY_NAMESPACE_UPDATE_NS_TABLE:
insertIntoNSTable(env);
setNextState(ModifyNamespaceState.MODIFY_NAMESPACE_UPDATE_ZK);
break;
case MODIFY_NAMESPACE_UPDATE_ZK:
updateZKNamespaceManager(env);
return Flow.NO_MORE_STATE;
default :
throw new UnsupportedOperationException(this + " unhandled state=" + state);
}
}
 catch (IOException e) {
if (isRollbackSupported(state)) {
setFailure("master-modify-namespace",e);
}
 else {
LOG.warn("Retriable error trying to modify namespace=" + newNsDescriptor.getName() + " (in state="+ state+ ")",e);
}
}
return Flow.HAS_MORE_STATE;
}
