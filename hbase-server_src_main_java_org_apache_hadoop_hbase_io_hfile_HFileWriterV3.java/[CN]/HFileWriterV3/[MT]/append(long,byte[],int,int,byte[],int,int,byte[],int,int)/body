{
  boolean dupKey=checkKey(key,koffset,klength);
  checkValue(value,voffset,vlength);
  if (!dupKey) {
    checkBlockBoundary();
  }
  if (!fsBlockWriter.isWriting())   newBlock();
{
    DataOutputStream out=fsBlockWriter.getUserDataStream();
    out.writeInt(klength);
    totalKeyLength+=klength;
    out.writeInt(vlength);
    totalValueLength+=vlength;
    out.write(key,koffset,klength);
    out.write(value,voffset,vlength);
    if (hFileContext.shouldIncludeTags()) {
      out.writeShort((short)tagsLength);
      if (tagsLength > 0) {
        out.write(tag,tagsOffset,tagsLength);
        if (tagsLength > maxTagsLength) {
          maxTagsLength=tagsLength;
        }
      }
    }
    if (this.hFileContext.shouldIncludeMvcc()) {
      WritableUtils.writeVLong(out,memstoreTS);
    }
  }
  if (firstKeyInBlock == null) {
    firstKeyInBlock=new byte[klength];
    System.arraycopy(key,koffset,firstKeyInBlock,0,klength);
  }
  lastKeyBuffer=key;
  lastKeyOffset=koffset;
  lastKeyLength=klength;
  entryCount++;
}
