{
  init(this.name.getMethodName());
  long time=100;
  ManualEnvironmentEdge ee=new ManualEnvironmentEdge();
  ee.setValue(time);
  EnvironmentEdgeManagerTestHelper.injectEdge(ee);
  long newValue=3L;
  long size=0;
  size+=this.store.add(new KeyValue(Bytes.toBytes("200909091000"),family,qf1,System.currentTimeMillis(),Bytes.toBytes(newValue)));
  size+=this.store.add(new KeyValue(Bytes.toBytes("200909091200"),family,qf1,System.currentTimeMillis(),Bytes.toBytes(newValue)));
  size+=this.store.add(new KeyValue(Bytes.toBytes("200909091300"),family,qf1,System.currentTimeMillis(),Bytes.toBytes(newValue)));
  size+=this.store.add(new KeyValue(Bytes.toBytes("200909091400"),family,qf1,System.currentTimeMillis(),Bytes.toBytes(newValue)));
  size+=this.store.add(new KeyValue(Bytes.toBytes("200909091500"),family,qf1,System.currentTimeMillis(),Bytes.toBytes(newValue)));
  for (int i=0; i < 10000; ++i) {
    newValue++;
    long ret=this.store.updateColumnValue(row,family,qf1,newValue);
    long ret2=this.store.updateColumnValue(row2,family,qf1,newValue);
    if (ret != 0)     System.out.println("ret: " + ret);
    if (ret2 != 0)     System.out.println("ret2: " + ret2);
    Assert.assertTrue("ret: " + ret,ret >= 0);
    size+=ret;
    Assert.assertTrue("ret2: " + ret2,ret2 >= 0);
    size+=ret2;
    if (i % 1000 == 0)     ee.setValue(++time);
  }
  long computedSize=0;
  for (  Cell cell : ((AbstractMemStore)this.store.memstore).getActive().getCellSet()) {
    long kvsize=DefaultMemStore.heapSizeChange(cell,true);
    computedSize+=kvsize;
  }
  Assert.assertEquals(computedSize,size);
}
