{
  ManualEnvironmentEdge mee=new ManualEnvironmentEdge();
  EnvironmentEdgeManagerTestHelper.injectEdge(mee);
  init(this.name.getMethodName());
  long oldValue=1L;
  long newValue=3L;
  this.store.add(new KeyValue(row,family,qf1,EnvironmentEdgeManager.currentTime(),Bytes.toBytes(oldValue)));
  this.store.snapshot();
  long ret=this.store.updateColumnValue(row,family,qf1,newValue);
  Assert.assertTrue(ret > 0);
  flushStore(store,id++);
  Assert.assertEquals(1,this.store.getStorefiles().size());
  Assert.assertEquals(1,((DefaultMemStore)this.store.memstore).kvset.size());
  newValue+=1;
  this.store.updateColumnValue(row,family,qf1,newValue);
  newValue+=1;
  this.store.updateColumnValue(row,family,qf1,newValue);
  Get get=new Get(row);
  get.addColumn(family,qf1);
  get.setMaxVersions();
  List<Cell> results=new ArrayList<Cell>();
  results=HBaseTestingUtility.getFromStoreFile(store,get);
  Assert.assertEquals(2,results.size());
  long ts1=results.get(0).getTimestamp();
  long ts2=results.get(1).getTimestamp();
  Assert.assertTrue(ts1 > ts2);
  Assert.assertEquals(newValue,Bytes.toLong(CellUtil.cloneValue(results.get(0))));
  Assert.assertEquals(oldValue,Bytes.toLong(CellUtil.cloneValue(results.get(1))));
  mee.setValue(2);
  newValue+=1;
  this.store.updateColumnValue(row,family,qf1,newValue);
  results=HBaseTestingUtility.getFromStoreFile(store,get);
  Assert.assertEquals(2,results.size());
  ts1=results.get(0).getTimestamp();
  ts2=results.get(1).getTimestamp();
  Assert.assertTrue(ts1 > ts2);
  Assert.assertEquals(newValue,Bytes.toLong(CellUtil.cloneValue(results.get(0))));
  Assert.assertEquals(oldValue,Bytes.toLong(CellUtil.cloneValue(results.get(1))));
}
