{
  String tableName="prefixScanning";
  createTable(tableName,"F");
  Table table=openTable(tableName);
  final byte[][] rowIds={{(byte)0x11},{(byte)0x12},{(byte)0x12,(byte)0x23,(byte)0xFF,(byte)0xFE},{(byte)0x12,(byte)0x23,(byte)0xFF,(byte)0xFF},{(byte)0x12,(byte)0x23,(byte)0xFF,(byte)0xFF,(byte)0x00},{(byte)0x12,(byte)0x23,(byte)0xFF,(byte)0xFF,(byte)0x01},{(byte)0x12,(byte)0x24},{(byte)0x12,(byte)0x24,(byte)0x00},{(byte)0x12,(byte)0x24,(byte)0x00,(byte)0x00},{(byte)0x12,(byte)0x25},{(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF}};
  for (  byte[] rowId : rowIds) {
    Put p=new Put(rowId);
    p.add("F".getBytes(),rowId,"Dummy value".getBytes());
    table.put(p);
  }
  byte[] prefix0={};
  List<byte[]> expected0=new ArrayList<>(16);
  expected0.addAll(Arrays.asList(rowIds));
  byte[] prefix1={(byte)0x12,(byte)0x23};
  List<byte[]> expected1=new ArrayList<>(16);
  expected1.add(rowIds[2]);
  expected1.add(rowIds[3]);
  expected1.add(rowIds[4]);
  expected1.add(rowIds[5]);
  byte[] prefix2={(byte)0x12,(byte)0x23,(byte)0xFF,(byte)0xFF};
  List<byte[]> expected2=new ArrayList<>();
  expected2.add(rowIds[3]);
  expected2.add(rowIds[4]);
  expected2.add(rowIds[5]);
  byte[] prefix3={(byte)0x12,(byte)0x24};
  List<byte[]> expected3=new ArrayList<>();
  expected3.add(rowIds[6]);
  expected3.add(rowIds[7]);
  expected3.add(rowIds[8]);
  byte[] prefix4={(byte)0xFF,(byte)0xFF};
  List<byte[]> expected4=new ArrayList<>();
  expected4.add(rowIds[10]);
  Scan scan=new Scan();
  scan.setRowPrefixFilter(prefix0);
  verifyScanResult(table,scan,expected0,"Scan empty prefix failed");
  scan=new Scan();
  scan.setRowPrefixFilter(prefix1);
  verifyScanResult(table,scan,expected1,"Scan normal prefix failed");
  scan.setRowPrefixFilter(null);
  verifyScanResult(table,scan,expected0,"Scan after prefix reset failed");
  scan=new Scan();
  scan.setFilter(new ColumnPrefixFilter(prefix1));
  verifyScanResult(table,scan,expected1,"Double check on column prefix failed");
  scan=new Scan();
  scan.setRowPrefixFilter(prefix2);
  verifyScanResult(table,scan,expected2,"Scan edge 0xFF prefix failed");
  scan.setRowPrefixFilter(null);
  verifyScanResult(table,scan,expected0,"Scan after prefix reset failed");
  scan=new Scan();
  scan.setFilter(new ColumnPrefixFilter(prefix2));
  verifyScanResult(table,scan,expected2,"Double check on column prefix failed");
  scan=new Scan();
  scan.setRowPrefixFilter(prefix3);
  verifyScanResult(table,scan,expected3,"Scan normal with 0x00 ends failed");
  scan.setRowPrefixFilter(null);
  verifyScanResult(table,scan,expected0,"Scan after prefix reset failed");
  scan=new Scan();
  scan.setFilter(new ColumnPrefixFilter(prefix3));
  verifyScanResult(table,scan,expected3,"Double check on column prefix failed");
  scan=new Scan();
  scan.setRowPrefixFilter(prefix4);
  verifyScanResult(table,scan,expected4,"Scan end prefix failed");
  scan.setRowPrefixFilter(null);
  verifyScanResult(table,scan,expected0,"Scan after prefix reset failed");
  scan=new Scan();
  scan.setFilter(new ColumnPrefixFilter(prefix4));
  verifyScanResult(table,scan,expected4,"Double check on column prefix failed");
  scan=new Scan();
  scan.setRowPrefixFilter(prefix1);
  verifyScanResult(table,scan,expected1,"Prefix filter failed");
  scan.setFilter(new ColumnPrefixFilter(prefix2));
  verifyScanResult(table,scan,expected2,"Combined Prefix + Filter failed");
  scan.setRowPrefixFilter(null);
  verifyScanResult(table,scan,expected2,"Combined Prefix + Filter; removing Prefix failed");
  scan.setFilter(null);
  verifyScanResult(table,scan,expected0,"Scan after Filter reset failed");
  scan=new Scan();
  scan.setFilter(new ColumnPrefixFilter(prefix2));
  verifyScanResult(table,scan,expected2,"Test filter failed");
  scan.setRowPrefixFilter(prefix1);
  verifyScanResult(table,scan,expected2,"Combined Filter + Prefix failed");
  scan.setFilter(null);
  verifyScanResult(table,scan,expected1,"Combined Filter + Prefix ; removing Filter failed");
  scan.setRowPrefixFilter(null);
  verifyScanResult(table,scan,expected0,"Scan after prefix reset failed");
}
