{
  this.conf=conf;
  this.closed=false;
  this.pause=conf.getLong(HConstants.HBASE_CLIENT_PAUSE,HConstants.DEFAULT_HBASE_CLIENT_PAUSE);
  this.numTries=conf.getInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,HConstants.DEFAULT_HBASE_CLIENT_RETRIES_NUMBER);
  this.rpcTimeout=conf.getInt(HConstants.HBASE_RPC_TIMEOUT_KEY,HConstants.DEFAULT_HBASE_RPC_TIMEOUT);
  if (conf.getBoolean(CLIENT_NONCES_ENABLED_KEY,true)) {
synchronized (nonceGeneratorCreateLock) {
      if (ConnectionManager.nonceGenerator == null) {
        ConnectionManager.nonceGenerator=new PerClientRandomNonceGenerator();
      }
      this.nonceGenerator=ConnectionManager.nonceGenerator;
    }
  }
 else {
    this.nonceGenerator=new NoNonceGenerator();
  }
  this.asyncProcess=createAsyncProcess(this.conf);
  this.prefetchRegionLimit=conf.getInt(HConstants.HBASE_CLIENT_PREFETCH_LIMIT,HConstants.DEFAULT_HBASE_CLIENT_PREFETCH_LIMIT);
}
