{
  try {
    final long startTime=System.currentTimeMillis();
    SplitTransaction st=new SplitTransaction(parent,midKey);
    if (!st.prepare())     return;
    try {
      st.execute(this.server,this.server);
    }
 catch (    Exception e) {
      try {
        LOG.info("Running rollback/cleanup of failed split of " + parent.getRegionNameAsString() + "; "+ e.getMessage());
        if (st.rollback(this.server,this.server)) {
          LOG.info("Successful rollback of failed split of " + parent.getRegionNameAsString());
        }
 else {
          this.server.abort("Abort; we got an error after point-of-no-return");
        }
      }
 catch (      RuntimeException ee) {
        String msg="Failed rollback of failed split of " + parent.getRegionNameAsString() + " -- aborting server";
        LOG.info(msg,ee);
        this.server.abort(msg);
      }
      return;
    }
    LOG.info("Region split, META updated, and report to master. Parent=" + parent.getRegionInfo().getRegionNameAsString() + ", new regions: "+ st.getFirstDaughter().getRegionNameAsString()+ ", "+ st.getSecondDaughter().getRegionNameAsString()+ ". Split took "+ StringUtils.formatTimeDiff(System.currentTimeMillis(),startTime));
  }
 catch (  IOException ex) {
    LOG.error("Split failed " + this,RemoteExceptionHandler.checkIOException(ex));
    server.checkFileSystem();
  }
}
