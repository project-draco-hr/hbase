{
  if (this.isDrainingDone) {
    return;
  }
  if (this.watcher == null) {
    this.isDrainingDone=true;
    this.recoveryMode=RecoveryMode.LOG_SPLITTING;
    return;
  }
  boolean hasSplitLogTask=false;
  boolean hasRecoveringRegions=false;
  RecoveryMode previousRecoveryMode=RecoveryMode.UNKNOWN;
  RecoveryMode recoveryModeInConfig=(isDistributedLogReplay(conf)) ? RecoveryMode.LOG_REPLAY : RecoveryMode.LOG_SPLITTING;
  try {
    List<String> regions=ZKUtil.listChildrenNoWatch(watcher,watcher.recoveringRegionsZNode);
    if (regions != null && !regions.isEmpty()) {
      hasRecoveringRegions=true;
      previousRecoveryMode=RecoveryMode.LOG_REPLAY;
    }
    if (previousRecoveryMode == RecoveryMode.UNKNOWN) {
      List<String> tasks=ZKUtil.listChildrenNoWatch(watcher,watcher.splitLogZNode);
      if (tasks != null && !tasks.isEmpty()) {
        hasSplitLogTask=true;
        if (isForInitialization) {
          for (          String task : tasks) {
            try {
              byte[] data=ZKUtil.getData(this.watcher,ZKUtil.joinZNode(watcher.splitLogZNode,task));
              if (data == null)               continue;
              SplitLogTask slt=SplitLogTask.parseFrom(data);
              previousRecoveryMode=slt.getMode();
              if (previousRecoveryMode == RecoveryMode.UNKNOWN) {
                previousRecoveryMode=RecoveryMode.LOG_SPLITTING;
              }
              break;
            }
 catch (            DeserializationException e) {
              LOG.warn("Failed parse data for znode " + task,e);
            }
catch (            InterruptedException e) {
              throw new InterruptedIOException();
            }
          }
        }
      }
    }
  }
 catch (  KeeperException e) {
    throw new IOException(e);
  }
synchronized (this) {
    if (this.isDrainingDone) {
      return;
    }
    if (!hasSplitLogTask && !hasRecoveringRegions) {
      this.isDrainingDone=true;
      this.recoveryMode=recoveryModeInConfig;
      return;
    }
 else     if (!isForInitialization) {
      return;
    }
    if (previousRecoveryMode != RecoveryMode.UNKNOWN) {
      this.isDrainingDone=(previousRecoveryMode == recoveryModeInConfig);
      this.recoveryMode=previousRecoveryMode;
    }
 else {
      this.recoveryMode=recoveryModeInConfig;
    }
  }
}
