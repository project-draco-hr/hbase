{
  ReplicationPeerConfig peerConfig=new ReplicationPeerConfig();
  if (peer.hasClusterkey()) {
    peerConfig.setClusterKey(peer.getClusterkey());
  }
  if (peer.hasReplicationEndpointImpl()) {
    peerConfig.setReplicationEndpointImpl(peer.getReplicationEndpointImpl());
  }
  for (  HBaseProtos.BytesBytesPair pair : peer.getDataList()) {
    peerConfig.getPeerData().put(pair.getFirst().toByteArray(),pair.getSecond().toByteArray());
  }
  for (  HBaseProtos.NameStringPair pair : peer.getConfigurationList()) {
    peerConfig.getConfiguration().put(pair.getName(),pair.getValue());
  }
  Map<TableName,? extends Collection<String>> tableCFsMap=convert2Map(peer.getTableCfsList().toArray(new ZooKeeperProtos.TableCF[peer.getTableCfsCount()]));
  if (tableCFsMap != null) {
    peerConfig.setTableCFsMap(tableCFsMap);
  }
  List<ByteString> namespacesList=peer.getNamespacesList();
  if (namespacesList != null && namespacesList.size() != 0) {
    Set<String> namespaces=new HashSet<String>();
    for (    ByteString namespace : namespacesList) {
      namespaces.add(namespace.toStringUtf8());
    }
    peerConfig.setNamespaces(namespaces);
  }
  return peerConfig;
}
