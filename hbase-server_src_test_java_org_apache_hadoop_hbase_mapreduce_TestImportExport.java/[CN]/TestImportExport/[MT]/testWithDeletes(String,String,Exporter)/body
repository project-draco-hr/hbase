{
  HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(exportTable));
  desc.addFamily(new HColumnDescriptor(FAMILYA).setMaxVersions(5).setKeepDeletedCells(KeepDeletedCells.TRUE));
  UTIL.getAdmin().createTable(desc);
  try (Table t=UTIL.getConnection().getTable(desc.getTableName())){
    Put p=new Put(ROW1);
    p.addColumn(FAMILYA,QUAL,now,QUAL);
    p.addColumn(FAMILYA,QUAL,now + 1,QUAL);
    p.addColumn(FAMILYA,QUAL,now + 2,QUAL);
    p.addColumn(FAMILYA,QUAL,now + 3,QUAL);
    p.addColumn(FAMILYA,QUAL,now + 4,QUAL);
    t.put(p);
    Delete d=new Delete(ROW1,now + 3);
    t.delete(d);
    d=new Delete(ROW1);
    d.addColumns(FAMILYA,QUAL,now + 2);
    t.delete(d);
  }
   String[] args=new String[]{"-D" + Export.RAW_SCAN + "=true",exportTable,FQ_OUTPUT_DIR,"1000"};
  assertTrue(exporter.toString(),exporter.runExport(args));
  desc=new HTableDescriptor(TableName.valueOf(importTable));
  desc.addFamily(new HColumnDescriptor(FAMILYA).setMaxVersions(5).setKeepDeletedCells(KeepDeletedCells.TRUE));
  UTIL.getAdmin().createTable(desc);
  try (Table t=UTIL.getConnection().getTable(desc.getTableName())){
    args=new String[]{importTable,FQ_OUTPUT_DIR};
    assertTrue(exporter.toString(),runImport(args));
    Scan s=new Scan();
    s.setMaxVersions();
    s.setRaw(true);
    ResultScanner scanner=t.getScanner(s);
    Result r=scanner.next();
    Cell[] res=r.rawCells();
    assertTrue(exporter.toString(),CellUtil.isDeleteFamily(res[0]));
    assertEquals(exporter.toString(),now + 4,res[1].getTimestamp());
    assertEquals(exporter.toString(),now + 3,res[2].getTimestamp());
    assertTrue(exporter.toString(),CellUtil.isDelete(res[3]));
    assertEquals(exporter.toString(),now + 2,res[4].getTimestamp());
    assertEquals(exporter.toString(),now + 1,res[5].getTimestamp());
    assertEquals(exporter.toString(),now,res[6].getTimestamp());
  }
 }
