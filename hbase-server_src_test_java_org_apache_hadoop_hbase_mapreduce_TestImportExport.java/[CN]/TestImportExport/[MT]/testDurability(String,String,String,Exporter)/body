{
  try (Table exportT=UTIL.createTable(TableName.valueOf(exportTable),FAMILYA,3)){
    Put put=new Put(ROW1);
    put.addColumn(FAMILYA,QUAL,now,QUAL);
    put.addColumn(FAMILYA,QUAL,now + 1,QUAL);
    put.addColumn(FAMILYA,QUAL,now + 2,QUAL);
    exportT.put(put);
    put=new Put(ROW2);
    put.addColumn(FAMILYA,QUAL,now,QUAL);
    put.addColumn(FAMILYA,QUAL,now + 1,QUAL);
    put.addColumn(FAMILYA,QUAL,now + 2,QUAL);
    exportT.put(put);
    String[] args=new String[]{exportTable,FQ_OUTPUT_DIR,"1000"};
    assertTrue(exporter.toString(),exporter.runExport(args));
    Table importT=UTIL.createTable(TableName.valueOf(importTable),FAMILYA,3);
    HRegionInfo region=UTIL.getHBaseCluster().getRegionServerThreads().get(0).getRegionServer().getOnlineRegions(importT.getName()).get(0).getRegionInfo();
    TableWALActionListener walListener=new TableWALActionListener(region);
    WAL wal=UTIL.getMiniHBaseCluster().getRegionServer(0).getWAL(region);
    wal.registerWALActionsListener(walListener);
    args=new String[]{"-D" + Import.WAL_DURABILITY + "="+ Durability.SKIP_WAL.name(),importTable,FQ_OUTPUT_DIR};
    assertTrue(exporter.toString(),runImport(args));
    assertTrue(exporter.toString(),!walListener.isWALVisited());
    assertTrue(exporter.toString(),getCount(importT,null) == 2);
    importT=UTIL.createTable(TableName.valueOf(importTable2),FAMILYA,3);
    region=UTIL.getHBaseCluster().getRegionServerThreads().get(0).getRegionServer().getOnlineRegions(importT.getName()).get(0).getRegionInfo();
    wal=UTIL.getMiniHBaseCluster().getRegionServer(0).getWAL(region);
    walListener=new TableWALActionListener(region);
    wal.registerWALActionsListener(walListener);
    args=new String[]{importTable2,FQ_OUTPUT_DIR};
    assertTrue(exporter.toString(),runImport(args));
    assertTrue(exporter.toString(),walListener.isWALVisited());
    assertTrue(exporter.toString(),getCount(importT,null) == 2);
  }
 }
