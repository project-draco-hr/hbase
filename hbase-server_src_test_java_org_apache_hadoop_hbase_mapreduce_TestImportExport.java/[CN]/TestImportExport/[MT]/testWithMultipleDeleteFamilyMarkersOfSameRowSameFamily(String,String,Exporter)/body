{
  HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(exportTable));
  desc.addFamily(new HColumnDescriptor(FAMILYA).setMaxVersions(5).setKeepDeletedCells(KeepDeletedCells.TRUE));
  UTIL.getAdmin().createTable(desc);
  Table exportT=UTIL.getConnection().getTable(desc.getTableName());
  Put p=new Put(ROW1);
  p.addColumn(FAMILYA,QUAL,now,QUAL);
  exportT.put(p);
  Delete d=new Delete(ROW1,now + 3);
  exportT.delete(d);
  p=new Put(ROW1);
  p.addColumn(FAMILYA,QUAL,now + 5,"s".getBytes());
  exportT.put(p);
  d=new Delete(ROW1,now + 7);
  exportT.delete(d);
  String[] args=new String[]{"-D" + Export.RAW_SCAN + "=true",exportTable,FQ_OUTPUT_DIR,"1000"};
  assertTrue(exporter.toString(),exporter.runExport(args));
  desc=new HTableDescriptor(TableName.valueOf(importTable));
  desc.addFamily(new HColumnDescriptor(FAMILYA).setMaxVersions(5).setKeepDeletedCells(KeepDeletedCells.TRUE));
  UTIL.getAdmin().createTable(desc);
  Table importT=UTIL.getConnection().getTable(TableName.valueOf(importTable));
  args=new String[]{importTable,FQ_OUTPUT_DIR};
  assertTrue(exporter.toString(),runImport(args));
  Scan s=new Scan();
  s.setMaxVersions();
  s.setRaw(true);
  ResultScanner importedTScanner=importT.getScanner(s);
  Result importedTResult=importedTScanner.next();
  ResultScanner exportedTScanner=exportT.getScanner(s);
  Result exportedTResult=exportedTScanner.next();
  try {
    Result.compareResults(exportedTResult,importedTResult);
  }
 catch (  IOException e) {
    fail("Original and imported tables data comparision failed with error:" + e.getMessage());
  }
 finally {
    exportT.close();
    importT.close();
  }
}
