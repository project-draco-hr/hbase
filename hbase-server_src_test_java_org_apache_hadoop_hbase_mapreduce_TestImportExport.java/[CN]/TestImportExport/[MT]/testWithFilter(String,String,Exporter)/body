{
  HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(exportTable));
  desc.addFamily(new HColumnDescriptor(FAMILYA).setMaxVersions(5));
  UTIL.getAdmin().createTable(desc);
  Table exportT=UTIL.getConnection().getTable(desc.getTableName());
  Put p1=new Put(ROW1);
  p1.addColumn(FAMILYA,QUAL,now,QUAL);
  p1.addColumn(FAMILYA,QUAL,now + 1,QUAL);
  p1.addColumn(FAMILYA,QUAL,now + 2,QUAL);
  p1.addColumn(FAMILYA,QUAL,now + 3,QUAL);
  p1.addColumn(FAMILYA,QUAL,now + 4,QUAL);
  Put p2=new Put(ROW2);
  p2.addColumn(FAMILYA,QUAL,now,QUAL);
  exportT.put(Arrays.asList(p1,p2));
  String[] args=new String[]{exportTable,FQ_OUTPUT_DIR,"1000"};
  assertTrue(exporter.toString(),exporter.runExport(args));
  desc=new HTableDescriptor(TableName.valueOf(importTable));
  desc.addFamily(new HColumnDescriptor(FAMILYA).setMaxVersions(5));
  UTIL.getAdmin().createTable(desc);
  Table importT=UTIL.getConnection().getTable(desc.getTableName());
  args=new String[]{"-D" + Import.FILTER_CLASS_CONF_KEY + "="+ PrefixFilter.class.getName(),"-D" + Import.FILTER_ARGS_CONF_KEY + "="+ Bytes.toString(ROW1),importTable,FQ_OUTPUT_DIR,"1000"};
  assertTrue(exporter.toString(),runImport(args));
  PrefixFilter filter=new PrefixFilter(ROW1);
  int count=getCount(exportT,filter);
  Assert.assertEquals("Unexpected row count between export(" + exporter.toString() + ") and import tables",count,getCount(importT,null));
  args=new String[]{"-D" + Import.FILTER_CLASS_CONF_KEY + "="+ Filter.class.getName(),"-D" + Import.FILTER_ARGS_CONF_KEY + "="+ Bytes.toString(ROW1)+ "",exportTable,FQ_OUTPUT_DIR,"1000"};
  assertFalse(runImport(args));
  exportT.close();
  importT.close();
}
