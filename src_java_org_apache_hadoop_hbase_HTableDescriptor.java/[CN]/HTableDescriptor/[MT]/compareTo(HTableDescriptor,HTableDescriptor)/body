{
  int result=Bytes.compareTo(left.getName(),right.getName());
  Collection<HColumnDescriptor> leftFamilies=left.getFamilies();
  Collection<HColumnDescriptor> rightFamilies=right.getFamilies();
  if (result == 0) {
    result=leftFamilies.size() - rightFamilies.size();
  }
  if (result == 0 && leftFamilies.size() != rightFamilies.size()) {
    result=Integer.valueOf(leftFamilies.size()).compareTo(Integer.valueOf(rightFamilies.size()));
  }
  if (result == 0) {
    for (Iterator<HColumnDescriptor> it=leftFamilies.iterator(), it2=rightFamilies.iterator(); it.hasNext(); ) {
      result=it.next().compareTo(it2.next());
      if (result != 0) {
        break;
      }
    }
  }
  if (result == 0) {
    result=leftFamilies.hashCode() - rightFamilies.hashCode();
    if (result < 0)     result=-1;
 else     if (result > 0)     result=1;
  }
  return result;
}
