{
  int version=in.readInt();
  if (version < 3)   throw new IOException("versions < 3 are not supported (and never existed!?)");
  name=Bytes.readByteArray(in);
  nameAsString=Bytes.toString(this.name);
  setRootRegion(in.readBoolean());
  setMetaRegion(in.readBoolean());
  values.clear();
  int numVals=in.readInt();
  for (int i=0; i < numVals; i++) {
    ImmutableBytesWritable key=new ImmutableBytesWritable();
    ImmutableBytesWritable value=new ImmutableBytesWritable();
    key.readFields(in);
    value.readFields(in);
    values.put(key,value);
  }
  families.clear();
  int numFamilies=in.readInt();
  for (int i=0; i < numFamilies; i++) {
    HColumnDescriptor c=new HColumnDescriptor();
    c.readFields(in);
    families.put(c.getName(),c);
  }
  indexes.clear();
  if (version < 4) {
    return;
  }
  int numIndexes=in.readInt();
  for (int i=0; i < numIndexes; i++) {
    IndexSpecification index=new IndexSpecification();
    index.readFields(in);
    addIndex(index);
  }
}
