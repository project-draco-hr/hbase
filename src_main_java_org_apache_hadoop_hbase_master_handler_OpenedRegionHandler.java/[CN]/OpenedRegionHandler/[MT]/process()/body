{
  debugLog(regionInfo,"Handling OPENED event for " + this.regionInfo.getRegionNameAsString() + " from "+ this.sn.toString()+ "; deleting unassigned node");
  try {
    ZKAssign.deleteOpenedNode(server.getZooKeeper(),regionInfo.getEncodedName());
  }
 catch (  KeeperException e) {
    server.abort("Error deleting OPENED node in ZK for transition ZK node (" + regionInfo.getRegionNameAsString() + ")",e);
  }
  if (this.assignmentManager.isRegionInTransition(regionInfo) != null) {
    this.assignmentManager.regionOnline(regionInfo,this.sn);
    debugLog(regionInfo,"region online: " + regionInfo.getRegionNameAsString() + " on "+ this.sn.toString());
  }
 else {
    LOG.warn("Skipping the onlining of " + regionInfo.getRegionNameAsString() + " because regions is NOT in RIT -- presuming this is because it SPLIT");
  }
  if (this.assignmentManager.getZKTable().isDisablingOrDisabledTable(regionInfo.getTableNameAsString())) {
    debugLog(regionInfo,"Opened region " + regionInfo.getRegionNameAsString() + " but "+ "this table is disabled, triggering close of region");
    assignmentManager.unassign(regionInfo);
  }
 else {
    debugLog(regionInfo,"Opened region " + regionInfo.getRegionNameAsString() + " on "+ this.sn.toString());
  }
}
