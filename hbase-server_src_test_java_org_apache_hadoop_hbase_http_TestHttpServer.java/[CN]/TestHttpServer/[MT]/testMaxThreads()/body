{
  int clientThreads=MAX_THREADS * 10;
  Executor executor=Executors.newFixedThreadPool(clientThreads);
  final CountDownLatch ready=new CountDownLatch(clientThreads);
  final CountDownLatch start=new CountDownLatch(1);
  for (int i=0; i < clientThreads; i++) {
    executor.execute(new Runnable(){
      @Override public void run(){
        ready.countDown();
        try {
          start.await();
          assertEquals("a:b\nc:d\n",readOutput(new URL(baseUrl,"/echo?a=b&c=d")));
          int serverThreads=server.webServer.getThreadPool().getThreads();
          assertTrue("More threads are started than expected, Server Threads count: " + serverThreads,serverThreads <= MAX_THREADS);
          System.out.println("Number of threads = " + serverThreads + " which is less or equal than the max = "+ MAX_THREADS);
        }
 catch (        Exception e) {
        }
      }
    }
);
  }
  ready.await();
  start.countDown();
}
