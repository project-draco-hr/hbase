{
  conf=new Configuration();
  conf.setInt(HttpServer.HTTP_MAX_THREADS,10);
  File base=new File(BASEDIR);
  FileUtil.fullyDelete(base);
  base.mkdirs();
  keystoresDir=new File(BASEDIR).getAbsolutePath();
  sslConfDir=KeyStoreTestUtil.getClasspathDir(TestSSLHttpServer.class);
  KeyStoreTestUtil.setupSSLConfig(keystoresDir,sslConfDir,conf,false);
  Configuration sslConf=new Configuration(false);
  sslConf.addResource("ssl-server.xml");
  sslConf.addResource("ssl-client.xml");
  clientSslFactory=new SSLFactory(SSLFactory.Mode.CLIENT,sslConf);
  clientSslFactory.init();
  server=new HttpServer.Builder().setName("test").addEndpoint(new URI("https://localhost")).setConf(conf).keyPassword(HBaseConfiguration.getPassword(sslConf,"ssl.server.keystore.keypassword",null)).keyStore(sslConf.get("ssl.server.keystore.location"),HBaseConfiguration.getPassword(sslConf,"ssl.server.keystore.password",null),sslConf.get("ssl.server.keystore.type","jks")).trustStore(sslConf.get("ssl.server.truststore.location"),HBaseConfiguration.getPassword(sslConf,"ssl.server.truststore.password",null),sslConf.get("ssl.server.truststore.type","jks")).build();
  server.addServlet("echo","/echo",TestHttpServer.EchoServlet.class);
  server.start();
  baseUrl=new URL("https://" + NetUtils.getHostPortString(server.getConnectorAddress(0)));
  LOG.info("HTTP server started: " + baseUrl);
}
