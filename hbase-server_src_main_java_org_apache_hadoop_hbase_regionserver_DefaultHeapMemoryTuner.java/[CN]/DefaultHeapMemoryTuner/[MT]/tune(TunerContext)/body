{
  long blockedFlushCount=context.getBlockedFlushCount();
  long unblockedFlushCount=context.getUnblockedFlushCount();
  long evictCount=context.getEvictCount();
  boolean memstoreSufficient=blockedFlushCount == 0 && unblockedFlushCount == 0;
  boolean blockCacheSufficient=evictCount == 0;
  if (memstoreSufficient && blockCacheSufficient) {
    return new TunerResult(false);
  }
  TunerResult result=new TunerResult(true);
  float newMemstoreSize;
  float newBlockCacheSize;
  if (memstoreSufficient) {
    newBlockCacheSize=context.getCurBlockCacheSize() + step;
    newMemstoreSize=context.getCurMemStoreSize() - step;
  }
 else   if (blockCacheSufficient) {
    newBlockCacheSize=context.getCurBlockCacheSize() - step;
    newMemstoreSize=context.getCurMemStoreSize() + step;
  }
 else {
    return new TunerResult(false);
  }
  if (newMemstoreSize > globalMemStorePercentMaxRange) {
    newMemstoreSize=globalMemStorePercentMaxRange;
  }
 else   if (newMemstoreSize < globalMemStorePercentMinRange) {
    newMemstoreSize=globalMemStorePercentMinRange;
  }
  if (newBlockCacheSize > blockCachePercentMaxRange) {
    newBlockCacheSize=blockCachePercentMaxRange;
  }
 else   if (newBlockCacheSize < blockCachePercentMinRange) {
    newBlockCacheSize=blockCachePercentMinRange;
  }
  result.setBlockCacheSize(newBlockCacheSize);
  result.setMemstoreSize(newMemstoreSize);
  return result;
}
