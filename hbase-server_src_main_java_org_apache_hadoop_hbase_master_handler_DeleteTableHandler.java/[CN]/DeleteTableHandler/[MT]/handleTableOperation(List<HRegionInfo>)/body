{
  MasterCoprocessorHost cpHost=((HMaster)this.server).getCoprocessorHost();
  if (cpHost != null) {
    cpHost.preDeleteTableHandler(this.tableName);
  }
  AssignmentManager am=this.masterServices.getAssignmentManager();
  RegionStates states=am.getRegionStates();
  long waitTime=server.getConfiguration().getLong("hbase.master.wait.on.region",5 * 60 * 1000);
  for (  HRegionInfo region : regions) {
    long done=System.currentTimeMillis() + waitTime;
    while (System.currentTimeMillis() < done) {
      if (states.isRegionInState(region,State.FAILED_OPEN)) {
        am.regionOffline(region);
      }
      if (!states.isRegionInTransition(region))       break;
      Threads.sleep(waitingTimeForEvents);
      LOG.debug("Waiting on region to clear regions in transition; " + am.getRegionStates().getRegionTransitionState(region));
    }
    if (states.isRegionInTransition(region)) {
      throw new IOException("Waited hbase.master.wait.on.region (" + waitTime + "ms) for region to leave region "+ region.getRegionNameAsString()+ " in transitions");
    }
  }
  LOG.debug("Deleting regions from META");
  MetaEditor.deleteRegions(this.server.getCatalogTracker(),regions);
  MasterFileSystem mfs=this.masterServices.getMasterFileSystem();
  Path tempTableDir=mfs.moveTableToTemp(tableName);
  try {
    FileSystem fs=mfs.getFileSystem();
    for (    HRegionInfo hri : regions) {
      LOG.debug("Archiving region " + hri.getRegionNameAsString() + " from FS");
      HFileArchiver.archiveRegion(fs,mfs.getRootDir(),tempTableDir,new Path(tempTableDir,hri.getEncodedName()));
    }
    if (!fs.delete(tempTableDir,true)) {
      LOG.error("Couldn't delete " + tempTableDir);
    }
    LOG.debug("Table '" + Bytes.toString(tableName) + "' archived!");
  }
  finally {
    String tableNameStr=Bytes.toString(tableName);
    LOG.debug("Removing '" + tableNameStr + "' descriptor.");
    this.masterServices.getTableDescriptors().remove(Bytes.toString(tableName));
    LOG.debug("Marking '" + tableNameStr + "' as deleted.");
    am.getZKTable().setDeletedTable(tableNameStr);
  }
  if (cpHost != null) {
    cpHost.postDeleteTableHandler(this.tableName);
  }
}
