{
  MasterCoprocessorHost cpHost=((HMaster)this.server).getCoprocessorHost();
  if (cpHost != null) {
    cpHost.preDeleteTableHandler(this.tableName);
  }
  AssignmentManager am=this.masterServices.getAssignmentManager();
  long waitTime=server.getConfiguration().getLong("hbase.master.wait.on.region",5 * 60 * 1000);
  for (  HRegionInfo region : regions) {
    long done=EnvironmentEdgeManager.currentTimeMillis() + waitTime;
    while (EnvironmentEdgeManager.currentTimeMillis() < done) {
      if (!am.getRegionStates().isRegionInTransition(region))       break;
      Threads.sleep(waitingTimeForEvents);
      LOG.debug("Waiting on region to clear regions in transition; " + am.getRegionStates().getRegionTransitionState(region));
    }
    if (am.getRegionStates().isRegionInTransition(region)) {
      throw new IOException("Waited hbase.master.wait.on.region (" + waitTime + "ms) for region to leave region "+ region.getRegionNameAsString()+ " in transitions");
    }
    LOG.debug("Deleting region " + region.getRegionNameAsString() + " from META and FS");
    MetaEditor.deleteRegion(this.server.getCatalogTracker(),region);
    this.masterServices.getMasterFileSystem().deleteRegion(region);
  }
  this.masterServices.getMasterFileSystem().deleteTable(tableName);
  this.masterServices.getTableDescriptors().remove(Bytes.toString(tableName));
  am.getZKTable().setDeletedTable(Bytes.toString(tableName));
  if (cpHost != null) {
    cpHost.postDeleteTableHandler(this.tableName);
  }
}
