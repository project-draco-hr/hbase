{
  checkRow(row,"row lock");
  HashedBytes rowKey=new HashedBytes(row);
  RowLockContext rowLockContext=new RowLockContext(rowKey);
  while (true) {
    RowLockContext existingContext=lockedRows.putIfAbsent(rowKey,rowLockContext);
    if (existingContext == null) {
      break;
    }
 else     if (existingContext.ownedByCurrentThread()) {
      rowLockContext=existingContext;
      break;
    }
 else {
      if (!waitForLock) {
        return null;
      }
      try {
        if (!existingContext.latch.await(this.rowLockWaitDuration,TimeUnit.MILLISECONDS)) {
          throw new IOException("Timed out waiting for lock for row: " + rowKey);
        }
      }
 catch (      InterruptedException ie) {
        LOG.warn("Thread interrupted waiting for lock on row: " + rowKey);
        InterruptedIOException iie=new InterruptedIOException();
        iie.initCause(ie);
        throw iie;
      }
    }
  }
  return rowLockContext.newLock();
}
