{
  boolean skip=false;
  if (batchOp.retCodeDetails[lastIndexExclusive].getOperationStatusCode() != OperationStatusCode.NOT_RUN) {
    return true;
  }
  Mutation mutation=batchOp.getMutation(lastIndexExclusive);
  Map<byte[],List<Cell>> familyMap=mutation.getFamilyCellMap();
  familyMaps[lastIndexExclusive]=familyMap;
  try {
    if (mutation instanceof Put) {
      if (batchOp.isInReplay()) {
        removeNonExistentColumnFamilyForReplay(familyMap);
      }
 else {
        checkFamilies(familyMap.keySet());
      }
      checkTimestamps(mutation.getFamilyCellMap(),now);
    }
 else {
      prepareDelete((Delete)mutation);
    }
    checkRow(mutation.getRow(),"doMiniBatchMutation");
  }
 catch (  NoSuchColumnFamilyException nscf) {
    LOG.warn("No such column family in batch mutation",nscf);
    batchOp.retCodeDetails[lastIndexExclusive]=new OperationStatus(OperationStatusCode.BAD_FAMILY,nscf.getMessage());
    skip=true;
  }
catch (  FailedSanityCheckException fsce) {
    LOG.warn("Batch Mutation did not pass sanity check",fsce);
    batchOp.retCodeDetails[lastIndexExclusive]=new OperationStatus(OperationStatusCode.SANITY_CHECK_FAILURE,fsce.getMessage());
    skip=true;
  }
catch (  WrongRegionException we) {
    LOG.warn("Batch mutation had a row that does not belong to this region",we);
    batchOp.retCodeDetails[lastIndexExclusive]=new OperationStatus(OperationStatusCode.SANITY_CHECK_FAILURE,we.getMessage());
    skip=true;
  }
  return skip;
}
