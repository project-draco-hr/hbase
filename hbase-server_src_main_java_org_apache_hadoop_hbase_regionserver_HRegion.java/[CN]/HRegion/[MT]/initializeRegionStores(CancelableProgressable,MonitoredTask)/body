{
  Map<byte[],Long> maxSeqIdInStores=new TreeMap<byte[],Long>(Bytes.BYTES_COMPARATOR);
  long maxSeqId=-1;
  long maxMemstoreTS=-1;
  if (!htableDescriptor.getFamilies().isEmpty()) {
    ThreadPoolExecutor storeOpenerThreadPool=getStoreOpenAndCloseThreadPool("StoreOpenerThread-" + this.getRegionNameAsString());
    CompletionService<HStore> completionService=new ExecutorCompletionService<HStore>(storeOpenerThreadPool);
    for (    final HColumnDescriptor family : htableDescriptor.getFamilies()) {
      status.setStatus("Instantiating store for column family " + family);
      completionService.submit(new Callable<HStore>(){
        public HStore call() throws IOException {
          return instantiateHStore(family);
        }
      }
);
    }
    try {
      for (int i=0; i < htableDescriptor.getFamilies().size(); i++) {
        Future<HStore> future=completionService.take();
        HStore store=future.get();
        this.stores.put(store.getColumnFamilyName().getBytes(),store);
        long storeSeqIdForReplay=store.getMaxSequenceId(false);
        maxSeqIdInStores.put(store.getColumnFamilyName().getBytes(),storeSeqIdForReplay);
        long storeSeqIdForAssignment=store.getMaxSequenceId(true);
        if (maxSeqId == -1 || storeSeqIdForAssignment > maxSeqId) {
          maxSeqId=storeSeqIdForAssignment;
        }
        long maxStoreMemstoreTS=store.getMaxMemstoreTS();
        if (maxStoreMemstoreTS > maxMemstoreTS) {
          maxMemstoreTS=maxStoreMemstoreTS;
        }
      }
    }
 catch (    InterruptedException e) {
      throw new IOException(e);
    }
catch (    ExecutionException e) {
      throw new IOException(e.getCause());
    }
 finally {
      storeOpenerThreadPool.shutdownNow();
    }
  }
  mvcc.initialize(maxMemstoreTS + 1);
  maxSeqId=Math.max(maxSeqId,replayRecoveredEditsIfAny(this.fs.getRegionDir(),maxSeqIdInStores,reporter,status));
  return maxSeqId;
}
