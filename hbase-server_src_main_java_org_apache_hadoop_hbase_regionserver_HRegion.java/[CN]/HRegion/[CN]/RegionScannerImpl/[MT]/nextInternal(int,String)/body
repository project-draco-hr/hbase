{
  RpcCallContext rpcCall=HBaseServer.getCurrentCall();
  while (true) {
    if (rpcCall != null) {
      rpcCall.throwExceptionIfCallerDisconnected();
    }
    KeyValue current=this.storeHeap.peek();
    byte[] currentRow=null;
    int offset=0;
    short length=0;
    if (current != null) {
      currentRow=current.getBuffer();
      offset=current.getRowOffset();
      length=current.getRowLength();
    }
    boolean stopRow=isStopRow(currentRow,offset,length);
    if (joinedContinuationRow == null) {
      if (stopRow) {
        if (filter != null && filter.hasFilterRow()) {
          filter.filterRow(results);
        }
        return false;
      }
      if (filterRowKey(currentRow,offset,length)) {
        nextRow(currentRow,offset,length);
        continue;
      }
      KeyValue nextKv=populateResult(this.storeHeap,limit,currentRow,offset,length,metric);
      if (nextKv == KV_LIMIT) {
        if (this.filter != null && filter.hasFilterRow()) {
          throw new IncompatibleFilterException("Filter whose hasFilterRow() returns true is incompatible with scan with limit!");
        }
        return true;
      }
      stopRow=nextKv == null || isStopRow(nextKv.getBuffer(),nextKv.getRowOffset(),nextKv.getRowLength());
      final boolean isEmptyRow=results.isEmpty();
      if (filter != null && filter.hasFilterRow()) {
        filter.filterRow(results);
      }
      if (isEmptyRow) {
        nextRow(currentRow,offset,length);
        if (!stopRow)         continue;
        return false;
      }
      if (this.joinedHeap != null) {
        KeyValue nextJoinedKv=joinedHeap.peek();
        boolean mayHaveData=(nextJoinedKv != null && nextJoinedKv.matchingRow(currentRow,offset,length)) || this.joinedHeap.seek(KeyValue.createFirstOnRow(currentRow,offset,length));
        if (mayHaveData) {
          joinedContinuationRow=current;
          populateFromJoinedHeap(limit,metric);
        }
      }
    }
 else {
      populateFromJoinedHeap(limit,metric);
    }
    if (joinedContinuationRow != null) {
      return true;
    }
    if (results.isEmpty()) {
      nextRow(currentRow,offset,length);
      if (!stopRow)       continue;
    }
    return !stopRow;
  }
}
