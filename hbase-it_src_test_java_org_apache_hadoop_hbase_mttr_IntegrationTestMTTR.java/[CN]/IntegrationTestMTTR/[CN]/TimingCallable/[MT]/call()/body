{
  TimingResult result=new TimingResult();
  final int maxIterations=10;
  int numAfterDone=0;
  int resetCount=0;
  while (numAfterDone < maxIterations) {
    long start=System.nanoTime();
    TraceScope scope=null;
    try {
      scope=Trace.startSpan(getSpanName(),AlwaysSampler.INSTANCE);
      boolean actionResult=doAction();
      if (actionResult && future.isDone()) {
        numAfterDone++;
      }
    }
 catch (    AccessDeniedException e) {
      throw e;
    }
catch (    CoprocessorException e) {
      throw e;
    }
catch (    FatalConnectionException e) {
      throw e;
    }
catch (    InvalidFamilyOperationException e) {
      throw e;
    }
catch (    NamespaceExistException e) {
      throw e;
    }
catch (    NamespaceNotFoundException e) {
      throw e;
    }
catch (    NoSuchColumnFamilyException e) {
      throw e;
    }
catch (    TableExistsException e) {
      throw e;
    }
catch (    TableNotFoundException e) {
      throw e;
    }
catch (    Exception e) {
      resetCount++;
      if (resetCount < maxIterations) {
        LOG.info("Non-fatal exception while running " + this.toString() + ". Resetting loop counter",e);
        numAfterDone=0;
      }
 else {
        LOG.info("Too many unexpected Exceptions. Aborting.",e);
        throw e;
      }
    }
 finally {
      if (scope != null) {
        scope.close();
      }
    }
    result.addResult(System.nanoTime() - start,scope.getSpan());
  }
  return result;
}
