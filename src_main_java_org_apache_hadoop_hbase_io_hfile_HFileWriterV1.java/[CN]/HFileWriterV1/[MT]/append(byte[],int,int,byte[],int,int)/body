{
  boolean dupKey=checkKey(key,koffset,klength);
  checkValue(value,voffset,vlength);
  if (!dupKey) {
    checkBlockBoundary();
  }
  this.out.writeInt(klength);
  totalKeyLength+=klength;
  this.out.writeInt(vlength);
  totalValueLength+=vlength;
  this.out.write(key,koffset,klength);
  this.out.write(value,voffset,vlength);
  if (this.firstKeyInBlock == null) {
    this.firstKeyInBlock=new byte[klength];
    System.arraycopy(key,koffset,this.firstKeyInBlock,0,klength);
  }
  this.lastKeyBuffer=key;
  this.lastKeyOffset=koffset;
  this.lastKeyLength=klength;
  this.entryCount++;
  if (cacheDataBlocksOnWrite) {
    this.baosDos.writeInt(klength);
    this.baosDos.writeInt(vlength);
    this.baosDos.write(key,koffset,klength);
    this.baosDos.write(value,voffset,vlength);
  }
}
