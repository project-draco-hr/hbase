{
  if (((active0&=old0)) == 0L)   return jjStartNfa_0(1,old0);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(2,active0);
    return 3;
  }
switch (curChar) {
case 95:
    return jjMoveStringLiteralDfa4_0(active0,0x30060040000000L);
case 65:
case 97:
  return jjMoveStringLiteralDfa4_0(active0,0x400880L);
case 66:
case 98:
return jjMoveStringLiteralDfa4_0(active0,0x200000L);
case 67:
case 99:
if ((active0 & 0x400L) != 0L) {
jjmatchedKind=10;
jjmatchedPos=3;
}
return jjMoveStringLiteralDfa4_0(active0,0x200000000200L);
case 69:
case 101:
if ((active0 & 0x100000000000L) != 0L) return jjStartNfaWithStates_0(3,44,1);
return jjMoveStringLiteralDfa4_0(active0,0x20190040L);
case 73:
case 105:
return jjMoveStringLiteralDfa4_0(active0,0x80000000L);
case 76:
case 108:
return jjMoveStringLiteralDfa4_0(active0,0x40000L);
case 77:
case 109:
if ((active0 & 0x2000000L) != 0L) return jjStartNfaWithStates_0(3,25,1);
return jjMoveStringLiteralDfa4_0(active0,0x800000000000L);
case 78:
case 110:
return jjMoveStringLiteralDfa4_0(active0,0x82000000000000L);
case 79:
case 111:
if ((active0 & 0x20000L) != 0L) return jjStartNfaWithStates_0(3,17,1);
return jjMoveStringLiteralDfa4_0(active0,0x5400000000000L);
case 80:
case 112:
if ((active0 & 0x20L) != 0L) return jjStartNfaWithStates_0(3,5,1);
 else if ((active0 & 0x1000L) != 0L) return jjStartNfaWithStates_0(3,12,1);
return jjMoveStringLiteralDfa4_0(active0,0x80000000000L);
case 82:
case 114:
return jjMoveStringLiteralDfa4_0(active0,0x1800000L);
case 84:
case 116:
if ((active0 & 0x8000L) != 0L) return jjStartNfaWithStates_0(3,15,1);
return jjMoveStringLiteralDfa4_0(active0,0x8000000000000L);
case 85:
case 117:
return jjMoveStringLiteralDfa4_0(active0,0x18000000L);
case 87:
case 119:
if ((active0 & 0x100L) != 0L) return jjStartNfaWithStates_0(3,8,1);
break;
default :
break;
}
return jjStartNfa_0(2,active0);
}
