{
  if (((active0&=old0)) == 0L)   return jjStartNfa_0(0,old0);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(1,active0);
    return 2;
  }
switch (curChar) {
case 95:
    return jjMoveStringLiteralDfa3_0(active0,0x400000000000L);
case 65:
case 97:
  return jjMoveStringLiteralDfa3_0(active0,0x40000000500000L);
case 66:
case 98:
return jjMoveStringLiteralDfa3_0(active0,0x20000L);
case 67:
case 99:
return jjMoveStringLiteralDfa3_0(active0,0x4200000000000L);
case 68:
case 100:
if ((active0 & 0x80000000L) != 0L) return jjStartNfaWithStates_0(2,31,0);
 else if ((active0 & 0x20000000000000L) != 0L) return jjStartNfaWithStates_0(2,53,0);
break;
case 69:
case 101:
return jjMoveStringLiteralDfa3_0(active0,0x800880L);
case 73:
case 105:
return jjMoveStringLiteralDfa3_0(active0,0x4000L);
case 76:
case 108:
return jjMoveStringLiteralDfa3_0(active0,0xc0c0020L);
case 77:
case 109:
return jjMoveStringLiteralDfa3_0(active0,0x18040070000000L);
case 78:
case 110:
return jjMoveStringLiteralDfa3_0(active0,0x80000000000L);
case 79:
case 111:
return jjMoveStringLiteralDfa3_0(active0,0x900001001100L);
case 83:
case 115:
return jjMoveStringLiteralDfa3_0(active0,0x208600L);
case 84:
case 116:
return jjMoveStringLiteralDfa3_0(active0,0x2000000010040L);
case 85:
case 117:
return jjMoveStringLiteralDfa3_0(active0,0x1000000000000L);
case 87:
case 119:
if ((active0 & 0x2000000L) != 0L) return jjStartNfaWithStates_0(2,25,0);
break;
case 88:
case 120:
return jjMoveStringLiteralDfa3_0(active0,0x30000000000L);
default :
break;
}
return jjStartNfa_0(1,active0);
}
