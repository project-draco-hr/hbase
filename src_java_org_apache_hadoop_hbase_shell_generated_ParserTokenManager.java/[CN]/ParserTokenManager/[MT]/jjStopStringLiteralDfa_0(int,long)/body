{
switch (pos) {
case 0:
    if ((active0 & 0xffffe0L) != 0L) {
      jjmatchedKind=31;
      return 13;
    }
  if ((active0 & 0x42000000L) != 0L)   return 1;
return -1;
case 1:
if ((active0 & 0x7fffe0L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=1;
return 13;
}
if ((active0 & 0x800000L) != 0L) return 13;
return -1;
case 2:
if ((active0 & 0x408000L) != 0L) return 13;
if ((active0 & 0x3f7fe0L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=2;
return 13;
}
return -1;
case 3:
if ((active0 & 0x3d7340L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=3;
return 13;
}
if ((active0 & 0x20ca0L) != 0L) return 13;
return -1;
case 4:
if ((active0 & 0x300040L) != 0L) return 13;
if ((active0 & 0xd7300L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=4;
return 13;
}
return -1;
case 5:
if ((active0 & 0xd7200L) != 0L) return 13;
if ((active0 & 0x100L) != 0L) {
if (jjmatchedPos != 5) {
jjmatchedKind=31;
jjmatchedPos=5;
}
return 13;
}
return -1;
case 6:
if ((active0 & 0x80100L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=6;
return 13;
}
return -1;
case 7:
if ((active0 & 0x100L) != 0L) return 13;
if ((active0 & 0x80000L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=7;
return 13;
}
return -1;
case 8:
if ((active0 & 0x80000L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=8;
return 13;
}
return -1;
case 9:
if ((active0 & 0x80000L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=9;
return 13;
}
return -1;
case 10:
if ((active0 & 0x80000L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=10;
return 13;
}
return -1;
case 11:
if ((active0 & 0x80000L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=11;
return 13;
}
return -1;
case 12:
if ((active0 & 0x80000L) != 0L) {
jjmatchedKind=31;
jjmatchedPos=12;
return 13;
}
return -1;
default :
return -1;
}
}
