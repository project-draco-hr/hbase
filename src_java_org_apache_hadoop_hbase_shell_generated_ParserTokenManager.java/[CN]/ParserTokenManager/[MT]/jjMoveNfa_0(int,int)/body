{
  int[] nextStates;
  int startsAt=0;
  jjnewStateCnt=31;
  int i=1;
  jjstateSet[0]=startState;
  int j, kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      MatchLoop:       do {
switch (jjstateSet[--i]) {
case 31:
          if ((0x3ff000000000000L & l) != 0L) {
            if (kind > 57)             kind=57;
            jjCheckNAddTwoStates(2,3);
          }
 else           if ((0x400e00000000000L & l) != 0L) {
            if (kind > 55)             kind=55;
            jjCheckNAdd(0);
          }
        break;
case 1:
      if ((0x3ff000000000000L & l) != 0L) {
        if (kind > 56)         kind=56;
        jjCheckNAddStates(0,6);
      }
 else       if ((0x400e00000000000L & l) != 0L) {
        if (kind > 55)         kind=55;
        jjCheckNAdd(0);
      }
 else       if (curChar == 39)       jjCheckNAddStates(7,9);
 else       if (curChar == 34)       jjCheckNAdd(7);
    if (curChar == 46)     jjCheckNAdd(2);
  break;
case 0:
if ((0x400e00000000000L & l) == 0L) break;
if (kind > 55) kind=55;
jjCheckNAdd(0);
break;
case 2:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 57) kind=57;
jjCheckNAddTwoStates(2,3);
break;
case 4:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(5);
break;
case 5:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 57) kind=57;
jjCheckNAdd(5);
break;
case 6:
if (curChar == 34) jjCheckNAdd(7);
break;
case 7:
if ((0xfffffffbffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);
break;
case 8:
if (curChar == 34 && kind > 59) kind=59;
break;
case 9:
if (curChar == 39) jjCheckNAddStates(7,9);
break;
case 10:
if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(7,9);
break;
case 11:
if (curChar == 39) jjCheckNAddStates(10,12);
break;
case 12:
if (curChar == 39) jjstateSet[jjnewStateCnt++]=11;
break;
case 13:
if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(10,12);
break;
case 14:
if (curChar == 39 && kind > 60) kind=60;
break;
case 15:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 56) kind=56;
jjCheckNAddStates(0,6);
break;
case 16:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 56) kind=56;
jjCheckNAdd(16);
break;
case 17:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(17,18);
break;
case 18:
if (curChar == 46) jjCheckNAdd(19);
break;
case 19:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 57) kind=57;
jjCheckNAddTwoStates(19,20);
break;
case 21:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(22);
break;
case 22:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 57) kind=57;
jjCheckNAdd(22);
break;
case 23:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(23,24);
break;
case 25:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(26);
break;
case 26:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 57) kind=57;
jjCheckNAdd(26);
break;
case 27:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 57) kind=57;
jjCheckNAddTwoStates(27,28);
break;
case 29:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(30);
break;
case 30:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 57) kind=57;
jjCheckNAdd(30);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
MatchLoop: do {
switch (jjstateSet[--i]) {
case 31:
case 0:
if ((0x7fffffe87fffffeL & l) == 0L) break;
if (kind > 55) kind=55;
jjCheckNAdd(0);
break;
case 1:
if ((0x7fffffe87fffffeL & l) == 0L) break;
if (kind > 55) kind=55;
jjCheckNAdd(0);
break;
case 3:
if ((0x2000000020L & l) != 0L) jjAddStates(13,14);
break;
case 7:
jjAddStates(15,16);
break;
case 10:
jjCheckNAddStates(7,9);
break;
case 13:
jjCheckNAddStates(10,12);
break;
case 20:
if ((0x2000000020L & l) != 0L) jjAddStates(17,18);
break;
case 24:
if ((0x2000000020L & l) != 0L) jjAddStates(19,20);
break;
case 28:
if ((0x2000000020L & l) != 0L) jjAddStates(21,22);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
MatchLoop: do {
switch (jjstateSet[--i]) {
case 7:
if ((jjbitVec0[i2] & l2) != 0L) jjAddStates(15,16);
break;
case 10:
if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(7,9);
break;
case 13:
if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(10,12);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=31 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
