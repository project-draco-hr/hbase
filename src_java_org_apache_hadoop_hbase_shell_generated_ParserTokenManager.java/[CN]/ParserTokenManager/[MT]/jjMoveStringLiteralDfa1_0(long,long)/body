{
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(0,active0,active1);
    return 1;
  }
switch (curChar) {
case 61:
    if ((active0 & 0x80000000000L) != 0L)     return jjStopAtPos(1,43);
  break;
case 65:
case 97:
return jjMoveStringLiteralDfa2_0(active0,0x4000600008044000L,active1,0L);
case 68:
case 100:
return jjMoveStringLiteralDfa2_0(active0,0x400000000000000L,active1,0L);
case 69:
case 101:
return jjMoveStringLiteralDfa2_0(active0,0xc4000000180620L,active1,0L);
case 72:
case 104:
return jjMoveStringLiteralDfa2_0(active0,0x800000001000100L,active1,0L);
case 73:
case 105:
return jjMoveStringLiteralDfa2_0(active0,0xa0400000L,active1,0L);
case 76:
case 108:
return jjMoveStringLiteralDfa2_0(active0,0x120000000000c0L,active1,0L);
case 77:
case 109:
return jjMoveStringLiteralDfa2_0(active0,0x1000000000000000L,active1,0L);
case 78:
case 110:
if ((active0 & 0x40000000000L) != 0L) {
jjmatchedKind=42;
jjmatchedPos=1;
}
return jjMoveStringLiteralDfa2_0(active0,0x8000100230000L,active1,0L);
case 79:
case 111:
return jjMoveStringLiteralDfa2_0(active0,0x21820014000000L,active1,0L);
case 82:
case 114:
if ((active0 & 0x200000000L) != 0L) return jjStartNfaWithStates_0(1,33,1);
return jjMoveStringLiteralDfa2_0(active0,0xa000000002001800L,active1,0L);
case 83:
case 115:
if ((active0 & 0x2000L) != 0L) return jjStartNfaWithStates_0(1,13,1);
break;
case 84:
case 116:
return jjMoveStringLiteralDfa2_0(active0,0x800000L,active1,0L);
case 85:
case 117:
return jjMoveStringLiteralDfa2_0(active0,0x300000040000000L,active1,0L);
case 88:
case 120:
return jjMoveStringLiteralDfa2_0(active0,0x8000L,active1,0L);
case 89:
case 121:
if ((active1 & 0x1L) != 0L) return jjStartNfaWithStates_0(1,64,1);
break;
default :
break;
}
return jjStartNfa_0(0,active0,active1);
}
