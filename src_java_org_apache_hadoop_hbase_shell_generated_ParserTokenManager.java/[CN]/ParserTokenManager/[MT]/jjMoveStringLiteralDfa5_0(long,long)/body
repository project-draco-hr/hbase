{
  if (((active0&=old0)) == 0L)   return jjStartNfa_0(3,old0);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(4,active0);
    return 5;
  }
switch (curChar) {
case 65:
case 97:
    return jjMoveStringLiteralDfa6_0(active0,0x8000000000000L);
case 67:
case 99:
  return jjMoveStringLiteralDfa6_0(active0,0x2000000000000L);
case 68:
case 100:
if ((active0 & 0x200000000000L) != 0L) return jjStartNfaWithStates_0(5,45,0);
break;
case 69:
case 101:
if ((active0 & 0x800L) != 0L) return jjStartNfaWithStates_0(5,11,0);
 else if ((active0 & 0x40000L) != 0L) return jjStartNfaWithStates_0(5,18,0);
 else if ((active0 & 0x100000L) != 0L) return jjStartNfaWithStates_0(5,20,0);
 else if ((active0 & 0x40000000000000L) != 0L) return jjStartNfaWithStates_0(5,54,0);
return jjMoveStringLiteralDfa6_0(active0,0x70020000000L);
case 70:
case 102:
return jjMoveStringLiteralDfa6_0(active0,0x800000000000L);
case 73:
case 105:
return jjMoveStringLiteralDfa6_0(active0,0x1000000400200L);
case 76:
case 108:
return jjMoveStringLiteralDfa6_0(active0,0x200000L);
case 77:
case 109:
return jjMoveStringLiteralDfa6_0(active0,0x400000000000L);
case 78:
case 110:
return jjMoveStringLiteralDfa6_0(active0,0x10000008000000L);
case 82:
case 114:
return jjMoveStringLiteralDfa6_0(active0,0x4000000000000L);
case 83:
case 115:
if ((active0 & 0x4000000L) != 0L) return jjStartNfaWithStates_0(5,26,0);
break;
case 84:
case 116:
if ((active0 & 0x8000L) != 0L) return jjStartNfaWithStates_0(5,15,0);
 else if ((active0 & 0x80000L) != 0L) return jjStartNfaWithStates_0(5,19,0);
return jjMoveStringLiteralDfa6_0(active0,0x10000000L);
default :
break;
}
return jjStartNfa_0(4,active0);
}
