{
  int len=in.readInt();
  byte[] inBytes=new byte[len];
  in.readFully(inBytes);
  AuthenticationProtos.TokenIdentifier.Builder builder=AuthenticationProtos.TokenIdentifier.newBuilder();
  ProtobufUtil.mergeFrom(builder,inBytes);
  AuthenticationProtos.TokenIdentifier identifier=builder.build();
  if (!identifier.hasKind() || identifier.getKind() != AuthenticationProtos.TokenIdentifier.Kind.HBASE_AUTH_TOKEN) {
    throw new IOException("Invalid TokenIdentifier kind from input " + identifier.getKind());
  }
  if (identifier.hasUsername()) {
    username=identifier.getUsername().toStringUtf8();
  }
  if (identifier.hasKeyId()) {
    keyId=identifier.getKeyId();
  }
  if (identifier.hasIssueDate()) {
    issueDate=identifier.getIssueDate();
  }
  if (identifier.hasExpirationDate()) {
    expirationDate=identifier.getExpirationDate();
  }
  if (identifier.hasSequenceNumber()) {
    sequenceNumber=identifier.getSequenceNumber();
  }
}
