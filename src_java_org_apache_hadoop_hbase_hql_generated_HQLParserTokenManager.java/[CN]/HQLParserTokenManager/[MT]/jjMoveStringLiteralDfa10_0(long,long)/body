{
  if (((active0&=old0)) == 0L)   return jjStartNfa_0(8,old0,0L);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(9,active0,0L);
    return 10;
  }
switch (curChar) {
case 66:
case 98:
    return jjMoveStringLiteralDfa11_0(active0,0x100000000000000L);
case 69:
case 101:
  if ((active0 & 0x200000000000000L) != 0L)   return jjStartNfaWithStates_0(10,57,1);
return jjMoveStringLiteralDfa11_0(active0,0x20000000000000L);
case 76:
case 108:
return jjMoveStringLiteralDfa11_0(active0,0x80000040000000L);
case 78:
case 110:
if ((active0 & 0x1000000000000L) != 0L) return jjStartNfaWithStates_0(10,48,1);
return jjMoveStringLiteralDfa11_0(active0,0x400100000000L);
case 82:
case 114:
if ((active0 & 0x40000000000000L) != 0L) return jjStartNfaWithStates_0(10,54,1);
break;
case 83:
case 115:
if ((active0 & 0x800000000000000L) != 0L) return jjStartNfaWithStates_0(10,59,1);
break;
default :
break;
}
return jjStartNfa_0(9,active0,0L);
}
