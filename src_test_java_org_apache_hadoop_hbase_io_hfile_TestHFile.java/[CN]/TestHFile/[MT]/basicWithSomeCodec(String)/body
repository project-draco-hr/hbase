{
  if (cacheConf == null)   cacheConf=new CacheConfig(conf);
  Path ncTFile=new Path(ROOT_DIR,"basic.hfile." + codec.toString());
  FSDataOutputStream fout=createFSOutput(ncTFile);
  Writer writer=HFile.getWriterFactory(conf,cacheConf).withOutputStream(fout).withBlockSize(minBlockSize).withCompression(codec).create();
  LOG.info(writer);
  writeRecords(writer);
  fout.close();
  FSDataInputStream fin=fs.open(ncTFile);
  Reader reader=HFile.createReaderFromStream(ncTFile,fs.open(ncTFile),fs.getFileStatus(ncTFile).getLen(),cacheConf);
  System.out.println(cacheConf.toString());
  reader.loadFileInfo();
  HFileScanner scanner=reader.getScanner(true,false);
  scanner.seekTo();
  readAllRecords(scanner);
  scanner.seekTo(getSomeKey(50));
  assertTrue("location lookup failed",scanner.seekTo(getSomeKey(50)) == 0);
  ByteBuffer readKey=scanner.getKey();
  assertTrue("seeked key does not match",Arrays.equals(getSomeKey(50),Bytes.toBytes(readKey)));
  scanner.seekTo(new byte[0]);
  ByteBuffer val1=scanner.getValue();
  scanner.seekTo(new byte[0]);
  ByteBuffer val2=scanner.getValue();
  assertTrue(Arrays.equals(Bytes.toBytes(val1),Bytes.toBytes(val2)));
  reader.close();
  fin.close();
  fs.delete(ncTFile,true);
}
