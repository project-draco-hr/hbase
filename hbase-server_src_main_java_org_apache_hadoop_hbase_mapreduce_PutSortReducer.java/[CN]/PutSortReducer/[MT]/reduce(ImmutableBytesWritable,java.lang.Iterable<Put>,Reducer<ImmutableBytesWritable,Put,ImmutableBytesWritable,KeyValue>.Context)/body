{
  long threshold=context.getConfiguration().getLong("putsortreducer.row.threshold",1L * (1 << 30));
  Iterator<Put> iter=puts.iterator();
  while (iter.hasNext()) {
    TreeSet<KeyValue> map=new TreeSet<KeyValue>(CellComparator.COMPARATOR);
    long curSize=0;
    while (iter.hasNext() && curSize < threshold) {
      Put p=iter.next();
      for (      List<Cell> cells : p.getFamilyCellMap().values()) {
        for (        Cell cell : cells) {
          KeyValue kv=KeyValueUtil.ensureKeyValue(cell);
          map.add(kv);
          curSize+=kv.heapSize();
        }
      }
    }
    context.setStatus("Read " + map.size() + " entries of "+ map.getClass()+ "("+ StringUtils.humanReadableInt(curSize)+ ")");
    int index=0;
    for (    KeyValue kv : map) {
      context.write(row,kv);
      if (++index % 100 == 0)       context.setStatus("Wrote " + index);
    }
    if (iter.hasNext()) {
      context.write(null,null);
    }
  }
}
