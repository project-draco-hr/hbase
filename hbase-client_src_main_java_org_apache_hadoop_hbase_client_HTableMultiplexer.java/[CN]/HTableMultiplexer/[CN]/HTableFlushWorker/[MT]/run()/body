{
  List<PutStatus> processingList=new ArrayList<>();
  long frequency=conf.getLong(TABLE_MULTIPLEXER_FLUSH_FREQ_MS,100);
  try {
    Thread.sleep(frequency);
  }
 catch (  InterruptedException e) {
    LOG.warn("Interrupted while sleeping");
    Thread.currentThread().interrupt();
  }
  AsyncProcess ap=conn.getAsyncProcess();
  long start, elapsed;
  int failedCount=0;
  while (true) {
    try {
      start=elapsed=EnvironmentEdgeManager.currentTime();
      processingList.clear();
      failedCount=0;
      queue.drainTo(processingList);
      currentProcessingPutCount.set(processingList.size());
      if (processingList.size() > 0) {
        List<Action<Row>> retainedActions=new ArrayList<>(processingList.size());
        MultiAction<Row> actions=new MultiAction<>();
        for (int i=0; i < processingList.size(); i++) {
          PutStatus putStatus=processingList.get(i);
          Action<Row> action=new Action<Row>(putStatus.getPut(),i);
          actions.add(putStatus.getRegionInfo().getRegionName(),action);
          retainedActions.add(action);
        }
        List<PutStatus> failed=null;
        Object[] results=new Object[actions.size()];
        ServerName server=addr.getServerName();
        Map<ServerName,MultiAction<Row>> actionsByServer=Collections.singletonMap(server,actions);
        try {
          AsyncRequestFuture arf=ap.submitMultiActions(null,retainedActions,0L,null,results,true,null,null,actionsByServer,pool);
          arf.waitUntilDone();
          if (arf.hasError()) {
            throw arf.getErrors();
          }
        }
 catch (        IOException e) {
          LOG.debug("Caught some exceptions " + e + " when flushing puts to region server "+ addr.getHostnamePort());
        }
 finally {
          for (int i=0; i < results.length; i++) {
            if (results[i] == null) {
              if (failed == null) {
                failed=new ArrayList<PutStatus>();
              }
              failed.add(processingList.get(i));
            }
          }
        }
        if (failed != null) {
          for (          PutStatus putStatus : processingList) {
            if (!resubmitFailedPut(putStatus,this.addr)) {
              failedCount++;
            }
          }
          this.totalFailedPutCount.addAndGet(failedCount);
        }
        elapsed=EnvironmentEdgeManager.currentTime() - start;
        averageLatency.add(elapsed);
        if (elapsed > maxLatency.get()) {
          maxLatency.set(elapsed);
        }
        if (LOG.isDebugEnabled()) {
          LOG.debug("Processed " + currentProcessingPutCount + " put requests for "+ addr.getHostnamePort()+ " and "+ failedCount+ " failed"+ ", latency for this send: "+ elapsed);
        }
        currentProcessingPutCount.set(0);
      }
      if (elapsed == start) {
        elapsed=EnvironmentEdgeManager.currentTime() - start;
      }
      if (elapsed < frequency) {
        try {
          Thread.sleep(frequency - elapsed);
        }
 catch (        InterruptedException e) {
          LOG.warn("Interrupted while sleeping");
          Thread.currentThread().interrupt();
        }
      }
    }
 catch (    Exception e) {
      LOG.debug("Caught some exceptions " + e + " when flushing puts to region server "+ addr.getHostnamePort(),e);
    }
  }
}
