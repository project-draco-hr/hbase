{
  MiniHBaseCluster cluster=UTIL.getHBaseCluster();
  HMaster master=cluster.getMaster();
  MasterCoprocessorHost host=master.getMasterCoprocessorHost();
  BuggyMasterObserver cp=(BuggyMasterObserver)host.findCoprocessor(BuggyMasterObserver.class.getName());
  assertFalse("No table created yet",cp.wasCreateTableCalled());
  ZooKeeperWatcher zkw=new ZooKeeperWatcher(UTIL.getConfiguration(),"unittest",new Abortable(){
    @Override public void abort(    String why,    Throwable e){
      throw new RuntimeException("Fatal ZK error: " + why,e);
    }
    @Override public boolean isAborted(){
      return false;
    }
  }
);
  MasterTracker masterTracker=new MasterTracker(zkw,"/hbase/master",new Abortable(){
    @Override public void abort(    String why,    Throwable e){
      throw new RuntimeException("Fatal ZooKeeper tracker error, why=",e);
    }
    @Override public boolean isAborted(){
      return false;
    }
  }
);
  masterTracker.start();
  zkw.registerListener(masterTracker);
  String coprocessorName=BuggyMasterObserver.class.getName();
  assertTrue(HMaster.getLoadedCoprocessors().contains(coprocessorName));
  HTableDescriptor htd1=new HTableDescriptor(TableName.valueOf(TEST_TABLE1));
  htd1.addFamily(new HColumnDescriptor(TEST_FAMILY1));
  boolean threwDNRE=false;
  try {
    Admin admin=UTIL.getHBaseAdmin();
    admin.createTable(htd1);
  }
 catch (  IOException e) {
    if (e.getClass().getName().equals("org.apache.hadoop.hbase.DoNotRetryIOException")) {
      threwDNRE=true;
    }
  }
 finally {
    assertTrue(threwDNRE);
  }
  try {
    Thread.sleep(3000);
  }
 catch (  InterruptedException e) {
    fail("InterruptedException while sleeping.");
  }
  assertFalse("Master survived coprocessor NPE, as expected.",masterTracker.masterZKNodeWasDeleted);
  String loadedCoprocessors=HMaster.getLoadedCoprocessors();
  assertTrue(loadedCoprocessors.contains(coprocessorName));
  HTableDescriptor htd2=new HTableDescriptor(TableName.valueOf(TEST_TABLE2));
  htd2.addFamily(new HColumnDescriptor(TEST_FAMILY2));
  Admin admin=UTIL.getHBaseAdmin();
  try {
    admin.createTable(htd2);
  }
 catch (  IOException e) {
    fail("Failed to create table after buggy coprocessor removal: " + e);
  }
}
