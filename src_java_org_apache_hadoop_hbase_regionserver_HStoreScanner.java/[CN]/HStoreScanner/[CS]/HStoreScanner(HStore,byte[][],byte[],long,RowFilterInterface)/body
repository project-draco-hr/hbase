{
  this.store=store;
  this.dataFilter=filter;
  if (null != dataFilter) {
    dataFilter.reset();
  }
  this.scanners=new InternalScanner[2];
  this.resultSets=new TreeMap[scanners.length];
  this.keys=new HStoreKey[scanners.length];
  try {
    scanners[0]=store.memcache.getScanner(timestamp,targetCols,firstRow);
    scanners[1]=new StoreFileScanner(store,timestamp,targetCols,firstRow);
    for (int i=0; i < scanners.length; i++) {
      if (scanners[i].isWildcardScanner()) {
        this.wildcardMatch=true;
      }
      if (scanners[i].isMultipleMatchScanner()) {
        this.multipleMatchers=true;
      }
    }
  }
 catch (  IOException e) {
    for (int i=0; i < this.scanners.length; i++) {
      if (scanners[i] != null) {
        closeScanner(i);
      }
    }
    throw e;
  }
  for (int i=0; i < scanners.length; i++) {
    keys[i]=new HStoreKey();
    resultSets[i]=new TreeMap<byte[],byte[]>(Bytes.BYTES_COMPARATOR);
    if (scanners[i] != null && !scanners[i].next(keys[i],resultSets[i])) {
      closeScanner(i);
    }
  }
}
