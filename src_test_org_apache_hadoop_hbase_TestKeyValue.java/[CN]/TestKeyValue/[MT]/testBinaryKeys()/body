{
  Set<KeyValue> set=new TreeSet<KeyValue>(KeyValue.COMPARATOR);
  String column="col:umn";
  KeyValue[] keys={new KeyValue("aaaaa,\u0000\u0000,2",column,2),new KeyValue("aaaaa,\u0001,3",column,3),new KeyValue("aaaaa,,1",column,1),new KeyValue("aaaaa,\u1000,5",column,5),new KeyValue("aaaaa,a,4",column,4),new KeyValue("a,a,0",column,0)};
  for (int i=0; i < keys.length; i++) {
    set.add(keys[i]);
  }
  boolean assertion=false;
  int count=0;
  try {
    for (    KeyValue k : set) {
      assertTrue(count++ == k.getTimestamp());
    }
  }
 catch (  junit.framework.AssertionFailedError e) {
    assertion=true;
  }
  assertTrue(assertion);
  set=new TreeSet<KeyValue>(new KeyValue.MetaComparator());
  for (int i=0; i < keys.length; i++) {
    set.add(keys[i]);
  }
  count=0;
  for (  KeyValue k : set) {
    assertTrue(count++ == k.getTimestamp());
  }
  KeyValue[] rootKeys={new KeyValue(".META.,aaaaa,\u0000\u0000,0,2",column,2),new KeyValue(".META.,aaaaa,\u0001,0,3",column,3),new KeyValue(".META.,aaaaa,,0,1",column,1),new KeyValue(".META.,aaaaa,\u1000,0,5",column,5),new KeyValue(".META.,aaaaa,a,0,4",column,4),new KeyValue(".META.,,0",column,0)};
  set=new TreeSet<KeyValue>(new KeyValue.MetaComparator());
  for (int i=0; i < keys.length; i++) {
    set.add(rootKeys[i]);
  }
  assertion=false;
  count=0;
  try {
    for (    KeyValue k : set) {
      assertTrue(count++ == k.getTimestamp());
    }
  }
 catch (  junit.framework.AssertionFailedError e) {
    assertion=true;
  }
  set=new TreeSet<KeyValue>(new KeyValue.RootComparator());
  for (int i=0; i < keys.length; i++) {
    set.add(rootKeys[i]);
  }
  count=0;
  for (  KeyValue k : set) {
    assertTrue(count++ == k.getTimestamp());
  }
}
