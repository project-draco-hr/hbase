{
  boolean cleanSetOfActiveMaster=true;
  try {
    if (ZKUtil.createEphemeralNodeAndWatch(this.watcher,this.watcher.masterAddressZNode,Bytes.toBytes(this.sn.toString()))) {
      this.clusterHasActiveMaster.set(true);
      LOG.info("Master=" + this.sn);
      return cleanSetOfActiveMaster;
    }
    cleanSetOfActiveMaster=false;
    this.clusterHasActiveMaster.set(true);
    byte[] bytes=ZKUtil.getDataAndWatch(this.watcher,this.watcher.masterAddressZNode);
    ServerName currentMaster=new ServerName(Bytes.toString(bytes));
    if (currentMaster != null && currentMaster.equals(this.sn)) {
      LOG.info("Current master has this master's address, " + currentMaster + "; master was restarted?  Waiting on znode to expire...");
      ZKUtil.deleteNode(this.watcher,this.watcher.masterAddressZNode);
    }
 else {
      LOG.info("Another master is the active master, " + currentMaster + "; waiting to become the next active master");
    }
  }
 catch (  KeeperException ke) {
    master.abort("Received an unexpected KeeperException, aborting",ke);
    return false;
  }
synchronized (this.clusterHasActiveMaster) {
    while (this.clusterHasActiveMaster.get() && !this.master.isStopped()) {
      try {
        this.clusterHasActiveMaster.wait();
      }
 catch (      InterruptedException e) {
        LOG.debug("Interrupted waiting for master to die",e);
      }
    }
    if (this.master.isStopped()) {
      return cleanSetOfActiveMaster;
    }
    blockUntilBecomingActiveMaster();
  }
  return cleanSetOfActiveMaster;
}
