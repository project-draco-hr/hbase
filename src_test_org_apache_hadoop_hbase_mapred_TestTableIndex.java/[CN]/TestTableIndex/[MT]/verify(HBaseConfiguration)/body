{
  Path localDir=new Path(this.testDir,"index_" + Integer.toString(new Random().nextInt()));
  this.fs.copyToLocalFile(new Path(INDEX_DIR),localDir);
  Path[] indexDirs=this.localFs.listPaths(new Path[]{localDir});
  Searcher searcher=null;
  HScannerInterface scanner=null;
  try {
    if (indexDirs.length == 1) {
      searcher=new IndexSearcher((new File(indexDirs[0].toUri())).getAbsolutePath());
    }
 else     if (indexDirs.length > 1) {
      Searchable[] searchers=new Searchable[indexDirs.length];
      for (int i=0; i < indexDirs.length; i++) {
        searchers[i]=new IndexSearcher((new File(indexDirs[i].toUri()).getAbsolutePath()));
      }
      searcher=new MultiSearcher(searchers);
    }
 else {
      throw new IOException("no index directory found");
    }
    HTable table=new HTable(c,new Text(TABLE_NAME));
    Text[] columns={TEXT_INPUT_COLUMN,TEXT_OUTPUT_COLUMN};
    scanner=table.obtainScanner(columns,HConstants.EMPTY_START_ROW);
    HStoreKey key=new HStoreKey();
    TreeMap<Text,byte[]> results=new TreeMap<Text,byte[]>();
    IndexConfiguration indexConf=new IndexConfiguration();
    String content=c.get("hbase.index.conf");
    if (content != null) {
      indexConf.addFromXML(content);
    }
    String rowkeyName=indexConf.getRowkeyName();
    int count=0;
    while (scanner.next(key,results)) {
      String value=key.getRow().toString();
      Term term=new Term(rowkeyName,value);
      int hitCount=searcher.search(new TermQuery(term)).length();
      assertEquals("check row " + value,1,hitCount);
      count++;
    }
    int maxDoc=searcher.maxDoc();
    assertEquals("check number of rows",count,maxDoc);
  }
  finally {
    if (null != searcher)     searcher.close();
    if (null != scanner)     scanner.close();
  }
}
