{
  final Method setStorageTypeMethod;
  try {
    setStorageTypeMethod=OpWriteBlockProto.Builder.class.getMethod("setStorageType",StorageTypeProto.class);
  }
 catch (  NoSuchMethodException e) {
    LOG.debug("noSetStorageType method found, should be hadoop 2.5-",e);
    return new StorageTypeSetter(){
      @Override public Builder set(      Builder builder,      Enum<?> storageType){
        return builder;
      }
    }
;
  }
  ImmutableMap.Builder<String,StorageTypeProto> builder=ImmutableMap.builder();
  for (  StorageTypeProto storageTypeProto : StorageTypeProto.values()) {
    builder.put(storageTypeProto.name(),storageTypeProto);
  }
  final ImmutableMap<String,StorageTypeProto> name2ProtoEnum=builder.build();
  return new StorageTypeSetter(){
    @Override public Builder set(    Builder builder,    Enum<?> storageType){
      Object protoEnum=name2ProtoEnum.get(storageType.name());
      try {
        setStorageTypeMethod.invoke(builder,protoEnum);
      }
 catch (      IllegalAccessException|IllegalArgumentException|InvocationTargetException e) {
        throw new RuntimeException(e);
      }
      return builder;
    }
  }
;
}
