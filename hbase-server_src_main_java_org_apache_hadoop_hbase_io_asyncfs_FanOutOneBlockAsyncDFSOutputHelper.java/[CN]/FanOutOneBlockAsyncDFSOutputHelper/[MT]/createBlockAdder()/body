{
  for (  Method method : ClientProtocol.class.getMethods()) {
    if (method.getName().equals("addBlock")) {
      final Method addBlockMethod=method;
      Class<?>[] paramTypes=addBlockMethod.getParameterTypes();
      if (paramTypes[paramTypes.length - 1] == String[].class) {
        return new BlockAdder(){
          @Override public LocatedBlock addBlock(          ClientProtocol namenode,          String src,          String clientName,          ExtendedBlock previous,          DatanodeInfo[] excludeNodes,          long fileId,          String[] favoredNodes) throws IOException {
            try {
              return (LocatedBlock)addBlockMethod.invoke(namenode,src,clientName,previous,excludeNodes,fileId,favoredNodes);
            }
 catch (            IllegalAccessException e) {
              throw new RuntimeException(e);
            }
catch (            InvocationTargetException e) {
              Throwables.propagateIfPossible(e.getTargetException(),IOException.class);
              throw new RuntimeException(e);
            }
          }
        }
;
      }
 else {
        return new BlockAdder(){
          @Override public LocatedBlock addBlock(          ClientProtocol namenode,          String src,          String clientName,          ExtendedBlock previous,          DatanodeInfo[] excludeNodes,          long fileId,          String[] favoredNodes) throws IOException {
            try {
              return (LocatedBlock)addBlockMethod.invoke(namenode,src,clientName,previous,excludeNodes,fileId,favoredNodes,null);
            }
 catch (            IllegalAccessException e) {
              throw new RuntimeException(e);
            }
catch (            InvocationTargetException e) {
              Throwables.propagateIfPossible(e.getTargetException(),IOException.class);
              throw new RuntimeException(e);
            }
          }
        }
;
      }
    }
  }
  throw new NoSuchMethodException("Can not find addBlock method in ClientProtocol");
}
