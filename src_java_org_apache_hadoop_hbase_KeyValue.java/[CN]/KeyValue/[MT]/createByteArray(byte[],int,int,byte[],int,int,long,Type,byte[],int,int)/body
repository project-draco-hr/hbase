{
  if (rlength > Short.MAX_VALUE) {
    throw new IllegalArgumentException("Row > " + Short.MAX_VALUE);
  }
  if (row == null) {
    throw new IllegalArgumentException("Row is null");
  }
  int delimiteroffset=0;
  if (column != null && column.length > 0) {
    delimiteroffset=getFamilyDelimiterIndex(column,coffset,clength);
    if (delimiteroffset > Byte.MAX_VALUE) {
      throw new IllegalArgumentException("Family > " + Byte.MAX_VALUE);
    }
  }
  vlength=value == null ? 0 : vlength;
  clength=column == null || column.length == 0 ? 0 : clength - 1;
  long longkeylength=KEY_INFRASTRUCTURE_SIZE + rlength + clength;
  if (longkeylength > Integer.MAX_VALUE) {
    throw new IllegalArgumentException("keylength " + longkeylength + " > "+ Integer.MAX_VALUE);
  }
  int keylength=(int)longkeylength;
  byte[] bytes=new byte[KEYVALUE_INFRASTRUCTURE_SIZE + keylength + vlength];
  int pos=0;
  pos=Bytes.putInt(bytes,pos,keylength);
  pos=Bytes.putInt(bytes,pos,vlength);
  pos=Bytes.putShort(bytes,pos,(short)(rlength & 0x0000ffff));
  pos=Bytes.putBytes(bytes,pos,row,roffset,rlength);
  pos=Bytes.putByte(bytes,pos,(byte)(delimiteroffset & 0x0000ff));
  if (column != null && column.length != 0) {
    pos=Bytes.putBytes(bytes,pos,column,coffset,delimiteroffset);
    delimiteroffset++;
    pos=Bytes.putBytes(bytes,pos,column,coffset + delimiteroffset,column.length - delimiteroffset);
  }
  pos=Bytes.putLong(bytes,pos,timestamp);
  pos=Bytes.putByte(bytes,pos,type.getCode());
  if (value != null && value.length > 0) {
    pos=Bytes.putBytes(bytes,pos,value,voffset,vlength);
  }
  return bytes;
}
