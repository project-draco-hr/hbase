{
  ProcedureCoordinator coordinator=Mockito.mock(ProcedureCoordinator.class);
  Mockito.mock(ProcedureCoordinator.class);
  Mockito.doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      prepared.countDown();
      return null;
    }
  }
).when(coordinator).memberAcquiredBarrier(Mockito.eq(operationName),Mockito.anyString());
  Mockito.doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      dataFromMembers.add(memberData);
      committed.countDown();
      return null;
    }
  }
).when(coordinator).memberFinishedBarrier(Mockito.eq(operationName),Mockito.anyString(),Mockito.eq(memberData));
  return coordinator;
}
