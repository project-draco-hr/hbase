{
  LOG.info(String.format("Performing action: Batch restarting %d%% of region servers",(int)(ratio * 100)));
  List<ServerName> selectedServers=PolicyBasedChaosMonkey.selectRandomItems(getCurrentServers(),ratio);
  for (  ServerName server : selectedServers) {
    LOG.info("Killing region server:" + server);
    cluster.killRegionServer(server);
  }
  for (  ServerName server : selectedServers) {
    cluster.waitForRegionServerToStop(server,PolicyBasedChaosMonkey.TIMEOUT);
  }
  LOG.info("Killed " + selectedServers.size() + " region servers. Reported num of rs:"+ cluster.getClusterStatus().getServersSize());
  sleep(sleepTime);
  for (  ServerName server : selectedServers) {
    LOG.info("Starting region server:" + server.getHostname());
    cluster.startRegionServer(server.getHostname());
  }
  for (  ServerName server : selectedServers) {
    cluster.waitForRegionServerToStart(server.getHostname(),PolicyBasedChaosMonkey.TIMEOUT);
  }
  LOG.info("Started " + selectedServers.size() + " region servers. Reported num of rs:"+ cluster.getClusterStatus().getServersSize());
}
