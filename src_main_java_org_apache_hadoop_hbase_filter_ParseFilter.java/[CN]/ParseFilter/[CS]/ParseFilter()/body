{
  filterHashMap=new HashMap<ByteBuffer,Filter>();
  registerFilter("KeyOnlyFilter",new KeyOnlyFilter());
  registerFilter("FirstKeyOnlyFilter",new FirstKeyOnlyFilter());
  registerFilter("PrefixFilter",new PrefixFilter());
  registerFilter("ColumnPrefixFilter",new ColumnPrefixFilter());
  registerFilter("MultipleColumnPrefixFilter",new MultipleColumnPrefixFilter());
  registerFilter("ColumnCountGetFilter",new ColumnCountGetFilter());
  registerFilter("PageFilter",new PageFilter());
  registerFilter("ColumnPaginationFilter",new ColumnPaginationFilter());
  registerFilter("InclusiveStopFilter",new InclusiveStopFilter());
  registerFilter("TimestampsFilter",new TimestampsFilter());
  registerFilter("RowFilter",new RowFilter());
  registerFilter("FamilyFilter",new FamilyFilter());
  registerFilter("QualifierFilter",new QualifierFilter());
  registerFilter("ValueFilter",new ValueFilter());
  registerFilter("ColumnRangeFilter",new ColumnRangeFilter());
  registerFilter("SingleColumnValueFilter",new SingleColumnValueFilter());
  registerFilter("SingleColumnValueExcludeFilter",new SingleColumnValueExcludeFilter());
  registerFilter("DependentColumnFilter",new DependentColumnFilter());
  operatorPrecedenceHashMap=new HashMap<ByteBuffer,Integer>();
  operatorPrecedenceHashMap.put(ParseConstants.SKIP_BUFFER,1);
  operatorPrecedenceHashMap.put(ParseConstants.WHILE_BUFFER,1);
  operatorPrecedenceHashMap.put(ParseConstants.AND_BUFFER,2);
  operatorPrecedenceHashMap.put(ParseConstants.OR_BUFFER,3);
}
