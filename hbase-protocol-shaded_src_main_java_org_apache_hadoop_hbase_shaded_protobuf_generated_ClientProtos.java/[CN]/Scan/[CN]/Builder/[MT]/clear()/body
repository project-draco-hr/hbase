{
  super.clear();
  if (columnBuilder_ == null) {
    column_=java.util.Collections.emptyList();
    bitField0_=(bitField0_ & ~0x00000001);
  }
 else {
    columnBuilder_.clear();
  }
  if (attributeBuilder_ == null) {
    attribute_=java.util.Collections.emptyList();
    bitField0_=(bitField0_ & ~0x00000002);
  }
 else {
    attributeBuilder_.clear();
  }
  startRow_=org.apache.hadoop.hbase.shaded.com.google.protobuf.ByteString.EMPTY;
  bitField0_=(bitField0_ & ~0x00000004);
  stopRow_=org.apache.hadoop.hbase.shaded.com.google.protobuf.ByteString.EMPTY;
  bitField0_=(bitField0_ & ~0x00000008);
  if (filterBuilder_ == null) {
    filter_=null;
  }
 else {
    filterBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00000010);
  if (timeRangeBuilder_ == null) {
    timeRange_=null;
  }
 else {
    timeRangeBuilder_.clear();
  }
  bitField0_=(bitField0_ & ~0x00000020);
  maxVersions_=1;
  bitField0_=(bitField0_ & ~0x00000040);
  cacheBlocks_=true;
  bitField0_=(bitField0_ & ~0x00000080);
  batchSize_=0;
  bitField0_=(bitField0_ & ~0x00000100);
  maxResultSize_=0L;
  bitField0_=(bitField0_ & ~0x00000200);
  storeLimit_=0;
  bitField0_=(bitField0_ & ~0x00000400);
  storeOffset_=0;
  bitField0_=(bitField0_ & ~0x00000800);
  loadColumnFamiliesOnDemand_=false;
  bitField0_=(bitField0_ & ~0x00001000);
  small_=false;
  bitField0_=(bitField0_ & ~0x00002000);
  reversed_=false;
  bitField0_=(bitField0_ & ~0x00004000);
  consistency_=0;
  bitField0_=(bitField0_ & ~0x00008000);
  caching_=0;
  bitField0_=(bitField0_ & ~0x00010000);
  allowPartialResults_=false;
  bitField0_=(bitField0_ & ~0x00020000);
  if (cfTimeRangeBuilder_ == null) {
    cfTimeRange_=java.util.Collections.emptyList();
    bitField0_=(bitField0_ & ~0x00040000);
  }
 else {
    cfTimeRangeBuilder_.clear();
  }
  return this;
}
