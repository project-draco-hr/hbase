{
  if (memoizedHashCode != 0) {
    return memoizedHashCode;
  }
  int hash=41;
  hash=(19 * hash) + getDescriptorForType().hashCode();
  if (getColumnCount() > 0) {
    hash=(37 * hash) + COLUMN_FIELD_NUMBER;
    hash=(53 * hash) + getColumnList().hashCode();
  }
  if (getAttributeCount() > 0) {
    hash=(37 * hash) + ATTRIBUTE_FIELD_NUMBER;
    hash=(53 * hash) + getAttributeList().hashCode();
  }
  if (hasStartRow()) {
    hash=(37 * hash) + START_ROW_FIELD_NUMBER;
    hash=(53 * hash) + getStartRow().hashCode();
  }
  if (hasStopRow()) {
    hash=(37 * hash) + STOP_ROW_FIELD_NUMBER;
    hash=(53 * hash) + getStopRow().hashCode();
  }
  if (hasFilter()) {
    hash=(37 * hash) + FILTER_FIELD_NUMBER;
    hash=(53 * hash) + getFilter().hashCode();
  }
  if (hasTimeRange()) {
    hash=(37 * hash) + TIME_RANGE_FIELD_NUMBER;
    hash=(53 * hash) + getTimeRange().hashCode();
  }
  if (hasMaxVersions()) {
    hash=(37 * hash) + MAX_VERSIONS_FIELD_NUMBER;
    hash=(53 * hash) + getMaxVersions();
  }
  if (hasCacheBlocks()) {
    hash=(37 * hash) + CACHE_BLOCKS_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashBoolean(getCacheBlocks());
  }
  if (hasBatchSize()) {
    hash=(37 * hash) + BATCH_SIZE_FIELD_NUMBER;
    hash=(53 * hash) + getBatchSize();
  }
  if (hasMaxResultSize()) {
    hash=(37 * hash) + MAX_RESULT_SIZE_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getMaxResultSize());
  }
  if (hasStoreLimit()) {
    hash=(37 * hash) + STORE_LIMIT_FIELD_NUMBER;
    hash=(53 * hash) + getStoreLimit();
  }
  if (hasStoreOffset()) {
    hash=(37 * hash) + STORE_OFFSET_FIELD_NUMBER;
    hash=(53 * hash) + getStoreOffset();
  }
  if (hasLoadColumnFamiliesOnDemand()) {
    hash=(37 * hash) + LOAD_COLUMN_FAMILIES_ON_DEMAND_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashBoolean(getLoadColumnFamiliesOnDemand());
  }
  if (hasSmall()) {
    hash=(37 * hash) + SMALL_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashBoolean(getSmall());
  }
  if (hasReversed()) {
    hash=(37 * hash) + REVERSED_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashBoolean(getReversed());
  }
  if (hasConsistency()) {
    hash=(37 * hash) + CONSISTENCY_FIELD_NUMBER;
    hash=(53 * hash) + consistency_;
  }
  if (hasCaching()) {
    hash=(37 * hash) + CACHING_FIELD_NUMBER;
    hash=(53 * hash) + getCaching();
  }
  if (hasAllowPartialResults()) {
    hash=(37 * hash) + ALLOW_PARTIAL_RESULTS_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashBoolean(getAllowPartialResults());
  }
  if (getCfTimeRangeCount() > 0) {
    hash=(37 * hash) + CF_TIME_RANGE_FIELD_NUMBER;
    hash=(53 * hash) + getCfTimeRangeList().hashCode();
  }
  hash=(29 * hash) + unknownFields.hashCode();
  memoizedHashCode=hash;
  return hash;
}
