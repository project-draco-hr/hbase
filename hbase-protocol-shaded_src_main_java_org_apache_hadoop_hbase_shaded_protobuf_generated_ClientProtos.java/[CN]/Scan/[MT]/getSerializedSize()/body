{
  int size=memoizedSize;
  if (size != -1)   return size;
  size=0;
  for (int i=0; i < column_.size(); i++) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeMessageSize(1,column_.get(i));
  }
  for (int i=0; i < attribute_.size(); i++) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeMessageSize(2,attribute_.get(i));
  }
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeBytesSize(3,startRow_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeBytesSize(4,stopRow_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeMessageSize(5,getFilter());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeMessageSize(6,getTimeRange());
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeUInt32Size(7,maxVersions_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeBoolSize(8,cacheBlocks_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeUInt32Size(9,batchSize_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeUInt64Size(10,maxResultSize_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeUInt32Size(11,storeLimit_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeUInt32Size(12,storeOffset_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeBoolSize(13,loadColumnFamiliesOnDemand_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeBoolSize(14,small_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeBoolSize(15,reversed_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeEnumSize(16,consistency_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeUInt32Size(17,caching_);
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeBoolSize(18,allowPartialResults_);
  }
  for (int i=0; i < cfTimeRange_.size(); i++) {
    size+=org.apache.hadoop.hbase.shaded.com.google.protobuf.CodedOutputStream.computeMessageSize(19,cfTimeRange_.get(i));
  }
  size+=unknownFields.getSerializedSize();
  memoizedSize=size;
  return size;
}
