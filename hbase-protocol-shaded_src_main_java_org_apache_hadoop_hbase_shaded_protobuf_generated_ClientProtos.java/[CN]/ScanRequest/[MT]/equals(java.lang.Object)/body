{
  if (obj == this) {
    return true;
  }
  if (!(obj instanceof org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos.ScanRequest)) {
    return super.equals(obj);
  }
  org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos.ScanRequest other=(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos.ScanRequest)obj;
  boolean result=true;
  result=result && (hasRegion() == other.hasRegion());
  if (hasRegion()) {
    result=result && getRegion().equals(other.getRegion());
  }
  result=result && (hasScan() == other.hasScan());
  if (hasScan()) {
    result=result && getScan().equals(other.getScan());
  }
  result=result && (hasScannerId() == other.hasScannerId());
  if (hasScannerId()) {
    result=result && (getScannerId() == other.getScannerId());
  }
  result=result && (hasNumberOfRows() == other.hasNumberOfRows());
  if (hasNumberOfRows()) {
    result=result && (getNumberOfRows() == other.getNumberOfRows());
  }
  result=result && (hasCloseScanner() == other.hasCloseScanner());
  if (hasCloseScanner()) {
    result=result && (getCloseScanner() == other.getCloseScanner());
  }
  result=result && (hasNextCallSeq() == other.hasNextCallSeq());
  if (hasNextCallSeq()) {
    result=result && (getNextCallSeq() == other.getNextCallSeq());
  }
  result=result && (hasClientHandlesPartials() == other.hasClientHandlesPartials());
  if (hasClientHandlesPartials()) {
    result=result && (getClientHandlesPartials() == other.getClientHandlesPartials());
  }
  result=result && (hasClientHandlesHeartbeats() == other.hasClientHandlesHeartbeats());
  if (hasClientHandlesHeartbeats()) {
    result=result && (getClientHandlesHeartbeats() == other.getClientHandlesHeartbeats());
  }
  result=result && (hasTrackScanMetrics() == other.hasTrackScanMetrics());
  if (hasTrackScanMetrics()) {
    result=result && (getTrackScanMetrics() == other.getTrackScanMetrics());
  }
  result=result && (hasRenew() == other.hasRenew());
  if (hasRenew()) {
    result=result && (getRenew() == other.getRenew());
  }
  result=result && unknownFields.equals(other.unknownFields);
  return result;
}
