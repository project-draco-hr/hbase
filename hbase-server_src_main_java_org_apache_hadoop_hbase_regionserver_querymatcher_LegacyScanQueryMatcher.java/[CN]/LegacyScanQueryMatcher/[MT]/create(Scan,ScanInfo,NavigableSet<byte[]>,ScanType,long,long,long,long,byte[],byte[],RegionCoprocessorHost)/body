{
  int maxVersions=Math.min(scan.getMaxVersions(),scanInfo.getMaxVersions());
  boolean hasNullColumn;
  ColumnTracker columnTracker;
  if (columns == null || columns.size() == 0) {
    hasNullColumn=true;
    columnTracker=new ScanWildcardColumnTracker(scanInfo.getMinVersions(),maxVersions,oldestUnexpiredTS);
  }
 else {
    hasNullColumn=columns.first().length == 0;
    columnTracker=new ExplicitColumnTracker(columns,scanInfo.getMinVersions(),maxVersions,oldestUnexpiredTS);
  }
  DeleteTracker deletes=instantiateDeleteTracker(regionCoprocessorHost);
  if (dropDeletesFromRow == null) {
    return new LegacyScanQueryMatcher(scan,scanInfo,columnTracker,hasNullColumn,deletes,scanType,readPointToUse,earliestPutTs,oldestUnexpiredTS,now);
  }
 else {
    return new LegacyScanQueryMatcher(scan,scanInfo,columnTracker,hasNullColumn,deletes,scanType,readPointToUse,earliestPutTs,oldestUnexpiredTS,now,dropDeletesFromRow,dropDeletesToRow);
  }
}
