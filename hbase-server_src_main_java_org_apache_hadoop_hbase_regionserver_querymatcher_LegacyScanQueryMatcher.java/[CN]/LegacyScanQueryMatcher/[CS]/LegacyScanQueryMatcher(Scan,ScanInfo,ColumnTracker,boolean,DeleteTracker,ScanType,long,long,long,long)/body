{
  super(scan.getStartRow(),scanInfo,columns,oldestUnexpiredTS,now);
  TimeRange timeRange=scan.getColumnFamilyTimeRange().get(scanInfo.getFamily());
  if (timeRange == null) {
    this.tr=scan.getTimeRange();
  }
 else {
    this.tr=timeRange;
  }
  this.hasNullColumn=hasNullColumn;
  this.deletes=deletes;
  this.filter=scan.getFilter();
  this.maxReadPointToTrackVersions=readPointToUse;
  this.timeToPurgeDeletes=scanInfo.getTimeToPurgeDeletes();
  this.earliestPutTs=earliestPutTs;
  this.keepDeletedCells=scanInfo.getKeepDeletedCells();
  this.retainDeletesInOutput=scanType == ScanType.COMPACT_RETAIN_DELETES;
  this.stopRow=scan.getStopRow();
}
