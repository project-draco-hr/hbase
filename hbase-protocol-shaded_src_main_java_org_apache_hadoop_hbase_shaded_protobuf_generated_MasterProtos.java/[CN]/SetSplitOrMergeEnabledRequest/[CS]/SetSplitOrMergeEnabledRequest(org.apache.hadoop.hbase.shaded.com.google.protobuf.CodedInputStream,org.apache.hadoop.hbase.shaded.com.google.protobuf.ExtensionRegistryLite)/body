{
  this();
  int mutable_bitField0_=0;
  org.apache.hadoop.hbase.shaded.com.google.protobuf.UnknownFieldSet.Builder unknownFields=org.apache.hadoop.hbase.shaded.com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000001;
    enabled_=input.readBool();
    break;
  }
case 16:
{
  bitField0_|=0x00000002;
  synchronous_=input.readBool();
  break;
}
case 24:
{
int rawValue=input.readEnum();
org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos.MasterSwitchType value=org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos.MasterSwitchType.valueOf(rawValue);
if (value == null) {
  unknownFields.mergeVarintField(3,rawValue);
}
 else {
  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
    switchTypes_=new java.util.ArrayList<java.lang.Integer>();
    mutable_bitField0_|=0x00000004;
  }
  switchTypes_.add(rawValue);
}
break;
}
case 26:
{
int length=input.readRawVarint32();
int oldLimit=input.pushLimit(length);
while (input.getBytesUntilLimit() > 0) {
int rawValue=input.readEnum();
org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos.MasterSwitchType value=org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos.MasterSwitchType.valueOf(rawValue);
if (value == null) {
  unknownFields.mergeVarintField(3,rawValue);
}
 else {
  if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
    switchTypes_=new java.util.ArrayList<java.lang.Integer>();
    mutable_bitField0_|=0x00000004;
  }
  switchTypes_.add(rawValue);
}
}
input.popLimit(oldLimit);
break;
}
}
}
}
 catch (org.apache.hadoop.hbase.shaded.com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new org.apache.hadoop.hbase.shaded.com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
switchTypes_=java.util.Collections.unmodifiableList(switchTypes_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
