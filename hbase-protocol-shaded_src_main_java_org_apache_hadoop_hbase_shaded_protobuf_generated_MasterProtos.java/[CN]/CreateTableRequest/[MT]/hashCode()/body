{
  if (memoizedHashCode != 0) {
    return memoizedHashCode;
  }
  int hash=41;
  hash=(19 * hash) + getDescriptorForType().hashCode();
  if (hasTableSchema()) {
    hash=(37 * hash) + TABLE_SCHEMA_FIELD_NUMBER;
    hash=(53 * hash) + getTableSchema().hashCode();
  }
  if (getSplitKeysCount() > 0) {
    hash=(37 * hash) + SPLIT_KEYS_FIELD_NUMBER;
    hash=(53 * hash) + getSplitKeysList().hashCode();
  }
  if (hasNonceGroup()) {
    hash=(37 * hash) + NONCE_GROUP_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getNonceGroup());
  }
  if (hasNonce()) {
    hash=(37 * hash) + NONCE_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getNonce());
  }
  hash=(29 * hash) + unknownFields.hashCode();
  memoizedHashCode=hash;
  return hash;
}
