{
  int stackIdSum=0;
  int maxStackId=0;
  for (int i=0; i < rootEntry.proto.getStackIdCount(); ++i) {
    int stackId=1 + rootEntry.proto.getStackId(i);
    maxStackId=Math.max(maxStackId,stackId);
    stackIdSum+=stackId;
  }
  for (Entry p=rootEntry.childHead; p != null; p=p.linkNext) {
    for (int i=0; i < p.proto.getStackIdCount(); ++i) {
      int stackId=1 + p.proto.getStackId(i);
      maxStackId=Math.max(maxStackId,stackId);
      stackIdSum+=stackId;
    }
  }
  final int cmpStackIdSum=(maxStackId * (maxStackId + 1) / 2);
  if (cmpStackIdSum == stackIdSum) {
    rootEntry.ready=true;
    for (Entry p=rootEntry.childHead; p != null; p=p.linkNext) {
      p.ready=true;
    }
    return true;
  }
  return false;
}
