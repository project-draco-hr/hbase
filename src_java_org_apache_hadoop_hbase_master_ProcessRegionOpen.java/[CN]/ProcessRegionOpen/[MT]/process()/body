{
  for (int tries=0; tries < numRetries; tries++) {
    if (master.closed.get()) {
      return true;
    }
    LOG.info(regionInfo.toString() + " open on " + this.serverAddress.toString());
    if (!metaRegionAvailable()) {
      return true;
    }
    HRegionInterface server=getMetaServer();
    LOG.info("updating row " + regionInfo.getRegionName() + " in table "+ metaRegionName+ " with startcode "+ Writables.bytesToLong(this.startCode)+ " and server "+ serverAddress.toString());
    try {
      BatchUpdate b=new BatchUpdate(regionInfo.getRegionName());
      b.put(COL_SERVER,Writables.stringToBytes(serverAddress.toString()));
      b.put(COL_STARTCODE,startCode);
      server.batchUpdate(metaRegionName,b);
      if (isMetaTable) {
        MetaRegion m=new MetaRegion(this.serverAddress,this.regionInfo.getRegionName(),this.regionInfo.getStartKey());
        if (!master.initialMetaScanComplete) {
          try {
            LOG.debug("Adding " + m.toString() + " to regions to scan");
            master.metaRegionsToScan.put(m);
          }
 catch (          InterruptedException e) {
            throw new RuntimeException("Putting into metaRegionsToScan was interrupted.",e);
          }
        }
 else {
          LOG.debug("Adding to onlineMetaRegions: " + m.toString());
          master.onlineMetaRegions.put(this.regionInfo.getStartKey(),m);
        }
      }
      master.pendingRegions.remove(regionInfo.getRegionName());
      break;
    }
 catch (    IOException e) {
      if (tries == numRetries - 1) {
        throw RemoteExceptionHandler.checkIOException(e);
      }
    }
  }
  return true;
}
