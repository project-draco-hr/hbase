{
  byte[] localStartKey;
  int cacheNum=nbRows;
  skipRowOfFirstResult=null;
  if (this.currentRegion != null && currentRegionDone) {
    byte[] endKey=this.currentRegion.getEndKey();
    if (endKey == null || Bytes.equals(endKey,HConstants.EMPTY_BYTE_ARRAY) || checkScanStopRow(endKey) || done) {
      close();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Finished with small scan at " + this.currentRegion);
      }
      return false;
    }
    localStartKey=endKey;
    if (LOG.isDebugEnabled()) {
      LOG.debug("Finished with region " + this.currentRegion);
    }
  }
 else   if (this.lastResult != null) {
    localStartKey=this.lastResult.getRow();
    skipRowOfFirstResult=this.lastResult.getRow();
    cacheNum++;
  }
 else {
    localStartKey=this.scan.getStartRow();
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace("Advancing internal small scanner to startKey at '" + Bytes.toStringBinary(localStartKey) + "'");
  }
  smallScanCallable=getSmallScanCallable(localStartKey,cacheNum);
  if (this.scanMetrics != null && skipRowOfFirstResult == null) {
    this.scanMetrics.countOfRegions.incrementAndGet();
  }
  return true;
}
