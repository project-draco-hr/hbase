{
  BlockCacheStub blockCache=new BlockCacheStub((long)(maxHeapSize * 0.4));
  MemstoreFlusherStub memStoreFlusher=new MemstoreFlusherStub((long)(maxHeapSize * 0.4));
  Configuration conf=HBaseConfiguration.create();
  conf.setFloat(HeapMemoryManager.MEMSTORE_SIZE_MAX_RANGE_KEY,0.7f);
  conf.setFloat(HeapMemoryManager.MEMSTORE_SIZE_MIN_RANGE_KEY,0.1f);
  conf.setFloat(HeapMemoryManager.BLOCK_CACHE_SIZE_MAX_RANGE_KEY,0.7f);
  conf.setFloat(HeapMemoryManager.BLOCK_CACHE_SIZE_MIN_RANGE_KEY,0.1f);
  conf.setLong(HeapMemoryManager.HBASE_RS_HEAP_MEMORY_TUNER_PERIOD,1000);
  conf.setClass(HeapMemoryManager.HBASE_RS_HEAP_MEMORY_TUNER_CLASS,CustomHeapMemoryTuner.class,HeapMemoryTuner.class);
  HeapMemoryManager heapMemoryManager=new HeapMemoryManager(blockCache,memStoreFlusher,new RegionServerStub(conf));
  long oldMemstoreSize=memStoreFlusher.memstoreSize;
  long oldBlockCacheSize=blockCache.maxSize;
  final ChoreService choreService=new ChoreService("TEST_SERVER_NAME");
  heapMemoryManager.start(choreService);
  CustomHeapMemoryTuner.memstoreSize=0.7f;
  CustomHeapMemoryTuner.blockCacheSize=0.3f;
  Thread.sleep(1500);
  assertEquals(oldMemstoreSize,memStoreFlusher.memstoreSize);
  assertEquals(oldBlockCacheSize,blockCache.maxSize);
}
