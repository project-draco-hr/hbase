{
  BlockCacheStub blockCache=new BlockCacheStub((long)(maxHeapSize * 0.4));
  MemstoreFlusherStub memStoreFlusher=new MemstoreFlusherStub((long)(maxHeapSize * 0.4));
  Configuration conf=HBaseConfiguration.create();
  conf.setFloat(HeapMemoryManager.MEMSTORE_SIZE_MAX_RANGE_KEY,0.78f);
  conf.setFloat(HeapMemoryManager.MEMSTORE_SIZE_MIN_RANGE_KEY,0.05f);
  conf.setFloat(HeapMemoryManager.BLOCK_CACHE_SIZE_MAX_RANGE_KEY,0.75f);
  conf.setFloat(HeapMemoryManager.BLOCK_CACHE_SIZE_MIN_RANGE_KEY,0.02f);
  conf.setLong(HeapMemoryManager.HBASE_RS_HEAP_MEMORY_TUNER_PERIOD,1000);
  conf.setClass(HeapMemoryManager.HBASE_RS_HEAP_MEMORY_TUNER_CLASS,CustomHeapMemoryTuner.class,HeapMemoryTuner.class);
  HeapMemoryManager heapMemoryManager=new HeapMemoryManager(blockCache,memStoreFlusher,new RegionServerStub(conf));
  heapMemoryManager.start();
  CustomHeapMemoryTuner.memstoreSize=0.78f;
  CustomHeapMemoryTuner.blockCacheSize=0.02f;
  Thread.sleep(1500);
  assertHeapSpace(0.78f,memStoreFlusher.memstoreSize);
  assertHeapSpace(0.02f,blockCache.maxSize);
  CustomHeapMemoryTuner.blockCacheSize=0.75f;
  CustomHeapMemoryTuner.memstoreSize=0.05f;
  Thread.sleep(1500);
  assertHeapSpace(0.75f,blockCache.maxSize);
  assertHeapSpace(0.05f,memStoreFlusher.memstoreSize);
}
