{
  BlockCacheStub blockCache=new BlockCacheStub((long)(maxHeapSize * 0.4));
  MemstoreFlusherStub memStoreFlusher=new MemstoreFlusherStub((long)(maxHeapSize * 0.4));
  RegionServerAccountingStub regionServerAccounting=new RegionServerAccountingStub();
  blockCache.setTestBlockSize((long)(maxHeapSize * 0.4 * 0.8));
  regionServerAccounting.setTestMemstoreSize(0);
  Configuration conf=HBaseConfiguration.create();
  conf.setFloat(HeapMemorySizeUtil.MEMSTORE_SIZE_LOWER_LIMIT_KEY,0.7f);
  conf.setFloat(HeapMemoryManager.MEMSTORE_SIZE_MAX_RANGE_KEY,0.75f);
  conf.setFloat(HeapMemoryManager.MEMSTORE_SIZE_MIN_RANGE_KEY,0.10f);
  conf.setFloat(HeapMemoryManager.BLOCK_CACHE_SIZE_MAX_RANGE_KEY,0.7f);
  conf.setFloat(HeapMemoryManager.BLOCK_CACHE_SIZE_MIN_RANGE_KEY,0.05f);
  conf.setLong(HeapMemoryManager.HBASE_RS_HEAP_MEMORY_TUNER_PERIOD,1000);
  conf.setInt(DefaultHeapMemoryTuner.NUM_PERIODS_TO_IGNORE,0);
  HeapMemoryManager heapMemoryManager=new HeapMemoryManager(blockCache,memStoreFlusher,new RegionServerStub(conf),new RegionServerAccountingStub());
  long oldMemstoreHeapSize=memStoreFlusher.memstoreSize;
  long oldBlockCacheSize=blockCache.maxSize;
  long oldMemstoreLowerMarkSize=7 * oldMemstoreHeapSize / 10;
  long maxTuneSize=oldMemstoreHeapSize - (oldMemstoreLowerMarkSize + oldMemstoreHeapSize) / 2;
  float maxStepValue=(maxTuneSize * 1.0f) / oldMemstoreHeapSize;
  maxStepValue=maxStepValue > DefaultHeapMemoryTuner.DEFAULT_MAX_STEP_VALUE ? DefaultHeapMemoryTuner.DEFAULT_MAX_STEP_VALUE : maxStepValue;
  final ChoreService choreService=new ChoreService("TEST_SERVER_NAME");
  heapMemoryManager.start(choreService);
  blockCache.evictBlock(null);
  blockCache.evictBlock(null);
  blockCache.evictBlock(null);
  waitForTune(memStoreFlusher,memStoreFlusher.memstoreSize);
  assertHeapSpaceDelta(-maxStepValue,oldMemstoreHeapSize,memStoreFlusher.memstoreSize);
  assertHeapSpaceDelta(maxStepValue,oldBlockCacheSize,blockCache.maxSize);
  oldMemstoreHeapSize=memStoreFlusher.memstoreSize;
  oldBlockCacheSize=blockCache.maxSize;
  oldMemstoreLowerMarkSize=7 * oldMemstoreHeapSize / 10;
  maxTuneSize=oldMemstoreHeapSize - (oldMemstoreLowerMarkSize + oldMemstoreHeapSize) / 2;
  maxStepValue=(maxTuneSize * 1.0f) / oldMemstoreHeapSize;
  maxStepValue=maxStepValue > DefaultHeapMemoryTuner.DEFAULT_MAX_STEP_VALUE ? DefaultHeapMemoryTuner.DEFAULT_MAX_STEP_VALUE : maxStepValue;
  blockCache.evictBlock(null);
  waitForTune(memStoreFlusher,memStoreFlusher.memstoreSize);
  assertHeapSpaceDelta(-maxStepValue,oldMemstoreHeapSize,memStoreFlusher.memstoreSize);
  assertHeapSpaceDelta(maxStepValue,oldBlockCacheSize,blockCache.maxSize);
}
