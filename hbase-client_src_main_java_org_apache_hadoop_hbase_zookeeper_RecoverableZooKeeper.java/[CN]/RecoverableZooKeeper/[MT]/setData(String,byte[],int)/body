{
  TraceScope traceScope=null;
  try {
    traceScope=Trace.startSpan("RecoverableZookeeper.setData");
    RetryCounter retryCounter=retryCounterFactory.create();
    byte[] newData=appendMetaData(data);
    boolean isRetry=false;
    while (true) {
      try {
        return checkZk().setData(path,newData,version);
      }
 catch (      KeeperException e) {
switch (e.code()) {
case CONNECTIONLOSS:
case SESSIONEXPIRED:
case OPERATIONTIMEOUT:
          retryOrThrow(retryCounter,e,"setData");
        break;
case BADVERSION:
      if (isRetry) {
        try {
          Stat stat=new Stat();
          byte[] revData=checkZk().getData(path,false,stat);
          if (Bytes.compareTo(revData,newData) == 0) {
            return stat;
          }
        }
 catch (        KeeperException keeperException) {
          throw keeperException;
        }
      }
default :
    throw e;
}
}
retryCounter.sleepUntilNextRetry();
isRetry=true;
}
}
  finally {
if (traceScope != null) traceScope.close();
}
}
