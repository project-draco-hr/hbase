{
  TraceScope traceScope=null;
  try {
    traceScope=Trace.startSpan("RecoverableZookeeper.delete");
    RetryCounter retryCounter=retryCounterFactory.create();
    boolean isRetry=false;
    while (true) {
      try {
        checkZk().delete(path,version);
        return;
      }
 catch (      KeeperException e) {
switch (e.code()) {
case NONODE:
          if (isRetry) {
            LOG.debug("Node " + path + " already deleted. Assuming a "+ "previous attempt succeeded.");
            return;
          }
        LOG.debug("Node " + path + " already deleted, retry="+ isRetry);
      throw e;
case CONNECTIONLOSS:
case OPERATIONTIMEOUT:
    retryOrThrow(retryCounter,e,"delete");
  break;
default :
throw e;
}
}
retryCounter.sleepUntilNextRetry();
isRetry=true;
}
}
  finally {
if (traceScope != null) traceScope.close();
}
}
