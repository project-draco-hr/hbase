{
  RetryCounter retryCounter=retryCounterFactory.create();
  boolean isRetry=false;
  while (true) {
    try {
      zk.delete(path,version);
      return;
    }
 catch (    KeeperException e) {
switch (e.code()) {
case NONODE:
        if (isRetry) {
          LOG.info("Node " + path + " already deleted. Assuming a "+ "previous attempt succeeded.");
          return;
        }
      LOG.warn("Node " + path + " already deleted, retry="+ isRetry);
    throw e;
case CONNECTIONLOSS:
case SESSIONEXPIRED:
case OPERATIONTIMEOUT:
  retryOrThrow(retryCounter,e,"delete");
break;
default :
throw e;
}
}
retryCounter.sleepUntilNextRetry();
retryCounter.useRetry();
isRetry=true;
}
}
