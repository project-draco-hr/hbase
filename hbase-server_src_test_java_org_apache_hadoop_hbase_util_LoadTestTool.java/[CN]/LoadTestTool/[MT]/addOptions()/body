{
  addOptWithArg(OPT_ZK_QUORUM,"ZK quorum as comma-separated host names " + "without port numbers");
  addOptWithArg(OPT_TABLE_NAME,"The name of the table to read or write");
  addOptWithArg(OPT_WRITE,OPT_USAGE_LOAD);
  addOptWithArg(OPT_READ,OPT_USAGE_READ);
  addOptNoArg(OPT_INIT_ONLY,"Initialize the test table only, don't do any loading");
  addOptWithArg(OPT_BLOOM,OPT_USAGE_BLOOM);
  addOptWithArg(OPT_COMPRESSION,OPT_USAGE_COMPRESSION);
  addOptWithArg(OPT_DATA_BLOCK_ENCODING,OPT_DATA_BLOCK_ENCODING_USAGE);
  addOptWithArg(OPT_MAX_READ_ERRORS,"The maximum number of read errors " + "to tolerate before terminating all reader threads. The default is " + MultiThreadedReader.DEFAULT_MAX_ERRORS + ".");
  addOptWithArg(OPT_KEY_WINDOW,"The 'key window' to maintain between " + "reads and writes for concurrent write/read workload. The default " + "is " + MultiThreadedReader.DEFAULT_KEY_WINDOW + ".");
  addOptNoArg(OPT_MULTIPUT,"Whether to use multi-puts as opposed to " + "separate puts for every column in a row");
  addOptNoArg(OPT_ENCODE_IN_CACHE_ONLY,OPT_ENCODE_IN_CACHE_ONLY_USAGE);
  addOptNoArg(OPT_INMEMORY,OPT_USAGE_IN_MEMORY);
  addOptWithArg(OPT_NUM_KEYS,"The number of keys to read/write");
  addOptWithArg(OPT_START_KEY,"The first key to read/write " + "(a 0-based index). The default value is " + DEFAULT_START_KEY + ".");
  addOptNoArg(OPT_SKIP_INIT,"Skip the initialization; assume test table " + "already exists");
  addOptWithArg(NUM_TABLES,"A positive integer number. When a number n is speicfied, load test " + "tool  will load n table parallely. -tn parameter value becomes " + "table name prefix. Each table name is in format <tn>_1...<tn>_n");
}
