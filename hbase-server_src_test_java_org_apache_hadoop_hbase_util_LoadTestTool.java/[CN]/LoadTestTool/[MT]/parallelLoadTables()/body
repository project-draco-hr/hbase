{
  String tableName=cmd.getOptionValue(OPT_TABLE_NAME,DEFAULT_TABLE_NAME);
  String[] newArgs=null;
  if (!cmd.hasOption(LoadTestTool.OPT_TABLE_NAME)) {
    newArgs=new String[cmdLineArgs.length + 2];
    newArgs[0]="-" + LoadTestTool.OPT_TABLE_NAME;
    newArgs[1]=LoadTestTool.DEFAULT_TABLE_NAME;
    System.arraycopy(cmdLineArgs,0,newArgs,2,cmdLineArgs.length);
  }
 else {
    newArgs=cmdLineArgs;
  }
  int tableNameValueIndex=-1;
  for (int j=0; j < newArgs.length; j++) {
    if (newArgs[j].endsWith(OPT_TABLE_NAME)) {
      tableNameValueIndex=j + 1;
    }
 else     if (newArgs[j].endsWith(NUM_TABLES)) {
      newArgs[j + 1]="1";
    }
  }
  List<WorkerThread> workers=new ArrayList<WorkerThread>();
  for (int i=0; i < numTables; i++) {
    String[] workerArgs=newArgs.clone();
    workerArgs[tableNameValueIndex]=tableName + "_" + (i + 1);
    WorkerThread worker=new WorkerThread(i,workerArgs);
    workers.add(worker);
    LOG.info(worker + " starting");
    worker.start();
  }
  LOG.info("Waiting for worker threads to finish");
  for (  WorkerThread t : workers) {
    try {
      t.join();
    }
 catch (    InterruptedException ie) {
      IOException iie=new InterruptedIOException();
      iie.initCause(ie);
      throw iie;
    }
    checkForErrors();
  }
  return EXIT_SUCCESS;
}
