{
  this.cmd=cmd;
  tableName=Bytes.toBytes(cmd.getOptionValue(OPT_TABLE_NAME,DEFAULT_TABLE_NAME));
  isWrite=cmd.hasOption(OPT_WRITE);
  isRead=cmd.hasOption(OPT_READ);
  isInitOnly=cmd.hasOption(OPT_INIT_ONLY);
  if (!isWrite && !isRead && !isInitOnly) {
    throw new IllegalArgumentException("Either -" + OPT_WRITE + " or "+ "-"+ OPT_READ+ " has to be specified");
  }
  if (isInitOnly && (isRead || isWrite)) {
    throw new IllegalArgumentException(OPT_INIT_ONLY + " cannot be specified with" + " either -"+ OPT_WRITE+ " or -"+ OPT_READ);
  }
  if (!isInitOnly) {
    if (!cmd.hasOption(OPT_NUM_KEYS)) {
      throw new IllegalArgumentException(OPT_NUM_KEYS + " must be specified in " + "read or write mode");
    }
    startKey=parseLong(cmd.getOptionValue(OPT_START_KEY,String.valueOf(DEFAULT_START_KEY)),0,Long.MAX_VALUE);
    long numKeys=parseLong(cmd.getOptionValue(OPT_NUM_KEYS),1,Long.MAX_VALUE - startKey);
    endKey=startKey + numKeys;
    isSkipInit=cmd.hasOption(OPT_SKIP_INIT);
    System.out.println("Key range: [" + startKey + ".."+ (endKey - 1)+ "]");
  }
  encodeInCacheOnly=cmd.hasOption(OPT_ENCODE_IN_CACHE_ONLY);
  parseColumnFamilyOptions(cmd);
  if (isWrite) {
    String[] writeOpts=splitColonSeparated(OPT_WRITE,2,3);
    int colIndex=0;
    minColsPerKey=1;
    maxColsPerKey=2 * Integer.parseInt(writeOpts[colIndex++]);
    int avgColDataSize=parseInt(writeOpts[colIndex++],1,Integer.MAX_VALUE);
    minColDataSize=avgColDataSize / 2;
    maxColDataSize=avgColDataSize * 3 / 2;
    if (colIndex < writeOpts.length) {
      numWriterThreads=getNumThreads(writeOpts[colIndex++]);
    }
    isMultiPut=cmd.hasOption(OPT_MULTIPUT);
    System.out.println("Multi-puts: " + isMultiPut);
    System.out.println("Columns per key: " + minColsPerKey + ".."+ maxColsPerKey);
    System.out.println("Data size per column: " + minColDataSize + ".."+ maxColDataSize);
  }
  if (isRead) {
    String[] readOpts=splitColonSeparated(OPT_READ,1,2);
    int colIndex=0;
    verifyPercent=parseInt(readOpts[colIndex++],0,100);
    if (colIndex < readOpts.length) {
      numReaderThreads=getNumThreads(readOpts[colIndex++]);
    }
    if (cmd.hasOption(OPT_MAX_READ_ERRORS)) {
      maxReadErrors=parseInt(cmd.getOptionValue(OPT_MAX_READ_ERRORS),0,Integer.MAX_VALUE);
    }
    if (cmd.hasOption(OPT_KEY_WINDOW)) {
      keyWindow=parseInt(cmd.getOptionValue(OPT_KEY_WINDOW),0,Integer.MAX_VALUE);
    }
    System.out.println("Percent of keys to verify: " + verifyPercent);
    System.out.println("Reader threads: " + numReaderThreads);
  }
}
