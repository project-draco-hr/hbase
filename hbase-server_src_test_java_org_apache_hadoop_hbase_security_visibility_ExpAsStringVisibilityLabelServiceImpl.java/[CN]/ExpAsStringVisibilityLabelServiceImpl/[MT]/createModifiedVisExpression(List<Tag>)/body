{
  StringBuilder visibilityString=new StringBuilder();
  for (  Tag tag : tags) {
    if (tag.getType() == TagType.VISIBILITY_TAG_TYPE) {
      if (visibilityString.length() != 0) {
        visibilityString.append(VisibilityConstants.CLOSED_PARAN + VisibilityConstants.OR_OPERATOR);
      }
      int offset=tag.getValueOffset();
      int endOffset=offset + tag.getValueLength();
      boolean expressionStart=true;
      while (offset < endOffset) {
        short len=getTagValuePartAsShort(tag,offset);
        offset+=2;
        if (len < 0) {
          len=(short)(-1 * len);
          String label=getTagValuePartAsString(tag,offset,len);
          if (expressionStart) {
            visibilityString.append(VisibilityConstants.OPEN_PARAN + VisibilityConstants.NOT_OPERATOR + CellVisibility.quote(label));
          }
 else {
            visibilityString.append(VisibilityConstants.AND_OPERATOR + VisibilityConstants.NOT_OPERATOR + CellVisibility.quote(label));
          }
        }
 else {
          String label=getTagValuePartAsString(tag,offset,len);
          if (expressionStart) {
            visibilityString.append(VisibilityConstants.OPEN_PARAN + CellVisibility.quote(label));
          }
 else {
            visibilityString.append(VisibilityConstants.AND_OPERATOR + CellVisibility.quote(label));
          }
        }
        expressionStart=false;
        offset+=len;
      }
    }
  }
  if (visibilityString.length() != 0) {
    visibilityString.append(VisibilityConstants.CLOSED_PARAN);
    return Bytes.toBytes(visibilityString.toString());
  }
  return null;
}
