{
  List<RegionServerThread> regionServerThreads=TEST_UTIL.getHBaseCluster().getRegionServerThreads();
  int liveRS=0;
  for (  RegionServerThread rsThreads : regionServerThreads) {
    if (!rsThreads.getRegionServer().isAborted()) {
      liveRS++;
    }
  }
  if (liveRS == 1) {
    TEST_UTIL.getHBaseCluster().startRegionServer();
  }
  Thread t1=new Thread(){
    public void run(){
      List<RegionServerThread> regionServerThreads=TEST_UTIL.getHBaseCluster().getRegionServerThreads();
      for (      RegionServerThread rsThread : regionServerThreads) {
        List<HRegion> onlineRegions=rsThread.getRegionServer().getOnlineRegions(LABELS_TABLE_NAME);
        if (onlineRegions.size() > 0) {
          rsThread.getRegionServer().abort("Aborting ");
          killedRS=true;
          break;
        }
      }
    }
  }
;
  t1.start();
  final TableName tableName=TableName.valueOf(TEST_NAME.getMethodName());
  Thread t=new Thread(){
    public void run(){
      try {
        while (!killedRS) {
          Thread.sleep(1);
        }
        createTableAndWriteDataWithLabels(tableName,"(" + SECRET + "|"+ CONFIDENTIAL+ ")",PRIVATE);
      }
 catch (      Exception e) {
      }
    }
  }
;
  t.start();
  regionServerThreads=TEST_UTIL.getHBaseCluster().getRegionServerThreads();
  while (!killedRS) {
    Thread.sleep(10);
  }
  regionServerThreads=TEST_UTIL.getHBaseCluster().getRegionServerThreads();
  for (  RegionServerThread rsThread : regionServerThreads) {
    while (true) {
      if (!rsThread.getRegionServer().isAborted()) {
        List<HRegion> onlineRegions=rsThread.getRegionServer().getOnlineRegions(LABELS_TABLE_NAME);
        if (onlineRegions.size() > 0) {
          break;
        }
 else {
          Thread.sleep(10);
        }
      }
 else {
        break;
      }
    }
  }
  TEST_UTIL.waitTableEnabled(LABELS_TABLE_NAME.getName(),50000);
  t.join();
  HTable table=null;
  try {
    table=new HTable(TEST_UTIL.getConfiguration(),tableName);
    Scan s=new Scan();
    s.setAuthorizations(new Authorizations(SECRET));
    ResultScanner scanner=table.getScanner(s);
    Result[] next=scanner.next(3);
    assertTrue(next.length == 1);
  }
  finally {
    if (table != null) {
      table.close();
    }
  }
}
