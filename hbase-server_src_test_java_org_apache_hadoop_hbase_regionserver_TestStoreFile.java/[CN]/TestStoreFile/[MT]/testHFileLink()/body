{
  final HRegionInfo hri=new HRegionInfo(TableName.valueOf("testHFileLinkTb"));
  Configuration testConf=new Configuration(this.conf);
  FSUtils.setRootDir(testConf,this.testDir);
  HRegionFileSystem regionFs=HRegionFileSystem.createRegionOnFileSystem(testConf,fs,FSUtils.getTableDir(this.testDir,hri.getTableName()),hri);
  StoreFile.Writer writer=new StoreFile.WriterBuilder(testConf,cacheConf,this.fs,8 * 1024).withFilePath(regionFs.createTempName()).build();
  writeStoreFile(writer);
  Path storeFilePath=regionFs.commitStoreFile(TEST_FAMILY,writer.getPath());
  Path dstPath=new Path(regionFs.getTableDir(),new Path("test-region",TEST_FAMILY));
  HFileLink.create(testConf,this.fs,dstPath,hri,storeFilePath.getName());
  Path linkFilePath=new Path(dstPath,HFileLink.createHFileLinkName(hri,storeFilePath.getName()));
  StoreFileInfo storeFileInfo=new StoreFileInfo(testConf,this.fs,linkFilePath);
  StoreFile hsf=new StoreFile(this.fs,storeFileInfo,testConf,cacheConf,BloomType.NONE,NoOpDataBlockEncoder.INSTANCE);
  assertTrue(storeFileInfo.isLink());
  int count=1;
  HFileScanner s=hsf.createReader().getScanner(false,false);
  s.seekTo();
  while (s.next()) {
    count++;
  }
  assertEquals((LAST_CHAR - FIRST_CHAR + 1) * (LAST_CHAR - FIRST_CHAR + 1),count);
}
