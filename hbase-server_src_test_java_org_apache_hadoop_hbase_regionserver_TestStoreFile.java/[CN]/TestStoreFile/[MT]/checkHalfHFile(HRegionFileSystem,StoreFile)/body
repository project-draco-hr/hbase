{
  Cell midkey=f.createReader().midkey();
  KeyValue midKV=(KeyValue)midkey;
  byte[] midRow=midKV.getRow();
  HRegionInfo topHri=new HRegionInfo(regionFs.getRegionInfo().getTable(),null,midRow);
  Path topPath=splitStoreFile(regionFs,topHri,TEST_FAMILY,f,midRow,true);
  HRegionInfo bottomHri=new HRegionInfo(regionFs.getRegionInfo().getTable(),midRow,null);
  Path bottomPath=splitStoreFile(regionFs,bottomHri,TEST_FAMILY,f,midRow,false);
  StoreFile.Reader top=new StoreFile(this.fs,topPath,conf,cacheConf,BloomType.NONE).createReader();
  StoreFile.Reader bottom=new StoreFile(this.fs,bottomPath,conf,cacheConf,BloomType.NONE).createReader();
  ByteBuffer previous=null;
  LOG.info("Midkey: " + midKV.toString());
  ByteBuffer bbMidkeyBytes=ByteBuffer.wrap(midKV.getKey());
  try {
    boolean first=true;
    ByteBuffer key=null;
    HFileScanner topScanner=top.getScanner(false,false);
    while ((!topScanner.isSeeked() && topScanner.seekTo()) || (topScanner.isSeeked() && topScanner.next())) {
      key=ByteBuffer.wrap(((KeyValue)topScanner.getKey()).getKey());
      if ((topScanner.getReader().getComparator().compare(midKV,key.array(),key.arrayOffset(),key.limit())) > 0) {
        fail("key=" + Bytes.toStringBinary(key) + " < midkey="+ midkey);
      }
      if (first) {
        first=false;
        LOG.info("First in top: " + Bytes.toString(Bytes.toBytes(key)));
      }
    }
    LOG.info("Last in top: " + Bytes.toString(Bytes.toBytes(key)));
    first=true;
    HFileScanner bottomScanner=bottom.getScanner(false,false);
    while ((!bottomScanner.isSeeked() && bottomScanner.seekTo()) || bottomScanner.next()) {
      previous=ByteBuffer.wrap(((KeyValue)bottomScanner.getKey()).getKey());
      key=ByteBuffer.wrap(((KeyValue)bottomScanner.getKey()).getKey());
      if (first) {
        first=false;
        LOG.info("First in bottom: " + Bytes.toString(Bytes.toBytes(previous)));
      }
      assertTrue(key.compareTo(bbMidkeyBytes) < 0);
    }
    if (previous != null) {
      LOG.info("Last in bottom: " + Bytes.toString(Bytes.toBytes(previous)));
    }
    regionFs.cleanupDaughterRegion(topHri);
    regionFs.cleanupDaughterRegion(bottomHri);
    byte[] badmidkey=Bytes.toBytes("  .");
    assertTrue(fs.exists(f.getPath()));
    topPath=splitStoreFile(regionFs,topHri,TEST_FAMILY,f,badmidkey,true);
    bottomPath=splitStoreFile(regionFs,bottomHri,TEST_FAMILY,f,badmidkey,false);
    assertNull(bottomPath);
    top=new StoreFile(this.fs,topPath,conf,cacheConf,BloomType.NONE).createReader();
    first=true;
    topScanner=top.getScanner(false,false);
    KeyValue.KeyOnlyKeyValue keyOnlyKV=new KeyValue.KeyOnlyKeyValue();
    while ((!topScanner.isSeeked() && topScanner.seekTo()) || topScanner.next()) {
      key=ByteBuffer.wrap(((KeyValue)topScanner.getKey()).getKey());
      keyOnlyKV.setKey(key.array(),0 + key.arrayOffset(),key.limit());
      assertTrue(topScanner.getReader().getComparator().compare(keyOnlyKV,badmidkey,0,badmidkey.length) >= 0);
      if (first) {
        first=false;
        KeyValue keyKV=KeyValueUtil.createKeyValueFromKey(key);
        LOG.info("First top when key < bottom: " + keyKV);
        String tmp=Bytes.toString(keyKV.getRow());
        for (int i=0; i < tmp.length(); i++) {
          assertTrue(tmp.charAt(i) == 'a');
        }
      }
    }
    KeyValue keyKV=KeyValueUtil.createKeyValueFromKey(key);
    LOG.info("Last top when key < bottom: " + keyKV);
    String tmp=Bytes.toString(keyKV.getRow());
    for (int i=0; i < tmp.length(); i++) {
      assertTrue(tmp.charAt(i) == 'z');
    }
    regionFs.cleanupDaughterRegion(topHri);
    regionFs.cleanupDaughterRegion(bottomHri);
    badmidkey=Bytes.toBytes("|||");
    topPath=splitStoreFile(regionFs,topHri,TEST_FAMILY,f,badmidkey,true);
    bottomPath=splitStoreFile(regionFs,bottomHri,TEST_FAMILY,f,badmidkey,false);
    assertNull(topPath);
    bottom=new StoreFile(this.fs,bottomPath,conf,cacheConf,BloomType.NONE).createReader();
    first=true;
    bottomScanner=bottom.getScanner(false,false);
    while ((!bottomScanner.isSeeked() && bottomScanner.seekTo()) || bottomScanner.next()) {
      key=ByteBuffer.wrap(((KeyValue)bottomScanner.getKey()).getKey());
      if (first) {
        first=false;
        keyKV=KeyValueUtil.createKeyValueFromKey(key);
        LOG.info("First bottom when key > top: " + keyKV);
        tmp=Bytes.toString(keyKV.getRow());
        for (int i=0; i < tmp.length(); i++) {
          assertTrue(tmp.charAt(i) == 'a');
        }
      }
    }
    keyKV=KeyValueUtil.createKeyValueFromKey(key);
    LOG.info("Last bottom when key > top: " + keyKV);
    for (int i=0; i < tmp.length(); i++) {
      assertTrue(Bytes.toString(keyKV.getRow()).charAt(i) == 'z');
    }
  }
  finally {
    if (top != null) {
      top.close(true);
    }
    if (bottom != null) {
      bottom.close(true);
    }
    fs.delete(f.getPath(),true);
  }
}
