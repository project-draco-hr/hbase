{
  Configuration testConf=new Configuration(this.conf);
  FSUtils.setRootDir(testConf,this.testDir);
  HRegionInfo hri=new HRegionInfo(Bytes.toBytes("_original-evil-name"));
  HRegionFileSystem regionFs=HRegionFileSystem.createRegionOnFileSystem(testConf,fs,new Path(this.testDir,hri.getTableNameAsString()),hri);
  StoreFile.Writer writer=new StoreFile.WriterBuilder(testConf,cacheConf,this.fs,8 * 1024).withFilePath(regionFs.createTempName()).build();
  writeStoreFile(writer);
  Path storeFilePath=regionFs.commitStoreFile(TEST_FAMILY,writer.getPath());
  HRegionInfo hriClone=new HRegionInfo(Bytes.toBytes("clone"));
  HRegionFileSystem cloneRegionFs=HRegionFileSystem.createRegionOnFileSystem(testConf,fs,new Path(this.testDir,hri.getTableNameAsString()),hriClone);
  Path dstPath=cloneRegionFs.getStoreDir(TEST_FAMILY);
  HFileLink.create(testConf,this.fs,dstPath,hri,storeFilePath.getName());
  Path linkFilePath=new Path(dstPath,HFileLink.createHFileLinkName(hri,storeFilePath.getName()));
  HRegionInfo splitHriA=new HRegionInfo(hri.getTableName(),null,SPLITKEY);
  HRegionInfo splitHriB=new HRegionInfo(hri.getTableName(),SPLITKEY,null);
  StoreFile f=new StoreFile(fs,linkFilePath,testConf,cacheConf,BloomType.NONE,NoOpDataBlockEncoder.INSTANCE);
  Path pathA=splitStoreFile(cloneRegionFs,splitHriA,TEST_FAMILY,f,SPLITKEY,true);
  Path pathB=splitStoreFile(cloneRegionFs,splitHriB,TEST_FAMILY,f,SPLITKEY,false);
  FSUtils.logFileSystemState(fs,this.testDir,LOG);
  StoreFile hsfA=new StoreFile(this.fs,pathA,testConf,cacheConf,BloomType.NONE,NoOpDataBlockEncoder.INSTANCE);
  int count=1;
  HFileScanner s=hsfA.createReader().getScanner(false,false);
  s.seekTo();
  while (s.next()) {
    count++;
  }
  assertTrue(count > 0);
  StoreFile hsfB=new StoreFile(this.fs,pathB,testConf,cacheConf,BloomType.NONE,NoOpDataBlockEncoder.INSTANCE);
  HFileScanner sB=hsfB.createReader().getScanner(false,false);
  sB.seekTo();
  count++;
  while (sB.next()) {
    count++;
  }
  assertEquals((LAST_CHAR - FIRST_CHAR + 1) * (LAST_CHAR - FIRST_CHAR + 1),count);
}
