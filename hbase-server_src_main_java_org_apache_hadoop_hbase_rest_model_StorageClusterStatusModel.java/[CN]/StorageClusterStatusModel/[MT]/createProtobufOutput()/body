{
  StorageClusterStatus.Builder builder=StorageClusterStatus.newBuilder();
  builder.setRegions(regions);
  builder.setRequests(requests);
  builder.setAverageLoad(averageLoad);
  for (  Node node : liveNodes) {
    StorageClusterStatus.Node.Builder nodeBuilder=StorageClusterStatus.Node.newBuilder();
    nodeBuilder.setName(node.name);
    nodeBuilder.setStartCode(node.startCode);
    nodeBuilder.setRequests(node.requests);
    nodeBuilder.setHeapSizeMB(node.heapSizeMB);
    nodeBuilder.setMaxHeapSizeMB(node.maxHeapSizeMB);
    for (    Node.Region region : node.regions) {
      StorageClusterStatus.Region.Builder regionBuilder=StorageClusterStatus.Region.newBuilder();
      regionBuilder.setName(HBaseZeroCopyByteString.wrap(region.name));
      regionBuilder.setStores(region.stores);
      regionBuilder.setStorefiles(region.storefiles);
      regionBuilder.setStorefileSizeMB(region.storefileSizeMB);
      regionBuilder.setMemstoreSizeMB(region.memstoreSizeMB);
      regionBuilder.setStorefileIndexSizeMB(region.storefileIndexSizeMB);
      regionBuilder.setReadRequestsCount(region.readRequestsCount);
      regionBuilder.setWriteRequestsCount(region.writeRequestsCount);
      regionBuilder.setRootIndexSizeKB(region.rootIndexSizeKB);
      regionBuilder.setTotalStaticIndexSizeKB(region.totalStaticIndexSizeKB);
      regionBuilder.setTotalStaticBloomSizeKB(region.totalStaticBloomSizeKB);
      regionBuilder.setTotalCompactingKVs(region.totalCompactingKVs);
      regionBuilder.setCurrentCompactedKVs(region.currentCompactedKVs);
      nodeBuilder.addRegions(regionBuilder);
    }
    builder.addLiveNodes(nodeBuilder);
  }
  for (  String node : deadNodes) {
    builder.addDeadNodes(node);
  }
  return builder.build().toByteArray();
}
