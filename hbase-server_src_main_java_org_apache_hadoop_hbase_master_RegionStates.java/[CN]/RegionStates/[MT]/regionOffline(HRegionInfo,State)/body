{
  Preconditions.checkArgument(expectedState == null || RegionState.isUnassignable(expectedState),"Offlined region should not be " + expectedState);
  if (isRegionInState(hri,State.SPLITTING_NEW,State.MERGING_NEW)) {
    deleteRegion(hri);
    return;
  }
  State newState=expectedState == null ? State.OFFLINE : expectedState;
  updateRegionState(hri,newState);
synchronized (this) {
    regionsInTransition.remove(hri.getEncodedName());
    ServerName oldServerName=regionAssignments.remove(hri);
    if (oldServerName != null && serverHoldings.containsKey(oldServerName) && (newState == State.MERGED || newState == State.SPLIT || tableStateManager.isTableState(hri.getTable(),ZooKeeperProtos.Table.State.DISABLED,ZooKeeperProtos.Table.State.DISABLING))) {
      LOG.info("Offlined " + hri.getShortNameToLog() + " from "+ oldServerName);
      removeFromServerHoldings(oldServerName,hri);
      removeFromReplicaMapping(hri);
    }
  }
}
