{
  ServerName newServerName=serverName;
  if (serverName != null && (state == State.CLOSED || state == State.OFFLINE)) {
    LOG.warn("Closed region " + hri.getShortNameToLog() + " still on "+ serverName+ "? Ignored, reset it to null");
    newServerName=null;
  }
  if (state == State.FAILED_CLOSE || state == State.FAILED_OPEN) {
    LOG.warn("Failed to transition " + hri.getShortNameToLog() + " on "+ serverName+ ": "+ state);
  }
  String regionName=hri.getEncodedName();
  RegionState regionState=new RegionState(hri,state,System.currentTimeMillis(),newServerName);
  RegionState oldState=regionStates.put(regionName,regionState);
  if (oldState == null || oldState.getState() != regionState.getState()) {
    LOG.info("Region transitioned from " + oldState + " to "+ regionState);
  }
  if (state != State.SPLITTING && (newServerName != null || (state != State.PENDING_CLOSE && state != State.CLOSING))) {
    regionsInTransition.put(regionName,regionState);
  }
  this.notifyAll();
  return regionState;
}
