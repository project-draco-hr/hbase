{
  for (Iterator<Map.Entry<String,ServerName>> it=lastAssignments.entrySet().iterator(); it.hasNext(); ) {
    Map.Entry<String,ServerName> e=it.next();
    if (e.getValue().equals(serverName)) {
      it.remove();
    }
  }
  long now=System.currentTimeMillis();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Adding to log splitting servers " + serverName);
  }
  processedServers.put(serverName,Long.valueOf(now));
  Configuration conf=server.getConfiguration();
  long obsoleteTime=conf.getLong(LOG_SPLIT_TIME,DEFAULT_LOG_SPLIT_TIME);
  if (now > lastProcessedServerCleanTime + obsoleteTime) {
    lastProcessedServerCleanTime=now;
    long cutoff=now - obsoleteTime;
    for (Iterator<Map.Entry<ServerName,Long>> it=processedServers.entrySet().iterator(); it.hasNext(); ) {
      Map.Entry<ServerName,Long> e=it.next();
      if (e.getValue().longValue() < cutoff) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Removed from log splitting servers " + e.getKey());
        }
        it.remove();
      }
    }
  }
}
