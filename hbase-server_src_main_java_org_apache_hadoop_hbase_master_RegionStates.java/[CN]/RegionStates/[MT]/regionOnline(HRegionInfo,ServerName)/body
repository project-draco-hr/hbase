{
  String regionName=hri.getEncodedName();
  RegionState oldState=regionStates.get(regionName);
  if (oldState == null) {
    LOG.warn("Online a region not in RegionStates: " + hri.getShortNameToLog());
  }
 else {
    State state=oldState.getState();
    ServerName sn=oldState.getServerName();
    if (state != State.OPEN || sn == null || !sn.equals(serverName)) {
      LOG.debug("Online a region " + hri.getShortNameToLog() + " with current state="+ state+ ", expected state=OPEN"+ ", assigned to server: "+ sn+ " expected "+ serverName);
    }
  }
  updateRegionState(hri,State.OPEN,serverName);
  regionsInTransition.remove(regionName);
  ServerName oldServerName=regionAssignments.put(hri,serverName);
  if (!serverName.equals(oldServerName)) {
    LOG.info("Onlined " + hri.getShortNameToLog() + " on "+ serverName);
    Set<HRegionInfo> regions=serverHoldings.get(serverName);
    if (regions == null) {
      regions=new HashSet<HRegionInfo>();
      serverHoldings.put(serverName,regions);
    }
    regions.add(hri);
    if (oldServerName != null) {
      LOG.info("Offlined " + hri.getShortNameToLog() + " from "+ oldServerName);
      serverHoldings.get(oldServerName).remove(hri);
    }
  }
}
