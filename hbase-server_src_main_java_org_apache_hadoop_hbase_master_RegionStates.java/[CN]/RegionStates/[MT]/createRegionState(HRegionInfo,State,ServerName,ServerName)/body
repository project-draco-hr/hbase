{
  if (newState == null || (newState == State.OPEN && serverName == null)) {
    newState=State.OFFLINE;
  }
  if (hri.isOffline() && hri.isSplit()) {
    newState=State.SPLIT;
    serverName=null;
  }
  String encodedName=hri.getEncodedName();
  RegionState regionState=regionStates.get(encodedName);
  if (regionState != null) {
    LOG.warn("Tried to create a state for a region already in RegionStates, " + "used existing: " + regionState + ", ignored new: "+ newState);
  }
 else {
    regionState=new RegionState(hri,newState,serverName);
    regionStates.put(encodedName,regionState);
    if (newState == State.OPEN) {
      if (!serverName.equals(lastHost)) {
        LOG.warn("Open region's last host " + lastHost + " should be the same as the current one "+ serverName+ ", ignored the last and used the current one");
        lastHost=serverName;
      }
      lastAssignments.put(encodedName,lastHost);
      regionAssignments.put(hri,lastHost);
    }
 else     if (!regionState.isUnassignable()) {
      regionsInTransition.put(encodedName,regionState);
    }
    if (lastHost != null && newState != State.SPLIT) {
      addToServerHoldings(serverName,hri);
    }
  }
  return regionState;
}
