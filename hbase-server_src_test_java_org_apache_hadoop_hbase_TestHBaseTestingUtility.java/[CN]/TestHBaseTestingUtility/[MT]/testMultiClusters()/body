{
  HBaseTestingUtility htu1=new HBaseTestingUtility();
  htu1.getConfiguration().set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/1");
  htu1.startMiniZKCluster();
  HBaseTestingUtility htu2=new HBaseTestingUtility();
  htu2.getConfiguration().set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/2");
  htu2.getConfiguration().set(HConstants.ZOOKEEPER_CLIENT_PORT,htu1.getConfiguration().get(HConstants.ZOOKEEPER_CLIENT_PORT,"-1"));
  htu2.setZkCluster(htu1.getZkCluster());
  HBaseTestingUtility htu3=new HBaseTestingUtility();
  htu3.getConfiguration().set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/3");
  htu3.getConfiguration().set(HConstants.ZOOKEEPER_CLIENT_PORT,htu1.getConfiguration().get(HConstants.ZOOKEEPER_CLIENT_PORT,"-1"));
  htu3.setZkCluster(htu1.getZkCluster());
  try {
    htu1.startMiniCluster();
    htu2.startMiniCluster();
    htu3.startMiniCluster();
    final byte[] TABLE_NAME=Bytes.toBytes("test");
    final byte[] FAM_NAME=Bytes.toBytes("fam");
    final byte[] ROW=Bytes.toBytes("row");
    final byte[] QUAL_NAME=Bytes.toBytes("qual");
    final byte[] VALUE=Bytes.toBytes("value");
    Table table1=htu1.createTable(TABLE_NAME,FAM_NAME);
    Table table2=htu2.createTable(TABLE_NAME,FAM_NAME);
    Put put=new Put(ROW);
    put.add(FAM_NAME,QUAL_NAME,VALUE);
    table1.put(put);
    Get get=new Get(ROW);
    get.addColumn(FAM_NAME,QUAL_NAME);
    Result res=table1.get(get);
    assertEquals(1,res.size());
    res=table2.get(get);
    assertEquals(0,res.size());
    table1.close();
    table2.close();
  }
  finally {
    htu3.shutdownMiniCluster();
    htu2.shutdownMiniCluster();
    htu1.shutdownMiniCluster();
  }
}
