{
  final byte[] foo=Bytes.toBytes("foo");
  final RegionSpecifier region=RegionSpecifier.newBuilder().setValue(ByteString.EMPTY).setType(RegionSpecifierType.REGION_NAME).build();
  final int loop=5;
  for (int i=0; i < loop; i++) {
    METRICS.updateRpc(ClientService.getDescriptor().findMethodByName("Get"),GetRequest.getDefaultInstance(),MetricsConnection.newCallStats());
    METRICS.updateRpc(ClientService.getDescriptor().findMethodByName("Scan"),ScanRequest.getDefaultInstance(),MetricsConnection.newCallStats());
    METRICS.updateRpc(ClientService.getDescriptor().findMethodByName("Multi"),MultiRequest.getDefaultInstance(),MetricsConnection.newCallStats());
    METRICS.updateRpc(ClientService.getDescriptor().findMethodByName("Mutate"),MutateRequest.newBuilder().setMutation(ProtobufUtil.toMutation(MutationType.APPEND,new Append(foo))).setRegion(region).build(),MetricsConnection.newCallStats());
    METRICS.updateRpc(ClientService.getDescriptor().findMethodByName("Mutate"),MutateRequest.newBuilder().setMutation(ProtobufUtil.toMutation(MutationType.DELETE,new Delete(foo))).setRegion(region).build(),MetricsConnection.newCallStats());
    METRICS.updateRpc(ClientService.getDescriptor().findMethodByName("Mutate"),MutateRequest.newBuilder().setMutation(ProtobufUtil.toMutation(MutationType.INCREMENT,new Increment(foo))).setRegion(region).build(),MetricsConnection.newCallStats());
    METRICS.updateRpc(ClientService.getDescriptor().findMethodByName("Mutate"),MutateRequest.newBuilder().setMutation(ProtobufUtil.toMutation(MutationType.PUT,new Put(foo))).setRegion(region).build(),MetricsConnection.newCallStats());
  }
  for (  MetricsConnection.CallTracker t : new MetricsConnection.CallTracker[]{METRICS.getTracker,METRICS.scanTracker,METRICS.multiTracker,METRICS.appendTracker,METRICS.deleteTracker,METRICS.incrementTracker,METRICS.putTracker}) {
    Assert.assertEquals("Failed to invoke callTimer on " + t,loop,t.callTimer.getCount());
    Assert.assertEquals("Failed to invoke reqHist on " + t,loop,t.reqHist.getCount());
    Assert.assertEquals("Failed to invoke respHist on " + t,loop,t.respHist.getCount());
  }
}
