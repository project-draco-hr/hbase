{
  if (this.getConf() == null) {
    return files;
  }
  final Set<String> hfileRefs;
  try {
    hfileRefs=loadHFileRefsFromPeers();
  }
 catch (  KeeperException e) {
    LOG.warn("Failed to read hfile references from zookeeper, skipping checking deletable files");
    return Collections.emptyList();
  }
  return Iterables.filter(files,new Predicate<FileStatus>(){
    @Override public boolean apply(    FileStatus file){
      String hfile=file.getPath().getName();
      boolean foundHFileRefInQueue=hfileRefs.contains(hfile);
      if (LOG.isDebugEnabled()) {
        if (foundHFileRefInQueue) {
          LOG.debug("Found hfile reference in ZK, keeping: " + hfile);
        }
 else {
          LOG.debug("Did not find hfile reference in ZK, deleting: " + hfile);
        }
      }
      return !foundHFileRefInQueue;
    }
  }
);
}
