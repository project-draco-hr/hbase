{
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeMessage(1,getRegionSpecifier());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeUInt32(2,stores_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeUInt32(3,storefiles_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeUInt32(4,storeUncompressedSizeMB_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeUInt32(5,storefileSizeMB_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeUInt32(6,memstoreSizeMB_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeUInt32(7,storefileIndexSizeMB_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeUInt64(8,readRequestsCount_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeUInt64(9,writeRequestsCount_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeUInt64(10,totalCompactingKVs_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    output.writeUInt64(11,currentCompactedKVs_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    output.writeUInt32(12,rootIndexSizeKB_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    output.writeUInt32(13,totalStaticIndexSizeKB_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    output.writeUInt32(14,totalStaticBloomSizeKB_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    output.writeUInt64(15,completeSequenceId_);
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    output.writeFloat(16,dataLocality_);
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    output.writeUInt64(17,lastMajorCompactionTs_);
  }
  for (int i=0; i < storeCompleteSequenceId_.size(); i++) {
    output.writeMessage(18,storeCompleteSequenceId_.get(i));
  }
  if (((bitField0_ & 0x00020000) == 0x00020000)) {
    output.writeUInt64(19,filteredReadRequestsCount_);
  }
  unknownFields.writeTo(output);
}
