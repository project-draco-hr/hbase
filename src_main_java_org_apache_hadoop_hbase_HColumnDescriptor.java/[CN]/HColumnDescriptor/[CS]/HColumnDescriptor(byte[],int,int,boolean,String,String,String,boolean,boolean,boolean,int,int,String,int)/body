{
  isLegalFamilyName(familyName);
  this.name=familyName;
  if (maxVersions <= 0) {
    throw new IllegalArgumentException("Maximum versions must be positive");
  }
  if (minVersions > 0) {
    if (timeToLive == HConstants.FOREVER) {
      throw new IllegalArgumentException("Minimum versions requires TTL.");
    }
    if (minVersions >= maxVersions) {
      throw new IllegalArgumentException("Minimum versions must be < " + "maximum versions.");
    }
  }
  setMaxVersions(maxVersions);
  setMinVersions(minVersions);
  setKeepDeletedCells(keepDeletedCells);
  setInMemory(inMemory);
  setBlockCacheEnabled(blockCacheEnabled);
  setTimeToLive(timeToLive);
  setCompressionType(Compression.Algorithm.valueOf(compression.toUpperCase()));
  setDataBlockEncodingOnDisk(DataBlockEncodings.Algorithm.valueOf(dataBlockEncodingOnDisk.toUpperCase()));
  setDataBlockEncodingInCache(DataBlockEncodings.Algorithm.valueOf(dataBlockEncodingInCache.toUpperCase()));
  setEncodedDataBlockSeek(encodedDataBlockSeek);
  setBloomFilterType(StoreFile.BloomType.valueOf(bloomFilter.toUpperCase()));
  setBlocksize(blocksize);
  setScope(scope);
}
