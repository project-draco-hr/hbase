{
  Token tSearchName, tComparand;
  List<String> inList=new ArrayList<String>();
  String searchName=null, comparator=null, comparand=null;
  Token joinColumn=null;
  Token joinKey=null;
  String result=null;
  tSearchName=jj_consume_token(ID);
  searchName=tSearchName.image.toString();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case DOT:
    jj_consume_token(DOT);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ID:
    joinColumn=jj_consume_token(ID);
  searchName+="." + joinColumn.image.toString();
break;
case ROW:
jj_consume_token(ROW);
secondR=searchName;
searchName+=".ROW";
break;
default :
jj_la1[44]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
default :
jj_la1[45]=jj_gen;
;
}
comparator=getComparator();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case INTEGER_LITERAL:
tComparand=jj_consume_token(INTEGER_LITERAL);
comparand=tComparand.image.toString();
break;
case STRING_LITERAL:
tComparand=jj_consume_token(STRING_LITERAL);
comparand=tComparand.image.substring(1,tComparand.image.length() - 1);
break;
case ID:
tComparand=jj_consume_token(ID);
comparand=tComparand.image.toString();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case DOT:
jj_consume_token(DOT);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ROW:
jj_consume_token(ROW);
secondR=comparand;
comparand+=".ROW";
break;
case ID:
joinColumn=jj_consume_token(ID);
comparand+="." + joinColumn.image.toString();
break;
default :
jj_la1[46]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
default :
jj_la1[47]=jj_gen;
;
}
break;
case LPAREN:
inList=getColumns();
if (comparator == null) {
comparator="==";
}
comparand="";
try {
for (int i=0; i < inList.size(); i++) {
comparand+=URLEncoder.encode(inList.get(i),"UTF-8");
if (inList.size() != (i + 1)) {
comparand+="|";
}
}
}
 catch (UnsupportedEncodingException e) {
e.printStackTrace();
}
break;
default :
jj_la1[48]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
if (searchName.endsWith(".ROW")) {
result=appendIndicator(comparand) + " " + comparator+ " "+ searchName;
}
 else {
result=appendIndicator(searchName) + " " + comparator+ " "+ comparand;
}
{
if (true) return result;
}
throw new Error("Missing return statement in function");
}
