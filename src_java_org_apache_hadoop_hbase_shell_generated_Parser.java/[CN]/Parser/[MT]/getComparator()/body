{
  Token t=null;
  String comparator=null;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LCOMP:
    t=jj_consume_token(LCOMP);
  comparator=t.image.toString();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case EQUALS:
  jj_consume_token(EQUALS);
comparator+="=";
break;
default :
jj_la1[48]=jj_gen;
;
}
break;
case RCOMP:
t=jj_consume_token(RCOMP);
comparator=t.image.toString();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case EQUALS:
jj_consume_token(EQUALS);
comparator+="=";
break;
default :
jj_la1[49]=jj_gen;
;
}
break;
case EQUALS:
t=jj_consume_token(EQUALS);
comparator=t.image.toString();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LCOMP:
jj_consume_token(LCOMP);
comparator=">" + comparator;
break;
default :
jj_la1[50]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RCOMP:
jj_consume_token(RCOMP);
comparator="<" + comparator;
break;
default :
jj_la1[51]=jj_gen;
;
}
break;
case NOTEQUAL:
t=jj_consume_token(NOTEQUAL);
comparator=t.image.toString();
break;
case NOT:
jj_consume_token(NOT);
jj_consume_token(IN);
comparator="!!";
break;
case IN:
jj_consume_token(IN);
comparator="==";
break;
default :
jj_la1[52]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
{
if (true) return comparator;
}
throw new Error("Missing return statement in function");
}
