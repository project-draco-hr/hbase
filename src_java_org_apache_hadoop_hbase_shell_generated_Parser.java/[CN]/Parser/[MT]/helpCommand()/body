{
  Token t=null;
  HelpCommand help=new HelpCommand();
  String argument="";
  jj_consume_token(HELP);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CLEAR:
case SHOW:
case DESCRIBE:
case CREATE:
case DROP:
case FS:
case EXIT:
case INSERT:
case DELETE:
case SELECT:
case ID:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SHOW:
      t=jj_consume_token(SHOW);
    break;
case DESCRIBE:
  t=jj_consume_token(DESCRIBE);
break;
case CREATE:
t=jj_consume_token(CREATE);
break;
case DROP:
t=jj_consume_token(DROP);
break;
case EXIT:
t=jj_consume_token(EXIT);
break;
case INSERT:
t=jj_consume_token(INSERT);
break;
case DELETE:
t=jj_consume_token(DELETE);
break;
case SELECT:
t=jj_consume_token(SELECT);
break;
case CLEAR:
t=jj_consume_token(CLEAR);
break;
case FS:
t=jj_consume_token(FS);
break;
case ID:
t=jj_consume_token(ID);
break;
default :
jj_la1[4]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
argument=t.image.toString();
break;
default :
jj_la1[5]=jj_gen;
;
}
help.setArgument(argument);
{
if (true) return help;
}
throw new Error("Missing return statement in function");
}
