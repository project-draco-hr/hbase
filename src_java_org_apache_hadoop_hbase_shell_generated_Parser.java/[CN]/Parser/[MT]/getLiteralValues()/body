{
  List<String> values=new ArrayList<String>();
  String literal=null;
  jj_consume_token(LPAREN);
  literal=getStringLiteral();
  if (literal != null)   values.add(literal);
  label_6:   while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
case ID:
case QUOTED_IDENTIFIER:
case STRING_LITERAL:
      ;
    break;
default :
  jj_la1[27]=jj_gen;
break label_6;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
jj_consume_token(COMMA);
literal=getStringLiteral();
if (literal != null) values.add(literal);
break;
case ID:
case QUOTED_IDENTIFIER:
case STRING_LITERAL:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ID:
jj_consume_token(ID);
break;
case STRING_LITERAL:
jj_consume_token(STRING_LITERAL);
break;
case QUOTED_IDENTIFIER:
jj_consume_token(QUOTED_IDENTIFIER);
break;
default :
jj_la1[28]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
values.removeAll(values);
break;
default :
jj_la1[29]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
jj_consume_token(RPAREN);
{
if (true) return values;
}
throw new Error("Missing return statement in function");
}
