{
  Token tSearchName, tComparator, tComparand;
  Map<String,List<String>> tmp=new HashMap<String,List<String>>();
  List<String> values=new ArrayList<String>();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ROW:
    tSearchName=jj_consume_token(ROW);
  break;
case COLUMN:
tSearchName=jj_consume_token(COLUMN);
break;
case TIME:
tSearchName=jj_consume_token(TIME);
break;
case ID:
tSearchName=jj_consume_token(ID);
break;
case VALUES:
tSearchName=jj_consume_token(VALUES);
break;
case COLUMNFAMILIES:
tSearchName=jj_consume_token(COLUMNFAMILIES);
break;
default :
jj_la1[13]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case EQUALS:
tComparator=jj_consume_token(EQUALS);
break;
case NOTEQUAL:
tComparator=jj_consume_token(NOTEQUAL);
break;
default :
jj_la1[14]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case QUOTED_STRING:
tComparand=jj_consume_token(QUOTED_STRING);
values.add("quoted string");
tmp.put("error",values);
{
if (true) return tmp;
}
break;
case STRING_LITERAL:
tComparand=jj_consume_token(STRING_LITERAL);
values.add(tComparator.image);
values.add(tComparand.image.substring(1,tComparand.image.length() - 1));
if (tSearchName.image.toString().equals("row") || tSearchName.image.toString().equals("column") || tSearchName.image.toString().equals("time")) {
tmp.put(tSearchName.image,values);
}
 else {
values.add(tSearchName.image.toString());
tmp.put("error",values);
}
{
if (true) return tmp;
}
break;
default :
jj_la1[15]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
throw new Error("Missing return statement in function");
}
