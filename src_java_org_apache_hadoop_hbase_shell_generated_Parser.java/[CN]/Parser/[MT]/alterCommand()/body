{
  AlterCommand alterCommand=new AlterCommand(this.out);
  String table=null;
  String column=null;
  Map<String,Object> columnSpec=null;
  jj_consume_token(ALTER);
  jj_consume_token(TABLE);
  table=Identifier();
  alterCommand.setTable(table);
  if (jj_2_1(2)) {
    jj_consume_token(ADD);
    column=Identifier();
    columnSpec=ColumnSpec();
    alterCommand.setOperationType(AlterCommand.OperationType.ADD);
    alterCommand.addColumnSpec(column,columnSpec);
  }
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ADD:
      jj_consume_token(ADD);
    jj_consume_token(LPAREN);
  alterCommand.setOperationType(AlterCommand.OperationType.ADD);
column=Identifier();
columnSpec=ColumnSpec();
alterCommand.addColumnSpec(column,columnSpec);
label_5: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
;
break;
default :
jj_la1[15]=jj_gen;
break label_5;
}
jj_consume_token(COMMA);
column=Identifier();
columnSpec=ColumnSpec();
alterCommand.addColumnSpec(column,columnSpec);
}
jj_consume_token(RPAREN);
break;
case DROP:
jj_consume_token(DROP);
column=Identifier();
alterCommand.setOperationType(AlterCommand.OperationType.DROP);
alterCommand.setColumn(column);
break;
case CHANGE:
jj_consume_token(CHANGE);
column=Identifier();
columnSpec=ColumnSpec();
alterCommand.setOperationType(AlterCommand.OperationType.CHANGE);
alterCommand.addColumnSpec(column,columnSpec);
break;
default :
jj_la1[16]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
{
if (true) return alterCommand;
}
throw new Error("Missing return statement in function");
}
