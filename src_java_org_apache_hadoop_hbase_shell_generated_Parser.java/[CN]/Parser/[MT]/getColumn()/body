{
  Token col;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ASTERISK:
case ID:
case INTEGER_LITERAL:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ID:
      col=jj_consume_token(ID);
    break;
case INTEGER_LITERAL:
  col=jj_consume_token(INTEGER_LITERAL);
break;
case ASTERISK:
col=jj_consume_token(ASTERISK);
break;
default :
jj_la1[30]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
{
if (true) return col.image.toString();
}
break;
case QUOTED_IDENTIFIER:
case STRING_LITERAL:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case QUOTED_IDENTIFIER:
col=jj_consume_token(QUOTED_IDENTIFIER);
break;
case STRING_LITERAL:
col=jj_consume_token(STRING_LITERAL);
break;
default :
jj_la1[31]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
{
if (true) return col.image.substring(1,col.image.toString().length() - 1);
}
break;
default :
jj_la1[32]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
throw new Error("Missing return statement in function");
}
