{
  List<Path> newFiles=new ArrayList<>();
  List<FileStatus> files=partition.listFiles();
  int offset=0;
  Path bulkloadPathOfPartition=new Path(bulkloadPath,partition.getPartitionId().toString());
  Path bulkloadColumnPath=new Path(bulkloadPathOfPartition,column.getNameAsString());
  while (offset < files.size()) {
    int batch=compactionBatchSize;
    if (files.size() - offset < compactionBatchSize) {
      batch=files.size() - offset;
    }
    if (batch == 1 && delFiles.isEmpty()) {
      newFiles.add(files.get(offset).getPath());
      offset++;
      continue;
    }
    fs.delete(bulkloadPathOfPartition,true);
    List<StoreFile> filesToCompact=new ArrayList<>();
    for (int i=offset; i < batch + offset; i++) {
      StoreFile sf=new StoreFile(fs,files.get(i).getPath(),conf,compactionCacheConfig,BloomType.NONE);
      filesToCompact.add(sf);
    }
    filesToCompact.addAll(delFiles);
    compactMobFilesInBatch(request,partition,connection,table,filesToCompact,batch,bulkloadPathOfPartition,bulkloadColumnPath,newFiles);
    offset+=batch;
  }
  LOG.info("Compaction is finished. The number of mob files is changed from " + files.size() + " to "+ newFiles.size());
  return newFiles;
}
