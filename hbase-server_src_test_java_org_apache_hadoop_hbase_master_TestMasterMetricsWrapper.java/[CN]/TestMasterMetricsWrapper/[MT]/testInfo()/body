{
  HMaster master=TEST_UTIL.getHBaseCluster().getMaster();
  MetricsMasterWrapperImpl info=new MetricsMasterWrapperImpl(master);
  assertEquals(master.getAverageLoad(),info.getAverageLoad(),0);
  assertEquals(master.getClusterId(),info.getClusterId());
  assertEquals(master.getMasterActiveTime(),info.getActiveTime());
  assertEquals(master.getMasterStartTime(),info.getStartTime());
  assertEquals(master.getCoprocessors().length,info.getCoprocessors().length);
  assertEquals(master.getServerManager().getOnlineServersList().size(),info.getRegionServers());
  assertTrue(info.getRegionServers() == 4);
  String zkServers=info.getZookeeperQuorum();
  assertEquals(zkServers.split(",").length,TEST_UTIL.getZkCluster().getZooKeeperServerNum());
  final int index=3;
  LOG.info("Stopping " + TEST_UTIL.getMiniHBaseCluster().getRegionServer(index));
  TEST_UTIL.getMiniHBaseCluster().stopRegionServer(index,false);
  TEST_UTIL.getMiniHBaseCluster().waitOnRegionServer(index);
  while (TEST_UTIL.getHBaseCluster().getMaster().getServerManager().getOnlineServers().size() != index) {
    Threads.sleep(10);
  }
  assertTrue(info.getRegionServers() == 3);
  assertTrue(info.getDeadRegionServers() == 1);
}
