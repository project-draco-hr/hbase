{
  TableName tableName=TableName.valueOf("testScanPolicyObserver");
  HTableDescriptor desc=new HTableDescriptor(tableName);
  HColumnDescriptor hcd=new HColumnDescriptor(F).setMaxVersions(10).setTimeToLive(1);
  desc.addFamily(hcd);
  TEST_UTIL.getHBaseAdmin().createTable(desc);
  Table t=TEST_UTIL.getConnection().getTable(tableName);
  long now=EnvironmentEdgeManager.currentTime();
  ZooKeeperWatcher zkw=new ZooKeeperWatcher(TEST_UTIL.getConfiguration(),"test",null);
  ZooKeeper zk=zkw.getRecoverableZooKeeper().getZooKeeper();
  ZKUtil.createWithParents(zkw,ZooKeeperScanPolicyObserver.node);
  zk.setData(ZooKeeperScanPolicyObserver.node,Bytes.toBytes(now - 3600 * 1000),-1);
  LOG.debug("Set time: " + Bytes.toLong(Bytes.toBytes(now - 3600 * 1000)));
  Thread.sleep(1000);
  long ts=now - 2000;
  Put p=new Put(R);
  p.add(F,Q,ts,Q);
  t.put(p);
  p=new Put(R);
  p.add(F,Q,ts + 1,Q);
  t.put(p);
  Get g=new Get(R);
  g.setMaxVersions(10);
  Result r=t.get(g);
  assertEquals(2,r.size());
  TEST_UTIL.flush(tableName);
  TEST_UTIL.compact(tableName,true);
  g=new Get(R);
  g.setMaxVersions(10);
  r=t.get(g);
  assertEquals(2,r.size());
  zk.setData(ZooKeeperScanPolicyObserver.node,Bytes.toBytes(now),-1);
  LOG.debug("Set time: " + now);
  TEST_UTIL.compact(tableName,true);
  g=new Get(R);
  g.setMaxVersions(10);
  r=t.get(g);
  assertEquals(0,r.size());
  t.close();
}
