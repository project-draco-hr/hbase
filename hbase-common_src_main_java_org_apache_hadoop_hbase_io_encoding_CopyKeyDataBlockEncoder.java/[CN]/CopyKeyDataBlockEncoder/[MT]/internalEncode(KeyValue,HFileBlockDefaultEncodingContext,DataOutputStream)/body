{
  int klength=kv.getKeyLength();
  int vlength=kv.getValueLength();
  out.writeInt(klength);
  out.writeInt(vlength);
  out.write(kv.getBuffer(),kv.getKeyOffset(),klength);
  out.write(kv.getValueArray(),kv.getValueOffset(),vlength);
  int size=klength + vlength + KeyValue.KEYVALUE_INFRASTRUCTURE_SIZE;
  if (encodingContext.getHFileContext().isIncludesTags()) {
    short tagsLength=kv.getTagsLength();
    out.writeShort(tagsLength);
    if (tagsLength > 0) {
      out.write(kv.getTagsArray(),kv.getTagsOffset(),tagsLength);
    }
    size+=tagsLength + KeyValue.TAGS_LENGTH_SIZE;
  }
  if (encodingContext.getHFileContext().isIncludesMvcc()) {
    WritableUtils.writeVLong(out,kv.getMvccVersion());
    size+=WritableUtils.getVIntSize(kv.getMvccVersion());
  }
  return size;
}
