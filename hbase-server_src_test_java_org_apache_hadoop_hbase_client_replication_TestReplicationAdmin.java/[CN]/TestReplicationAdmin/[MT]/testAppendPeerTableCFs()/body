{
  ReplicationPeerConfig rpc1=new ReplicationPeerConfig();
  rpc1.setClusterKey(KEY_ONE);
  TableName tab1=TableName.valueOf("t1");
  TableName tab2=TableName.valueOf("t2");
  TableName tab3=TableName.valueOf("t3");
  TableName tab4=TableName.valueOf("t4");
  admin.addPeer(ID_ONE,rpc1,null);
  Map<TableName,List<String>> tableCFs=new HashMap<>();
  tableCFs.put(tab1,null);
  admin.appendPeerTableCFs(ID_ONE,tableCFs);
  Map<TableName,List<String>> result=ReplicationSerDeHelper.parseTableCFsFromConfig(admin.getPeerTableCFs(ID_ONE));
  assertEquals(1,result.size());
  assertEquals(true,result.containsKey(tab1));
  assertNull(result.get(tab1));
  tableCFs.clear();
  tableCFs.put(tab2,null);
  admin.appendPeerTableCFs(ID_ONE,tableCFs);
  result=ReplicationSerDeHelper.parseTableCFsFromConfig(admin.getPeerTableCFs(ID_ONE));
  assertEquals(2,result.size());
  assertTrue("Should contain t1",result.containsKey(tab1));
  assertTrue("Should contain t2",result.containsKey(tab2));
  assertNull(result.get(tab1));
  assertNull(result.get(tab2));
  tableCFs.clear();
  tableCFs.put(tab3,new ArrayList<String>());
  tableCFs.get(tab3).add("f1");
  admin.appendPeerTableCFs(ID_ONE,tableCFs);
  result=ReplicationSerDeHelper.parseTableCFsFromConfig(admin.getPeerTableCFs(ID_ONE));
  assertEquals(3,result.size());
  assertTrue("Should contain t1",result.containsKey(tab1));
  assertTrue("Should contain t2",result.containsKey(tab2));
  assertTrue("Should contain t3",result.containsKey(tab3));
  assertNull(result.get(tab1));
  assertNull(result.get(tab2));
  assertEquals(1,result.get(tab3).size());
  assertEquals("f1",result.get(tab3).get(0));
  tableCFs.clear();
  tableCFs.put(tab4,new ArrayList<String>());
  tableCFs.get(tab4).add("f1");
  tableCFs.get(tab4).add("f2");
  admin.appendPeerTableCFs(ID_ONE,tableCFs);
  result=ReplicationSerDeHelper.parseTableCFsFromConfig(admin.getPeerTableCFs(ID_ONE));
  assertEquals(4,result.size());
  assertTrue("Should contain t1",result.containsKey(tab1));
  assertTrue("Should contain t2",result.containsKey(tab2));
  assertTrue("Should contain t3",result.containsKey(tab3));
  assertTrue("Should contain t4",result.containsKey(tab4));
  assertNull(result.get(tab1));
  assertNull(result.get(tab2));
  assertEquals(1,result.get(tab3).size());
  assertEquals("f1",result.get(tab3).get(0));
  assertEquals(2,result.get(tab4).size());
  assertEquals("f1",result.get(tab4).get(0));
  assertEquals("f2",result.get(tab4).get(1));
  admin.removePeer(ID_ONE);
}
