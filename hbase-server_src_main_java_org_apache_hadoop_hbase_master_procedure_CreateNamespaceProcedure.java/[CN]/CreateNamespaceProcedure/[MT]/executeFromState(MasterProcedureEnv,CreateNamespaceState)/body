{
  if (isTraceEnabled()) {
    LOG.trace(this + " execute state=" + state);
  }
  try {
switch (state) {
case CREATE_NAMESPACE_PREPARE:
      prepareCreate(env);
    setNextState(CreateNamespaceState.CREATE_NAMESPACE_CREATE_DIRECTORY);
  break;
case CREATE_NAMESPACE_CREATE_DIRECTORY:
createDirectory(env,nsDescriptor);
setNextState(CreateNamespaceState.CREATE_NAMESPACE_INSERT_INTO_NS_TABLE);
break;
case CREATE_NAMESPACE_INSERT_INTO_NS_TABLE:
insertIntoNSTable(env,nsDescriptor);
setNextState(CreateNamespaceState.CREATE_NAMESPACE_UPDATE_ZK);
break;
case CREATE_NAMESPACE_UPDATE_ZK:
updateZKNamespaceManager(env,nsDescriptor);
setNextState(CreateNamespaceState.CREATE_NAMESPACE_SET_NAMESPACE_QUOTA);
break;
case CREATE_NAMESPACE_SET_NAMESPACE_QUOTA:
setNamespaceQuota(env,nsDescriptor);
return Flow.NO_MORE_STATE;
default :
throw new UnsupportedOperationException(this + " unhandled state=" + state);
}
}
 catch (IOException e) {
LOG.warn("Error trying to create the namespace" + nsDescriptor.getName() + " (in state="+ state+ ")",e);
setFailure("master-create-namespace",e);
}
return Flow.HAS_MORE_STATE;
}
