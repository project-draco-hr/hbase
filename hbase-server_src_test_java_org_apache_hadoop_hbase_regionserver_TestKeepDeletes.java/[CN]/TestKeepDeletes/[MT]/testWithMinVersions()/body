{
  HTableDescriptor htd=hbu.createTableDescriptor(name.getMethodName(),3,1000,1,KeepDeletedCells.TRUE);
  Region region=hbu.createLocalHRegion(htd,null,null);
  long ts=EnvironmentEdgeManager.currentTime() - 2000;
  Put p=new Put(T1,ts);
  p.addColumn(c0,c0,T3);
  region.put(p);
  p=new Put(T1,ts - 1);
  p.addColumn(c0,c0,T2);
  region.put(p);
  p=new Put(T1,ts - 3);
  p.addColumn(c0,c0,T1);
  region.put(p);
  p=new Put(T1,ts - 4);
  p.addColumn(c0,c0,T0);
  region.put(p);
  Delete d=new Delete(T1,ts - 1);
  region.delete(d);
  d=new Delete(T1,ts - 2);
  d.deleteColumns(c0,c0,ts - 1);
  region.delete(d);
  Get g=new Get(T1);
  g.setMaxVersions();
  g.setTimeRange(0L,ts - 2);
  Result r=region.get(g);
  checkResult(r,c0,c0,T1,T0);
  assertEquals(4,countDeleteMarkers(region));
  region.flush(true);
  assertEquals(4,countDeleteMarkers(region));
  r=region.get(g);
  checkResult(r,c0,c0,T1);
  p=new Put(T1,ts + 1);
  p.addColumn(c0,c0,T4);
  region.put(p);
  region.flush(true);
  assertEquals(4,countDeleteMarkers(region));
  r=region.get(g);
  checkResult(r,c0,c0,T1);
  p=new Put(T1,ts + 2);
  p.addColumn(c0,c0,T5);
  region.put(p);
  region.flush(true);
  region.compact(true);
  assertEquals(2,countDeleteMarkers(region));
  region.compact(true);
  assertEquals(0,countDeleteMarkers(region));
  HBaseTestingUtility.closeRegionAndWAL(region);
}
