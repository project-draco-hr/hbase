{
  HTableDescriptor htd=createTableDescriptor(getName(),0,3,HConstants.FOREVER,true);
  HRegion region=createNewHRegion(htd,null,null);
  long ts=EnvironmentEdgeManager.currentTimeMillis();
  Put p=new Put(T1,ts);
  p.add(c0,c0,T1);
  region.put(p);
  p=new Put(T1,ts + 2);
  p.add(c0,c0,T2);
  region.put(p);
  p=new Put(T1,ts + 4);
  p.add(c0,c0,T3);
  region.put(p);
  Delete d=new Delete(T1,ts + 1);
  region.delete(d);
  d=new Delete(T1,ts + 2);
  d.deleteColumn(c0,c0,ts + 2);
  region.delete(d);
  d=new Delete(T1,ts + 3);
  d.deleteColumns(c0,c0,ts + 3);
  region.delete(d);
  Scan s=new Scan();
  s.setRaw(true);
  s.setMaxVersions();
  InternalScanner scan=region.getScanner(s);
  List<KeyValue> kvs=new ArrayList<KeyValue>();
  scan.next(kvs);
  assertEquals(8,kvs.size());
  assertTrue(kvs.get(0).isDeleteFamily());
  assertEquals(kvs.get(1).getValue(),T3);
  assertTrue(kvs.get(2).isDelete());
  assertTrue(kvs.get(3).isDeleteType());
  assertEquals(kvs.get(4).getValue(),T2);
  assertEquals(kvs.get(5).getValue(),T1);
  assertTrue(kvs.get(6).isDeleteFamily());
  assertTrue(kvs.get(7).isDeleteFamily());
  s=new Scan();
  s.setRaw(true);
  s.setMaxVersions();
  s.setTimeRange(0,1);
  scan=region.getScanner(s);
  kvs=new ArrayList<KeyValue>();
  scan.next(kvs);
  assertTrue(kvs.isEmpty());
  s=new Scan();
  s.setRaw(true);
  s.setMaxVersions();
  s.setTimeRange(0,ts + 2);
  scan=region.getScanner(s);
  kvs=new ArrayList<KeyValue>();
  scan.next(kvs);
  assertEquals(4,kvs.size());
  assertTrue(kvs.get(0).isDeleteFamily());
  assertEquals(kvs.get(1).getValue(),T1);
  assertTrue(kvs.get(2).isDeleteFamily());
  assertTrue(kvs.get(3).isDeleteFamily());
  s=new Scan();
  s.setRaw(true);
  s.setMaxVersions();
  s.setTimeRange(ts + 3,ts + 5);
  scan=region.getScanner(s);
  kvs=new ArrayList<KeyValue>();
  scan.next(kvs);
  assertEquals(2,kvs.size());
  assertEquals(kvs.get(0).getValue(),T3);
  assertTrue(kvs.get(1).isDelete());
  HRegion.closeHRegion(region);
}
