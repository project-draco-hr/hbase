{
  HTableDescriptor htd=hbu.createTableDescriptor(name.getMethodName(),0,1,HConstants.FOREVER,KeepDeletedCells.TRUE);
  Region region=hbu.createLocalHRegion(htd,null,null);
  long ts=EnvironmentEdgeManager.currentTime();
  Put p=new Put(T1,ts);
  p.addColumn(c0,c0,T1);
  region.put(p);
  p=new Put(T2,ts - 10);
  p.addColumn(c0,c0,T1);
  region.put(p);
  Delete d=new Delete(T1,ts);
  d.addColumns(c0,c0,ts);
  region.delete(d);
  d=new Delete(T1,ts);
  d.addFamily(c0,ts);
  region.delete(d);
  d=new Delete(T1,ts);
  d.addColumn(c0,c0,ts + 1);
  region.delete(d);
  d=new Delete(T1,ts);
  d.addColumn(c0,c0,ts + 2);
  region.delete(d);
  assertEquals(4,countDeleteMarkers(region));
  region.flush(true);
  assertEquals(4,countDeleteMarkers(region));
  region.compact(false);
  assertEquals(4,countDeleteMarkers(region));
  p=new Put(T1,ts + 3);
  p.addColumn(c0,c0,T1);
  region.put(p);
  region.flush(true);
  region.compact(true);
  assertEquals(4,countDeleteMarkers(region));
  region.compact(true);
  assertEquals(4,countDeleteMarkers(region));
  p=new Put(T1,ts + 4);
  p.addColumn(c0,c0,T1);
  region.put(p);
  region.compact(true);
  assertEquals(1,countDeleteMarkers(region));
  region.compact(true);
  assertEquals(1,countDeleteMarkers(region));
  HBaseTestingUtility.closeRegionAndWAL(region);
}
