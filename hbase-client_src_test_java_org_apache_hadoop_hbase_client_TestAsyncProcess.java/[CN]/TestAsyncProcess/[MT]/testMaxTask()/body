{
  HConnection hc=createHConnection();
  final AsyncProcess ap=new MyAsyncProcess<Object>(hc,null,conf);
  for (int i=0; i < 1000; i++) {
    ap.incTaskCounters(Arrays.asList("dummy".getBytes()));
  }
  final Thread myThread=Thread.currentThread();
  Thread t=new Thread(){
    public void run(){
      Threads.sleep(2000);
      myThread.interrupt();
    }
  }
;
  List<Put> puts=new ArrayList<Put>();
  puts.add(createPut(true,true));
  t.start();
  try {
    ap.submit(puts,false);
    Assert.fail("We should have been interrupted.");
  }
 catch (  InterruptedIOException expected) {
  }
  final long sleepTime=2000;
  Thread t2=new Thread(){
    public void run(){
      Threads.sleep(sleepTime);
      while (ap.tasksDone.get() > 0) {
        ap.decTaskCounters(Arrays.asList("dummy".getBytes()));
      }
    }
  }
;
  t2.start();
  long start=System.currentTimeMillis();
  ap.submit(new ArrayList<Row>(),false);
  long end=System.currentTimeMillis();
  Assert.assertTrue(start + 100L + sleepTime > end);
}
