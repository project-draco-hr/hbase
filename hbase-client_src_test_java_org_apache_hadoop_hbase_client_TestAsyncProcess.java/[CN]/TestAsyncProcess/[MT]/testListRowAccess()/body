{
  int count=10;
  List<String> values=new LinkedList<>();
  for (int i=0; i != count; ++i) {
    values.add(String.valueOf(i));
  }
  ListRowAccess<String> taker=new ListRowAccess(values);
  assertEquals(count,taker.size());
  int restoreCount=0;
  int takeCount=0;
  Iterator<String> it=taker.iterator();
  while (it.hasNext()) {
    String v=it.next();
    assertEquals(String.valueOf(takeCount),v);
    ++takeCount;
    it.remove();
    if (Math.random() >= 0.5) {
      break;
    }
  }
  assertEquals(count,taker.size() + takeCount);
  it=taker.iterator();
  while (it.hasNext()) {
    String v=it.next();
    assertEquals(String.valueOf(takeCount),v);
    ++takeCount;
    it.remove();
  }
  assertEquals(0,taker.size());
  assertEquals(count,takeCount);
}
