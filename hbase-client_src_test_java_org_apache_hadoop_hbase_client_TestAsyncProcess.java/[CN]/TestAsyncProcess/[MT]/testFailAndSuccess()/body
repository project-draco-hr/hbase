{
  HConnection hc=createHConnection();
  MyCB mcb=new MyCB();
  AsyncProcess ap=new MyAsyncProcess<Object>(hc,mcb,conf);
  List<Put> puts=new ArrayList<Put>();
  puts.add(createPut(1,false));
  puts.add(createPut(1,true));
  puts.add(createPut(1,true));
  ap.submit(puts,false);
  Assert.assertTrue(puts.isEmpty());
  long cutoff=System.currentTimeMillis() + 60000;
  while (!ap.hasError() && System.currentTimeMillis() < cutoff) {
    Thread.sleep(1);
  }
  Assert.assertTrue(ap.hasError());
  ap.waitUntilDone();
  Assert.assertEquals(mcb.successCalled.get(),2);
  Assert.assertEquals(mcb.retriableFailure.get(),2);
  Assert.assertEquals(mcb.failureCalled.get(),1);
  Assert.assertEquals(1,ap.getErrors().actions.size());
  puts.add(createPut(1,true));
  ap.submit(puts,false);
  Assert.assertTrue(puts.isEmpty());
  while (mcb.successCalled.get() != 3) {
    Thread.sleep(1);
  }
  Assert.assertEquals(mcb.retriableFailure.get(),2);
  Assert.assertEquals(mcb.failureCalled.get(),1);
  ap.clearErrors();
  Assert.assertTrue(ap.getErrors().actions.isEmpty());
}
