{
  super(conf,store);
  String strPrefix="hbase.hstore.compaction.";
  String strSchema="tbl." + store.getHRegion().getTableDesc().getNameAsString() + "cf."+ store.getFamily().getNameAsString()+ ".";
  String strDefault="Default.";
  String strAttribute;
  strAttribute="NumCompactionTiers";
  compactionTier=new CompactionTier[conf.getInt(strPrefix + strSchema + strAttribute,conf.getInt(strPrefix + strDefault + strAttribute,1))];
  strAttribute="IsRecentFirstOrder";
  recentFirstOrder=conf.getBoolean(strPrefix + strSchema + strAttribute,conf.getBoolean(strPrefix + strDefault + strAttribute,true));
  strAttribute="MinCompactSize";
  minCompactSize=conf.getLong(strPrefix + strSchema + strAttribute,conf.getLong(strPrefix + strDefault + strAttribute,0));
  strAttribute="MaxCompactSize";
  maxCompactSize=conf.getLong(strPrefix + strSchema + strAttribute,conf.getLong(strPrefix + strDefault + strAttribute,Long.MAX_VALUE));
  strAttribute="ShouldDeleteExpired";
  shouldDeleteExpired=conf.getBoolean(strPrefix + strSchema + strAttribute,conf.getBoolean(strPrefix + strDefault + strAttribute,shouldDeleteExpired));
  strAttribute="ThrottlePoint";
  throttlePoint=conf.getLong(strPrefix + strSchema + strAttribute,conf.getLong(strPrefix + strDefault + strAttribute,throttlePoint));
  strAttribute="MajorCompactionPeriod";
  majorCompactionPeriod=conf.getLong(strPrefix + strSchema + strAttribute,conf.getLong(strPrefix + strDefault + strAttribute,majorCompactionPeriod));
  strAttribute="MajorCompactionJitter";
  majorCompactionJitter=conf.getFloat(strPrefix + strSchema + strAttribute,conf.getFloat(strPrefix + strDefault + strAttribute,majorCompactionJitter));
  for (int i=0; i < compactionTier.length; i++) {
    compactionTier[i]=new CompactionTier(i);
  }
}
