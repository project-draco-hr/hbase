{
  setupCluster();
  TableName tableName=TableName.valueOf("testRestoreSnapshotDoesNotCreateBackRefLinks");
  String snapshotName="foo";
  try {
    createTableAndSnapshot(UTIL,tableName,snapshotName,getStartRow(),getEndRow(),1);
    Path tmpTableDir=UTIL.getDataTestDirOnTestFS(snapshotName);
    testRestoreSnapshotDoesNotCreateBackRefLinksInit(tableName,snapshotName,tmpTableDir);
    Path rootDir=FSUtils.getRootDir(UTIL.getConfiguration());
    for (    Path regionDir : FSUtils.getRegionDirs(fs,FSUtils.getTableDir(rootDir,tableName))) {
      for (      Path storeDir : FSUtils.getFamilyDirs(fs,regionDir)) {
        for (        FileStatus status : fs.listStatus(storeDir)) {
          System.out.println(status.getPath());
          if (StoreFileInfo.isValid(status)) {
            Path archiveStoreDir=HFileArchiveUtil.getStoreArchivePath(UTIL.getConfiguration(),tableName,regionDir.getName(),storeDir.getName());
            Path path=HFileLink.getBackReferencesDir(storeDir,status.getPath().getName());
            assertFalse("There is a back reference in " + path,fs.exists(path));
            path=HFileLink.getBackReferencesDir(archiveStoreDir,status.getPath().getName());
            assertFalse("There is a back reference in " + path,fs.exists(path));
          }
        }
      }
    }
  }
  finally {
    UTIL.getHBaseAdmin().deleteSnapshot(snapshotName);
    UTIL.deleteTable(tableName);
    tearDownCluster();
  }
}
