{
  out.writeInt(TABLE_DESCRIPTOR_VERSION);
  Bytes.writeByteArray(out,name.toBytes());
  out.writeBoolean(isRootRegion());
  out.writeBoolean(isMetaRegion());
  out.writeInt(values.size());
  for (  Map.Entry<ImmutableBytesWritable,ImmutableBytesWritable> e : values.entrySet()) {
    e.getKey().write(out);
    e.getValue().write(out);
  }
  out.writeInt(families.size());
  for (Iterator<HColumnDescriptor> it=families.values().iterator(); it.hasNext(); ) {
    HColumnDescriptor family=it.next();
    family.write(out);
  }
  out.writeInt(configuration.size());
  for (  Map.Entry<String,String> e : configuration.entrySet()) {
    new ImmutableBytesWritable(Bytes.toBytes(e.getKey())).write(out);
    new ImmutableBytesWritable(Bytes.toBytes(e.getValue())).write(out);
  }
}
