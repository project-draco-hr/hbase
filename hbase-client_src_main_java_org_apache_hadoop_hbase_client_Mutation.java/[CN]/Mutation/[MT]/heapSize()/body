{
  long heapsize=MUTATION_OVERHEAD;
  heapsize+=ClassSize.align(ClassSize.ARRAY + this.row.length);
  heapsize+=ClassSize.align(this.familyMap.size() * ClassSize.MAP_ENTRY);
  for (  Map.Entry<byte[],List<? extends Cell>> entry : this.familyMap.entrySet()) {
    heapsize+=ClassSize.align(ClassSize.ARRAY + entry.getKey().length);
    heapsize+=ClassSize.align(ClassSize.ARRAYLIST);
    int size=entry.getValue().size();
    heapsize+=ClassSize.align(ClassSize.ARRAY + size * ClassSize.REFERENCE);
    for (    Cell cell : entry.getValue()) {
      KeyValue kv=KeyValueUtil.ensureKeyValue(cell);
      heapsize+=kv.heapSize();
    }
  }
  heapsize+=getAttributeSize();
  return heapsize;
}
