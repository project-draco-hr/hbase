{
  conf.setBoolean(HBASE_SKIP_ERRORS,false);
  final String REGION="region__1";
  REGIONS.removeAll(REGIONS);
  REGIONS.add(REGION);
  int entryCount=10;
  Path c1=new Path(HLOGDIR,HLOG_FILE_PREFIX + "0");
  generateHLogs(1,entryCount,-1);
  corruptHLog(c1,Corruptions.TRUNCATE,true,fs);
  fs.initialize(fs.getUri(),conf);
  HLogSplitter logSplitter=HLogSplitter.createLogSplitter(conf,HBASEDIR,HLOGDIR,OLDLOGDIR,fs);
  logSplitter.splitLog();
  Path splitLog=getLogForRegion(HBASEDIR,TABLE_NAME,REGION);
  int actualCount=0;
  HLog.Reader in=HLogFactory.createReader(fs,splitLog,conf);
  @SuppressWarnings("unused") HLog.Entry entry;
  while ((entry=in.next()) != null)   ++actualCount;
  assertEquals(entryCount - 1,actualCount);
  FileStatus[] archivedLogs=fs.listStatus(CORRUPTDIR);
  assertEquals(archivedLogs.length,0);
}
