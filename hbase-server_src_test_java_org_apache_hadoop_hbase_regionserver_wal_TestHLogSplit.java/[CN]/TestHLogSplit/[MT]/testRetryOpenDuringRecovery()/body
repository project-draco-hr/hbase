{
  generateHLogs(-1);
  fs.initialize(fs.getUri(),conf);
  FileSystem spiedFs=Mockito.spy(fs);
  Mockito.doAnswer(new Answer<FSDataInputStream>(){
    private final String[] errors=new String[]{"Cannot obtain block length","Could not obtain the last block","Blocklist for " + OLDLOGDIR + " has changed"};
    private int count=0;
    public FSDataInputStream answer(    InvocationOnMock invocation) throws Throwable {
      if (count < 3) {
        throw new IOException(errors[count++]);
      }
      return (FSDataInputStream)invocation.callRealMethod();
    }
  }
).when(spiedFs).open(Mockito.<Path>any(),Mockito.anyInt());
  try {
    HLogSplitter.split(HBASEDIR,HLOGDIR,OLDLOGDIR,spiedFs,conf);
    assertEquals(NUM_WRITERS,fs.listStatus(OLDLOGDIR).length);
    assertFalse(fs.exists(HLOGDIR));
  }
 catch (  IOException e) {
    fail("There shouldn't be any exception but: " + e.toString());
  }
}
