{
  conf.setBoolean(HBASE_SKIP_ERRORS,false);
  generateHLogs(-1);
  fs.initialize(fs.getUri(),conf);
  HLogSplitter logSplitter=new HLogSplitter(conf,HBASEDIR,HLOGDIR,OLDLOGDIR,fs,null){
    protected HLog.Writer createWriter(    FileSystem fs,    Path logfile,    Configuration conf) throws IOException {
      HLog.Writer mockWriter=Mockito.mock(HLog.Writer.class);
      Mockito.doThrow(new IOException("Injected")).when(mockWriter).append(Mockito.<HLog.Entry>any());
      return mockWriter;
    }
  }
;
  try {
    logSplitter.splitLog();
    fail("Didn't throw!");
  }
 catch (  IOException ioe) {
    assertTrue(ioe.toString().contains("Injected"));
  }
}
