{
  AtomicBoolean stop=new AtomicBoolean(false);
  generateHLogs(-1);
  fs.initialize(fs.getUri(),conf);
  CountDownLatch latch=new CountDownLatch(1);
  Thread zombie=new ZombieNewLogWriterRegionServer(latch,stop);
  List<Path> splits=null;
  try {
    zombie.start();
    try {
      HLogSplitter logSplitter=HLogSplitter.createLogSplitter(conf,HBASEDIR,HLOGDIR,OLDLOGDIR,fs);
      splits=logSplitter.splitLog(latch);
    }
 catch (    IOException ex) {
      LOG.warn("testSplitWillNotTouchLogsIfNewHLogGetsCreatedAfterSplitStarted",ex);
    }
    FileStatus[] files=fs.listStatus(HLOGDIR);
    if (files == null)     fail("no files in " + HLOGDIR + " with splits "+ splits);
    int logFilesNumber=files.length;
    assertEquals("Log files should not be archived if there's an extra file after split",NUM_WRITERS + 1,logFilesNumber);
  }
  finally {
    stop.set(true);
  }
}
