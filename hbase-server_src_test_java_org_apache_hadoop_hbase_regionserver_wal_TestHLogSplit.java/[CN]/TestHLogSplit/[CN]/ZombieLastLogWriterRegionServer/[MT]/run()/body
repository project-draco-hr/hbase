{
  if (stop.get()) {
    return;
  }
  flushToConsole("starting");
  byte[] regionBytes=Bytes.toBytes(this.regionName);
  boolean created=false;
  while (true) {
    try {
      if (!created) {
        fs.mkdirs(new Path(new Path(hbaseDir,Bytes.toString(this.tableName)),this.regionName));
        created=true;
      }
      appendEntry(lastLogWriter,TABLE_NAME,regionBytes,("r" + editsCount).getBytes(),regionBytes,QUALIFIER,VALUE,0);
      lastLogWriter.sync();
      editsCount.incrementAndGet();
      try {
        Thread.sleep(1);
      }
 catch (      InterruptedException e) {
      }
    }
 catch (    IOException ex) {
      if (ex instanceof RemoteException) {
        flushToConsole("Juliet: got RemoteException " + ex.getMessage() + " while writing "+ (editsCount.get() + 1));
        break;
      }
 else {
        assertTrue("Failed to write " + editsCount.get(),false);
      }
    }
  }
}
