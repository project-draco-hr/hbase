{
  row=makeMTRow(RAND.nextInt(NUM_MT_ROWS));
  int transferAmount=RAND.nextInt(MAX_TRANSFER_AMT * 2) - MAX_TRANSFER_AMT;
  int table1Index=RAND.nextInt(tables.length);
  int table2Index;
  do {
    table2Index=RAND.nextInt(tables.length);
  }
 while (table2Index == table1Index);
  TransactionalTable table1=tables[table1Index];
  TransactionalTable table2=tables[table2Index];
  TransactionState transactionState=transactionManager.beginTransaction();
  int table1Amount=Bytes.toInt(table1.get(transactionState,row,COL).getValue());
  int table2Amount=Bytes.toInt(table2.get(transactionState,row,COL).getValue());
  table1Amount-=transferAmount;
  table2Amount+=transferAmount;
  BatchUpdate update=new BatchUpdate(row);
  update.put(COL,Bytes.toBytes(table1Amount));
  table1.commit(transactionState,update);
  update=new BatchUpdate(row);
  update.put(COL,Bytes.toBytes(table2Amount));
  table2.commit(transactionState,update);
  super.preCommitSleep();
  transactionManager.tryCommit(transactionState);
  LOG.trace(Bytes.toString(table1.getTableName()) + ": " + table1Amount);
  LOG.trace(Bytes.toString(table2.getTableName()) + ": " + table2Amount);
}
