{
  final String path=packageName.replace('.','/');
  final Pattern jarResourceRe=Pattern.compile("^file:(.+\\.jar)!/" + path + "$");
  Enumeration<URL> resources=ClassLoader.getSystemClassLoader().getResources(path);
  List<File> dirs=new ArrayList<File>();
  List<String> jars=new ArrayList<String>();
  while (resources.hasMoreElements()) {
    URL resource=resources.nextElement();
    String resourcePath=resource.getFile();
    Matcher matcher=jarResourceRe.matcher(resourcePath);
    boolean isJar=matcher.find();
    resourcePath=isJar ? matcher.group(1) : resourcePath;
    if (null == this.resourcePathFilter || this.resourcePathFilter.isCandidatePath(resourcePath,isJar)) {
      LOG.debug("Looking in " + resourcePath + "; isJar="+ isJar);
      if (isJar) {
        jars.add(resourcePath);
      }
 else {
        dirs.add(new File(resourcePath));
      }
    }
  }
  Set<Class<?>> classes=new HashSet<Class<?>>();
  for (  File directory : dirs) {
    classes.addAll(findClassesFromFiles(directory,packageName,proceedOnExceptions));
  }
  for (  String jarFileName : jars) {
    classes.addAll(findClassesFromJar(jarFileName,packageName,proceedOnExceptions));
  }
  return classes;
}
