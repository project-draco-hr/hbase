{
  Set<Class<?>> classes=new HashSet<Class<?>>();
  if (!baseDirectory.exists()) {
    LOG.warn("Failed to find " + baseDirectory.getAbsolutePath());
    return classes;
  }
  File[] files=baseDirectory.listFiles(this.fileFilter);
  if (files == null) {
    LOG.warn("Failed to get files from " + baseDirectory.getAbsolutePath());
    return classes;
  }
  for (  File file : files) {
    final String fileName=file.getName();
    if (file.isDirectory()) {
      classes.addAll(findClassesFromFiles(file,packageName + "." + fileName,proceedOnExceptions));
    }
 else {
      String className=packageName + '.' + fileName.substring(0,fileName.length() - CLASS_EXT.length());
      Class<?> c=makeClass(className,proceedOnExceptions);
      if (c != null) {
        if (!classes.add(c)) {
          LOG.warn("Ignoring duplicate class " + className);
        }
      }
    }
  }
  return classes;
}
