{
  if (!compactingMemStore.hasCompactibleSegments())   return false;
  List<SegmentScanner> scanners=new ArrayList<SegmentScanner>();
  versionedList=compactingMemStore.getCompactibleSegments();
  for (  Segment segment : versionedList.getStoreSegments()) {
    scanners.add(segment.getSegmentScanner(Long.MAX_VALUE));
  }
  scanner=new MemStoreScanner(compactingMemStore,scanners,Long.MAX_VALUE,MemStoreScanner.Type.COMPACT_FORWARD);
  smallestReadPoint=compactingMemStore.getSmallestReadPoint();
  compactingScanner=createScanner(compactingMemStore.getStore());
  LOG.info("Starting the MemStore in-memory compaction for store " + compactingMemStore.getStore().getColumnFamilyName());
  doCompaction();
  return true;
}
