{
  ImmutableSegment result=null;
  boolean resultSwapped=false;
  try {
    if (shouldFlatten()) {
      LOG.debug("In-Memory compaction does not pay off - storing the flattened segment" + " for store: " + compactingMemStore.getFamilyName());
      compactingMemStore.flattenOneSegment(versionedList.getVersion());
      return;
    }
    if (!isInterrupted.get()) {
      result=compact(immutCellsNum);
    }
    if (!isInterrupted.get()) {
      if (resultSwapped=compactingMemStore.swapCompactedSegments(versionedList,result)) {
        compactingMemStore.updateLowestUnflushedSequenceIdInWAL(true);
      }
    }
  }
 catch (  Exception e) {
    LOG.debug("Interrupting the MemStore in-memory compaction for store " + compactingMemStore.getFamilyName());
    Thread.currentThread().interrupt();
  }
 finally {
    if ((result != null) && (!resultSwapped))     result.close();
    releaseResources();
  }
}
