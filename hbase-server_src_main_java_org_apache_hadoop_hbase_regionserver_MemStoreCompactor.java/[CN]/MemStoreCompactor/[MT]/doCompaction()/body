{
  ImmutableSegment result=SegmentFactory.instance().createImmutableSegment(compactingMemStore.getConfiguration(),compactingMemStore.getComparator(),CompactingMemStore.DEEP_OVERHEAD_PER_PIPELINE_ITEM);
  try {
    compactSegments(result);
    if (!isInterrupted.get()) {
      if (compactingMemStore.swapCompactedSegments(versionedList,result)) {
        compactingMemStore.updateLowestUnflushedSequenceIdInWAL(true);
      }
 else {
        result.close();
      }
    }
 else {
      result.close();
    }
  }
 catch (  Exception e) {
    LOG.debug("Interrupting the MemStore in-memory compaction for store " + compactingMemStore.getFamilyName());
    Thread.currentThread().interrupt();
    return;
  }
 finally {
    releaseResources();
    compactingMemStore.setInMemoryFlushInProgress(false);
  }
}
