{
  String metricPrefix=SchemaMetrics.generateSchemaMetricsPrefix(tableName,cfName);
  for (  BlockCategory blockCategory : BlockCategory.values()) {
    for (    boolean isCompaction : BOOL_VALUES) {
      for (      BlockMetricType metricType : BlockMetricType.values()) {
        if (!metricType.compactionAware && isCompaction) {
          continue;
        }
        StringBuilder sb=new StringBuilder(metricPrefix);
        if (blockCategory != BlockCategory.ALL_CATEGORIES && blockCategory != BlockCategory.META) {
          String categoryStr=blockCategory.toString();
          categoryStr=categoryStr.charAt(0) + categoryStr.substring(1).toLowerCase();
          sb.append(BLOCK_TYPE_PREFIX + categoryStr + ".");
        }
        if (metricType.compactionAware) {
          sb.append(isCompaction ? "compaction" : "fs");
        }
        if (blockCategory == BlockCategory.META) {
          sb.append(META_BLOCK_CATEGORY_STR);
        }
        sb.append(metricType);
        int i=getBlockMetricIndex(blockCategory,isCompaction,metricType);
        blockMetricNames[i]=sb.toString().intern();
        blockMetricTimeVarying[i]=metricType.timeVarying;
      }
    }
  }
  for (  boolean isInBloom : BOOL_VALUES) {
    bloomMetricNames[isInBloom ? 1 : 0]=metricPrefix + (isInBloom ? "keyMaybeInBloomCnt" : "keyNotInBloomCnt");
  }
  for (  StoreMetricType storeMetric : StoreMetricType.values()) {
    storeMetricNames[storeMetric.ordinal()]=metricPrefix + storeMetric.toString();
  }
}
