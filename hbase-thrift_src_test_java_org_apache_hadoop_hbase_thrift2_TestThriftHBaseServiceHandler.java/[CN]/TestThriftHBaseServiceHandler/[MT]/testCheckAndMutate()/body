{
  ThriftHBaseServiceHandler handler=createHandler();
  ByteBuffer table=wrap(tableAname);
  ByteBuffer row=wrap("row".getBytes());
  ByteBuffer family=wrap(familyAname);
  ByteBuffer qualifier=wrap(qualifierAname);
  ByteBuffer value=wrap(valueAname);
  List<TColumnValue> columnValuesB=new ArrayList<TColumnValue>();
  TColumnValue columnValueB=new TColumnValue(family,wrap(qualifierBname),wrap(valueBname));
  columnValuesB.add(columnValueB);
  TPut putB=new TPut(row,columnValuesB);
  putB.setColumnValues(columnValuesB);
  TRowMutations tRowMutations=new TRowMutations(row,Arrays.<TMutation>asList(TMutation.put(putB)));
  TResult result=handler.get(table,new TGet(row));
  assertEquals(0,result.getColumnValuesSize());
  assertFalse("Expected condition to not pass",handler.checkAndMutate(table,row,family,qualifier,TCompareOp.EQUAL,value,tRowMutations));
  List<TColumnValue> columnValuesA=new ArrayList<TColumnValue>();
  TColumnValue columnValueA=new TColumnValue(family,qualifier,value);
  columnValuesA.add(columnValueA);
  handler.put(table,new TPut(row,columnValuesA));
  result=handler.get(table,new TGet(row));
  assertEquals(1,result.getColumnValuesSize());
  assertTColumnValueEqual(columnValueA,result.getColumnValues().get(0));
  assertTrue("Expected condition to pass",handler.checkAndMutate(table,row,family,qualifier,TCompareOp.EQUAL,value,tRowMutations));
  result=handler.get(table,new TGet(row));
  assertEquals(2,result.getColumnValuesSize());
  assertTColumnValueEqual(columnValueA,result.getColumnValues().get(0));
  assertTColumnValueEqual(columnValueB,result.getColumnValues().get(1));
}
