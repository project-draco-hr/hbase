{
  ThriftHBaseServiceHandler handler=createHandler();
  byte[] rowName="testCheckAndDelete".getBytes();
  ByteBuffer table=wrap(tableAname);
  List<TColumnValue> columnValuesA=new ArrayList<TColumnValue>();
  TColumnValue columnValueA=new TColumnValue(wrap(familyAname),wrap(qualifierAname),wrap(valueAname));
  columnValuesA.add(columnValueA);
  TPut putA=new TPut(wrap(rowName),columnValuesA);
  putA.setColumnValues(columnValuesA);
  List<TColumnValue> columnValuesB=new ArrayList<TColumnValue>();
  TColumnValue columnValueB=new TColumnValue(wrap(familyBname),wrap(qualifierBname),wrap(valueBname));
  columnValuesB.add(columnValueB);
  TPut putB=new TPut(wrap(rowName),columnValuesB);
  putB.setColumnValues(columnValuesB);
  handler.put(table,putB);
  TDelete delete=new TDelete(wrap(rowName));
  assertFalse(handler.checkAndDelete(table,wrap(rowName),wrap(familyAname),wrap(qualifierAname),wrap(valueAname),delete));
  TGet get=new TGet(wrap(rowName));
  TResult result=handler.get(table,get);
  assertArrayEquals(rowName,result.getRow());
  assertTColumnValuesEqual(columnValuesB,result.getColumnValues());
  handler.put(table,putA);
  assertTrue(handler.checkAndDelete(table,wrap(rowName),wrap(familyAname),wrap(qualifierAname),wrap(valueAname),delete));
  result=handler.get(table,get);
  assertFalse(result.isSetRow());
  assertEquals(0,result.getColumnValuesSize());
}
