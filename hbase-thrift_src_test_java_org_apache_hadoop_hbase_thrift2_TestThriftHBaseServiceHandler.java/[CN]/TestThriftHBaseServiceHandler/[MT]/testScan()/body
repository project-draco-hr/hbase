{
  ThriftHBaseServiceHandler handler=createHandler();
  ByteBuffer table=wrap(tableAname);
  TColumnValue columnValue=new TColumnValue(wrap(familyAname),wrap(qualifierAname),wrap(valueAname));
  List<TColumnValue> columnValues=new ArrayList<TColumnValue>();
  columnValues.add(columnValue);
  for (int i=0; i < 10; i++) {
    TPut put=new TPut(wrap(("testScan" + i).getBytes()),columnValues);
    handler.put(table,put);
  }
  TScan scan=new TScan();
  List<TColumn> columns=new ArrayList<TColumn>();
  TColumn column=new TColumn();
  column.setFamily(familyAname);
  column.setQualifier(qualifierAname);
  columns.add(column);
  scan.setColumns(columns);
  scan.setStartRow("testScan".getBytes());
  scan.setStopRow("testScan\uffff".getBytes());
  int scanId=handler.openScanner(table,scan);
  List<TResult> results=handler.getScannerRows(scanId,10);
  assertEquals(10,results.size());
  for (int i=0; i < 10; i++) {
    assertArrayEquals(("testScan" + i).getBytes(),results.get(i).getRow());
  }
  results=handler.getScannerRows(scanId,10);
  assertEquals(0,results.size());
  handler.closeScanner(scanId);
  try {
    handler.getScannerRows(scanId,10);
    fail("Scanner id should be invalid");
  }
 catch (  TIllegalArgument e) {
  }
}
