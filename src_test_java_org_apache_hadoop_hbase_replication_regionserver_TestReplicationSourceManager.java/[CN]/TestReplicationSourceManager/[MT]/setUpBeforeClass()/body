{
  conf=HBaseConfiguration.create();
  conf.set("replication.replicationsource.implementation",ReplicationSourceDummy.class.getCanonicalName());
  conf.setBoolean(HConstants.REPLICATION_ENABLE_KEY,true);
  utility=new HBaseTestingUtility(conf);
  utility.startMiniZKCluster();
  zkw=ZooKeeperWrapper.createInstance(conf,"test");
  zkw.writeZNode("/hbase","replication","");
  zkw.writeZNode("/hbase/replication","master",conf.get(HConstants.ZOOKEEPER_QUORUM) + ":" + conf.get("hbase.zookeeper.property.clientPort")+ ":/1");
  zkw.writeZNode("/hbase/replication/peers","1",conf.get(HConstants.ZOOKEEPER_QUORUM) + ":" + conf.get("hbase.zookeeper.property.clientPort")+ ":/1");
  HRegionServer server=new HRegionServer(conf);
  ReplicationZookeeperWrapper helper=new ReplicationZookeeperWrapper(server.getZooKeeperWrapper(),conf,REPLICATING,"123456789");
  fs=FileSystem.get(conf);
  oldLogDir=new Path(utility.getTestDir(),HConstants.HREGION_OLDLOGDIR_NAME);
  logDir=new Path(utility.getTestDir(),HConstants.HREGION_LOGDIR_NAME);
  manager=new ReplicationSourceManager(helper,conf,STOPPER,fs,REPLICATING,logDir,oldLogDir);
  manager.addSource("1");
  htd=new HTableDescriptor(test);
  HColumnDescriptor col=new HColumnDescriptor("f1");
  col.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  htd.addFamily(col);
  col=new HColumnDescriptor("f2");
  col.setScope(HConstants.REPLICATION_SCOPE_LOCAL);
  htd.addFamily(col);
  hri=new HRegionInfo(htd,r1,r2);
}
