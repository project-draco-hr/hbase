{
  LOG.info("testHFileReplicationForConfiguredTableCfs");
  int numClusters=2;
  Table[] htables=null;
  try {
    startMiniClusters(numClusters);
    createTableOnClusters(table);
    htables=getHTablesOnClusters(tableName);
    addPeer("1",0,1,tableName.getNameAsString() + ":" + Bytes.toString(famName));
    byte[][][] hfileRanges=new byte[][][]{new byte[][]{Bytes.toBytes("aaaa"),Bytes.toBytes("cccc")},new byte[][]{Bytes.toBytes("ddd"),Bytes.toBytes("fff")}};
    int numOfRows=100;
    int[] expectedCounts=new int[]{hfileRanges.length * numOfRows,hfileRanges.length * numOfRows};
    loadAndValidateHFileReplication("load_f",0,new int[]{1},row,famName,htables,hfileRanges,numOfRows,expectedCounts,true);
    hfileRanges=new byte[][][]{new byte[][]{Bytes.toBytes("gggg"),Bytes.toBytes("iiii")},new byte[][]{Bytes.toBytes("jjj"),Bytes.toBytes("lll")}};
    numOfRows=100;
    int[] newExpectedCounts=new int[]{hfileRanges.length * numOfRows + expectedCounts[0],expectedCounts[1]};
    loadAndValidateHFileReplication("load_f1",0,new int[]{1},row,famName1,htables,hfileRanges,numOfRows,newExpectedCounts,false);
    wait(0,htables[0],hfileRanges.length * numOfRows + expectedCounts[0]);
    Thread.sleep((NB_RETRIES / 2) * SLEEP_TIME);
    wait(1,htables[1],expectedCounts[1]);
  }
  finally {
    close(htables);
    shutDownMiniClusters();
  }
}
