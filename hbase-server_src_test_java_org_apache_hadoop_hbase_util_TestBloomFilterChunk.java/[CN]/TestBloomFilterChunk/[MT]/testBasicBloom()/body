{
  BloomFilterChunk bf1=new BloomFilterChunk(1000,(float)0.01,Hash.MURMUR_HASH,0);
  BloomFilterChunk bf2=new BloomFilterChunk(1000,(float)0.01,Hash.MURMUR_HASH,0);
  bf1.allocBloom();
  bf2.allocBloom();
  byte[] key1={1,2,3,4,5,6,7,8,9};
  byte[] key2={1,2,3,4,5,6,7,8,7};
  bf1.add(key1);
  bf2.add(key2);
  assertTrue(BloomFilterUtil.contains(key1,0,key1.length,bf1.bloom,0,(int)bf1.byteSize,bf1.hash,bf1.hashCount));
  assertFalse(BloomFilterUtil.contains(key2,0,key2.length,bf1.bloom,0,(int)bf1.byteSize,bf1.hash,bf1.hashCount));
  assertFalse(BloomFilterUtil.contains(key1,0,key1.length,bf2.bloom,0,(int)bf2.byteSize,bf2.hash,bf2.hashCount));
  assertTrue(BloomFilterUtil.contains(key2,0,key2.length,bf2.bloom,0,(int)bf2.byteSize,bf2.hash,bf2.hashCount));
  byte[] bkey={1,2,3,4};
  byte[] bval="this is a much larger byte array".getBytes();
  bf1.add(bkey);
  bf1.add(bval,1,bval.length - 1);
  assertTrue(BloomFilterUtil.contains(bkey,0,bkey.length,bf1.bloom,0,(int)bf1.byteSize,bf1.hash,bf1.hashCount));
  assertTrue(BloomFilterUtil.contains(bval,1,bval.length - 1,bf1.bloom,0,(int)bf1.byteSize,bf1.hash,bf1.hashCount));
  assertFalse(BloomFilterUtil.contains(bval,0,bval.length,bf1.bloom,0,(int)bf1.byteSize,bf1.hash,bf1.hashCount));
  ByteArrayOutputStream bOut=new ByteArrayOutputStream();
  bf1.writeBloom(new DataOutputStream(bOut));
  ByteBuffer bb=ByteBuffer.wrap(bOut.toByteArray());
  BloomFilterChunk newBf1=new BloomFilterChunk(1000,(float)0.01,Hash.MURMUR_HASH,0);
  assertTrue(BloomFilterUtil.contains(key1,0,key1.length,bb,0,(int)newBf1.byteSize,newBf1.hash,newBf1.hashCount));
  assertFalse(BloomFilterUtil.contains(key2,0,key2.length,bb,0,(int)newBf1.byteSize,newBf1.hash,newBf1.hashCount));
  assertTrue(BloomFilterUtil.contains(bkey,0,bkey.length,bb,0,(int)newBf1.byteSize,newBf1.hash,newBf1.hashCount));
  assertTrue(BloomFilterUtil.contains(bval,1,bval.length - 1,bb,0,(int)newBf1.byteSize,newBf1.hash,newBf1.hashCount));
  assertFalse(BloomFilterUtil.contains(bval,0,bval.length,bb,0,(int)newBf1.byteSize,newBf1.hash,newBf1.hashCount));
  assertFalse(BloomFilterUtil.contains(bval,0,bval.length,bb,0,(int)newBf1.byteSize,newBf1.hash,newBf1.hashCount));
  System.out.println("Serialized as " + bOut.size() + " bytes");
  assertTrue(bOut.size() - bf1.byteSize < 10);
}
