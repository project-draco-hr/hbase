{
  float err=(float)0.01;
  BloomFilterChunk b=new BloomFilterChunk(10 * 1000 * 1000,(float)err,Hash.MURMUR_HASH,3);
  b.allocBloom();
  long startTime=System.currentTimeMillis();
  long origSize=b.getByteSize();
  for (int i=0; i < 1 * 1000 * 1000; ++i) {
    b.add(Bytes.toBytes(i));
  }
  long endTime=System.currentTimeMillis();
  System.out.println("Total Add time = " + (endTime - startTime) + "ms");
  startTime=System.currentTimeMillis();
  b.compactBloom();
  endTime=System.currentTimeMillis();
  System.out.println("Total Fold time = " + (endTime - startTime) + "ms");
  assertTrue(origSize >= b.getByteSize() << 3);
  startTime=System.currentTimeMillis();
  int falsePositives=0;
  for (int i=0; i < 2 * 1000 * 1000; ++i) {
    byte[] bytes=Bytes.toBytes(i);
    if (BloomFilterUtil.contains(bytes,0,bytes.length,b.bloom,0,(int)b.byteSize,b.hash,b.hashCount)) {
      if (i >= 1 * 1000 * 1000)       falsePositives++;
    }
 else {
      assertFalse(i < 1 * 1000 * 1000);
    }
  }
  endTime=System.currentTimeMillis();
  System.out.println("Total Contains time = " + (endTime - startTime) + "ms");
  System.out.println("False Positive = " + falsePositives);
  assertTrue(falsePositives <= (1 * 1000 * 1000) * err);
}
