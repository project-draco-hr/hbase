{
  conf1=HBaseConfiguration.create();
  conf1.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/1");
  conf1.setInt("hbase.regionserver.hlog.blocksize",1024 * 20);
  conf1.setInt("replication.source.size.capacity",1024);
  conf1.setLong("replication.source.sleepforretries",100);
  conf1.setInt("hbase.regionserver.maxlogs",10);
  conf1.setLong("hbase.master.logcleaner.ttl",10);
  conf1.setLong(HConstants.THREAD_WAKE_FREQUENCY,100);
  conf1.setStrings(CoprocessorHost.USER_REGION_COPROCESSOR_CONF_KEY,"org.apache.hadoop.hbase.replication.TestMasterReplication$CoprocessorCounter");
  utility1=new HBaseTestingUtility(conf1);
  utility1.startMiniZKCluster();
  MiniZooKeeperCluster miniZK=utility1.getZkCluster();
  new ZooKeeperWatcher(conf1,"cluster1",null,true);
  conf2=new Configuration(conf1);
  conf2.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/2");
  conf3=new Configuration(conf1);
  conf3.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/3");
  utility2=new HBaseTestingUtility(conf2);
  utility2.setZkCluster(miniZK);
  new ZooKeeperWatcher(conf2,"cluster3",null,true);
  utility3=new HBaseTestingUtility(conf3);
  utility3.setZkCluster(miniZK);
  new ZooKeeperWatcher(conf3,"cluster3",null,true);
  table=new HTableDescriptor(tableName);
  HColumnDescriptor fam=new HColumnDescriptor(famName);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  table.addFamily(fam);
  fam=new HColumnDescriptor(noRepfamName);
  table.addFamily(fam);
  tabA=new HTableDescriptor(tabAName);
  fam=new HColumnDescriptor(f1Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabA.addFamily(fam);
  fam=new HColumnDescriptor(f2Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabA.addFamily(fam);
  fam=new HColumnDescriptor(f3Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabA.addFamily(fam);
  tabB=new HTableDescriptor(tabBName);
  fam=new HColumnDescriptor(f1Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabB.addFamily(fam);
  fam=new HColumnDescriptor(f2Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabB.addFamily(fam);
  fam=new HColumnDescriptor(f3Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabB.addFamily(fam);
  tabC=new HTableDescriptor(tabCName);
  fam=new HColumnDescriptor(f1Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabC.addFamily(fam);
  fam=new HColumnDescriptor(f2Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabC.addFamily(fam);
  fam=new HColumnDescriptor(f3Name);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  tabC.addFamily(fam);
  utility1.startMiniCluster();
  utility2.startMiniCluster();
  utility3.startMiniCluster();
}
