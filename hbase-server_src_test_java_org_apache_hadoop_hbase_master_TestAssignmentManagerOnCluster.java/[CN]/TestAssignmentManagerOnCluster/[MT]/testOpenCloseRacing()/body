{
  String table="testOpenCloseRacing";
  try {
    HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(table));
    desc.addFamily(new HColumnDescriptor(FAMILY));
    admin.createTable(desc);
    HTable meta=new HTable(conf,TableName.META_TABLE_NAME);
    HRegionInfo hri=new HRegionInfo(desc.getTableName(),Bytes.toBytes("A"),Bytes.toBytes("Z"));
    MetaEditor.addRegionToMeta(meta,hri);
    MyRegionObserver.postOpenEnabled.set(true);
    MyRegionObserver.postOpenCalled=false;
    HMaster master=TEST_UTIL.getHBaseCluster().getMaster();
    master.assignRegion(hri);
    long end=EnvironmentEdgeManager.currentTimeMillis() + 20000;
    while (!MyRegionObserver.postOpenCalled) {
      assertFalse("Timed out waiting for postOpen to be called",EnvironmentEdgeManager.currentTimeMillis() > end);
      Thread.sleep(300);
    }
    AssignmentManager am=master.getAssignmentManager();
    am.unassign(hri);
    RegionState state=am.getRegionStates().getRegionState(hri);
    ServerName oldServerName=state.getServerName();
    assertTrue(state.isPendingOpenOrOpening() && oldServerName != null);
    MyRegionObserver.postOpenEnabled.set(false);
    am.assign(hri,true,true);
    am.waitOnRegionToClearRegionsInTransition(hri);
    assertTrue(am.waitForAssignment(hri));
    ServerName serverName=master.getAssignmentManager().getRegionStates().getRegionServerOfRegion(hri);
    TEST_UTIL.assertRegionOnlyOnServer(hri,serverName,200);
    assertFalse("Region should assigned on a new region server",oldServerName.equals(serverName));
  }
  finally {
    MyRegionObserver.postOpenEnabled.set(false);
    TEST_UTIL.deleteTable(Bytes.toBytes(table));
  }
}
