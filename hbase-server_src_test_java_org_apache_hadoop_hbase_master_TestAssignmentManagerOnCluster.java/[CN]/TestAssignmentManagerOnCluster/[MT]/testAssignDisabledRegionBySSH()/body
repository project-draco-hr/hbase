{
  TableName table=TableName.valueOf("testAssignDisabledRegionBySSH");
  MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
  MyMaster master;
  try {
    HTableDescriptor desc=new HTableDescriptor(table);
    desc.addFamily(new HColumnDescriptor(FAMILY));
    admin.createTable(desc);
    Table meta=TEST_UTIL.getConnection().getTable(TableName.META_TABLE_NAME);
    HRegionInfo hri=new HRegionInfo(desc.getTableName(),Bytes.toBytes("A"),Bytes.toBytes("Z"));
    MetaTableAccessor.addRegionToMeta(meta,hri);
    master=(MyMaster)cluster.getMaster();
    AssignmentManager am=master.getAssignmentManager();
    am.assign(hri);
    RegionStates regionStates=am.getRegionStates();
    ServerName metaServer=regionStates.getRegionServerOfRegion(HRegionInfo.FIRST_META_REGIONINFO);
    ServerName oldServerName=null;
    while (true) {
      assertTrue(am.waitForAssignment(hri));
      RegionState state=regionStates.getRegionState(hri);
      oldServerName=state.getServerName();
      if (!ServerName.isSameHostnameAndPort(oldServerName,metaServer)) {
        MyRegionServer.abortedServer=oldServerName;
        break;
      }
      int i=cluster.getServerWithMeta();
      HRegionServer rs=cluster.getRegionServer(i == 0 ? 1 : 0);
      oldServerName=rs.getServerName();
      master.move(hri.getEncodedNameAsBytes(),Bytes.toBytes(oldServerName.getServerName()));
    }
    assertTrue(regionStates.isRegionOnline(hri));
    assertEquals(oldServerName,regionStates.getRegionServerOfRegion(hri));
    master.disableTable(hri.getTable(),HConstants.NO_NONCE,HConstants.NO_NONCE);
    cluster.killRegionServer(oldServerName);
    cluster.waitForRegionServerToStop(oldServerName,-1);
    ServerManager serverManager=master.getServerManager();
    while (!serverManager.isServerDead(oldServerName) || serverManager.getDeadServers().areDeadServersInProgress()) {
      Thread.sleep(100);
    }
    TEST_UTIL.waitUntilNoRegionsInTransition(60000);
    assertTrue(regionStates.isRegionOffline(hri));
  }
  finally {
    MyRegionServer.abortedServer=null;
    TEST_UTIL.deleteTable(table);
    cluster.startRegionServer();
  }
}
