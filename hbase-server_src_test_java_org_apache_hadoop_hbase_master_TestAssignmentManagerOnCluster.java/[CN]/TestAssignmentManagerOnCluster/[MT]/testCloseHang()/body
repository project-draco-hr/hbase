{
  String table="testCloseHang";
  try {
    HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(table));
    desc.addFamily(new HColumnDescriptor(FAMILY));
    admin.createTable(desc);
    HTable meta=new HTable(conf,TableName.META_TABLE_NAME);
    HRegionInfo hri=new HRegionInfo(desc.getTableName(),Bytes.toBytes("A"),Bytes.toBytes("Z"));
    MetaTableAccessor.addRegionToMeta(meta,hri);
    HMaster master=TEST_UTIL.getHBaseCluster().getMaster();
    master.assignRegion(hri);
    AssignmentManager am=master.getAssignmentManager();
    assertTrue(am.waitForAssignment(hri));
    while (!HBaseTestingUtility.getAllOnlineRegions(TEST_UTIL.getHBaseCluster()).contains(hri.getRegionNameAsString())) {
      Threads.sleep(100);
    }
    MyRegionObserver.postCloseEnabled.set(true);
    am.unassign(hri);
    am.server.getConfiguration().setLong(AssignmentManager.ALREADY_IN_TRANSITION_WAITTIME,1000);
    am.getRegionStates().updateRegionState(hri,RegionState.State.FAILED_CLOSE);
    am.unassign(hri);
    MyRegionObserver.postCloseEnabled.set(false);
    am.waitOnRegionToClearRegionsInTransition(hri);
    assertTrue(am.waitForAssignment(hri));
    ServerName serverName=master.getAssignmentManager().getRegionStates().getRegionServerOfRegion(hri);
    TEST_UTIL.assertRegionOnServer(hri,serverName,200);
  }
  finally {
    MyRegionObserver.postCloseEnabled.set(false);
    TEST_UTIL.deleteTable(Bytes.toBytes(table));
  }
}
