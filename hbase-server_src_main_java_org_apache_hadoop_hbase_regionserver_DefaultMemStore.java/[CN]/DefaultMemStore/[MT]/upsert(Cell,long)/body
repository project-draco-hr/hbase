{
  KeyValue kv=KeyValueUtil.ensureKeyValue(cell);
  long addedSize=internalAdd(kv);
  KeyValue firstKv=KeyValue.createFirstOnRow(kv.getRowArray(),kv.getRowOffset(),kv.getRowLength(),kv.getFamilyArray(),kv.getFamilyOffset(),kv.getFamilyLength(),kv.getQualifierArray(),kv.getQualifierOffset(),kv.getQualifierLength());
  SortedSet<KeyValue> ss=kvset.tailSet(firstKv);
  Iterator<KeyValue> it=ss.iterator();
  int versionsVisible=0;
  while (it.hasNext()) {
    KeyValue cur=it.next();
    if (kv == cur) {
      continue;
    }
    if (kv.matchingRow(cur) && kv.matchingQualifier(cur)) {
      if (cur.getTypeByte() == KeyValue.Type.Put.getCode() && cur.getMvccVersion() <= readpoint) {
        if (versionsVisible > 1) {
          long delta=heapSizeChange(cur,true);
          addedSize-=delta;
          this.size.addAndGet(-delta);
          it.remove();
          setOldestEditTimeToNow();
        }
 else {
          versionsVisible++;
        }
      }
    }
 else {
      break;
    }
  }
  return addedSize;
}
