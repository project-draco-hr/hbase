{
  if (!fsBlockWriter.isWriting() || fsBlockWriter.blockSizeWritten() == 0)   return;
  long startTimeNs=System.nanoTime();
  if (firstDataBlockOffset == -1) {
    firstDataBlockOffset=outputStream.getPos();
  }
  lastDataBlockOffset=outputStream.getPos();
  fsBlockWriter.writeHeaderAndData(outputStream);
  int onDiskSize=fsBlockWriter.getOnDiskSizeWithHeader();
  dataBlockIndexWriter.addEntry(firstKeyInBlock,lastDataBlockOffset,onDiskSize);
  totalUncompressedBytes+=fsBlockWriter.getUncompressedSizeWithHeader();
  HFile.writeTimeNano.addAndGet(System.nanoTime() - startTimeNs);
  HFile.writeOps.incrementAndGet();
  if (cacheConf.shouldCacheDataOnWrite()) {
    HFileBlock cBlock=fsBlockWriter.getBlockForCaching();
    HFileBlock codedBlock=blockEncoder.beforeBlockCache(cBlock,includeMemstoreTS);
    passSchemaMetricsTo(codedBlock);
    cacheConf.getBlockCache().cacheBlock(HFile.getBlockCacheKey(name,lastDataBlockOffset),codedBlock);
  }
}
