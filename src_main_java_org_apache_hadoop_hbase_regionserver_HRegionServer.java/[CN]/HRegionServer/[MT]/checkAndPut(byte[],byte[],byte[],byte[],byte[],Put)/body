{
  checkOpen();
  if (regionName == null) {
    throw new IOException("Invalid arguments to checkAndPut " + "regionName is null");
  }
  HRegion region=getRegion(regionName);
  Integer lock=getLockFromId(put.getLockId());
  WritableByteArrayComparable comparator=new BinaryComparator(value);
  if (region.getCoprocessorHost() != null) {
    Boolean result=region.getCoprocessorHost().preCheckAndPut(row,family,qualifier,CompareOp.EQUAL,comparator,put);
    if (result != null) {
      return result.booleanValue();
    }
  }
  boolean result=checkAndMutate(regionName,row,family,qualifier,CompareOp.EQUAL,new BinaryComparator(value),put,lock);
  if (region.getCoprocessorHost() != null) {
    result=region.getCoprocessorHost().postCheckAndPut(row,family,qualifier,CompareOp.EQUAL,comparator,put,result);
  }
  return result;
}
