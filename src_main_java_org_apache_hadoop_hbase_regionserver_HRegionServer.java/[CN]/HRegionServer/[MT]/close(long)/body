{
  try {
    checkOpen();
    requestCount.incrementAndGet();
    String scannerName=String.valueOf(scannerId);
    InternalScanner s=scanners.get(scannerName);
    HRegion region=null;
    if (s != null) {
      if (s instanceof HRegion.RegionScanner) {
        HRegion.RegionScanner rs=(HRegion.RegionScanner)s;
        region=getRegion(rs.getRegionName().getRegionName());
      }
 else {
        throw new IOException("InternalScanner implementation is expected " + "to be HRegion.RegionScanner.");
      }
      if (region != null && region.getCoprocessorHost() != null) {
        if (region.getCoprocessorHost().preScannerClose(s)) {
          return;
        }
      }
    }
    s=scanners.remove(scannerName);
    if (s != null) {
      s.close();
      this.leases.cancelLease(scannerName);
      if (region != null && region.getCoprocessorHost() != null) {
        region.getCoprocessorHost().postScannerClose(s);
      }
    }
  }
 catch (  Throwable t) {
    throw convertThrowableToIOE(cleanup(t));
  }
}
