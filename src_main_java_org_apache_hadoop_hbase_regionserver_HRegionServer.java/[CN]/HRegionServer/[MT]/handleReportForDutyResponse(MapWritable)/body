{
  try {
    for (    Map.Entry<Writable,Writable> e : c.entrySet()) {
      String key=e.getKey().toString();
      String value=e.getValue().toString();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Config from master: " + key + "="+ value);
      }
      this.conf.set(key,value);
    }
    String hra=conf.get("hbase.regionserver.address");
    if (hra != null) {
      HServerAddress hsa=new HServerAddress(hra,this.serverInfo.getServerAddress().getPort());
      LOG.info("Master passed us address to use. Was=" + this.serverInfo.getServerAddress() + ", Now="+ hsa.toString());
      this.serverInfo.setServerAddress(hsa);
    }
    if (this.conf.get("mapred.task.id") == null) {
      this.conf.set("mapred.task.id","hb_rs_" + this.serverInfo.getServerName() + "_"+ System.currentTimeMillis());
    }
    this.conf.set("fs.defaultFS",this.conf.get("hbase.rootdir"));
    this.fs=FileSystem.get(this.conf);
    this.rootDir=new Path(this.conf.get(HConstants.HBASE_DIR));
    this.hlog=setupWALAndReplication();
    this.metrics=new RegionServerMetrics();
    startServiceThreads();
    LOG.info("Serving as " + this.serverInfo.getServerName() + ", RPC listening on "+ this.server.getListenerAddress()+ ", sessionid=0x"+ Long.toHexString(this.zooKeeper.getZooKeeper().getSessionId()));
    isOnline=true;
  }
 catch (  Throwable e) {
    this.isOnline=false;
    stop("Failed initialization");
    throw convertThrowableToIOE(cleanup(e,"Failed init"),"Region server startup failed");
  }
}
