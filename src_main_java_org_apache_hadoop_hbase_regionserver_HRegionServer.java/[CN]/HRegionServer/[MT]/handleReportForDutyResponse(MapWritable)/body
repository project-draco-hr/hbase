{
  try {
    for (    Map.Entry<Writable,Writable> e : c.entrySet()) {
      String key=e.getKey().toString();
      if (key.equals(HConstants.KEY_FOR_HOSTNAME_SEEN_BY_MASTER)) {
        String hostnameFromMasterPOV=e.getValue().toString();
        this.serverNameFromMasterPOV=new ServerName(hostnameFromMasterPOV,this.isa.getPort(),this.startcode);
        LOG.info("Master passed us hostname to use. Was=" + this.isa.getHostName() + ", Now="+ this.serverNameFromMasterPOV.getHostname());
        continue;
      }
      String value=e.getValue().toString();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Config from master: " + key + "="+ value);
      }
      this.conf.set(key,value);
    }
    if (this.conf.get("mapred.task.id") == null) {
      this.conf.set("mapred.task.id","hb_rs_" + this.serverNameFromMasterPOV.toString());
    }
    createMyEphemeralNode();
    this.conf.set("fs.defaultFS",this.conf.get("hbase.rootdir"));
    this.fs=FileSystem.get(this.conf);
    this.rootDir=new Path(this.conf.get(HConstants.HBASE_DIR));
    this.tableDescriptors=new FSTableDescriptors(this.fs,this.rootDir,true);
    this.hlog=setupWALAndReplication();
    this.metrics=new RegionServerMetrics();
    this.dynamicMetrics=RegionServerDynamicMetrics.newInstance();
    startServiceThreads();
    LOG.info("Serving as " + this.serverNameFromMasterPOV + ", RPC listening on "+ this.isa+ ", sessionid=0x"+ Long.toHexString(this.zooKeeper.getRecoverableZooKeeper().getSessionId()));
    isOnline=true;
  }
 catch (  Throwable e) {
    this.isOnline=false;
    stop("Failed initialization");
    throw convertThrowableToIOE(cleanup(e,"Failed init"),"Region server startup failed");
  }
}
