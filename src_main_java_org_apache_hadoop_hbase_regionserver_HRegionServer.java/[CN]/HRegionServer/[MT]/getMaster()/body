{
  ServerName masterServerName=null;
  long previousLogTime=0;
  HMasterRegionInterface master=null;
  boolean refresh=false;
  while (keepLooping() && master == null) {
    masterServerName=this.masterAddressManager.getMasterAddress(refresh);
    if (masterServerName == null) {
      if (!keepLooping()) {
        LOG.debug("No master found and cluster is stopped; bailing out");
        return null;
      }
      LOG.debug("No master found; retry");
      previousLogTime=System.currentTimeMillis();
      refresh=true;
      sleeper.sleep();
      continue;
    }
    InetSocketAddress isa=new InetSocketAddress(masterServerName.getHostname(),masterServerName.getPort());
    LOG.info("Attempting connect to Master server at " + this.masterAddressManager.getMasterAddress());
    try {
      master=(HMasterRegionInterface)HBaseRPC.waitForProxy(HMasterRegionInterface.class,HMasterRegionInterface.VERSION,isa,this.conf,-1,this.rpcTimeout,this.rpcTimeout);
    }
 catch (    IOException e) {
      e=e instanceof RemoteException ? ((RemoteException)e).unwrapRemoteException() : e;
      if (e instanceof ServerNotRunningYetException) {
        if (System.currentTimeMillis() > (previousLogTime + 1000)) {
          LOG.info("Master isn't available yet, retrying");
          previousLogTime=System.currentTimeMillis();
        }
      }
 else {
        if (System.currentTimeMillis() > (previousLogTime + 1000)) {
          LOG.warn("Unable to connect to master. Retrying. Error was:",e);
          previousLogTime=System.currentTimeMillis();
        }
      }
      try {
        Thread.sleep(200);
      }
 catch (      InterruptedException ignored) {
      }
    }
  }
  LOG.info("Connected to master at " + isa);
  this.hbaseMaster=master;
  return masterServerName;
}
