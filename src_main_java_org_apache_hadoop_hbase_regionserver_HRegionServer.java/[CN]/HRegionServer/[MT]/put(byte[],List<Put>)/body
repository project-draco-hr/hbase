{
  checkOpen();
  HRegion region=null;
  try {
    region=getRegion(regionName);
    if (!region.getRegionInfo().isMetaTable()) {
      this.cacheFlusher.reclaimMemStoreMemory();
    }
    @SuppressWarnings("unchecked") Pair<Put,Integer>[] putsWithLocks=new Pair[puts.size()];
    int i=0;
    for (    Put p : puts) {
      Integer lock=getLockFromId(p.getLockId());
      putsWithLocks[i++]=new Pair<Put,Integer>(p,lock);
    }
    this.requestCount.addAndGet(puts.size());
    OperationStatus codes[]=region.put(putsWithLocks);
    for (i=0; i < codes.length; i++) {
      if (codes[i].getOperationStatusCode() != OperationStatusCode.SUCCESS) {
        return i;
      }
    }
    return -1;
  }
 catch (  Throwable t) {
    throw convertThrowableToIOE(cleanup(t));
  }
}
