{
  checkOpen();
  final long startTime=System.nanoTime();
  try {
    boolean writeToWAL=delete.getWriteToWAL();
    this.requestCount.incrementAndGet();
    HRegion region=getRegion(regionName);
    if (!region.getRegionInfo().isMetaTable()) {
      this.cacheFlusher.reclaimMemStoreMemory();
    }
    Integer lid=getLockFromId(delete.getLockId());
    region.delete(delete,lid,writeToWAL);
  }
 catch (  Throwable t) {
    throw convertThrowableToIOE(cleanup(t));
  }
 finally {
    this.metrics.deleteLatencies.update(System.nanoTime() - startTime);
  }
}
