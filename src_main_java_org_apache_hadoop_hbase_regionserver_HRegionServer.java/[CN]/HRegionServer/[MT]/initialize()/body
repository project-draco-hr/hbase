{
  this.abortRequested=false;
  this.stopped=false;
  String machineName=DNS.getDefaultHost(conf.get("hbase.regionserver.dns.interface","default"),conf.get("hbase.regionserver.dns.nameserver","default"));
  String addressStr=machineName + ":" + conf.get(HConstants.REGIONSERVER_PORT,Integer.toString(HConstants.DEFAULT_REGIONSERVER_PORT));
  HServerAddress address=new HServerAddress(addressStr);
  this.server=HBaseRPC.getServer(this,new Class<?>[]{HRegionInterface.class,HBaseRPCErrorHandler.class,OnlineRegions.class},address.getBindAddress(),address.getPort(),conf.getInt("hbase.regionserver.handler.count",10),conf.getInt("hbase.regionserver.metahandler.count",10),false,conf,QOS_THRESHOLD);
  this.server.setErrorHandler(this);
  this.server.setQosFunction(new QosFunction());
  this.serverInfo=new HServerInfo(new HServerAddress(new InetSocketAddress(address.getBindAddress(),this.server.getListenerAddress().getPort())),System.currentTimeMillis(),this.conf.getInt("hbase.regionserver.info.port",60030),machineName);
  if (this.serverInfo.getServerAddress() == null) {
    throw new NullPointerException("Server address cannot be null; " + "hbase-958 debugging");
  }
  initializeZooKeeper();
  initializeThreads();
  int nbBlocks=conf.getInt("hbase.regionserver.nbreservationblocks",4);
  for (int i=0; i < nbBlocks; i++) {
    reservedSpace.add(new byte[HConstants.DEFAULT_SIZE_RESERVATION_BLOCK]);
  }
}
