{
  while (!stopRequested.get() && !getMaster()) {
    sleeper.sleep();
    LOG.warn("Unable to get master for initialization");
  }
  MapWritable result=null;
  long lastMsg=0;
  while (!stopRequested.get()) {
    try {
      this.requestCount.set(0);
      MemoryUsage memory=ManagementFactory.getMemoryMXBean().getHeapMemoryUsage();
      HServerLoad hsl=new HServerLoad(0,(int)memory.getUsed() / 1024 / 1024,(int)memory.getMax() / 1024 / 1024);
      this.serverInfo.setLoad(hsl);
      if (LOG.isDebugEnabled())       LOG.debug("sending initial server load: " + hsl);
      lastMsg=System.currentTimeMillis();
      boolean startCodeOk=false;
      while (!startCodeOk) {
        this.serverInfo=createServerInfoWithNewStartCode(this.serverInfo);
        startCodeOk=zooKeeperWrapper.writeRSLocation(this.serverInfo);
        if (!startCodeOk) {
          LOG.debug("Start code already taken, trying another one");
        }
      }
      result=this.hbaseMaster.regionServerStartup(this.serverInfo);
      break;
    }
 catch (    IOException e) {
      LOG.warn("error telling master we are up",e);
    }
    sleeper.sleep(lastMsg);
  }
  return result;
}
