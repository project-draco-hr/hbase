{
  HTable table=TEST_UTIL.createTable(TableName.valueOf("testHTableExistsMethodMultipleRegionsMultipleGets"),new byte[][]{FAMILY},1,new byte[]{0x00},new byte[]{(byte)0xff},255);
  Put put=new Put(ROW);
  put.add(FAMILY,QUALIFIER,VALUE);
  table.put(put);
  List<Get> gets=new ArrayList<Get>();
  gets.add(new Get(ANOTHERROW));
  gets.add(new Get(Bytes.add(ROW,new byte[]{0x00})));
  gets.add(new Get(ROW));
  gets.add(new Get(Bytes.add(ANOTHERROW,new byte[]{0x00})));
  LOG.info("Calling exists");
  Boolean[] results=table.exists(gets);
  assertEquals(results[0],false);
  assertEquals(results[1],false);
  assertEquals(results[2],true);
  assertEquals(results[3],false);
  put=new Put(new byte[]{0x00});
  put.add(FAMILY,QUALIFIER,VALUE);
  table.put(put);
  gets=new ArrayList<Get>();
  gets.add(new Get(new byte[]{0x00}));
  gets.add(new Get(new byte[]{0x00,0x00}));
  results=table.exists(gets);
  assertEquals(results[0],true);
  assertEquals(results[1],false);
  put=new Put(new byte[]{(byte)0xff,(byte)0xff});
  put.add(FAMILY,QUALIFIER,VALUE);
  table.put(put);
  gets=new ArrayList<Get>();
  gets.add(new Get(new byte[]{(byte)0xff}));
  gets.add(new Get(new byte[]{(byte)0xff,(byte)0xff}));
  gets.add(new Get(new byte[]{(byte)0xff,(byte)0xff,(byte)0xff}));
  results=table.exists(gets);
  assertEquals(results[0],false);
  assertEquals(results[1],true);
  assertEquals(results[2],false);
}
