{
  super.write(out);
  out.writeUTF(hbaseVersion);
  out.writeInt(getServersSize());
  for (  Map.Entry<ServerName,HServerLoad> e : this.liveServers.entrySet()) {
    Bytes.writeByteArray(out,e.getKey().getVersionedBytes());
    e.getValue().write(out);
  }
  out.writeInt(deadServers.size());
  for (  ServerName server : deadServers) {
    Bytes.writeByteArray(out,server.getVersionedBytes());
  }
  out.writeInt(this.intransition.size());
  for (  Map.Entry<String,RegionState> e : this.intransition.entrySet()) {
    out.writeUTF(e.getKey());
    e.getValue().write(out);
  }
  out.writeUTF(clusterId);
  out.writeInt(masterCoprocessors.length);
  for (  String masterCoprocessor : masterCoprocessors) {
    out.writeUTF(masterCoprocessor);
  }
  Bytes.writeByteArray(out,this.master.getVersionedBytes());
  out.writeInt(this.backupMasters.size());
  for (  ServerName backupMaster : this.backupMasters) {
    Bytes.writeByteArray(out,backupMaster.getVersionedBytes());
  }
}
