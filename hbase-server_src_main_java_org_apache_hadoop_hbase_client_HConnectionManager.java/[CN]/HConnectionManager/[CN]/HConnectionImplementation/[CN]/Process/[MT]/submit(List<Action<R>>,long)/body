{
  final Map<HRegionLocation,MultiAction<R>> actionsByServer=new HashMap<HRegionLocation,MultiAction<R>>();
  for (  Action<R> aAction : actionsList) {
    final Row row=aAction.getAction();
    if (row != null) {
      final HRegionLocation loc=hci.locateRegion(this.tableName,row.getRow(),true);
      if (loc == null) {
        throw new IOException("No location found, aborting submit.");
      }
      final byte[] regionName=loc.getRegionInfo().getRegionName();
      MultiAction<R> actions=actionsByServer.get(loc);
      if (actions == null) {
        actions=new MultiAction<R>();
        actionsByServer.put(loc,actions);
      }
      actions.add(regionName,aAction);
    }
  }
  for (  Entry<HRegionLocation,MultiAction<R>> e : actionsByServer.entrySet()) {
    Callable<MultiResponse> callable=createDelayedCallable(sleepTime,e.getKey(),e.getValue());
    Triple<MultiAction<R>,HRegionLocation,Future<MultiResponse>> p=new Triple<MultiAction<R>,HRegionLocation,Future<MultiResponse>>(e.getValue(),e.getKey(),this.pool.submit(callable));
    this.inProgress.addLast(p);
  }
}
