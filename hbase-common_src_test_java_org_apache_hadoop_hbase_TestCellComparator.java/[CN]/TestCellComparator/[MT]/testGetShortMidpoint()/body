{
  Cell left=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  Cell right=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  Cell mid=CellComparator.getMidpoint(left,right);
  assertTrue(CellComparator.compare(left,mid,true) <= 0);
  assertTrue(CellComparator.compare(mid,right,true) <= 0);
  left=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  right=CellUtil.createCell(Bytes.toBytes("b"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  mid=CellComparator.getMidpoint(left,right);
  assertTrue(CellComparator.compare(left,mid,true) < 0);
  assertTrue(CellComparator.compare(mid,right,true) <= 0);
  left=CellUtil.createCell(Bytes.toBytes("g"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  right=CellUtil.createCell(Bytes.toBytes("i"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  mid=CellComparator.getMidpoint(left,right);
  assertTrue(CellComparator.compare(left,mid,true) < 0);
  assertTrue(CellComparator.compare(mid,right,true) <= 0);
  left=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  right=CellUtil.createCell(Bytes.toBytes("bbbbbbb"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  mid=CellComparator.getMidpoint(left,right);
  assertTrue(CellComparator.compare(left,mid,true) < 0);
  assertTrue(CellComparator.compare(mid,right,true) < 0);
  assertEquals(1,(int)mid.getRowLength());
  left=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  right=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("b"),Bytes.toBytes("a"));
  mid=CellComparator.getMidpoint(left,right);
  assertTrue(CellComparator.compare(left,mid,true) < 0);
  assertTrue(CellComparator.compare(mid,right,true) <= 0);
  left=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  right=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("aaaaaaaa"),Bytes.toBytes("b"));
  mid=CellComparator.getMidpoint(left,right);
  assertTrue(CellComparator.compare(left,mid,true) < 0);
  assertTrue(CellComparator.compare(mid,right,true) < 0);
  assertEquals(2,(int)mid.getFamilyLength());
  left=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  right=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("aaaaaaaaa"));
  mid=CellComparator.getMidpoint(left,right);
  assertTrue(CellComparator.compare(left,mid,true) < 0);
  assertTrue(CellComparator.compare(mid,right,true) < 0);
  assertEquals(2,(int)mid.getQualifierLength());
  left=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("a"));
  right=CellUtil.createCell(Bytes.toBytes("a"),Bytes.toBytes("a"),Bytes.toBytes("b"));
  mid=CellComparator.getMidpoint(left,right);
  assertTrue(CellComparator.compare(left,mid,true) < 0);
  assertTrue(CellComparator.compare(mid,right,true) <= 0);
  assertEquals(1,(int)mid.getQualifierLength());
}
