{
  final MasterSchemaChangeTracker msct=TEST_UTIL.getHBaseCluster().getMaster().getSchemaChangeTracker();
  final String tableName="testInstantSchemaChangeBlocksDuringLoadBalancerRun";
  conf=TEST_UTIL.getConfiguration();
  LOG.info("Start testInstantSchemaChangeBlocksDuringLoadBalancerRun()");
  final String newFamily="newFamily";
  createTableAndValidate(tableName);
  Runnable balancer1=new Runnable(){
    public void run(){
      miniHBaseCluster.getMaster().balance();
    }
  }
;
  Runnable schemaChanger=new Runnable(){
    public void run(){
      HColumnDescriptor hcd=new HColumnDescriptor(newFamily);
      try {
        admin.addColumn(Bytes.toBytes(tableName),hcd);
      }
 catch (      IOException ioe) {
        ioe.printStackTrace();
      }
    }
  }
;
  Thread t1=new Thread(balancer1);
  Thread t2=new Thread(schemaChanger);
  t1.start();
  t2.start();
  Runnable balancerCheck=new Runnable(){
    public void run(){
      while (!miniHBaseCluster.getMaster().isLoadBalancerRunning()) {
        try {
          Thread.sleep(10);
        }
 catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
        }
      }
      try {
        assertFalse(msct.doesSchemaChangeNodeExists("testSchemaChangeBlocks"));
      }
 catch (      KeeperException ke) {
        ke.printStackTrace();
      }
      LOG.debug("Load Balancer is now running or skipped");
      while (miniHBaseCluster.getMaster().isLoadBalancerRunning()) {
        try {
          Thread.sleep(10);
        }
 catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
        }
      }
      assertTrue(miniHBaseCluster.getMaster().isLoadBalancerRunning() == false);
      try {
        assertTrue(msct.doesSchemaChangeNodeExists("testSchemaChangeBlocks"));
      }
 catch (      KeeperException ke) {
      }
    }
  }
;
  Thread t=new Thread(balancerCheck);
  t.start();
  t.join(1000);
  LOG.debug("testInstantSchemaChangeBlocksDuringLoadBalancerRun Asserted");
  LOG.info("End testInstantSchemaChangeBlocksDuringLoadBalancerRun() ");
}
