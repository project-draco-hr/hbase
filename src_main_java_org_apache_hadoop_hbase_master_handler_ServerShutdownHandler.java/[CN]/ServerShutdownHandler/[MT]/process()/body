{
  final String serverName=this.hsi.getServerName();
  LOG.info("Splitting logs for " + serverName);
  this.services.getMasterFileSystem().splitLog(serverName);
  this.services.getAssignmentManager().processServerShutdown(this.hsi);
  if (isCarryingRoot()) {
    try {
      this.services.getAssignmentManager().assignRoot();
    }
 catch (    KeeperException e) {
      this.server.abort("In server shutdown processing, assigning root",e);
      throw new IOException("Aborting",e);
    }
  }
  if (isCarryingMeta())   this.services.getAssignmentManager().assignMeta();
  try {
    this.server.getCatalogTracker().waitForMeta();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    throw new IOException("Interrupted",e);
  }
  NavigableMap<HRegionInfo,Result> hris=MetaReader.getServerUserRegions(this.server.getCatalogTracker(),this.hsi);
  LOG.info("Reassigning the " + hris.size() + " region(s) that "+ serverName+ " was carrying");
  for (  Map.Entry<HRegionInfo,Result> e : hris.entrySet()) {
    processDeadRegion(e.getKey(),e.getValue(),this.services.getAssignmentManager(),this.server.getCatalogTracker());
    this.services.getAssignmentManager().assign(e.getKey());
  }
  this.deadServers.remove(serverName);
  LOG.info("Finished processing of shutdown of " + serverName);
}
