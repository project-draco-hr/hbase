{
  Path snapshotDir=SnapshotDescriptionUtils.getCompletedSnapshotDir(snapshotDescriptor,rootDir);
  assertTrue(fs.exists(snapshotDir));
  Path snapshotinfo=new Path(snapshotDir,SnapshotDescriptionUtils.SNAPSHOTINFO_FILE);
  assertTrue(fs.exists(snapshotinfo));
  if (requireLogs) {
    TakeSnapshotUtils.verifyAllLogsGotReferenced(fs,logsDir,snapshotServers,snapshotDescriptor,new Path(snapshotDir,HConstants.HREGION_LOGDIR_NAME));
  }
  HTableDescriptor desc=FSTableDescriptors.getTableDescriptorFromFs(fs,rootDir,tableName);
  HTableDescriptor snapshotDesc=FSTableDescriptors.getTableDescriptorFromFs(fs,snapshotDir);
  assertEquals(desc,snapshotDesc);
  final Set<String> snapshotRegions=new HashSet<String>();
  final Set<byte[]> snapshotFamilies=new TreeSet<byte[]>(Bytes.BYTES_COMPARATOR);
  FSVisitor.visitTableStoreFiles(fs,snapshotDir,new FSVisitor.StoreFileVisitor(){
    public void storeFile(    final String region,    final String family,    final String hfileName) throws IOException {
      snapshotRegions.add(region);
      snapshotFamilies.add(Bytes.toBytes(family));
    }
  }
);
  if (nonEmptyTestFamilies != null) {
    for (    final byte[] familyName : nonEmptyTestFamilies) {
      assertTrue(snapshotFamilies.contains(familyName));
    }
  }
  if (emptyTestFamilies != null) {
    for (    final byte[] familyName : emptyTestFamilies) {
      assertFalse(snapshotFamilies.contains(familyName));
    }
  }
  if ((nonEmptyTestFamilies == null || nonEmptyTestFamilies.size() == 0) && (emptyTestFamilies != null && emptyTestFamilies.size() > 0)) {
    assertEquals(0,snapshotRegions.size());
    return;
  }
  List<HRegionInfo> regions=admin.getTableRegions(tableName);
  assertEquals(regions.size(),snapshotRegions.size());
  for (  HRegionInfo info : regions) {
    String regionName=info.getEncodedName();
    assertTrue(snapshotRegions.contains(regionName));
    Path regionDir=new Path(snapshotDir,regionName);
    HRegionInfo snapshotRegionInfo=HRegionFileSystem.loadRegionInfoFileContent(fs,regionDir);
    assertEquals(info,snapshotRegionInfo);
  }
}
