{
  PathFilter regionFilter=new FSUtils.RegionDirFilter(fs);
  PathFilter familyFilter=new FSUtils.FamilyDirFilter(fs);
  final PathFilter fileFilter=new PathFilter(){
    @Override public boolean accept(    Path file){
      try {
        return fs.isFile(file);
      }
 catch (      IOException e) {
        return false;
      }
    }
  }
;
  FileStatus[] regionDirs=FSUtils.listStatus(fs,tableDir,regionFilter);
  if (regionDirs == null || regionDirs.length == 0)   return new FileStatus[0];
  List<FileStatus> regionFiles=new ArrayList<FileStatus>(regionDirs.length);
  for (  FileStatus regionDir : regionDirs) {
    FileStatus[] fams=FSUtils.listStatus(fs,regionDir.getPath(),familyFilter);
    if (fams == null || fams.length == 0)     continue;
    regionFiles.addAll(SnapshotTestingUtils.getHFilesInRegion(fams,fs,fileFilter));
  }
  FileStatus[] files=new FileStatus[regionFiles.size()];
  regionFiles.toArray(files);
  return files;
}
