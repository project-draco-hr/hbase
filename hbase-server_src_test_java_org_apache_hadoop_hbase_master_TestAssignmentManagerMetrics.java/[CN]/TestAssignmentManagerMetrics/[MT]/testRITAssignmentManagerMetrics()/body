{
  final TableName TABLENAME=TableName.valueOf("testRITMetrics");
  final byte[] FAMILY=Bytes.toBytes("family");
  Table table=null;
  try {
    table=TEST_UTIL.createTable(TABLENAME,FAMILY);
    final byte[] row=Bytes.toBytes("row");
    final byte[] qualifier=Bytes.toBytes("qualifier");
    final byte[] value=Bytes.toBytes("value");
    Put put=new Put(row);
    put.addColumn(FAMILY,qualifier,value);
    table.put(put);
    Thread.sleep(msgInterval * 3);
    MetricsAssignmentManagerSource amSource=master.getAssignmentManager().getAssignmentManagerMetrics().getMetricsProcSource();
    metricsHelper.assertGauge(MetricsAssignmentManagerSource.RIT_COUNT_NAME,0,amSource);
    metricsHelper.assertGauge(MetricsAssignmentManagerSource.RIT_COUNT_OVER_THRESHOLD_NAME,0,amSource);
    HTableDescriptor htd=new HTableDescriptor(TABLENAME);
    HColumnDescriptor hcd=new HColumnDescriptor(FAMILY);
    htd.addFamily(hcd);
    String spec="hdfs:///foo.jar|com.foo.FooRegionObserver|1001|arg1=1,arg2=2";
    htd.addCoprocessorWithSpec(spec);
    TEST_UTIL.getHBaseAdmin().modifyTable(TABLENAME,htd);
    Thread.sleep(msgInterval * 3);
    metricsHelper.assertGauge(MetricsAssignmentManagerSource.RIT_COUNT_NAME,1,amSource);
    metricsHelper.assertGauge(MetricsAssignmentManagerSource.RIT_COUNT_OVER_THRESHOLD_NAME,1,amSource);
  }
  finally {
    if (table != null) {
      table.close();
    }
  }
}
