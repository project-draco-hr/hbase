{
  Integer key=Bytes.mapKey(tableName);
  SoftValueSortedMap<byte[],HRegionLocation> tableLocations=cachedRegionLocations.get(key);
  if (tableLocations == null) {
    tableLocations=new SoftValueSortedMap<byte[],HRegionLocation>(Bytes.BYTES_COMPARATOR);
    cachedRegionLocations.put(key,tableLocations);
  }
  if (!tableLocations.isEmpty()) {
    SoftValueSortedMap<byte[],HRegionLocation> matchingRegions=tableLocations.headMap(row);
    if (!matchingRegions.isEmpty()) {
      HRegionLocation possibleRegion=matchingRegions.get(matchingRegions.lastKey());
      byte[] endKey=possibleRegion.getRegionInfo().getEndKey();
      if (HStoreKey.compareTwoRowKeys(possibleRegion.getRegionInfo(),endKey,row) <= 0) {
        HRegionLocation rl=tableLocations.remove(matchingRegions.lastKey());
        if (rl != null && LOG.isDebugEnabled()) {
          LOG.debug("Removed " + rl.getRegionInfo().getRegionNameAsString() + " from cache because of "+ Bytes.toString(row));
        }
      }
    }
  }
}
