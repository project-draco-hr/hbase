{
  getMaster();
  HServerAddress rootRegionAddress=null;
  for (int tries=0; tries < numRetries; tries++) {
    int localTimeouts=0;
    while (rootRegionAddress == null && localTimeouts < numRetries) {
      rootRegionAddress=master.findRootRegion();
      if (rootRegionAddress == null) {
        try {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Sleeping " + getPauseTime(tries) + "ms, waiting for root region.");
          }
          Thread.sleep(getPauseTime(tries));
        }
 catch (        InterruptedException iex) {
        }
        localTimeouts++;
      }
    }
    if (rootRegionAddress == null) {
      throw new NoServerForRegionException("Timed out trying to locate root region");
    }
    HRegionInterface server=getHRegionConnection(rootRegionAddress);
    try {
      server.getRegionInfo(HRegionInfo.ROOT_REGIONINFO.getRegionName());
      if (LOG.isDebugEnabled()) {
        LOG.debug("Found ROOT " + HRegionInfo.ROOT_REGIONINFO);
      }
      break;
    }
 catch (    IOException e) {
      if (tries == numRetries - 1) {
        if (e instanceof RemoteException) {
          e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
        }
        throw e;
      }
      try {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Root region location changed. Sleeping.");
        }
        Thread.sleep(getPauseTime(tries));
        if (LOG.isDebugEnabled()) {
          LOG.debug("Wake. Retry finding root region.");
        }
      }
 catch (      InterruptedException iex) {
      }
    }
    rootRegionAddress=null;
  }
  if (rootRegionAddress == null) {
    throw new NoServerForRegionException("unable to locate root region server");
  }
  return new HRegionLocation(HRegionInfo.ROOT_REGIONINFO,rootRegionAddress);
}
