{
  HRegionLocation location=null;
  if (useCache) {
    location=getCachedLocation(tableName,row);
    if (location != null) {
      return location;
    }
  }
 else {
    deleteCachedLocation(tableName,row);
  }
  Text metaKey=new Text(tableName.toString() + "," + row.toString()+ ",999999999999999");
  int tries=0;
  while (true) {
    tries++;
    if (tries >= numRetries) {
      throw new NoServerForRegionException("Unable to find region for " + row + " after "+ numRetries+ " tries.");
    }
    try {
      HRegionLocation metaLocation=locateRegion(parentTable,metaKey);
      HRegionInterface server=getHRegionConnection(metaLocation.getServerAddress());
      HbaseMapWritable regionInfoRow=server.getClosestRowBefore(metaLocation.getRegionInfo().getRegionName(),metaKey,HConstants.LATEST_TIMESTAMP);
      if (regionInfoRow == null) {
        throw new TableNotFoundException("Table '" + tableName + "' does not exist.");
      }
      SortedMap<Text,Cell> results=sortedMapFromMapWritable(regionInfoRow);
      Cell value=results.get(COL_REGIONINFO);
      if (value == null || value.getValue().length == 0) {
        throw new IOException("HRegionInfo was null or empty in " + parentTable);
      }
      HRegionInfo regionInfo=(HRegionInfo)Writables.getWritable(value.getValue(),new HRegionInfo());
      if (!regionInfo.getTableDesc().getName().equals(tableName)) {
        throw new TableNotFoundException("Table '" + tableName + "' was not found.");
      }
      if (regionInfo.isOffline()) {
        throw new IllegalStateException("region offline: " + regionInfo.getRegionName());
      }
      Cell serverValue=results.get(COL_SERVER);
      String serverAddress=Writables.bytesToString(serverValue == null ? null : serverValue.getValue());
      if (serverAddress.equals("")) {
        throw new NoServerForRegionException("No server address listed in " + parentTable + " for region "+ regionInfo.getRegionName());
      }
      location=new HRegionLocation(regionInfo,new HServerAddress(serverAddress));
      cacheLocation(tableName,location);
      return location;
    }
 catch (    IllegalStateException e) {
      if (tries < numRetries - 1) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("reloading table servers because: " + e.getMessage());
        }
        relocateRegion(parentTable,metaKey);
      }
 else {
        throw e;
      }
    }
catch (    TableNotFoundException e) {
      throw e;
    }
catch (    IOException e) {
      if (e instanceof RemoteException) {
        e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
      }
      if (tries < numRetries - 1) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("reloading table servers because: " + e.getMessage());
        }
        relocateRegion(parentTable,metaKey);
      }
 else {
        throw e;
      }
    }
    try {
      Thread.sleep(pause);
    }
 catch (    InterruptedException e) {
    }
  }
}
