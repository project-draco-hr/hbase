{
  LOG.info("Starting testMetaMigration");
  final byte[] FAMILY=Bytes.toBytes("family");
  HTableDescriptor htd=new HTableDescriptor(TableName.valueOf("testMetaMigration"));
  HColumnDescriptor hcd=new HColumnDescriptor(FAMILY);
  htd.addFamily(hcd);
  Configuration conf=TEST_UTIL.getConfiguration();
  byte[][] regionNames=new byte[][]{HConstants.EMPTY_START_ROW,Bytes.toBytes("region_a"),Bytes.toBytes("region_b")};
  createMultiRegionsWithWritableSerialization(conf,htd.getTableName().getName(),regionNames);
  HConnection masterHConnection=TEST_UTIL.getMiniHBaseCluster().getMaster().getShortCircuitConnection();
  undoVersionInRoot();
  MetaTableAccessor.fullScanMetaAndPrint(masterHConnection);
  LOG.info("Meta Print completed.testMetaMigration");
  long numMigratedRows=MetaMigrationConvertingToPB.updateMeta(TEST_UTIL.getHBaseCluster().getMaster());
  MetaTableAccessor.fullScanMetaAndPrint(masterHConnection);
  assertEquals(regionNames.length,numMigratedRows);
  boolean metaUpdated=MetaMigrationConvertingToPB.isMetaTableUpdated(masterHConnection);
  assertEquals(true,metaUpdated);
  verifyMetaRowsAreUpdated(masterHConnection);
}
