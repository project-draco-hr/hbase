{
  if (m instanceof Put) {
    List<Cell> updatedCells=new ArrayList<Cell>();
    int numTags;
    if (minNumTags == maxNumTags) {
      numTags=minNumTags;
    }
 else {
      numTags=minNumTags + random.nextInt(maxNumTags - minNumTags);
    }
    List<Tag> tags;
    for (CellScanner cellScanner=m.cellScanner(); cellScanner.advance(); ) {
      Cell cell=cellScanner.current();
      byte[] tag=LoadTestTool.generateData(random,minTagLength + random.nextInt(maxTagLength - minTagLength));
      tags=new ArrayList<Tag>();
      for (int n=0; n < numTags; n++) {
        tags.add(new ArrayBackedTag((byte)127,tag));
      }
      Cell updatedCell=new KeyValue(cell.getRowArray(),cell.getRowOffset(),cell.getRowLength(),cell.getFamilyArray(),cell.getFamilyOffset(),cell.getFamilyLength(),cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength(),cell.getTimestamp(),Type.codeToType(cell.getTypeByte()),cell.getValueArray(),cell.getValueOffset(),cell.getValueLength(),tags);
      updatedCells.add(updatedCell);
    }
    m.getFamilyCellMap().clear();
    for (    Cell cell : updatedCells) {
      ((Put)m).add(cell);
    }
  }
  return m;
}
