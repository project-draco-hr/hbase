{
  final byte[] tableName=Bytes.toBytes("testMasterRestartWhenSplittingIsPartial");
  HTable t=createTableAndWait(tableName,HConstants.CATALOG_FAMILY);
  List<HRegion> regions=cluster.getRegions(tableName);
  HRegionInfo hri=getAndCheckSingleTableRegion(regions);
  int tableRegionIndex=ensureTableRegionNotOnSameServerAsMeta(admin,hri);
  this.admin.setBalancerRunning(false,true);
  cluster.getMaster().setCatalogJanitorEnabled(false);
  ZooKeeperWatcher zkw=new ZooKeeperWatcher(t.getConfiguration(),"testMasterRestartWhenSplittingIsPartial",new UselessTestAbortable());
  try {
    TESTING_UTIL.loadTable(t,HConstants.CATALOG_FAMILY);
    HRegionServer server=cluster.getRegionServer(tableRegionIndex);
    printOutRegions(server,"Initial regions: ");
    AssignmentManager.TEST_SKIP_SPLIT_HANDLING=true;
    this.admin.split(hri.getRegionNameAsString());
    checkAndGetDaughters(tableName);
    String path=ZKAssign.getNodeName(zkw,hri.getEncodedName());
    Stat stats=zkw.getRecoverableZooKeeper().exists(path,false);
    LOG.info("EPHEMERAL NODE BEFORE SERVER ABORT, path=" + path + ", stats="+ stats);
    byte[] bytes=ZKAssign.getData(zkw,hri.getEncodedName());
    RegionTransition rtd=RegionTransition.parseFrom(bytes);
    assertTrue(rtd.getEventType().equals(EventType.RS_ZK_REGION_SPLIT) || rtd.getEventType().equals(EventType.RS_ZK_REGION_SPLITTING));
    MockMasterWithoutCatalogJanitor master=abortAndWaitForMaster();
    this.admin=new HBaseAdmin(TESTING_UTIL.getConfiguration());
    hri.setOffline(true);
    hri.setSplit(true);
    ServerName regionServerOfRegion=master.getAssignmentManager().getRegionStates().getRegionServerOfRegion(hri);
    assertTrue(regionServerOfRegion != null);
    AssignmentManager.TEST_SKIP_SPLIT_HANDLING=false;
    String node=ZKAssign.getNodeName(zkw,hri.getEncodedName());
    Stat stat=new Stat();
    byte[] data=ZKUtil.getDataNoWatch(zkw,node,stat);
    for (int i=0; data != null && i < 60; i++) {
      Thread.sleep(1000);
      data=ZKUtil.getDataNoWatch(zkw,node,stat);
    }
    assertNull("Waited too long for ZK node to be removed: " + node,data);
    RegionStates regionStates=master.getAssignmentManager().getRegionStates();
    assertTrue("Split parent should be in SPLIT state",regionStates.isRegionInState(hri,State.SPLIT));
    regionServerOfRegion=regionStates.getRegionServerOfRegion(hri);
    assertTrue(regionServerOfRegion == null);
  }
  finally {
    AssignmentManager.TEST_SKIP_SPLIT_HANDLING=false;
    admin.setBalancerRunning(true,false);
    cluster.getMaster().setCatalogJanitorEnabled(true);
    t.close();
    zkw.close();
  }
}
