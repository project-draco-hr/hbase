{
  final TableName tableName=TableName.valueOf("testShutdownFixupWhenDaughterHasSplit");
  Table t=createTableAndWait(tableName,HConstants.CATALOG_FAMILY);
  List<HRegion> regions=cluster.getRegions(tableName);
  HRegionInfo hri=getAndCheckSingleTableRegion(regions);
  int tableRegionIndex=ensureTableRegionNotOnSameServerAsMeta(admin,hri);
  this.admin.setBalancerRunning(false,true);
  cluster.getMaster().setCatalogJanitorEnabled(false);
  try {
    TESTING_UTIL.loadTable(t,HConstants.CATALOG_FAMILY);
    HRegionServer server=cluster.getRegionServer(tableRegionIndex);
    printOutRegions(server,"Initial regions: ");
    int regionCount=ProtobufUtil.getOnlineRegions(server.getRSRpcServices()).size();
    split(hri,server,regionCount);
    List<HRegion> daughters=checkAndGetDaughters(tableName);
    regionCount=ProtobufUtil.getOnlineRegions(server.getRSRpcServices()).size();
    HRegionInfo daughter=daughters.get(0).getRegionInfo();
    LOG.info("Daughter we are going to split: " + daughter);
    this.admin.compact(daughter.getRegionName());
    daughters=cluster.getRegions(tableName);
    HRegion daughterRegion=null;
    for (    HRegion r : daughters) {
      if (r.getRegionInfo().equals(daughter)) {
        daughterRegion=r;
        LOG.info("Found matching HRI: " + daughterRegion);
        break;
      }
    }
    assertTrue(daughterRegion != null);
    for (int i=0; i < 100; i++) {
      if (!daughterRegion.hasReferences())       break;
      Threads.sleep(100);
    }
    assertFalse("Waiting for reference to be compacted",daughterRegion.hasReferences());
    LOG.info("Daughter hri before split (has been compacted): " + daughter);
    split(daughter,server,regionCount);
    daughters=cluster.getRegions(tableName);
    for (    HRegion d : daughters) {
      LOG.info("Regions before crash: " + d);
    }
    cluster.abortRegionServer(tableRegionIndex);
    waitUntilRegionServerDead();
    awaitDaughters(tableName,daughters.size());
    regions=cluster.getRegions(tableName);
    for (    HRegion d : daughters) {
      LOG.info("Regions after crash: " + d);
    }
    assertEquals(daughters.size(),regions.size());
    for (    HRegion r : regions) {
      LOG.info("Regions post crash " + r);
      assertTrue("Missing region post crash " + r,daughters.contains(r));
    }
  }
  finally {
    admin.setBalancerRunning(true,false);
    cluster.getMaster().setCatalogJanitorEnabled(true);
    t.close();
  }
}
