{
  final byte[] tableName=Bytes.toBytes("testRollBackShudBeSuccessfulIfStoreFileIsEmpty");
  TESTING_UTIL.createTable(tableName,HConstants.CATALOG_FAMILY);
  List<HRegion> regions=cluster.getRegions(tableName);
  HRegionInfo hri=getAndCheckSingleTableRegion(regions);
  int tableRegionIndex=ensureTableRegionNotOnSameServerAsMeta(admin,hri);
  int regionServerIndex=cluster.getServerWith(regions.get(0).getRegionName());
  HRegionServer regionServer=cluster.getRegionServer(regionServerIndex);
  this.admin.setBalancerRunning(false,false);
  cluster.getMaster().setCatalogJanitorEnabled(false);
  try {
    HRegionServer server=cluster.getRegionServer(tableRegionIndex);
    printOutRegions(server,"Initial regions: ");
    SplitTransaction st=null;
    st=new MockedSplitTransaction(regions.get(0),null);
    try {
      st.execute(regionServer,regionServer);
    }
 catch (    IOException e) {
      List<HRegion> daughters=cluster.getRegions(tableName);
      assertTrue(daughters.size() == 1);
      String node=ZKAssign.getNodeName(regionServer.getZooKeeper(),regions.get(0).getRegionInfo().getEncodedName());
      assertFalse(ZKUtil.checkExists(regionServer.getZooKeeper(),node) == -1);
      assertTrue(st.rollback(regionServer,regionServer));
      assertTrue(ZKUtil.checkExists(regionServer.getZooKeeper(),node) == -1);
    }
  }
  finally {
    admin.setBalancerRunning(true,false);
    cluster.getMaster().setCatalogJanitorEnabled(true);
  }
}
