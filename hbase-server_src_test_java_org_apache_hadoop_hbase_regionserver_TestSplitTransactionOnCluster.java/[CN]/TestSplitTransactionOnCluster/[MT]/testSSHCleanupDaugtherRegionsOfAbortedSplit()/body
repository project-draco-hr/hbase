{
  TableName table=TableName.valueOf("testSSHCleanupDaugtherRegionsOfAbortedSplit");
  try {
    HTableDescriptor desc=new HTableDescriptor(table);
    desc.addFamily(new HColumnDescriptor(Bytes.toBytes("f")));
    admin.createTable(desc);
    Connection connection=ConnectionFactory.createConnection(cluster.getConfiguration());
    Table hTable=connection.getTable(desc.getTableName());
    for (int i=1; i < 5; i++) {
      Put p1=new Put(("r" + i).getBytes());
      p1.addColumn(Bytes.toBytes("f"),"q1".getBytes(),"v".getBytes());
      hTable.put(p1);
    }
    admin.flush(desc.getTableName());
    List<HRegion> regions=cluster.getRegions(desc.getTableName());
    int serverWith=cluster.getServerWith(regions.get(0).getRegionInfo().getRegionName());
    HRegionServer regionServer=cluster.getRegionServer(serverWith);
    cluster.getServerWith(regions.get(0).getRegionInfo().getRegionName());
    SplitTransactionImpl st=new SplitTransactionImpl(regions.get(0),Bytes.toBytes("r3"));
    st.prepare();
    st.stepsBeforePONR(regionServer,regionServer,false);
    Path tableDir=FSUtils.getTableDir(cluster.getMaster().getMasterFileSystem().getRootDir(),desc.getTableName());
    tableDir.getFileSystem(cluster.getConfiguration());
    List<Path> regionDirs=FSUtils.getRegionDirs(tableDir.getFileSystem(cluster.getConfiguration()),tableDir);
    assertEquals(3,regionDirs.size());
    cluster.startRegionServer();
    regionServer.kill();
    cluster.getRegionServerThreads().get(serverWith).join();
    while (cluster.getMaster().getServerManager().areDeadServersInProgress()) {
      Thread.sleep(10);
    }
    AssignmentManager am=cluster.getMaster().getAssignmentManager();
    assertEquals(am.getRegionStates().getRegionsInTransition().toString(),0,am.getRegionStates().getRegionsInTransition().size());
    regionDirs=FSUtils.getRegionDirs(tableDir.getFileSystem(cluster.getConfiguration()),tableDir);
    assertEquals(1,regionDirs.size());
  }
  finally {
    TESTING_UTIL.deleteTable(table);
  }
}
