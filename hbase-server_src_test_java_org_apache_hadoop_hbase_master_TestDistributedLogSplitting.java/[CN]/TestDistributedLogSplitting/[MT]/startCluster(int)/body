{
  SplitLogCounters.resetCounters();
  LOG.info("Starting cluster");
  conf.getLong("hbase.splitlog.max.resubmit",0);
  conf.setInt("zookeeper.recovery.retry",0);
  conf.setInt(HConstants.REGIONSERVER_INFO_PORT,-1);
  conf.setFloat(HConstants.LOAD_BALANCER_SLOP_KEY,(float)100.0);
  conf.setInt("hbase.regionserver.wal.max.splitters",3);
  conf.setInt(HConstants.REGION_SERVER_HIGH_PRIORITY_HANDLER_COUNT,10);
  TEST_UTIL.shutdownMiniHBaseCluster();
  TEST_UTIL=new HBaseTestingUtility(conf);
  TEST_UTIL.setDFSCluster(dfsCluster);
  TEST_UTIL.setZkCluster(zkCluster);
  TEST_UTIL.startMiniHBaseCluster(NUM_MASTERS,num_rs);
  cluster=TEST_UTIL.getHBaseCluster();
  LOG.info("Waiting for active/ready master");
  cluster.waitForActiveAndReadyMaster();
  master=cluster.getMaster();
  while (cluster.getLiveRegionServerThreads().size() < num_rs) {
    Threads.sleep(10);
  }
}
