{
  final MiniHBaseCluster tmpCluster=this.cluster;
  LOG.info("Aborting region server: " + hrs.getServerName());
  hrs.abort("testing");
  TEST_UTIL.waitFor(120000,200,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      return (tmpCluster.getLiveRegionServerThreads().size() <= (NUM_RS - 1));
    }
  }
);
  TEST_UTIL.waitFor(180000,200,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      return (HBaseTestingUtility.getAllOnlineRegions(tmpCluster).size() >= (numRegions + 1));
    }
  }
);
  TEST_UTIL.waitFor(180000,200,new Waiter.Predicate<Exception>(){
    @Override public boolean evaluate() throws Exception {
      List<String> recoveringRegions=zkw.getRecoverableZooKeeper().getChildren(zkw.znodePaths.recoveringRegionsZNode,false);
      return (recoveringRegions != null && recoveringRegions.size() == 0);
    }
  }
);
}
