{
  SimpleLoadBalancer balancer=Mockito.spy(new SimpleLoadBalancer());
  balancer.setConf(HBaseConfiguration.create());
  List<ServerName> backupMasters=new ArrayList<ServerName>();
  ServerName backupMaster=ServerName.parseServerName("backup:1:1");
  ServerName rs=ServerName.parseServerName("rs:1:1");
  backupMasters.add(backupMaster);
  Mockito.doReturn(backupMasters).when(balancer).getBackupMasters();
  Map<ServerName,List<HRegionInfo>> servers=new TreeMap<ServerName,List<HRegionInfo>>();
  List<HRegionInfo> regions=new ArrayList<HRegionInfo>();
  TableName table=TableName.valueOf("test");
  regions.add(new HRegionInfo(table));
  servers.put(backupMaster,regions);
  regions=new ArrayList<HRegionInfo>();
  balancer.backupMasterWeight=4;
  for (int i=0; i < 4; i++) {
    regions.add(new HRegionInfo(table));
  }
  servers.put(rs,regions);
  List<RegionPlan> plans=balancer.balanceCluster(servers);
  assertNull(plans);
  regions=new ArrayList<HRegionInfo>();
  for (int i=0; i < 2; i++) {
    regions.add(new HRegionInfo(table));
  }
  servers.put(backupMaster,regions);
  regions=new ArrayList<HRegionInfo>();
  for (int i=0; i < 3; i++) {
    regions.add(new HRegionInfo(table));
  }
  servers.put(rs,regions);
  plans=balancer.balanceCluster(servers);
  assertNotNull(plans);
  assertEquals(1,plans.size());
}
