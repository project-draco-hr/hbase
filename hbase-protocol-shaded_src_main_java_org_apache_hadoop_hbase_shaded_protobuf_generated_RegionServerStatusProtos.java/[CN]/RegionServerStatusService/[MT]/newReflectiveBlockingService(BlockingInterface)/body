{
  return new org.apache.hadoop.hbase.shaded.com.google.protobuf.BlockingService(){
    public final org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors.ServiceDescriptor getDescriptorForType(){
      return getDescriptor();
    }
    public final org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callBlockingMethod(    org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors.MethodDescriptor method,    org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.shaded.com.google.protobuf.Message request) throws org.apache.hadoop.hbase.shaded.com.google.protobuf.ServiceException {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("Service.callBlockingMethod() given method descriptor for " + "wrong service type.");
      }
switch (method.getIndex()) {
case 0:
        return impl.regionServerStartup(controller,(org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.RegionServerStartupRequest)request);
case 1:
      return impl.regionServerReport(controller,(org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.RegionServerReportRequest)request);
case 2:
    return impl.reportRSFatalError(controller,(org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.ReportRSFatalErrorRequest)request);
case 3:
  return impl.getLastFlushedSequenceId(controller,(org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.GetLastFlushedSequenceIdRequest)request);
case 4:
return impl.reportRegionStateTransition(controller,(org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.ReportRegionStateTransitionRequest)request);
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
public final org.apache.hadoop.hbase.shaded.com.google.protobuf.Message getRequestPrototype(org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors.MethodDescriptor method){
if (method.getService() != getDescriptor()) {
throw new java.lang.IllegalArgumentException("Service.getRequestPrototype() given method " + "descriptor for wrong service type.");
}
switch (method.getIndex()) {
case 0:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.RegionServerStartupRequest.getDefaultInstance();
case 1:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.RegionServerReportRequest.getDefaultInstance();
case 2:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.ReportRSFatalErrorRequest.getDefaultInstance();
case 3:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.GetLastFlushedSequenceIdRequest.getDefaultInstance();
case 4:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.ReportRegionStateTransitionRequest.getDefaultInstance();
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
public final org.apache.hadoop.hbase.shaded.com.google.protobuf.Message getResponsePrototype(org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors.MethodDescriptor method){
if (method.getService() != getDescriptor()) {
throw new java.lang.IllegalArgumentException("Service.getResponsePrototype() given method " + "descriptor for wrong service type.");
}
switch (method.getIndex()) {
case 0:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.RegionServerStartupResponse.getDefaultInstance();
case 1:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.RegionServerReportResponse.getDefaultInstance();
case 2:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.ReportRSFatalErrorResponse.getDefaultInstance();
case 3:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.GetLastFlushedSequenceIdResponse.getDefaultInstance();
case 4:
return org.apache.hadoop.hbase.shaded.protobuf.generated.RegionServerStatusProtos.ReportRegionStateTransitionResponse.getDefaultInstance();
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
}
;
}
