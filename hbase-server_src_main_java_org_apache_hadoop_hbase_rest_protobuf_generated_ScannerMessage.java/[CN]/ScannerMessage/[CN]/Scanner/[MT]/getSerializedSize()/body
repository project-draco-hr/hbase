{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,startRow_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,endRow_);
  }
{
    int dataSize=0;
    for (int i=0; i < columns_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(columns_.get(i));
    }
    size+=dataSize;
    size+=1 * getColumnsList().size();
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(4,batch_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(5,startTime_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(6,endTime_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(7,maxVersions_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(8,getFilterBytes());
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(9,caching_);
  }
{
    int dataSize=0;
    for (int i=0; i < labels_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(labels_.getByteString(i));
    }
    size+=dataSize;
    size+=1 * getLabelsList().size();
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
