{
  long period=Long.MAX_VALUE;
  Path snapshotDir=SnapshotDescriptionUtils.getSnapshotsDir(rootDir);
  SnapshotFileCache cache=new SnapshotFileCache(fs,rootDir,period,10000000,"test-snapshot-file-cache-refresh",new SnapshotFiles());
  Path snapshot=new Path(snapshotDir,"snapshot");
  Path region=new Path(snapshot,"7e91021");
  Path family=new Path(region,"fam");
  Path file1=new Path(family,"file1");
  Path file2=new Path(family,"file2");
  fs.createNewFile(file1);
  fs.createNewFile(file2);
  FSUtils.logFileSystemState(fs,rootDir,LOG);
  assertTrue("Cache didn't find:" + file1,cache.contains(file1.getName()));
  assertTrue("Cache didn't find:" + file2,cache.contains(file2.getName()));
  String not="file-shouldn't-be-found";
  assertFalse("Cache found '" + not + "', but it shouldn't have.",cache.contains(not));
  Thread.sleep(10);
  LOG.debug("Deleting snapshot.");
  if (!fs.delete(snapshot,true)) {
    throw new IOException("Couldn't delete " + snapshot + " for an unknown reason.");
  }
  FSUtils.logFileSystemState(fs,rootDir,LOG);
  LOG.debug("Checking to see if file is deleted.");
  assertTrue("Cache didn't find:" + file1,cache.contains(file1.getName()));
  assertTrue("Cache didn't find:" + file2,cache.contains(file2.getName()));
  cache.triggerCacheRefreshForTesting();
  assertFalse("Cache found '" + file1 + "', but it shouldn't have.",cache.contains(file1.getName()));
  assertFalse("Cache found '" + file2 + "', but it shouldn't have.",cache.contains(file2.getName()));
  fs.delete(snapshotDir,true);
}
