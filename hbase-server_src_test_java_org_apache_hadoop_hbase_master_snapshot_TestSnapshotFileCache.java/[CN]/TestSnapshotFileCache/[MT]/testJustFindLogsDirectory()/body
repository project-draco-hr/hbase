{
  long period=Long.MAX_VALUE;
  Path snapshotDir=SnapshotDescriptionUtils.getSnapshotsDir(rootDir);
  SnapshotFileCache cache=new SnapshotFileCache(fs,rootDir,period,10000000,"test-snapshot-file-cache-refresh",new SnapshotFileCache.SnapshotFileInspector(){
    public Collection<String> filesUnderSnapshot(    final Path snapshotDir) throws IOException {
      return SnapshotReferenceUtil.getWALNames(fs,snapshotDir);
    }
  }
);
  SnapshotDescription desc=SnapshotDescription.newBuilder().setName("snapshot").build();
  Path snapshot=SnapshotDescriptionUtils.getCompletedSnapshotDir(desc,rootDir);
  SnapshotDescriptionUtils.writeSnapshotInfo(desc,snapshot,fs);
  Path file1=new Path(new Path(new Path(snapshot,"7e91021"),"fam"),"file1");
  fs.createNewFile(file1);
  Path logs=SnapshotReferenceUtil.getLogsDir(snapshot,"server");
  Path log=new Path(logs,"me.hbase.com%2C58939%2C1350424310315.1350424315552");
  fs.createNewFile(log);
  FSUtils.logFileSystemState(fs,rootDir,LOG);
  Iterable<FileStatus> notSnapshot=getNonSnapshotFiles(cache,file1);
  assertFalse("Cache found '" + file1 + "', but it shouldn't have.",Iterables.contains(notSnapshot,file1.getName()));
  notSnapshot=getNonSnapshotFiles(cache,log);
  assertTrue("Cache didn't find:" + log,!Iterables.contains(notSnapshot,log));
}
