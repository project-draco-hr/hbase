{
  try {
    table.commit(-1L);
  }
 catch (  IllegalStateException e) {
  }
catch (  Exception e) {
    e.printStackTrace();
    fail();
  }
  long lockid=table.startUpdate(new Text("row1"));
  try {
    @SuppressWarnings("unused") long dummy=table.startUpdate(new Text("row2"));
  }
 catch (  IllegalStateException e) {
  }
catch (  Exception e) {
    e.printStackTrace();
    fail();
  }
  table.put(lockid,CONTENTS,value);
  table.delete(lockid,CONTENTS);
  table.commit(lockid);
  lockid=table.startUpdate(new Text("row2"));
  table.put(lockid,CONTENTS,value);
  table.commit(lockid);
  Text[] columns={CONTENTS};
  Scanner scanner=table.getScanner(columns,new Text());
  for (  RowResult r : scanner) {
    for (    Map.Entry<Text,Cell> e : r.entrySet()) {
      System.out.println(r.getRow() + ": row: " + e.getKey()+ " value: "+ new String(e.getValue().getValue(),HConstants.UTF8_ENCODING));
    }
  }
}
