{
  Path notDeletablefile=new Path(root,"testGetDeletableFiles_1");
  fs.createNewFile(notDeletablefile);
  assertTrue("Test file not created!",fs.exists(notDeletablefile));
  Path deletablefile=new Path(root,"testGetDeletableFiles_2");
  fs.createNewFile(deletablefile);
  assertTrue("Test file not created!",fs.exists(deletablefile));
  List<FileStatus> files=new ArrayList<FileStatus>(2);
  FileStatus f=new FileStatus();
  f.setPath(deletablefile);
  files.add(f);
  f=new FileStatus();
  f.setPath(notDeletablefile);
  files.add(f);
  List<String> hfiles=new ArrayList<>(1);
  hfiles.add(notDeletablefile.getName());
  rq.addHFileRefs(peerId,hfiles);
  ReplicationHFileCleaner cleaner=new ReplicationHFileCleaner();
  cleaner.setConf(conf);
  Iterator<FileStatus> deletableFilesIterator=cleaner.getDeletableFiles(files).iterator();
  int i=0;
  while (deletableFilesIterator.hasNext() && i < 2) {
    i++;
  }
  if (i > 2) {
    fail("File " + notDeletablefile + " should not be deletable as its hfile reference node is not added.");
  }
  assertTrue(deletableFilesIterator.next().getPath().equals(deletablefile));
}
