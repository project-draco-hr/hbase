{
  ServerName masterServerName=createRegionServerStatusStub();
  if (masterServerName == null)   return null;
  RegionServerStartupResponse result=null;
  try {
    rpcServices.requestCount.set(0);
    LOG.info("reportForDuty to master=" + masterServerName + " with port="+ rpcServices.isa.getPort()+ ", startcode="+ this.startcode);
    long now=EnvironmentEdgeManager.currentTime();
    int port=rpcServices.isa.getPort();
    RegionServerStartupRequest.Builder request=RegionServerStartupRequest.newBuilder();
    request.setPort(port);
    request.setServerStartCode(this.startcode);
    request.setServerCurrentTime(now);
    result=this.rssStub.regionServerStartup(null,request.build());
  }
 catch (  ServiceException se) {
    IOException ioe=ProtobufUtil.getRemoteException(se);
    if (ioe instanceof ClockOutOfSyncException) {
      LOG.fatal("Master rejected startup because clock is out of sync",ioe);
      throw ioe;
    }
 else     if (ioe instanceof ServerNotRunningYetException) {
      LOG.debug("Master is not running yet");
    }
 else {
      LOG.warn("error telling master we are up",se);
    }
  }
  return result;
}
