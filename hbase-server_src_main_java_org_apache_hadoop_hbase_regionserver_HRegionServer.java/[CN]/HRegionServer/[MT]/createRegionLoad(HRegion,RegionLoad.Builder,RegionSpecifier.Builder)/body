{
  byte[] name=r.getRegionName();
  int stores=0;
  int storefiles=0;
  int storeUncompressedSizeMB=0;
  int storefileSizeMB=0;
  int memstoreSizeMB=(int)(r.memstoreSize.get() / 1024 / 1024);
  int storefileIndexSizeMB=0;
  int rootIndexSizeKB=0;
  int totalStaticIndexSizeKB=0;
  int totalStaticBloomSizeKB=0;
  long totalCompactingKVs=0;
  long currentCompactedKVs=0;
synchronized (r.stores) {
    stores+=r.stores.size();
    for (    Store store : r.stores.values()) {
      storefiles+=store.getStorefilesCount();
      storeUncompressedSizeMB+=(int)(store.getStoreSizeUncompressed() / 1024 / 1024);
      storefileSizeMB+=(int)(store.getStorefilesSize() / 1024 / 1024);
      storefileIndexSizeMB+=(int)(store.getStorefilesIndexSize() / 1024 / 1024);
      CompactionProgress progress=store.getCompactionProgress();
      if (progress != null) {
        totalCompactingKVs+=progress.totalCompactingKVs;
        currentCompactedKVs+=progress.currentCompactedKVs;
      }
      rootIndexSizeKB+=(int)(store.getStorefilesIndexSize() / 1024);
      totalStaticIndexSizeKB+=(int)(store.getTotalStaticIndexSize() / 1024);
      totalStaticBloomSizeKB+=(int)(store.getTotalStaticBloomSize() / 1024);
    }
  }
  float dataLocality=r.getHDFSBlocksDistribution().getBlockLocalityIndex(serverName.getHostname());
  if (regionLoadBldr == null) {
    regionLoadBldr=RegionLoad.newBuilder();
  }
  if (regionSpecifier == null) {
    regionSpecifier=RegionSpecifier.newBuilder();
  }
  regionSpecifier.setType(RegionSpecifierType.REGION_NAME);
  regionSpecifier.setValue(ByteStringer.wrap(name));
  regionLoadBldr.setRegionSpecifier(regionSpecifier.build()).setStores(stores).setStorefiles(storefiles).setStoreUncompressedSizeMB(storeUncompressedSizeMB).setStorefileSizeMB(storefileSizeMB).setMemstoreSizeMB(memstoreSizeMB).setStorefileIndexSizeMB(storefileIndexSizeMB).setRootIndexSizeKB(rootIndexSizeKB).setTotalStaticIndexSizeKB(totalStaticIndexSizeKB).setTotalStaticBloomSizeKB(totalStaticBloomSizeKB).setReadRequestsCount(r.readRequestsCount.get()).setWriteRequestsCount(r.writeRequestsCount.get()).setTotalCompactingKVs(totalCompactingKVs).setCurrentCompactedKVs(currentCompactedKVs).setCompleteSequenceId(r.lastFlushSeqId).setDataLocality(dataLocality);
  return regionLoadBldr.build();
}
