{
  int port=this.conf.getInt(HConstants.REGIONSERVER_INFO_PORT,HConstants.DEFAULT_REGIONSERVER_INFOPORT);
  if (this instanceof HMaster) {
    port=conf.getInt(HConstants.MASTER_INFO_PORT,HConstants.DEFAULT_MASTER_INFOPORT);
  }
  if (port < 0)   return port;
  String addr=this.conf.get("hbase.regionserver.info.bindAddress","0.0.0.0");
  if (!Addressing.isLocalAddress(InetAddress.getByName(addr))) {
    String msg="Failed to start http info server. Address " + addr + " does not belong to this host. Correct configuration parameter: "+ "hbase.regionserver.info.bindAddress";
    LOG.error(msg);
    throw new IOException(msg);
  }
  boolean auto=this.conf.getBoolean(HConstants.REGIONSERVER_INFO_PORT_AUTO,false);
  while (true) {
    try {
      this.infoServer=new InfoServer(getProcessName(),addr,port,false,this.conf);
      infoServer.addServlet("dump","/dump",getDumpServlet());
      configureInfoServer();
      this.infoServer.start();
      break;
    }
 catch (    BindException e) {
      if (!auto) {
        LOG.error("Failed binding http info server to port: " + port);
        throw e;
      }
      LOG.info("Failed binding http info server to port: " + port);
      port++;
    }
  }
  port=this.infoServer.getPort();
  conf.setInt(HConstants.REGIONSERVER_INFO_PORT,port);
  int masterInfoPort=conf.getInt(HConstants.MASTER_INFO_PORT,HConstants.DEFAULT_MASTER_INFOPORT);
  conf.setInt("hbase.master.info.port.orig",masterInfoPort);
  conf.setInt(HConstants.MASTER_INFO_PORT,port);
  return port;
}
