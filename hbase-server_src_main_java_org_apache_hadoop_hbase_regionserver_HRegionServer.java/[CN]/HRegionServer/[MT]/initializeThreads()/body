{
  this.cacheFlusher=new MemStoreFlusher(conf,this);
  this.compactSplitThread=new CompactSplitThread(this);
  this.compactionChecker=new CompactionChecker(this,this.threadWakeFrequency,this);
  this.periodicFlusher=new PeriodicMemstoreFlusher(this.threadWakeFrequency,this);
  this.leases=new Leases(this.threadWakeFrequency);
  movedRegionsCleaner=MovedRegionsCleaner.createAndStart(this);
  if (this.nonceManager != null) {
    nonceManagerChore=this.nonceManager.createCleanupChore(this);
  }
  rsQuotaManager=new RegionServerQuotaManager(this);
  rpcClient=RpcClientFactory.createClient(conf,clusterId,new InetSocketAddress(rpcServices.isa.getAddress(),0));
  int storefileRefreshPeriod=conf.getInt(StorefileRefresherChore.REGIONSERVER_STOREFILE_REFRESH_PERIOD,StorefileRefresherChore.DEFAULT_REGIONSERVER_STOREFILE_REFRESH_PERIOD);
  if (storefileRefreshPeriod > 0) {
    this.storefileRefresher=new StorefileRefresherChore(storefileRefreshPeriod,this,this);
  }
  registerConfigurationObservers();
}
