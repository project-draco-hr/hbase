{
  this.zooKeeper=new ZooKeeperWatcher(conf,REGIONSERVER + ":" + this.isa.getPort(),this);
  this.masterAddressManager=new MasterAddressTracker(this.zooKeeper,this);
  this.masterAddressManager.start();
  blockAndCheckIfStopped(this.masterAddressManager);
  this.clusterStatusTracker=new ClusterStatusTracker(this.zooKeeper,this);
  this.clusterStatusTracker.start();
  blockAndCheckIfStopped(this.clusterStatusTracker);
  this.catalogTracker=new CatalogTracker(this.zooKeeper,this.conf,this);
  catalogTracker.start();
  try {
    clusterId=ZKClusterId.readClusterIdZNode(this.zooKeeper);
    if (clusterId == null) {
      this.abort("Cluster ID has not been set");
    }
    LOG.info("ClusterId : " + clusterId);
  }
 catch (  KeeperException e) {
    this.abort("Failed to retrieve Cluster ID",e);
  }
  try {
    rspmHost=new RegionServerProcedureManagerHost();
    rspmHost.loadProcedures(conf);
    rspmHost.initialize(this);
  }
 catch (  KeeperException e) {
    this.abort("Failed to reach zk cluster when creating procedure handler.",e);
  }
  this.tableLockManager=TableLockManager.createTableLockManager(conf,zooKeeper,ServerName.valueOf(isa.getHostName(),isa.getPort(),startcode));
  if (this.distributedLogReplay) {
    this.recoveringRegionWatcher=new RecoveringRegionWatcher(this.zooKeeper,this);
  }
}
