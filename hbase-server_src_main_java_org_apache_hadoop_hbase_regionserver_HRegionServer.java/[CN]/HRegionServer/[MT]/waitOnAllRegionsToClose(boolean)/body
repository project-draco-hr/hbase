{
  int lastCount=-1;
  long previousLogTime=0;
  Set<String> closedRegions=new HashSet<String>();
  boolean interrupted=false;
  try {
    while (!isOnlineRegionsEmpty()) {
      int count=getNumberOfOnlineRegions();
      if (count != lastCount) {
        if (System.currentTimeMillis() > (previousLogTime + 1000)) {
          previousLogTime=System.currentTimeMillis();
          lastCount=count;
          LOG.info("Waiting on " + count + " regions to close");
          if (count < 10 && LOG.isDebugEnabled()) {
            LOG.debug(this.onlineRegions);
          }
        }
      }
      for (      Map.Entry<String,HRegion> e : this.onlineRegions.entrySet()) {
        HRegionInfo hri=e.getValue().getRegionInfo();
        if (!this.regionsInTransitionInRS.containsKey(hri.getEncodedNameAsBytes()) && !closedRegions.contains(hri.getEncodedName())) {
          closedRegions.add(hri.getEncodedName());
          closeRegionIgnoreErrors(hri,abort);
        }
      }
      if (this.regionsInTransitionInRS.isEmpty()) {
        if (!isOnlineRegionsEmpty()) {
          LOG.info("We were exiting though online regions are not empty," + " because some regions failed closing");
        }
        break;
      }
      if (sleep(200)) {
        interrupted=true;
      }
    }
  }
  finally {
    if (interrupted) {
      Thread.currentThread().interrupt();
    }
  }
}
