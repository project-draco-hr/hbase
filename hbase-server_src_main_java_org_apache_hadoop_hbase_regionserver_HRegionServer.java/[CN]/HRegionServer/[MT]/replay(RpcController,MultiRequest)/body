{
  long before=EnvironmentEdgeManager.currentTimeMillis();
  PayloadCarryingRpcController controller=(PayloadCarryingRpcController)rpcc;
  CellScanner cellScanner=controller != null ? controller.cellScanner() : null;
  controller.setCellScanner(null);
  try {
    checkOpen();
    HRegion region=getRegion(request.getRegion());
    MultiResponse.Builder builder=MultiResponse.newBuilder();
    List<MutationProto> mutates=new ArrayList<MutationProto>();
    for (    ClientProtos.MultiAction actionUnion : request.getActionList()) {
      if (actionUnion.hasMutation()) {
        MutationProto mutate=actionUnion.getMutation();
        MutationType type=mutate.getMutateType();
switch (type) {
case PUT:
case DELETE:
          mutates.add(mutate);
        break;
default :
      throw new DoNotRetryIOException("Unsupported mutate type: " + type.name());
  }
}
 else {
  LOG.warn("Error: invalid action: " + actionUnion + ". "+ "it must be a Mutation.");
  throw new DoNotRetryIOException("Invalid action, " + "it must be a Mutation.");
}
}
if (!mutates.isEmpty()) {
doBatchOp(builder,region,mutates,cellScanner,true);
}
return builder.build();
}
 catch (IOException ie) {
throw new ServiceException(ie);
}
 finally {
metricsRegionServer.updateReplay(EnvironmentEdgeManager.currentTimeMillis() - before);
}
}
