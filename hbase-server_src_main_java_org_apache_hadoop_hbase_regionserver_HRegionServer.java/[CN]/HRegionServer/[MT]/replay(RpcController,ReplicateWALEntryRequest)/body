{
  long before=EnvironmentEdgeManager.currentTimeMillis();
  CellScanner cells=((PayloadCarryingRpcController)controller).cellScanner();
  try {
    checkOpen();
    List<WALEntry> entries=request.getEntryList();
    if (entries == null || entries.isEmpty()) {
      return ReplicateWALEntryResponse.newBuilder().build();
    }
    HRegion region=this.getRegionByEncodedName(entries.get(0).getKey().getEncodedRegionName().toStringUtf8());
    List<Pair<HLogKey,WALEdit>> walEntries=new ArrayList<Pair<HLogKey,WALEdit>>();
    List<Pair<MutationType,Mutation>> mutations=region.getReplayMutations(request.getEntryList(),cells,UUID.fromString(this.clusterId),walEntries);
    if (!mutations.isEmpty()) {
      OperationStatus[] result=doBatchOp(region,mutations,true);
      for (int i=0; result != null && i < result.length; i++) {
        if (result[i] != OperationStatus.SUCCESS) {
          throw new IOException(result[i].getExceptionMsg());
        }
      }
    }
    if (region.getCoprocessorHost() != null) {
      for (      Pair<HLogKey,WALEdit> wal : walEntries) {
        region.getCoprocessorHost().postWALRestore(region.getRegionInfo(),wal.getFirst(),wal.getSecond());
      }
    }
    return ReplicateWALEntryResponse.newBuilder().build();
  }
 catch (  IOException ie) {
    throw new ServiceException(ie);
  }
 finally {
    metricsRegionServer.updateReplay(EnvironmentEdgeManager.currentTimeMillis() - before);
  }
}
