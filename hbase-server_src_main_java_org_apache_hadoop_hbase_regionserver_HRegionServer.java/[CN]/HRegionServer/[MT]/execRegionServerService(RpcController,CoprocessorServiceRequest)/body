{
  try {
    ServerRpcController serviceController=new ServerRpcController();
    CoprocessorServiceCall call=serviceRequest.getCall();
    String serviceName=call.getServiceName();
    com.google.protobuf.Service service=coprocessorServiceHandlers.get(serviceName);
    if (service == null) {
      throw new UnknownProtocolException(null,"No registered coprocessor service found for " + serviceName);
    }
    com.google.protobuf.Descriptors.ServiceDescriptor serviceDesc=service.getDescriptorForType();
    String methodName=call.getMethodName();
    com.google.protobuf.Descriptors.MethodDescriptor methodDesc=serviceDesc.findMethodByName(methodName);
    if (methodDesc == null) {
      throw new UnknownProtocolException(service.getClass(),"Unknown method " + methodName + " called on service "+ serviceName);
    }
    com.google.protobuf.Message request=CoprocessorRpcUtils.getRequest(service,methodDesc,call.getRequest());
    final com.google.protobuf.Message.Builder responseBuilder=service.getResponsePrototype(methodDesc).newBuilderForType();
    service.callMethod(methodDesc,serviceController,request,new com.google.protobuf.RpcCallback<com.google.protobuf.Message>(){
      @Override public void run(      com.google.protobuf.Message message){
        if (message != null) {
          responseBuilder.mergeFrom(message);
        }
      }
    }
);
    IOException exception=CoprocessorRpcUtils.getControllerException(serviceController);
    if (exception != null) {
      throw exception;
    }
    return CoprocessorRpcUtils.getResponse(responseBuilder.build(),HConstants.EMPTY_BYTE_ARRAY);
  }
 catch (  IOException ie) {
    throw new ServiceException(ie);
  }
}
