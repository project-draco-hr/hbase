{
  if (!isOnline()) {
    throw new ConstraintException(RSGroupInfoManager.RSGROUP_TABLE_NAME + " is not online, unable to perform balance");
  }
  Map<ServerName,List<HRegionInfo>> correctedState=correctAssignments(clusterState);
  List<RegionPlan> regionPlans=new ArrayList<RegionPlan>();
  List<HRegionInfo> misplacedRegions=correctedState.get(LoadBalancer.BOGUS_SERVER_NAME);
  for (  HRegionInfo regionInfo : misplacedRegions) {
    regionPlans.add(new RegionPlan(regionInfo,null,null));
  }
  try {
    for (    RSGroupInfo info : RSGroupInfoManager.listRSGroups()) {
      Map<ServerName,List<HRegionInfo>> groupClusterState=new HashMap<ServerName,List<HRegionInfo>>();
      for (      HostAndPort sName : info.getServers()) {
        for (        ServerName curr : clusterState.keySet()) {
          if (curr.getHostPort().equals(sName)) {
            groupClusterState.put(curr,correctedState.get(curr));
          }
        }
      }
      List<RegionPlan> groupPlans=this.internalBalancer.balanceCluster(groupClusterState);
      if (groupPlans != null) {
        regionPlans.addAll(groupPlans);
      }
    }
  }
 catch (  IOException exp) {
    LOG.warn("Exception while balancing cluster.",exp);
    regionPlans.clear();
  }
  return regionPlans;
}
