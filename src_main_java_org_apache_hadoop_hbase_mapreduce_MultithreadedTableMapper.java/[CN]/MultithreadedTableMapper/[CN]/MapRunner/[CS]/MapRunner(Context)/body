{
  mapper=ReflectionUtils.newInstance(mapClass,context.getConfiguration());
  try {
    Constructor c=context.getClass().getConstructor(Configuration.class,outer.getTaskAttemptID().getClass(),SubMapRecordReader.class,SubMapRecordWriter.class,context.getOutputCommitter().getClass(),SubMapStatusReporter.class,outer.getInputSplit().getClass());
    c.setAccessible(true);
    subcontext=(Context)c.newInstance(outer.getConfiguration(),outer.getTaskAttemptID(),new SubMapRecordReader(),new SubMapRecordWriter(),context.getOutputCommitter(),new SubMapStatusReporter(),outer.getInputSplit());
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
}
