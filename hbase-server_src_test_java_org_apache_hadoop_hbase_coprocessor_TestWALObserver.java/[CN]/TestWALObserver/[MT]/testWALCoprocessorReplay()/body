{
  byte[] tableName=Bytes.toBytes("testWALCoprocessorReplay");
  final HTableDescriptor htd=getBasic3FamilyHTableDescriptor(Bytes.toString(tableName));
  final HRegionInfo hri=new HRegionInfo(tableName,null,null);
  final Path basedir=new Path(this.hbaseRootDir,Bytes.toString(tableName));
  deleteDir(basedir);
  fs.mkdirs(new Path(basedir,hri.getEncodedName()));
  final Configuration newConf=HBaseConfiguration.create(this.conf);
  HLog wal=createWAL(this.conf);
  WALEdit edit=new WALEdit();
  long now=EnvironmentEdgeManager.currentTimeMillis();
  final int countPerFamily=1000;
  for (  HColumnDescriptor hcd : htd.getFamilies()) {
    addWALEdits(tableName,hri,TEST_ROW,hcd.getName(),countPerFamily,EnvironmentEdgeManager.getDelegate(),wal,htd);
  }
  wal.append(hri,tableName,edit,now,htd);
  wal.sync();
  User user=HBaseTestingUtility.getDifferentUser(newConf,".replay.wal.secondtime");
  user.runAs(new PrivilegedExceptionAction(){
    public Object run() throws Exception {
      Path p=runWALSplit(newConf);
      LOG.info("WALSplit path == " + p);
      FileSystem newFS=FileSystem.get(newConf);
      HLog wal2=createWAL(newConf);
      Path tableDir=HTableDescriptor.getTableDir(hbaseRootDir,hri.getTableName());
      HRegion region=new HRegion(tableDir,wal2,FileSystem.get(newConf),newConf,hri,htd,TEST_UTIL.getHBaseCluster().getRegionServer(0));
      long seqid2=region.initialize();
      SampleRegionWALObserver cp2=(SampleRegionWALObserver)region.getCoprocessorHost().findCoprocessor(SampleRegionWALObserver.class.getName());
      assertNotNull(cp2);
      assertTrue(cp2.isPreWALRestoreCalled());
      assertTrue(cp2.isPostWALRestoreCalled());
      region.close();
      wal2.closeAndDelete();
      return null;
    }
  }
);
}
