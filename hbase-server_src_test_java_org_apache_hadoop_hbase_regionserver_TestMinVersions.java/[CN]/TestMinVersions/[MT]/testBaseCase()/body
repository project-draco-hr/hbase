{
  HTableDescriptor htd=hbu.createTableDescriptor(name.getMethodName(),2,1000,1,KeepDeletedCells.FALSE);
  HRegion region=hbu.createLocalHRegion(htd,null,null);
  try {
    long ts=EnvironmentEdgeManager.currentTime() - 2000;
    Put p=new Put(T1,ts - 3);
    p.add(c0,c0,T1);
    region.put(p);
    p=new Put(T1,ts - 2);
    p.add(c0,c0,T2);
    region.put(p);
    p=new Put(T1,ts - 1);
    p.add(c0,c0,T3);
    region.put(p);
    p=new Put(T1,ts);
    p.add(c0,c0,T4);
    region.put(p);
    Result r=region.get(new Get(T1));
    checkResult(r,c0,T4);
    Get g=new Get(T1);
    g.setTimeRange(0L,ts + 1);
    r=region.get(g);
    checkResult(r,c0,T4);
    g.setTimeRange(0L,ts - 2);
    r=region.get(g);
    checkResult(r,c0,T1);
    g=new Get(T1);
    g.setMaxVersions();
    r=region.get(g);
    checkResult(r,c0,T4,T3);
    g=new Get(T1);
    g.setMaxVersions();
    g.addColumn(c0,c0);
    r=region.get(g);
    checkResult(r,c0,T4,T3);
    region.flushcache();
    g=new Get(T1);
    g.setTimeRange(0L,ts - 2);
    r=region.get(g);
    assertTrue(r.isEmpty());
    region.compactStores(true);
    g=new Get(T1);
    g.setTimeRange(0L,ts + 1);
    r=region.get(g);
    checkResult(r,c0,T4);
    g.setTimeRange(0L,ts);
    r=region.get(g);
    checkResult(r,c0,T3);
    g.setTimeRange(0L,ts - 1);
    r=region.get(g);
    assertTrue(r.isEmpty());
  }
  finally {
    HBaseTestingUtility.closeRegionAndWAL(region);
  }
}
