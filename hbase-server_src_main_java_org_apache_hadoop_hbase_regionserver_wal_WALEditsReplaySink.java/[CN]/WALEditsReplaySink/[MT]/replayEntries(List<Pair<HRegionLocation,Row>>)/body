{
  if (actions.size() == 0) {
    return;
  }
  int batchSize=actions.size();
  int dataSize=0;
  Map<HRegionInfo,List<Action<Row>>> actionsByRegion=new HashMap<HRegionInfo,List<Action<Row>>>();
  HRegionLocation loc=null;
  Row row=null;
  List<Action<Row>> regionActions=null;
  for (int i=0; i < batchSize; i++) {
    loc=actions.get(i).getFirst();
    row=actions.get(i).getSecond();
    if (actionsByRegion.containsKey(loc.getRegionInfo())) {
      regionActions=actionsByRegion.get(loc.getRegionInfo());
    }
 else {
      regionActions=new ArrayList<Action<Row>>();
      actionsByRegion.put(loc.getRegionInfo(),regionActions);
    }
    Action<Row> action=new Action<Row>(row,i);
    regionActions.add(action);
    dataSize+=row.getRow().length;
  }
  long startTime=EnvironmentEdgeManager.currentTimeMillis();
  for (  HRegionInfo curRegion : actionsByRegion.keySet()) {
    replayEdits(loc,curRegion,actionsByRegion.get(curRegion));
  }
  long endTime=EnvironmentEdgeManager.currentTimeMillis() - startTime;
  LOG.debug("number of rows:" + actions.size() + " are sent by batch! spent "+ endTime+ "(ms)!");
  metrics.updateReplayTime(endTime);
  metrics.updateReplayBatchSize(batchSize);
  metrics.updateReplayDataSize(dataSize);
  this.totalReplayedEdits.addAndGet(batchSize);
}
