{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.row=iprot.readBinary();
  struct.setRowIsSet(true);
{
    org.apache.thrift.protocol.TList _list81=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.columns=new ArrayList<TColumnIncrement>(_list81.size);
    TColumnIncrement _elem82;
    for (int _i83=0; _i83 < _list81.size; ++_i83) {
      _elem82=new TColumnIncrement();
      _elem82.read(iprot);
      struct.columns.add(_elem82);
    }
  }
  struct.setColumnsIsSet(true);
  BitSet incoming=iprot.readBitSet(3);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TMap _map84=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map84.size);
      ByteBuffer _key85;
      ByteBuffer _val86;
      for (int _i87=0; _i87 < _map84.size; ++_i87) {
        _key85=iprot.readBinary();
        _val86=iprot.readBinary();
        struct.attributes.put(_key85,_val86);
      }
    }
    struct.setAttributesIsSet(true);
  }
  if (incoming.get(1)) {
    struct.durability=org.apache.hadoop.hbase.thrift2.generated.TDurability.findByValue(iprot.readI32());
    struct.setDurabilityIsSet(true);
  }
  if (incoming.get(2)) {
    struct.cellVisibility=new TCellVisibility();
    struct.cellVisibility.read(iprot);
    struct.setCellVisibilityIsSet(true);
  }
}
