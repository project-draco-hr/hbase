{
  if (versionedList.getVersion() != version) {
    return false;
  }
  LinkedList<ImmutableSegment> suffix;
synchronized (pipeline) {
    if (versionedList.getVersion() != version) {
      return false;
    }
    suffix=versionedList.getStoreSegments();
    LOG.info("Swapping pipeline suffix with compacted item. " + "Just before the swap the number of segments in pipeline is:" + versionedList.getStoreSegments().size() + ", and the number of cells in new segment is:"+ segment.getCellsCount());
    swapSuffix(suffix,segment);
  }
  if (region != null) {
    long suffixSize=CompactingMemStore.getSegmentsSize(suffix);
    long newSize=CompactingMemStore.getSegmentSize(segment);
    long delta=suffixSize - newSize;
    long globalMemstoreSize=region.addAndGetGlobalMemstoreSize(-delta);
    LOG.info("Suffix size: " + suffixSize + " compacted item size: "+ newSize+ " globalMemstoreSize: "+ globalMemstoreSize);
  }
  return true;
}
