{
  if (suffix.isEmpty()) {
    return true;
  }
  Iterator<ImmutableSegment> pipelineBackwardIterator=pipeline.descendingIterator();
  Iterator<ImmutableSegment> suffixBackwardIterator=suffix.descendingIterator();
  ImmutableSegment suffixCurrent;
  ImmutableSegment pipelineCurrent;
  for (; suffixBackwardIterator.hasNext(); ) {
    if (!pipelineBackwardIterator.hasNext()) {
      return false;
    }
    suffixCurrent=suffixBackwardIterator.next();
    pipelineCurrent=pipelineBackwardIterator.next();
    if (suffixCurrent != pipelineCurrent) {
      return false;
    }
  }
  return true;
}
