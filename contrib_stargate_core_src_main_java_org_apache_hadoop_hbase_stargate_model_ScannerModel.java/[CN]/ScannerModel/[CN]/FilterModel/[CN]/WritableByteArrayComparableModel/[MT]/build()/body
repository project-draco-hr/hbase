{
  WritableByteArrayComparable comparator;
switch (ComparatorType.valueOf(type)) {
case BinaryComparator:
{
      comparator=new BinaryComparator(Base64.decode(value));
    }
  break;
case BinaryPrefixComparator:
{
  comparator=new BinaryPrefixComparator(Base64.decode(value));
}
break;
case RegexStringComparator:
{
comparator=new RegexStringComparator(value);
}
break;
case SubstringComparator:
{
comparator=new SubstringComparator(value);
}
break;
default :
{
throw new RuntimeException("unhandled comparator type: " + type);
}
}
return comparator;
}
