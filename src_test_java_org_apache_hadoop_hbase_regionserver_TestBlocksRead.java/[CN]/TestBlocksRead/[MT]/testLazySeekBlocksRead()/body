{
  byte[] TABLE=Bytes.toBytes("testLazySeekBlocksRead");
  String FAMILY="cf1";
  KeyValue kvs[];
  HBaseConfiguration conf=getConf();
  initHRegion(TABLE,getName(),conf,FAMILY);
  putData(FAMILY,"row","col1",1);
  putData(FAMILY,"row","col2",2);
  region.flushcache();
  putData(FAMILY,"row","col1",3);
  putData(FAMILY,"row","col2",4);
  region.flushcache();
  kvs=getData(FAMILY,"row",Arrays.asList("col1"),1);
  assertEquals(1,kvs.length);
  verifyData(kvs[0],"row","col1",3);
  kvs=getData(FAMILY,"row",Arrays.asList("col1","col2"),2);
  assertEquals(2,kvs.length);
  verifyData(kvs[0],"row","col1",3);
  verifyData(kvs[1],"row","col2",4);
  putData(FAMILY,"row","col3",5);
  region.flushcache();
  kvs=getData(FAMILY,"row","col3",1);
  assertEquals(1,kvs.length);
  verifyData(kvs[0],"row","col3",5);
  kvs=getData(FAMILY,"row",Arrays.asList("col1"),1,2,2);
  assertEquals(1,kvs.length);
  verifyData(kvs[0],"row","col1",3);
  deleteFamily(FAMILY,"row",6);
  region.flushcache();
  kvs=getData(FAMILY,"row","col1",2,3,3);
  assertEquals(0,kvs.length);
  kvs=getData(FAMILY,"row","col2",3,4,4);
  assertEquals(0,kvs.length);
  kvs=getData(FAMILY,"row","col3",2);
  assertEquals(0,kvs.length);
  kvs=getData(FAMILY,"row",Arrays.asList("col1","col2","col3"),4);
  assertEquals(0,kvs.length);
  deleteFamily(FAMILY,"row",10);
  region.flushcache();
  putData(FAMILY,"row","col1",7);
  putData(FAMILY,"row","col2",8);
  putData(FAMILY,"row","col3",9);
  region.flushcache();
  kvs=getData(FAMILY,"row",Arrays.asList("col1","col2","col3"),5);
  assertEquals(0,kvs.length);
  putData(FAMILY,"row","col1",11);
  putData(FAMILY,"row","col2",12);
  putData(FAMILY,"row","col3",13);
  region.flushcache();
  kvs=getData(FAMILY,"row",Arrays.asList("col1","col2","col3"),5);
  assertEquals(3,kvs.length);
  verifyData(kvs[0],"row","col1",11);
  verifyData(kvs[1],"row","col2",12);
  verifyData(kvs[2],"row","col3",13);
}
