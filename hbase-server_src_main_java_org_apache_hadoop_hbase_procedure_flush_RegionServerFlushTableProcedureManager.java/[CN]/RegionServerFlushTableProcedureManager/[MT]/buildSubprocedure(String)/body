{
  if (rss.isStopping() || rss.isStopped()) {
    throw new IllegalStateException("Can't start flush region subprocedure on RS: " + rss.getServerName() + ", because stopping/stopped!");
  }
  List<Region> involvedRegions;
  try {
    involvedRegions=getRegionsToFlush(table);
  }
 catch (  IOException e1) {
    throw new IllegalStateException("Failed to figure out if there is region to flush.",e1);
  }
  LOG.debug("Launching subprocedure to flush regions for " + table);
  ForeignExceptionDispatcher exnDispatcher=new ForeignExceptionDispatcher(table);
  Configuration conf=rss.getConfiguration();
  long timeoutMillis=conf.getLong(FLUSH_TIMEOUT_MILLIS_KEY,FLUSH_TIMEOUT_MILLIS_DEFAULT);
  long wakeMillis=conf.getLong(FLUSH_REQUEST_WAKE_MILLIS_KEY,FLUSH_REQUEST_WAKE_MILLIS_DEFAULT);
  FlushTableSubprocedurePool taskManager=new FlushTableSubprocedurePool(rss.getServerName().toString(),conf,rss);
  return new FlushTableSubprocedure(member,exnDispatcher,wakeMillis,timeoutMillis,involvedRegions,table,taskManager);
}
