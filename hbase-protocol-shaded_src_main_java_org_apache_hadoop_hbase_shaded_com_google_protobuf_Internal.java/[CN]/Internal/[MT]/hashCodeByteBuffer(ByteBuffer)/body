{
  if (bytes.hasArray()) {
    int h=partialHash(bytes.capacity(),bytes.array(),bytes.arrayOffset(),bytes.capacity());
    return h == 0 ? 1 : h;
  }
 else {
    final int bufferSize=bytes.capacity() > DEFAULT_BUFFER_SIZE ? DEFAULT_BUFFER_SIZE : bytes.capacity();
    final byte[] buffer=new byte[bufferSize];
    final ByteBuffer duplicated=bytes.duplicate();
    duplicated.clear();
    int h=bytes.capacity();
    while (duplicated.remaining() > 0) {
      final int length=duplicated.remaining() <= bufferSize ? duplicated.remaining() : bufferSize;
      duplicated.get(buffer,0,length);
      h=partialHash(h,buffer,0,length);
    }
    return h == 0 ? 1 : h;
  }
}
