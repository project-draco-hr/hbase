{
  Set<String> regionServers=new HashSet<String>(regions.size());
  for (  Pair<HRegionInfo,ServerName> region : regions) {
    if (region != null && region.getFirst() != null && region.getSecond() != null) {
      HRegionInfo hri=region.getFirst();
      if (hri.isOffline() && (hri.isSplit() || hri.isSplitParent()))       continue;
      regionServers.add(region.getSecond().toString());
    }
  }
  Procedure proc=coordinator.startProcedure(this.monitor,this.snapshot.getName(),this.snapshot.toByteArray(),Lists.newArrayList(regionServers));
  if (proc == null) {
    String msg="Failed to submit distributed procedure for snapshot '" + snapshot.getName() + "'";
    LOG.error(msg);
    throw new HBaseSnapshotException(msg);
  }
  try {
    proc.waitForCompleted();
    LOG.info("Done waiting - online snapshot for " + this.snapshot.getName());
    Path snapshotDir=SnapshotDescriptionUtils.getWorkingSnapshotDir(snapshot,rootDir);
    for (    Pair<HRegionInfo,ServerName> region : regions) {
      HRegionInfo regionInfo=region.getFirst();
      if (regionInfo.isOffline() && (regionInfo.isSplit() || regionInfo.isSplitParent())) {
        if (!fs.exists(new Path(snapshotDir,regionInfo.getEncodedName()))) {
          LOG.info("Take disabled snapshot of offline region=" + regionInfo);
          snapshotDisabledRegion(regionInfo);
        }
      }
    }
  }
 catch (  InterruptedException e) {
    ForeignException ee=new ForeignException("Interrupted while waiting for snapshot to finish",e);
    monitor.receive(ee);
    Thread.currentThread().interrupt();
  }
catch (  ForeignException e) {
    monitor.receive(e);
  }
}
