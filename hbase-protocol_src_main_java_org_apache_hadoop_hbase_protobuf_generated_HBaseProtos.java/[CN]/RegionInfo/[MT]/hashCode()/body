{
  if (memoizedHashCode != 0) {
    return memoizedHashCode;
  }
  int hash=41;
  hash=(19 * hash) + getDescriptorForType().hashCode();
  if (hasRegionId()) {
    hash=(37 * hash) + REGION_ID_FIELD_NUMBER;
    hash=(53 * hash) + hashLong(getRegionId());
  }
  if (hasTableName()) {
    hash=(37 * hash) + TABLE_NAME_FIELD_NUMBER;
    hash=(53 * hash) + getTableName().hashCode();
  }
  if (hasStartKey()) {
    hash=(37 * hash) + START_KEY_FIELD_NUMBER;
    hash=(53 * hash) + getStartKey().hashCode();
  }
  if (hasEndKey()) {
    hash=(37 * hash) + END_KEY_FIELD_NUMBER;
    hash=(53 * hash) + getEndKey().hashCode();
  }
  if (hasOffline()) {
    hash=(37 * hash) + OFFLINE_FIELD_NUMBER;
    hash=(53 * hash) + hashBoolean(getOffline());
  }
  if (hasSplit()) {
    hash=(37 * hash) + SPLIT_FIELD_NUMBER;
    hash=(53 * hash) + hashBoolean(getSplit());
  }
  hash=(29 * hash) + getUnknownFields().hashCode();
  memoizedHashCode=hash;
  return hash;
}
