{
  TableName tableName=TableName.valueOf("TestSplit");
  byte[] familyName=Bytes.toBytes("fam");
  try (HTable ht=TEST_UTIL.createTable(tableName,familyName)){
    TEST_UTIL.loadTable(ht,familyName,false);
  }
   HRegionServer server=TEST_UTIL.getHBaseCluster().getRegionServer(0);
  byte[] firstRow=Bytes.toBytes("aaa");
  byte[] splitRow=Bytes.toBytes("lll");
  byte[] lastRow=Bytes.toBytes("zzz");
  try (Connection conn=ConnectionFactory.createConnection(TEST_UTIL.getConfiguration())){
    byte[] regionName=conn.getRegionLocator(tableName).getRegionLocation(splitRow).getRegionInfo().getRegionName();
    HRegion region=server.getRegion(regionName);
    SplitTransaction split=new SplitTransaction(region,splitRow);
    split.prepare();
    PairOfSameType<HRegion> regions=split.createDaughters(server,server);
    assertFalse(test(conn,tableName,firstRow,server));
    assertFalse(test(conn,tableName,lastRow,server));
    split.openDaughters(server,null,regions.getFirst(),regions.getSecond());
    assertFalse(test(conn,tableName,firstRow,server));
    assertFalse(test(conn,tableName,lastRow,server));
    server.reportRegionStateTransition(RegionServerStatusProtos.RegionStateTransition.TransitionCode.SPLIT,region.getRegionInfo(),regions.getFirst().getRegionInfo(),regions.getSecond().getRegionInfo());
    server.addToOnlineRegions(regions.getSecond());
    assertFalse(test(conn,tableName,firstRow,server));
    assertTrue(test(conn,tableName,lastRow,server));
    server.addToOnlineRegions(regions.getFirst());
    assertTrue(test(conn,tableName,firstRow,server));
    assertTrue(test(conn,tableName,lastRow,server));
    assertTrue(test(conn,tableName,firstRow,server));
    assertTrue(test(conn,tableName,lastRow,server));
  }
 }
