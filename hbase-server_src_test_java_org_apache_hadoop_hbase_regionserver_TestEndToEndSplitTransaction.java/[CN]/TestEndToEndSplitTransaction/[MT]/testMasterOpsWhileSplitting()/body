{
  TableName tableName=TableName.valueOf("TestSplit");
  byte[] familyName=Bytes.toBytes("fam");
  HTable ht=TEST_UTIL.createTable(tableName,familyName);
  TEST_UTIL.loadTable(ht,familyName,false);
  ht.close();
  HRegionServer server=TEST_UTIL.getHBaseCluster().getRegionServer(0);
  byte[] firstRow=Bytes.toBytes("aaa");
  byte[] splitRow=Bytes.toBytes("lll");
  byte[] lastRow=Bytes.toBytes("zzz");
  HConnection con=HConnectionManager.getConnection(TEST_UTIL.getConfiguration());
  byte[] regionName=con.locateRegion(tableName,splitRow).getRegionInfo().getRegionName();
  HRegion region=server.getRegion(regionName);
  SplitTransaction split=new SplitTransaction(region,splitRow);
  split.useZKForAssignment=ConfigUtil.useZKForAssignment(conf);
  split.prepare();
  PairOfSameType<HRegion> regions=split.createDaughters(server,server);
  assertFalse(test(con,tableName,firstRow,server));
  assertFalse(test(con,tableName,lastRow,server));
  split.openDaughters(server,null,regions.getFirst(),regions.getSecond());
  assertFalse(test(con,tableName,firstRow,server));
  assertFalse(test(con,tableName,lastRow,server));
  server.postOpenDeployTasks(regions.getSecond());
  server.addToOnlineRegions(regions.getSecond());
  assertFalse(test(con,tableName,firstRow,server));
  assertTrue(test(con,tableName,lastRow,server));
  server.postOpenDeployTasks(regions.getFirst());
  server.addToOnlineRegions(regions.getFirst());
  assertTrue(test(con,tableName,firstRow,server));
  assertTrue(test(con,tableName,lastRow,server));
  if (split.useZKForAssignment) {
    ((BaseCoordinatedStateManager)server.getCoordinatedStateManager()).getSplitTransactionCoordination().completeSplitTransaction(server,regions.getFirst(),regions.getSecond(),split.std,region);
  }
  assertTrue(test(con,tableName,firstRow,server));
  assertTrue(test(con,tableName,lastRow,server));
}
