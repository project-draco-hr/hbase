{
  boolean tableExists=false;
  byte[] tableNameMetaStart=Bytes.toBytes(Bytes.toString(tableName) + ",,");
  final Scan scan=new Scan(tableNameMetaStart).addFamily(HConstants.CATALOG_FAMILY);
  long scannerId=this.server.openScanner(m.getRegionName(),scan);
  int rows=this.master.getConfiguration().getInt("hbase.meta.scanner.caching",100);
  scan.setCaching(rows);
  List<byte[]> emptyRows=new ArrayList<byte[]>();
  try {
    while (true) {
      Result values=this.server.next(scannerId);
      if (values == null || values.isEmpty()) {
        break;
      }
      HRegionInfo info=this.master.getHRegionInfo(values.getRow(),values);
      if (info == null) {
        emptyRows.add(values.getRow());
        LOG.error(Bytes.toString(HConstants.CATALOG_FAMILY) + ":" + Bytes.toString(HConstants.REGIONINFO_QUALIFIER)+ " not found on "+ Bytes.toStringBinary(values.getRow()));
        continue;
      }
      final String serverAddress=BaseScanner.getServerAddress(values);
      String serverName=null;
      if (serverAddress != null && serverAddress.length() > 0) {
        long startCode=BaseScanner.getStartCode(values);
        serverName=HServerInfo.getServerName(serverAddress,startCode);
      }
      if (Bytes.compareTo(info.getTableDesc().getName(),tableName) > 0) {
        break;
      }
      tableExists=true;
      if (!isBeingServed(serverName) || !isEnabled(info)) {
        unservedRegions.add(info);
      }
      processScanItem(serverName,info);
    }
  }
  finally {
    if (scannerId != -1L) {
      try {
        this.server.close(scannerId);
      }
 catch (      IOException e) {
        e=RemoteExceptionHandler.checkIOException(e);
        LOG.error("closing scanner",e);
      }
    }
    scannerId=-1L;
  }
  if (emptyRows.size() > 0) {
    LOG.warn("Found " + emptyRows.size() + " rows with empty HRegionInfo while scanning meta region "+ Bytes.toString(m.getRegionName()));
    master.deleteEmptyMetaRows(server,m.getRegionName(),emptyRows);
  }
  if (!tableExists) {
    throw new TableNotFoundException(Bytes.toString(tableName));
  }
  postProcessMeta(m,server);
  unservedRegions.clear();
  return Boolean.TRUE;
}
