{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,row_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeEnumSize(2,mutateType_.getNumber());
  }
  for (int i=0; i < columnValue_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(3,columnValue_.get(i));
  }
  for (int i=0; i < attribute_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,attribute_.get(i));
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(5,timestamp_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(6,lockId_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(7,writeToWAL_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(10,timeRange_);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
