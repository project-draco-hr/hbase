{
  long memstoreFlushSize=1024L * 1024;
  Configuration conf=TEST_UTIL.getConfiguration();
  conf.setLong(HConstants.HREGION_MEMSTORE_FLUSH_SIZE,memstoreFlushSize);
  conf.set(FlushPolicyFactory.HBASE_FLUSH_POLICY_KEY,FlushAllStoresPolicy.class.getName());
  conf.setLong(FlushLargeStoresPolicy.HREGION_COLUMNFAMILY_FLUSH_SIZE_LOWER_BOUND,400 * 1024);
  conf.setInt(HStore.BLOCKING_STOREFILES_KEY,10000);
  conf.set(HConstants.HBASE_REGION_SPLIT_POLICY_KEY,ConstantSizeRegionSplitPolicy.class.getName());
  HTableDescriptor htd=new HTableDescriptor(TABLENAME);
  htd.setCompactionEnabled(false);
  htd.addFamily(new HColumnDescriptor(FAMILY1));
  htd.addFamily(new HColumnDescriptor(FAMILY2));
  htd.addFamily(new HColumnDescriptor(FAMILY3));
  LOG.info("==============Test with selective flush disabled===============");
  int cf1StoreFileCount=-1;
  int cf2StoreFileCount=-1;
  int cf3StoreFileCount=-1;
  int cf1StoreFileCount1=-1;
  int cf2StoreFileCount1=-1;
  int cf3StoreFileCount1=-1;
  try {
    TEST_UTIL.startMiniCluster(1);
    TEST_UTIL.getHBaseAdmin().createNamespace(NamespaceDescriptor.create(TABLENAME.getNamespaceAsString()).build());
    TEST_UTIL.getHBaseAdmin().createTable(htd);
    TEST_UTIL.waitTableAvailable(TABLENAME);
    Connection conn=ConnectionFactory.createConnection(conf);
    Table table=conn.getTable(TABLENAME);
    doPut(table,memstoreFlushSize);
    table.close();
    conn.close();
    HRegion region=getRegionWithName(TABLENAME).getFirst();
    cf1StoreFileCount=region.getStore(FAMILY1).getStorefilesCount();
    cf2StoreFileCount=region.getStore(FAMILY2).getStorefilesCount();
    cf3StoreFileCount=region.getStore(FAMILY3).getStorefilesCount();
  }
  finally {
    TEST_UTIL.shutdownMiniCluster();
  }
  LOG.info("==============Test with selective flush enabled===============");
  conf.set(FlushPolicyFactory.HBASE_FLUSH_POLICY_KEY,FlushLargeStoresPolicy.class.getName());
  try {
    TEST_UTIL.startMiniCluster(1);
    TEST_UTIL.getHBaseAdmin().createNamespace(NamespaceDescriptor.create(TABLENAME.getNamespaceAsString()).build());
    TEST_UTIL.getHBaseAdmin().createTable(htd);
    Connection conn=ConnectionFactory.createConnection(conf);
    Table table=conn.getTable(TABLENAME);
    doPut(table,memstoreFlushSize);
    table.close();
    conn.close();
    region=getRegionWithName(TABLENAME).getFirst();
    cf1StoreFileCount1=region.getStore(FAMILY1).getStorefilesCount();
    cf2StoreFileCount1=region.getStore(FAMILY2).getStorefilesCount();
    cf3StoreFileCount1=region.getStore(FAMILY3).getStorefilesCount();
  }
  finally {
    TEST_UTIL.shutdownMiniCluster();
  }
  LOG.info("disable selective flush: " + Bytes.toString(FAMILY1) + "=>"+ cf1StoreFileCount+ ", "+ Bytes.toString(FAMILY2)+ "=>"+ cf2StoreFileCount+ ", "+ Bytes.toString(FAMILY3)+ "=>"+ cf3StoreFileCount);
  LOG.info("enable selective flush: " + Bytes.toString(FAMILY1) + "=>"+ cf1StoreFileCount1+ ", "+ Bytes.toString(FAMILY2)+ "=>"+ cf2StoreFileCount1+ ", "+ Bytes.toString(FAMILY3)+ "=>"+ cf3StoreFileCount1);
  assertTrue(cf1StoreFileCount1 < cf1StoreFileCount);
  assertTrue(cf2StoreFileCount1 < cf2StoreFileCount);
}
