{
  validateParameters(scan);
class AvgCallBack implements Batch.Callback<Pair<S,Long>> {
    S sum=null;
    Long rowCount=0l;
    public Pair<S,Long> getAvgArgs(){
      return new Pair<S,Long>(sum,rowCount);
    }
    @Override public synchronized void update(    byte[] region,    byte[] row,    Pair<S,Long> result){
      sum=ci.add(sum,result.getFirst());
      rowCount+=result.getSecond();
    }
  }
  AvgCallBack avgCallBack=new AvgCallBack();
  HTable table=null;
  try {
    table=new HTable(conf,tableName);
    table.coprocessorExec(AggregateProtocol.class,scan.getStartRow(),scan.getStopRow(),new Batch.Call<AggregateProtocol,Pair<S,Long>>(){
      @Override public Pair<S,Long> call(      AggregateProtocol instance) throws IOException {
        return instance.getAvg(ci,scan);
      }
    }
,avgCallBack);
  }
  finally {
    if (table != null) {
      table.close();
    }
  }
  return avgCallBack.getAvgArgs();
}
