{
  if (verbose) {
    LOG.info("Started thread #" + readerId + " for reads...");
  }
  startTimeMs=System.currentTimeMillis();
  curKey=startKey;
  long[] keysForThisReader=new long[batchSize];
  while (curKey < endKey && !aborted) {
    int readingRandomKeyStartIndex=-1;
    int numKeys=0;
    do {
      long k=getNextKeyToRead();
      if (k < startKey || k >= endKey) {
        numReadErrors.incrementAndGet();
        throw new AssertionError("Load tester logic error: proposed key " + "to read " + k + " is out of range (startKey="+ startKey+ ", endKey="+ endKey+ ")");
      }
      if (k % numThreads != readerId || writer != null && writer.failedToWriteKey(k)) {
        continue;
      }
      keysForThisReader[numKeys]=k;
      if (readingRandomKey && readingRandomKeyStartIndex == -1) {
        readingRandomKeyStartIndex=numKeys;
      }
      numKeys++;
    }
 while (numKeys < batchSize && curKey < endKey && !aborted);
    if (numKeys > 0) {
      readKey(keysForThisReader);
      numUniqueKeysVerified.getAndAdd(readingRandomKeyStartIndex == -1 ? numKeys : readingRandomKeyStartIndex);
    }
  }
}
