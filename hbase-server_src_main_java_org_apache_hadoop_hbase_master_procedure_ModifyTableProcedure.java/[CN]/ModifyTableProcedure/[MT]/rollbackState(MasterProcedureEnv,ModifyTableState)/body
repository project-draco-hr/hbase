{
  if (isTraceEnabled()) {
    LOG.trace(this + " rollback state=" + state);
  }
  try {
switch (state) {
case MODIFY_TABLE_REOPEN_ALL_REGIONS:
      break;
case MODIFY_TABLE_POST_OPERATION:
    break;
case MODIFY_TABLE_DELETE_FS_LAYOUT:
  assert deleteColumnFamilyInModify;
throw new UnsupportedOperationException(this + " rollback of state=" + state+ " is unsupported.");
case MODIFY_TABLE_REMOVE_REPLICA_COLUMN:
updateReplicaColumnsIfNeeded(env,modifiedHTableDescriptor,unmodifiedHTableDescriptor);
break;
case MODIFY_TABLE_UPDATE_TABLE_DESCRIPTOR:
restoreTableDescriptor(env);
break;
case MODIFY_TABLE_PRE_OPERATION:
break;
case MODIFY_TABLE_PREPARE:
break;
default :
throw new UnsupportedOperationException("unhandled state=" + state);
}
}
 catch (IOException e) {
LOG.warn("Fail trying to rollback modify table=" + getTableName() + " state="+ state,e);
throw e;
}
}
