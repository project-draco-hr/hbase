{
  if (this.noFormatting) {
    this.out.print(cells[0]);
    return;
  }
  int[] indexes=new int[cells.length];
  for (int i=0; i < indexes.length; i++) {
    indexes[i]=0;
  }
  int allFinished=0;
  while (allFinished < indexes.length) {
    StringBuffer sb=new StringBuffer();
    for (int i=0; i < cells.length; i++) {
      sb.append(COLUMN_DELIMITER);
      int offset=indexes[i];
      if (offset + this.columnContentWidth >= cells[i].length()) {
        String substr=cells[i].substring(offset);
        if (substr.length() > 0) {
          allFinished++;
          sb.append(substr);
        }
        for (int j=0; j < this.columnContentWidth - substr.length(); j++) {
          sb.append(PADDING_CHAR);
        }
        indexes[i]=cells[i].length();
      }
 else {
        String substr=cells[i].substring(indexes[i],indexes[i] + this.columnContentWidth);
        indexes[i]+=this.columnContentWidth;
        sb.append(substr);
      }
    }
    sb.append(COLUMN_CLOSER);
    this.out.println(sb.toString());
  }
  printRowDelimiter(cells.length);
}
