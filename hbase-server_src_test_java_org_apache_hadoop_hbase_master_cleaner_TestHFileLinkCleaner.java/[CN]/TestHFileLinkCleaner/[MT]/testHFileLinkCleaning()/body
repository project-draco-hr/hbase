{
  Configuration conf=TEST_UTIL.getConfiguration();
  FSUtils.setRootDir(conf,TEST_UTIL.getDataTestDir());
  conf.set(HFileCleaner.MASTER_HFILE_CLEANER_PLUGINS,HFileLinkCleaner.class.getName());
  Path rootDir=FSUtils.getRootDir(conf);
  FileSystem fs=FileSystem.get(conf);
  final TableName tableName=TableName.valueOf("test-table");
  final TableName tableLinkName=TableName.valueOf("test-link");
  final String hfileName="1234567890";
  final String familyName="cf";
  HRegionInfo hri=new HRegionInfo(tableName);
  HRegionInfo hriLink=new HRegionInfo(tableLinkName);
  Path archiveDir=HFileArchiveUtil.getArchivePath(conf);
  Path archiveStoreDir=HFileArchiveUtil.getStoreArchivePath(conf,tableName,hri.getEncodedName(),familyName);
  Path archiveLinkStoreDir=HFileArchiveUtil.getStoreArchivePath(conf,tableLinkName,hriLink.getEncodedName(),familyName);
  Path familyPath=getFamilyDirPath(archiveDir,tableName,hri.getEncodedName(),familyName);
  fs.mkdirs(familyPath);
  Path hfilePath=new Path(familyPath,hfileName);
  fs.createNewFile(hfilePath);
  Path familyLinkPath=getFamilyDirPath(rootDir,tableLinkName,hriLink.getEncodedName(),familyName);
  fs.mkdirs(familyLinkPath);
  HFileLink.create(conf,fs,familyLinkPath,hri,hfileName);
  Path linkBackRefDir=HFileLink.getBackReferencesDir(archiveStoreDir,hfileName);
  assertTrue(fs.exists(linkBackRefDir));
  FileStatus[] backRefs=fs.listStatus(linkBackRefDir);
  assertEquals(1,backRefs.length);
  Path linkBackRef=backRefs[0].getPath();
  final long ttl=1000;
  conf.setLong(TimeToLiveHFileCleaner.TTL_CONF_KEY,ttl);
  Server server=new DummyServer();
  HFileCleaner cleaner=new HFileCleaner(1000,server,conf,fs,archiveDir);
  cleaner.chore();
  assertTrue(fs.exists(linkBackRef));
  assertTrue(fs.exists(hfilePath));
  fs.rename(FSUtils.getTableDir(rootDir,tableLinkName),FSUtils.getTableDir(archiveDir,tableLinkName));
  cleaner.chore();
  assertFalse("Link should be deleted",fs.exists(linkBackRef));
  Thread.sleep(ttl * 2);
  cleaner.chore();
  assertFalse("HFile should be deleted",fs.exists(hfilePath));
  for (int i=0; i < 4; ++i) {
    Thread.sleep(ttl * 2);
    cleaner.chore();
  }
  assertFalse("HFile should be deleted",fs.exists(FSUtils.getTableDir(archiveDir,tableName)));
  assertFalse("Link should be deleted",fs.exists(FSUtils.getTableDir(archiveDir,tableLinkName)));
  cleaner.interrupt();
}
