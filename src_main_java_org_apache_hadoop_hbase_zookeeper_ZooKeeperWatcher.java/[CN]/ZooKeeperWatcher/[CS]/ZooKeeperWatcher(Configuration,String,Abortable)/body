{
  this.conf=conf;
  try {
    throw new Exception("ZKW CONSTRUCTOR STACK TRACE FOR DEBUGGING");
  }
 catch (  Exception e) {
    this.constructorCaller=e;
  }
  this.quorum=ZKConfig.getZKQuorumServersString(conf);
  this.identifier=descriptor;
  this.abortable=abortable;
  setNodeNames(conf);
  this.zooKeeper=ZKUtil.connect(conf,quorum,this,descriptor);
  try {
    long wait=conf.getLong(HConstants.ZOOKEEPER_RECOVERABLE_WAITTIME,HConstants.DEFAULT_ZOOKEPER_RECOVERABLE_WAITIME);
    long finished=System.currentTimeMillis() + wait;
    KeeperException ke=null;
    do {
      try {
        ZKUtil.createAndFailSilent(this,baseZNode);
        ke=null;
        break;
      }
 catch (      KeeperException.ConnectionLossException e) {
        if (LOG.isDebugEnabled() && (isFinishedRetryingRecoverable(finished))) {
          LOG.debug("Retrying zk create for another " + (finished - System.currentTimeMillis()) + "ms; set 'hbase.zookeeper.recoverable.waittime' to change "+ "wait time); "+ e.getMessage());
        }
        ke=e;
      }
    }
 while (isFinishedRetryingRecoverable(finished));
    if (ke != null) {
      try {
        this.zooKeeper.close();
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
        LOG.warn("Interrupted while closing",e);
      }
      throw new ZooKeeperConnectionException("HBase is able to connect to" + " ZooKeeper but the connection closes immediately. This could be" + " a sign that the server has too many connections (30 is the"+ " default). Consider inspecting your ZK server logs for that"+ " error and then make sure you are reusing HBaseConfiguration"+ " as often as you can. See HTable's javadoc for more information.",ke);
    }
    ZKUtil.createAndFailSilent(this,assignmentZNode);
    ZKUtil.createAndFailSilent(this,rsZNode);
    ZKUtil.createAndFailSilent(this,tableZNode);
    ZKUtil.createAndFailSilent(this,splitLogZNode);
  }
 catch (  KeeperException e) {
    throw new ZooKeeperConnectionException(prefix("Unexpected KeeperException creating base node"),e);
  }
}
