{
  rollWriterLock.lock();
  try {
    if (!force && (this.writer != null && this.numEntries.get() <= 0))     return null;
    byte[][] regionsToFlush=null;
    if (this.closed) {
      LOG.debug("HLog closed. Skipping rolling of writer");
      return regionsToFlush;
    }
    if (!closeBarrier.beginOp()) {
      LOG.debug("HLog closing. Skipping rolling of writer");
      return regionsToFlush;
    }
    try {
      Path oldPath=getOldPath();
      Path newPath=getNewPath();
      FSHLog.Writer nextWriter=this.createWriterInstance(fs,newPath,conf);
      FSDataOutputStream nextHdfsOut=null;
      if (nextWriter instanceof ProtobufLogWriter) {
        nextHdfsOut=((ProtobufLogWriter)nextWriter).getStream();
        preemptiveSync((ProtobufLogWriter)nextWriter);
      }
      tellListenersAboutPreLogRoll(oldPath,newPath);
      newPath=replaceWriter(oldPath,newPath,nextWriter,nextHdfsOut);
      tellListenersAboutPostLogRoll(oldPath,newPath);
      if (getNumRolledLogFiles() > 0) {
        cleanOldLogs();
        regionsToFlush=findRegionsToForceFlush();
      }
    }
  finally {
      closeBarrier.endOp();
    }
    return regionsToFlush;
  }
  finally {
    rollWriterLock.unlock();
  }
}
