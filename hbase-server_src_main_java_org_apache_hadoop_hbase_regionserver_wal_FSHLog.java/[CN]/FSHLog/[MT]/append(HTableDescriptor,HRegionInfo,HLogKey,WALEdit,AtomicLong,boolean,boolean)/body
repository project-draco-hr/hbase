{
  if (!this.enabled)   return this.highestUnsyncedSequence;
  if (this.closed)   throw new IOException("Cannot append; log is closed");
  TraceScope scope=Trace.startSpan("FSHLog.append");
  FSWALEntry entry=null;
  long sequence=this.disruptor.getRingBuffer().next();
  try {
    RingBufferTruck truck=this.disruptor.getRingBuffer().get(sequence);
    entry=new FSWALEntry(sequence,key,edits,sequenceId,inMemstore,htd,hri);
    truck.loadPayload(entry,scope.detach());
  }
  finally {
    this.disruptor.getRingBuffer().publish(sequence);
    try {
      entry.getRegionSequenceId();
    }
 catch (    InterruptedException e) {
      throw convertInterruptedExceptionToIOException(e);
    }
  }
  if (sync)   sync(sequence);
  return sequence;
}
