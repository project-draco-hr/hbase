{
  Map<byte[],Long> oldestFlushingSeqNumsLocal=null;
  Map<byte[],Long> oldestUnflushedSeqNumsLocal=null;
  List<Path> logsToArchive=new ArrayList<Path>();
synchronized (regionSequenceIdLock) {
    oldestFlushingSeqNumsLocal=new HashMap<byte[],Long>(this.lowestFlushingRegionSequenceIds);
    oldestUnflushedSeqNumsLocal=new HashMap<byte[],Long>(this.oldestUnflushedRegionSequenceIds);
  }
  for (  Map.Entry<Path,Map<byte[],Long>> e : byWalRegionSequenceIds.entrySet()) {
    Path log=e.getKey();
    Map<byte[],Long> sequenceNums=e.getValue();
    if (areAllRegionsFlushed(sequenceNums,oldestFlushingSeqNumsLocal,oldestUnflushedSeqNumsLocal)) {
      logsToArchive.add(log);
      LOG.debug("WAL file ready for archiving " + log);
    }
  }
  for (  Path p : logsToArchive) {
    this.totalLogSize.addAndGet(-this.fs.getFileStatus(p).getLen());
    archiveLogFile(p);
    this.byWalRegionSequenceIds.remove(p);
  }
}
