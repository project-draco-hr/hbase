{
  Table table=null;
  Table t=TEST_UTIL.getConnection().getTable(TableName.META_TABLE_NAME);
  try {
    table=createTestTable(getName());
    server=TEST_UTIL.getRSForFirstRegionInTable(table.getName());
    Region region=server.getOnlineRegions(table.getName()).get(0);
    final WAL log=server.getWAL(region.getRegionInfo());
    Store s=region.getStore(HConstants.CATALOG_FAMILY);
    admin.flush(TableName.NAMESPACE_TABLE_NAME);
    for (int i=1; i <= 2; ++i) {
      doPut(table,i);
      admin.flush(table.getName());
    }
    doPut(table,3);
    assertEquals("Should have no WAL after initial writes",0,DefaultWALProvider.getNumRolledLogFiles(log));
    assertEquals(2,s.getStorefilesCount());
    log.rollWriter();
    assertEquals("Should have WAL; one table is not flushed",1,DefaultWALProvider.getNumRolledLogFiles(log));
    admin.flush(table.getName());
    region.compact(false);
    Assert.assertNotNull(s);
    for (int waitTime=3000; s.getStorefilesCount() > 1 && waitTime > 0; waitTime-=200) {
      Threads.sleepWithoutInterrupt(200);
    }
    assertEquals("Compaction didn't happen",1,s.getStorefilesCount());
    doPut(table,0);
    log.rollWriter();
    assertEquals("Should have WAL; one table is not flushed",1,DefaultWALProvider.getNumRolledLogFiles(log));
    admin.flush(table.getName());
    doPut(table,1);
    log.rollWriter();
    assertEquals("Should have 1 WALs at the end",1,DefaultWALProvider.getNumRolledLogFiles(log));
  }
  finally {
    if (t != null)     t.close();
    if (table != null)     table.close();
  }
}
