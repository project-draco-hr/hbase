{
  this.conf=conf;
  String serverClassName=conf.get(HConstants.REGION_SERVER_CLASS,HConstants.DEFAULT_REGION_SERVER_CLASS);
  this.closed=false;
  try {
    this.serverInterfaceClass=(Class<? extends HRegionInterface>)Class.forName(serverClassName);
  }
 catch (  ClassNotFoundException e) {
    throw new UnsupportedOperationException("Unable to find region server interface " + serverClassName,e);
  }
  this.pause=conf.getLong("hbase.client.pause",1000);
  this.numRetries=conf.getInt("hbase.client.retries.number",10);
  this.maxRPCAttempts=conf.getInt("hbase.client.rpc.maxattempts",1);
  this.rpcTimeout=conf.getInt(HConstants.HBASE_RPC_TIMEOUT_KEY,HConstants.DEFAULT_HBASE_RPC_TIMEOUT);
  this.prefetchRegionLimit=conf.getInt("hbase.client.prefetch.limit",10);
  this.zooKeeper=getZooKeeperWatcher();
  masterAddressTracker=new MasterAddressTracker(this.zooKeeper,this);
  zooKeeper.registerListener(masterAddressTracker);
  masterAddressTracker.start();
  this.rootRegionTracker=new RootRegionTracker(this.zooKeeper,this);
  this.rootRegionTracker.start();
  this.master=null;
  this.masterChecked=false;
}
