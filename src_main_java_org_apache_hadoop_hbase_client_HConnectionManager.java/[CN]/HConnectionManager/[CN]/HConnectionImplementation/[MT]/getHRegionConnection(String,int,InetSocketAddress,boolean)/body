{
  if (master)   getMaster();
  HRegionInterface server;
  String rsName=null;
  if (isa != null) {
    rsName=Addressing.createHostAndPortStr(isa.getHostName(),isa.getPort());
  }
 else {
    rsName=Addressing.createHostAndPortStr(hostname,port);
  }
  server=this.servers.get(rsName);
  if (server == null) {
    this.connectionLock.putIfAbsent(rsName,rsName);
synchronized (this.connectionLock.get(rsName)) {
      server=this.servers.get(rsName);
      if (server == null) {
        try {
          if (clusterId.hasId()) {
            conf.set(HConstants.CLUSTER_ID,clusterId.getId());
          }
          InetSocketAddress address=isa != null ? isa : new InetSocketAddress(hostname,port);
          server=(HRegionInterface)HBaseRPC.waitForProxy(serverInterfaceClass,HRegionInterface.VERSION,address,this.conf,this.maxRPCAttempts,this.rpcTimeout,this.rpcTimeout);
          this.servers.put(Addressing.createHostAndPortStr(address.getHostName(),address.getPort()),server);
        }
 catch (        RemoteException e) {
          LOG.warn("RemoteException connecting to RS",e);
          throw RemoteExceptionHandler.decodeRemoteException(e);
        }
      }
    }
  }
  return server;
}
