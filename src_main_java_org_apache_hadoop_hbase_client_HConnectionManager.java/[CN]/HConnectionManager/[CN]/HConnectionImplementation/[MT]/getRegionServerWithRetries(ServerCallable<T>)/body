{
  List<Throwable> exceptions=new ArrayList<Throwable>();
  for (int tries=0; tries < numRetries; tries++) {
    try {
      callable.instantiateServer(tries != 0);
      callable.beforeCall();
      return callable.call();
    }
 catch (    Throwable t) {
      callable.shouldRetry(t);
      t=translateException(t);
      exceptions.add(t);
      if (tries == numRetries - 1) {
        throw new RetriesExhaustedException(callable.getServerName(),callable.getRegionName(),callable.getRow(),tries,exceptions);
      }
    }
 finally {
      callable.afterCall();
    }
    try {
      Thread.sleep(getPauseTime(tries));
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      throw new IOException("Giving up trying to get region server: thread is interrupted.");
    }
  }
  return null;
}
