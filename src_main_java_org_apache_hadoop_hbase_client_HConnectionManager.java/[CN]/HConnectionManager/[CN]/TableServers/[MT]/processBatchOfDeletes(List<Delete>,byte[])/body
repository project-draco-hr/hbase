{
  if (list.isEmpty()) {
    return 0;
  }
  if (list.size() > 1) {
    Collections.sort(list);
  }
  Batch b=new Batch(this){
    @SuppressWarnings("unchecked") @Override int doCall(    final List<? extends Row> currentList,    final byte[] row,    final byte[] tableName) throws IOException, RuntimeException {
      final List<Delete> deletes=(List<Delete>)currentList;
      return getRegionServerWithRetries(new ServerCallable<Integer>(this.c,tableName,row){
        public Integer call() throws IOException {
          return server.delete(location.getRegionInfo().getRegionName(),deletes);
        }
      }
);
    }
  }
;
  return b.process(list,tableName);
}
