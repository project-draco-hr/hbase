{
  List<IOException> deferred=new ArrayList<IOException>();
  final ServerName initMaster=initial.getMaster();
  if (!ServerName.isSameHostnameAndPort(initMaster,current.getMaster())) {
    LOG.info("Restoring cluster - Initial active master : " + initMaster.getHostAndPort() + " has changed to : "+ current.getMaster().getHostAndPort());
    try {
      if (!clusterManager.isRunning(ServiceType.HBASE_MASTER,initMaster.getHostname(),initMaster.getPort())) {
        LOG.info("Restoring cluster - starting initial active master at:" + initMaster.getHostAndPort());
        startMaster(initMaster.getHostname(),initMaster.getPort());
      }
      for (      ServerName currentBackup : current.getBackupMasters()) {
        if (!ServerName.isSameHostnameAndPort(currentBackup,initMaster)) {
          LOG.info("Restoring cluster - stopping backup master: " + currentBackup);
          stopMaster(currentBackup);
        }
      }
      LOG.info("Restoring cluster - stopping active master: " + current.getMaster());
      stopMaster(current.getMaster());
      waitForActiveAndReadyMaster();
    }
 catch (    IOException ex) {
      deferred.add(ex);
    }
    for (    ServerName backup : initial.getBackupMasters()) {
      try {
        if (!clusterManager.isRunning(ServiceType.HBASE_MASTER,backup.getHostname(),backup.getPort())) {
          LOG.info("Restoring cluster - starting initial backup master: " + backup.getHostAndPort());
          startMaster(backup.getHostname(),backup.getPort());
        }
      }
 catch (      IOException ex) {
        deferred.add(ex);
      }
    }
  }
 else {
    Set<ServerName> toStart=new TreeSet<ServerName>(new ServerNameIgnoreStartCodeComparator());
    Set<ServerName> toKill=new TreeSet<ServerName>(new ServerNameIgnoreStartCodeComparator());
    toStart.addAll(initial.getBackupMasters());
    toKill.addAll(current.getBackupMasters());
    for (    ServerName server : current.getBackupMasters()) {
      toStart.remove(server);
    }
    for (    ServerName server : initial.getBackupMasters()) {
      toKill.remove(server);
    }
    for (    ServerName sn : toStart) {
      try {
        if (!clusterManager.isRunning(ServiceType.HBASE_MASTER,sn.getHostname(),sn.getPort())) {
          LOG.info("Restoring cluster - starting initial backup master: " + sn.getHostAndPort());
          startMaster(sn.getHostname(),sn.getPort());
        }
      }
 catch (      IOException ex) {
        deferred.add(ex);
      }
    }
    for (    ServerName sn : toKill) {
      try {
        if (clusterManager.isRunning(ServiceType.HBASE_MASTER,sn.getHostname(),sn.getPort())) {
          LOG.info("Restoring cluster - stopping backup master: " + sn.getHostAndPort());
          stopMaster(sn);
        }
      }
 catch (      IOException ex) {
        deferred.add(ex);
      }
    }
  }
  if (!deferred.isEmpty()) {
    LOG.warn("Restoring cluster - restoring region servers reported " + deferred.size() + " errors:");
    for (int i=0; i < deferred.size() && i < 3; i++) {
      LOG.warn(deferred.get(i));
    }
  }
  return deferred.isEmpty();
}
