def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TRegionInfo')
    if (self.startKey is not None):
        oprot.writeFieldBegin('startKey', TType.STRING, 1)
        oprot.writeString(self.startKey)
        oprot.writeFieldEnd()
    if (self.endKey is not None):
        oprot.writeFieldBegin('endKey', TType.STRING, 2)
        oprot.writeString(self.endKey)
        oprot.writeFieldEnd()
    if (self.id is not None):
        oprot.writeFieldBegin('id', TType.I64, 3)
        oprot.writeI64(self.id)
        oprot.writeFieldEnd()
    if (self.name is not None):
        oprot.writeFieldBegin('name', TType.STRING, 4)
        oprot.writeString(self.name)
        oprot.writeFieldEnd()
    if (self.version is not None):
        oprot.writeFieldBegin('version', TType.BYTE, 5)
        oprot.writeByte(self.version)
        oprot.writeFieldEnd()
    if (self.serverName is not None):
        oprot.writeFieldBegin('serverName', TType.STRING, 6)
        oprot.writeString(self.serverName)
        oprot.writeFieldEnd()
    if (self.port is not None):
        oprot.writeFieldBegin('port', TType.I32, 7)
        oprot.writeI32(self.port)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
