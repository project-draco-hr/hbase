{
  long started=System.currentTimeMillis();
  long adjustedTimeout=(long)(getWaitForRatio(conf) * timeout);
  long mustEnd=started + adjustedTimeout;
  long remainderWait=0;
  long sleepInterval=0;
  Boolean eval=false;
  Boolean interrupted=false;
  try {
    LOG.info(MessageFormat.format("Waiting up to [{0}] milli-secs(wait.for.ratio=[{1}])",adjustedTimeout,getWaitForRatio(conf)));
    while (!(eval=predicate.evaluate()) && (remainderWait=mustEnd - System.currentTimeMillis()) > 0) {
      try {
        sleepInterval=(remainderWait > interval) ? interval : remainderWait;
        Thread.sleep(sleepInterval);
      }
 catch (      InterruptedException e) {
        eval=predicate.evaluate();
        interrupted=true;
        break;
      }
    }
    if (!eval) {
      if (interrupted) {
        LOG.warn(MessageFormat.format("Waiting interrupted after [{0}] msec",System.currentTimeMillis() - started));
      }
 else       if (failIfTimeout) {
        String msg=getExplanation(predicate);
        fail(MessageFormat.format("Waiting timed out after [{0}] msec" + msg,adjustedTimeout));
      }
 else {
        String msg=getExplanation(predicate);
        LOG.warn(MessageFormat.format("Waiting timed out after [{0}] msec" + msg,adjustedTimeout));
      }
    }
    return (eval || interrupted) ? (System.currentTimeMillis() - started) : -1;
  }
 catch (  Exception ex) {
    throw new RuntimeException(ex);
  }
}
