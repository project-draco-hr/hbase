{
  try {
    checkOpen();
    requestCount.increment();
    Region region=getRegion(request.getRegion());
    region.startRegionOperation(Operation.SPLIT_REGION);
    if (region.getRegionInfo().getReplicaId() != HRegionInfo.DEFAULT_REPLICA_ID) {
      throw new IOException("Can't split replicas directly. " + "Replicas are auto-split when their primary is split.");
    }
    LOG.info("Splitting " + region.getRegionInfo().getRegionNameAsString());
    long startTime=EnvironmentEdgeManager.currentTime();
    FlushResult flushResult=region.flush(true);
    if (flushResult.isFlushSucceeded()) {
      long endTime=EnvironmentEdgeManager.currentTime();
      regionServer.metricsRegionServer.updateFlushTime(endTime - startTime);
    }
    byte[] splitPoint=null;
    if (request.hasSplitPoint()) {
      splitPoint=request.getSplitPoint().toByteArray();
    }
    ((HRegion)region).forceSplit(splitPoint);
    regionServer.compactSplitThread.requestSplit(region,((HRegion)region).checkSplit(),RpcServer.getRequestUser());
    return SplitRegionResponse.newBuilder().build();
  }
 catch (  DroppedSnapshotException ex) {
    regionServer.abort("Replay of WAL required. Forcing server shutdown",ex);
    throw new ServiceException(ex);
  }
catch (  IOException ie) {
    throw new ServiceException(ie);
  }
}
