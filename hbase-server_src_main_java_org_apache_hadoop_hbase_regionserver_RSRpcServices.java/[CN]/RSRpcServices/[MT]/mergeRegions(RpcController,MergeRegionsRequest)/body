{
  try {
    checkOpen();
    requestCount.increment();
    HRegion regionA=getRegion(request.getRegionA());
    HRegion regionB=getRegion(request.getRegionB());
    boolean forcible=request.getForcible();
    regionA.startRegionOperation(Operation.MERGE_REGION);
    regionB.startRegionOperation(Operation.MERGE_REGION);
    LOG.info("Receiving merging request for  " + regionA + ", "+ regionB+ ",forcible="+ forcible);
    long startTime=EnvironmentEdgeManager.currentTime();
    HRegion.FlushResult flushResult=regionA.flushcache();
    if (flushResult.isFlushSucceeded()) {
      long endTime=EnvironmentEdgeManager.currentTime();
      regionServer.metricsRegionServer.updateFlushTime(endTime - startTime);
    }
    startTime=EnvironmentEdgeManager.currentTime();
    flushResult=regionB.flushcache();
    if (flushResult.isFlushSucceeded()) {
      long endTime=EnvironmentEdgeManager.currentTime();
      regionServer.metricsRegionServer.updateFlushTime(endTime - startTime);
    }
    regionServer.compactSplitThread.requestRegionsMerge(regionA,regionB,forcible);
    return MergeRegionsResponse.newBuilder().build();
  }
 catch (  IOException ie) {
    throw new ServiceException(ie);
  }
}
