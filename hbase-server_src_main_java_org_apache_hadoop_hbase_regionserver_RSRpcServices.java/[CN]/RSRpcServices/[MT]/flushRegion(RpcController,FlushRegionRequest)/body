{
  try {
    checkOpen();
    requestCount.increment();
    Region region=getRegion(request.getRegion());
    LOG.info("Flushing " + region.getRegionInfo().getRegionNameAsString());
    boolean shouldFlush=true;
    if (request.hasIfOlderThanTs()) {
      shouldFlush=region.getEarliestFlushTimeForAllStores() < request.getIfOlderThanTs();
    }
    FlushRegionResponse.Builder builder=FlushRegionResponse.newBuilder();
    if (shouldFlush) {
      boolean writeFlushWalMarker=request.hasWriteFlushWalMarker() ? request.getWriteFlushWalMarker() : false;
      HRegion.FlushResultImpl flushResult=(HRegion.FlushResultImpl)((HRegion)region).flushcache(true,writeFlushWalMarker);
      boolean compactionNeeded=flushResult.isCompactionNeeded();
      if (compactionNeeded) {
        regionServer.compactSplitThread.requestSystemCompaction(region,"Compaction through user triggered flush");
      }
      builder.setFlushed(flushResult.isFlushSucceeded());
      builder.setWroteFlushWalMarker(flushResult.wroteFlushWalMarker);
    }
    builder.setLastFlushTime(region.getEarliestFlushTimeForAllStores());
    return builder.build();
  }
 catch (  DroppedSnapshotException ex) {
    regionServer.abort("Replay of WAL required. Forcing server shutdown",ex);
    throw new ServiceException(ex);
  }
catch (  IOException ie) {
    throw new ServiceException(ie);
  }
}
