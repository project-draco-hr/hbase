{
  try {
    checkOpen();
    requestCount.increment();
    HRegion region=getRegion(request.getRegion());
    LOG.info("Flushing " + region.getRegionNameAsString());
    boolean shouldFlush=true;
    if (request.hasIfOlderThanTs()) {
      shouldFlush=region.getLastFlushTime() < request.getIfOlderThanTs();
    }
    FlushRegionResponse.Builder builder=FlushRegionResponse.newBuilder();
    if (shouldFlush) {
      long startTime=EnvironmentEdgeManager.currentTime();
      HRegion.FlushResult flushResult=region.flushcache();
      if (flushResult.isFlushSucceeded()) {
        long endTime=EnvironmentEdgeManager.currentTime();
        regionServer.metricsRegionServer.updateFlushTime(endTime - startTime);
      }
      boolean result=flushResult.isCompactionNeeded();
      if (result) {
        regionServer.compactSplitThread.requestSystemCompaction(region,"Compaction through user triggered flush");
      }
      builder.setFlushed(result);
    }
    builder.setLastFlushTime(region.getLastFlushTime());
    return builder.build();
  }
 catch (  DroppedSnapshotException ex) {
    regionServer.abort("Replay of WAL required. Forcing server shutdown",ex);
    throw new ServiceException(ex);
  }
catch (  IOException ie) {
    throw new ServiceException(ie);
  }
}
