{
  final byte[] tableName=Bytes.toBytes("testShutdownSimpleFixup");
  HTable t=TESTING_UTIL.createTable(tableName,HConstants.CATALOG_FAMILY);
  List<HRegion> regions=cluster.getRegions(tableName);
  assertEquals(1,regions.size());
  HRegionInfo hri=regions.get(0).getRegionInfo();
  int tableRegionIndex=ensureTableRegionNotOnSameServerAsMeta(admin,hri);
  this.admin.balanceSwitch(false);
  cluster.getMaster().setCatalogJanitorEnabled(false);
  try {
    TESTING_UTIL.loadTable(t,HConstants.CATALOG_FAMILY);
    HRegionServer server=cluster.getRegionServer(tableRegionIndex);
    printOutRegions(server,"Initial regions: ");
    int regionCount=server.getOnlineRegions().size();
    split(hri,server,regionCount);
    List<HRegion> daughters=cluster.getRegions(tableName);
    assertTrue(daughters.size() >= 2);
    removeDaughterFromMeta(daughters.get(0).getRegionName());
    cluster.abortRegionServer(tableRegionIndex);
    while (server.getOnlineRegions().size() > 0) {
      LOG.info("Waiting on server to go down");
      Thread.sleep(100);
    }
    while (cluster.getRegions(tableName).size() < daughters.size()) {
      LOG.info("Waiting for repair to happen");
      Thread.sleep(1000);
    }
    regions=cluster.getRegions(tableName);
    for (    HRegion r : regions) {
      assertTrue(daughters.contains(r));
    }
  }
  finally {
    admin.balanceSwitch(true);
    cluster.getMaster().setCatalogJanitorEnabled(true);
  }
}
