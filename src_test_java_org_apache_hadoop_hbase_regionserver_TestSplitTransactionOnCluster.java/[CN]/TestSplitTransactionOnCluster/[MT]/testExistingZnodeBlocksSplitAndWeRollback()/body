{
  final byte[] tableName=Bytes.toBytes("testExistingZnodeBlocksSplitAndWeRollback");
  HTable t=TESTING_UTIL.createTable(tableName,HConstants.CATALOG_FAMILY);
  List<HRegion> regions=cluster.getRegions(tableName);
  HRegionInfo hri=getAndCheckSingleTableRegion(regions);
  int tableRegionIndex=ensureTableRegionNotOnSameServerAsMeta(admin,hri);
  this.admin.balanceSwitch(false);
  cluster.getMaster().setCatalogJanitorEnabled(false);
  try {
    TESTING_UTIL.loadTable(t,HConstants.CATALOG_FAMILY);
    HRegionServer server=cluster.getRegionServer(tableRegionIndex);
    printOutRegions(server,"Initial regions: ");
    int regionCount=server.getOnlineRegions().size();
    ZKAssign.createNodeClosing(t.getConnection().getZooKeeperWatcher(),hri,new ServerName("any.old.server",1234,-1));
    this.admin.split(hri.getRegionNameAsString());
    this.admin.split(hri.getRegionNameAsString());
    this.admin.split(hri.getRegionNameAsString());
    for (int i=0; i < 10; i++) {
      Thread.sleep(100);
      assertEquals(regionCount,server.getOnlineRegions().size());
    }
    ZKAssign.deleteClosingNode(t.getConnection().getZooKeeperWatcher(),hri);
    split(hri,server,regionCount);
    List<HRegion> daughters=cluster.getRegions(tableName);
    assertTrue(daughters.size() >= 2);
  }
  finally {
    admin.balanceSwitch(true);
    cluster.getMaster().setCatalogJanitorEnabled(true);
  }
}
