{
  List<RSGroupInfo> RSGroupInfoList=Lists.newArrayList();
  try {
    if (ZKUtil.checkExists(watcher,groupBasePath) != -1) {
      for (      String znode : ZKUtil.listChildrenAndWatchForNewChildren(watcher,groupBasePath)) {
        byte[] data=ZKUtil.getData(watcher,ZKUtil.joinZNode(groupBasePath,znode));
        if (data.length > 0) {
          ProtobufUtil.expectPBMagicPrefix(data);
          ByteArrayInputStream bis=new ByteArrayInputStream(data,ProtobufUtil.lengthOfPBMagic(),data.length);
          RSGroupInfoList.add(ProtobufUtil.toGroupInfo(RSGroupProtos.RSGroupInfo.parseFrom(bis)));
        }
      }
      LOG.debug("Read ZK GroupInfo count:" + RSGroupInfoList.size());
    }
  }
 catch (  KeeperException e) {
    throw new IOException("Failed to read rsGroupZNode",e);
  }
catch (  DeserializationException e) {
    throw new IOException("Failed to read rsGroupZNode",e);
  }
catch (  InterruptedException e) {
    throw new IOException("Failed to read rsGroupZNode",e);
  }
  return RSGroupInfoList;
}
