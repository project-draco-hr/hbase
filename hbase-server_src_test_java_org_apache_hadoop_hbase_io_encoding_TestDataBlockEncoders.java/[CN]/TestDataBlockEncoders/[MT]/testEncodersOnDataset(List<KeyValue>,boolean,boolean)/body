{
  ByteBuffer unencodedDataBuf=RedundantKVGenerator.convertKvToByteBuffer(kvList,includesMemstoreTS);
  HFileContext fileContext=new HFileContextBuilder().withIncludesMvcc(includesMemstoreTS).withIncludesTags(includesTags).build();
  for (  DataBlockEncoding encoding : DataBlockEncoding.values()) {
    DataBlockEncoder encoder=encoding.getEncoder();
    if (encoder == null) {
      continue;
    }
    HFileBlockEncodingContext encodingContext=new HFileBlockDefaultEncodingContext(encoding,HFILEBLOCK_DUMMY_HEADER,fileContext);
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    baos.write(HFILEBLOCK_DUMMY_HEADER);
    DataOutputStream dos=new DataOutputStream(baos);
    encoder.startBlockEncoding(encodingContext,dos);
    for (    KeyValue kv : kvList) {
      encoder.encode(kv,encodingContext,dos);
    }
    encoder.endBlockEncoding(encodingContext,dos,baos.getBuffer());
    byte[] encodedData=baos.toByteArray();
    testAlgorithm(encodedData,unencodedDataBuf,encoder);
  }
}
