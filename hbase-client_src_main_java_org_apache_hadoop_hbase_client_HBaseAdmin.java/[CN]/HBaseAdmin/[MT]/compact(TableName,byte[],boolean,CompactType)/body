{
switch (compactType) {
case MOB:
    ServerName master=getMasterAddress();
  compact(master,getMobRegionInfo(tableName),major,columnFamily);
break;
case NORMAL:
ZooKeeperWatcher zookeeper=null;
try {
checkTableExists(tableName);
zookeeper=new ZooKeeperWatcher(conf,ZK_IDENTIFIER_PREFIX + connection.toString(),new ThrowableAbortable());
List<Pair<HRegionInfo,ServerName>> pairs;
if (TableName.META_TABLE_NAME.equals(tableName)) {
pairs=new MetaTableLocator().getMetaRegionsAndLocations(zookeeper);
}
 else {
pairs=MetaTableAccessor.getTableRegionsAndLocations(connection,tableName);
}
for (Pair<HRegionInfo,ServerName> pair : pairs) {
if (pair.getFirst().isOffline()) continue;
if (pair.getSecond() == null) continue;
try {
  compact(pair.getSecond(),pair.getFirst(),major,columnFamily);
}
 catch (NotServingRegionException e) {
  if (LOG.isDebugEnabled()) {
    LOG.debug("Trying to" + (major ? " major" : "") + " compact "+ pair.getFirst()+ ": "+ StringUtils.stringifyException(e));
  }
}
}
}
  finally {
if (zookeeper != null) {
zookeeper.close();
}
}
break;
}
}
