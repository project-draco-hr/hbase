{
  final Pair<HRegionInfo,ServerName> regionServerPair=getRegion(regionName);
  if (regionServerPair == null) {
    throw new IllegalArgumentException("Invalid region: " + Bytes.toStringBinary(regionName));
  }
  if (regionServerPair.getSecond() == null) {
    throw new NoServerForRegionException(Bytes.toStringBinary(regionName));
  }
  ServerName sn=regionServerPair.getSecond();
  final AdminService.BlockingInterface admin=this.connection.getAdmin(sn);
  Callable<CompactionState> callable=new Callable<CompactionState>(){
    @Override public CompactionState call() throws Exception {
      PayloadCarryingRpcController controller=rpcControllerFactory.newController();
      GetRegionInfoRequest request=RequestConverter.buildGetRegionInfoRequest(regionServerPair.getFirst().getRegionName(),true);
      GetRegionInfoResponse response=admin.getRegionInfo(controller,request);
      if (response.getCompactionState() != null) {
        return ProtobufUtil.createCompactionState(response.getCompactionState());
      }
      return null;
    }
  }
;
  return ProtobufUtil.call(callable);
}
