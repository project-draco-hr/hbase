{
  HBaseProtos.SnapshotDescription snapshot=createHBaseProtosSnapshotDesc(snapshotDesc);
  SnapshotResponse response=asyncSnapshot(snapshot);
  final IsSnapshotDoneRequest request=IsSnapshotDoneRequest.newBuilder().setSnapshot(snapshot).build();
  IsSnapshotDoneResponse done=null;
  long start=EnvironmentEdgeManager.currentTime();
  long max=response.getExpectedTimeout();
  long maxPauseTime=max / this.numRetries;
  int tries=0;
  LOG.debug("Waiting a max of " + max + " ms for snapshot '"+ ClientSnapshotDescriptionUtils.toString(snapshot)+ "'' to complete. (max "+ maxPauseTime+ " ms per retry)");
  while (tries == 0 || ((EnvironmentEdgeManager.currentTime() - start) < max && !done.getDone())) {
    try {
      long sleep=getPauseTime(tries++);
      sleep=sleep > maxPauseTime ? maxPauseTime : sleep;
      LOG.debug("(#" + tries + ") Sleeping: "+ sleep+ "ms while waiting for snapshot completion.");
      Thread.sleep(sleep);
    }
 catch (    InterruptedException e) {
      throw (InterruptedIOException)new InterruptedIOException("Interrupted").initCause(e);
    }
    LOG.debug("Getting current status of snapshot from master...");
    done=executeCallable(new MasterCallable<IsSnapshotDoneResponse>(getConnection(),getRpcControllerFactory()){
      @Override protected IsSnapshotDoneResponse rpcCall() throws Exception {
        return master.isSnapshotDone(getRpcController(),request);
      }
    }
);
  }
  if (!done.getDone()) {
    throw new SnapshotCreationException("Snapshot '" + snapshot.getName() + "' wasn't completed in expectedTime:"+ max+ " ms",snapshotDesc);
  }
}
