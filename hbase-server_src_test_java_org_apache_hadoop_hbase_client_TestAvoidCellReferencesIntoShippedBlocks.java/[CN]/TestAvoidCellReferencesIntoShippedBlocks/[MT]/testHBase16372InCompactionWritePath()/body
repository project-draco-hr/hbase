{
  TableName tableName=TableName.valueOf("testHBase16372InCompactionWritePath");
  final Table table=TEST_UTIL.createTable(tableName,FAMILIES_1,1,1024,CompactorRegionObserver.class.getName());
  try {
    RegionLocator locator=TEST_UTIL.getConnection().getRegionLocator(tableName);
    String regionName=locator.getAllRegionLocations().get(0).getRegionInfo().getEncodedName();
    Region region=TEST_UTIL.getRSForFirstRegionInTable(tableName).getFromOnlineRegions(regionName);
    Store store=region.getStores().iterator().next();
    CacheConfig cacheConf=store.getCacheConfig();
    cacheConf.setCacheDataOnWrite(true);
    cacheConf.setEvictOnClose(true);
    final BlockCache cache=cacheConf.getBlockCache();
    Put put=new Put(ROW);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    put=new Put(ROW);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    put=new Put(ROW1);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    region.flush(true);
    put=new Put(ROW1);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    put=new Put(ROW2);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    put=new Put(ROW2);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    region.flush(true);
    put=new Put(ROW3);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    put=new Put(ROW3);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    put=new Put(ROW4);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    region.flush(true);
    put=new Put(ROW4);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    put=new Put(ROW5);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    put=new Put(ROW5);
    put.addColumn(FAMILY,QUALIFIER1,data);
    table.put(put);
    region.flush(true);
    Scan s=new Scan();
    s.setMaxResultSize(1000);
    ResultScanner scanner=table.getScanner(s);
    int count=0;
    for (    Result result : scanner) {
      count++;
    }
    assertEquals("Count all the rows ",count,6);
    ScannerThread scannerThread=new ScannerThread(table,cache);
    scannerThread.start();
    region.compact(true);
    s=new Scan();
    s.setMaxResultSize(1000);
    scanner=table.getScanner(s);
    count=0;
    for (    Result result : scanner) {
      count++;
    }
    assertEquals("Count all the rows ",count,6);
  }
  finally {
    table.close();
  }
}
