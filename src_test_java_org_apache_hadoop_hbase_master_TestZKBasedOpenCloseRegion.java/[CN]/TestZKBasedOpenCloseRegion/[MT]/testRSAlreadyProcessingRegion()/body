{
  LOG.info("starting testRSAlreadyProcessingRegion");
  MiniHBaseCluster cluster=TEST_UTIL.getHBaseCluster();
  HRegionServer hr0=cluster.getLiveRegionServerThreads().get(0).getRegionServer();
  HRegionServer hr1=cluster.getLiveRegionServerThreads().get(1).getRegionServer();
  HRegionInfo hri=getNonMetaRegion(hr0.getOnlineRegions());
  hr1.getRegionsInTransitionInRS().add(hri.getEncodedNameAsBytes());
  AtomicBoolean reopenEventProcessed=new AtomicBoolean(false);
  EventHandlerListener openListener=new ReopenEventListener(hri.getRegionNameAsString(),reopenEventProcessed,EventType.RS_ZK_REGION_OPENED);
  cluster.getMaster().executorService.registerListener(EventType.RS_ZK_REGION_OPENED,openListener);
  TEST_UTIL.getHBaseAdmin().move(hri.getEncodedNameAsBytes(),Bytes.toBytes(hr1.getServerName()));
  while (!reopenEventProcessed.get()) {
    Threads.sleep(100);
  }
  assertTrue(hr1.getOnlineRegion(hri.getEncodedNameAsBytes()) == null);
  hr1.getRegionsInTransitionInRS().remove(hri.getEncodedNameAsBytes());
  reopenEventProcessed.set(false);
  TEST_UTIL.getHBaseAdmin().move(hri.getEncodedNameAsBytes(),Bytes.toBytes(hr1.getServerName()));
  while (!reopenEventProcessed.get()) {
    Threads.sleep(100);
  }
  assertTrue(hr0.getOnlineRegion(hri.getEncodedNameAsBytes()) == null);
}
