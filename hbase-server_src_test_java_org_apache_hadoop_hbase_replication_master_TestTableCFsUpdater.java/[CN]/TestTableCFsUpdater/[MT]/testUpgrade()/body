{
  String peerId="1";
  TableName tab1=TableName.valueOf("table1");
  TableName tab2=TableName.valueOf("table2");
  TableName tab3=TableName.valueOf("table3");
  ReplicationPeerConfig rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(zkw.getQuorum());
  String peerNode=getPeerNode(peerId);
  ZKUtil.createWithParents(zkw,peerNode,ReplicationSerDeHelper.toByteArray(rpc));
  String tableCFs="table1:cf1,cf2;table2:cf3;table3";
  String tableCFsNode=getTableCFsNode(peerId);
  LOG.info("create tableCFs :" + tableCFsNode + " for peerId="+ peerId);
  ZKUtil.createWithParents(zkw,tableCFsNode,Bytes.toBytes(tableCFs));
  ReplicationPeerConfig actualRpc=ReplicationSerDeHelper.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  String actualTableCfs=Bytes.toString(ZKUtil.getData(zkw,tableCFsNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  assertNull(actualRpc.getTableCFsMap());
  assertEquals(tableCFs,actualTableCfs);
  peerId="2";
  rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(zkw.getQuorum());
  peerNode=getPeerNode(peerId);
  ZKUtil.createWithParents(zkw,peerNode,ReplicationSerDeHelper.toByteArray(rpc));
  tableCFs="table1:cf1,cf3;table2:cf2";
  tableCFsNode=getTableCFsNode(peerId);
  LOG.info("create tableCFs :" + tableCFsNode + " for peerId="+ peerId);
  ZKUtil.createWithParents(zkw,tableCFsNode,Bytes.toBytes(tableCFs));
  actualRpc=ReplicationSerDeHelper.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  actualTableCfs=Bytes.toString(ZKUtil.getData(zkw,tableCFsNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  assertNull(actualRpc.getTableCFsMap());
  assertEquals(tableCFs,actualTableCfs);
  peerId="3";
  rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(zkw.getQuorum());
  peerNode=getPeerNode(peerId);
  ZKUtil.createWithParents(zkw,peerNode,ReplicationSerDeHelper.toByteArray(rpc));
  tableCFs="";
  tableCFsNode=getTableCFsNode(peerId);
  LOG.info("create tableCFs :" + tableCFsNode + " for peerId="+ peerId);
  ZKUtil.createWithParents(zkw,tableCFsNode,Bytes.toBytes(tableCFs));
  actualRpc=ReplicationSerDeHelper.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  actualTableCfs=Bytes.toString(ZKUtil.getData(zkw,tableCFsNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  assertNull(actualRpc.getTableCFsMap());
  assertEquals(tableCFs,actualTableCfs);
  peerId="4";
  rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(zkw.getQuorum());
  peerNode=getPeerNode(peerId);
  ZKUtil.createWithParents(zkw,peerNode,ReplicationSerDeHelper.toByteArray(rpc));
  tableCFsNode=getTableCFsNode(peerId);
  actualRpc=ReplicationSerDeHelper.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  actualTableCfs=Bytes.toString(ZKUtil.getData(zkw,tableCFsNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  assertNull(actualRpc.getTableCFsMap());
  assertNull(actualTableCfs);
  update();
  peerId="1";
  peerNode=getPeerNode(peerId);
  actualRpc=ReplicationSerDeHelper.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  Map<TableName,List<String>> tableNameListMap=actualRpc.getTableCFsMap();
  assertEquals(3,tableNameListMap.size());
  assertTrue(tableNameListMap.containsKey(tab1));
  assertTrue(tableNameListMap.containsKey(tab2));
  assertTrue(tableNameListMap.containsKey(tab3));
  assertEquals(2,tableNameListMap.get(tab1).size());
  assertEquals("cf1",tableNameListMap.get(tab1).get(0));
  assertEquals("cf2",tableNameListMap.get(tab1).get(1));
  assertEquals(1,tableNameListMap.get(tab2).size());
  assertEquals("cf3",tableNameListMap.get(tab2).get(0));
  assertNull(tableNameListMap.get(tab3));
  peerId="2";
  peerNode=getPeerNode(peerId);
  actualRpc=ReplicationSerDeHelper.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  tableNameListMap=actualRpc.getTableCFsMap();
  assertEquals(2,tableNameListMap.size());
  assertTrue(tableNameListMap.containsKey(tab1));
  assertTrue(tableNameListMap.containsKey(tab2));
  assertEquals(2,tableNameListMap.get(tab1).size());
  assertEquals("cf1",tableNameListMap.get(tab1).get(0));
  assertEquals("cf3",tableNameListMap.get(tab1).get(1));
  assertEquals(1,tableNameListMap.get(tab2).size());
  assertEquals("cf2",tableNameListMap.get(tab2).get(0));
  peerId="3";
  peerNode=getPeerNode(peerId);
  actualRpc=ReplicationSerDeHelper.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  tableNameListMap=actualRpc.getTableCFsMap();
  assertNull(tableNameListMap);
  peerId="4";
  peerNode=getPeerNode(peerId);
  actualRpc=ReplicationSerDeHelper.parsePeerFrom(ZKUtil.getData(zkw,peerNode));
  assertEquals(rpc.getClusterKey(),actualRpc.getClusterKey());
  tableNameListMap=actualRpc.getTableCFsMap();
  assertNull(tableNameListMap);
}
