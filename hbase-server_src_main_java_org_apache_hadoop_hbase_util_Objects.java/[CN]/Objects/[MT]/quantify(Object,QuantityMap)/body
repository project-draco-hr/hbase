{
  if (obj == null) {
    return;
  }
  if (obj.getClass().isArray()) {
    Class type=obj.getClass().getComponentType();
    int length=Array.getLength(obj);
    if (type.isPrimitive()) {
      quantities.increment(type.getSimpleName(),length);
    }
 else {
      for (int i=0; i < length; i++) {
        quantify(Array.get(obj,i),quantities);
      }
    }
  }
 else   if (obj instanceof Iterable) {
    for (    Object child : ((Iterable)obj)) {
      quantify(child,quantities);
    }
  }
 else   if (obj instanceof MultiAction) {
    MultiAction multi=(MultiAction)obj;
    quantify(multi.allActions(),quantities);
  }
 else   if (obj instanceof Action) {
    quantify(((Action)obj).getAction(),quantities);
  }
 else   if (obj instanceof Put) {
    quantities.increment("Put",1);
    quantities.increment("KeyValue",((Put)obj).size());
    for (    List<KeyValue> keyValues : ((Put)obj).getFamilyMap().values()) {
      for (      KeyValue kv : keyValues) {
        quantities.stat("values",kv.getValueLength());
      }
    }
  }
 else   if (obj instanceof Delete) {
    quantities.increment("Delete",1);
    for (    List<KeyValue> kvs : ((Delete)obj).getFamilyMap().values()) {
      quantities.increment("KeyValue",kvs.size());
    }
  }
 else   if (obj instanceof Increment) {
    quantities.increment("Increment",1);
    quantities.increment("KeyValue",((Increment)obj).numColumns());
  }
 else   if (obj instanceof Get) {
    quantities.increment("Get",1);
  }
 else {
    String type=obj.getClass().getSimpleName();
    quantities.increment(type,1);
  }
}
