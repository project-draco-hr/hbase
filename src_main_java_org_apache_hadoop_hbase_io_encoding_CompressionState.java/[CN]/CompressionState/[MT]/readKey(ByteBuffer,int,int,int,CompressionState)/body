{
  this.keyLength=keyLength;
  this.valueLength=valueLength;
  in.mark();
  if (commonPrefix < KeyValue.ROW_LENGTH_SIZE) {
    rowLength=in.getShort();
    ByteBufferUtils.skip(in,rowLength);
    familyLength=in.get();
    qualifierLength=keyLength - rowLength - familyLength- KeyValue.KEY_INFRASTRUCTURE_SIZE;
    ByteBufferUtils.skip(in,familyLength + qualifierLength);
  }
 else {
    rowLength=previousState.rowLength;
    familyLength=previousState.familyLength;
    qualifierLength=previousState.qualifierLength + keyLength - previousState.keyLength;
    ByteBufferUtils.skip(in,(KeyValue.ROW_LENGTH_SIZE + KeyValue.FAMILY_LENGTH_SIZE) + rowLength + familyLength+ qualifierLength);
  }
  readTimestamp(in);
  type=in.get();
  in.reset();
}
