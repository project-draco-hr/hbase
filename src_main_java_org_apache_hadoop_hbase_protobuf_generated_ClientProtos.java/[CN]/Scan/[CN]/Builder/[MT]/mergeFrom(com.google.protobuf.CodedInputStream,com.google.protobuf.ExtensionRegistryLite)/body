{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 10:
{
org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Column.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Column.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addColumn(subBuilder.buildPartial());
break;
}
case 18:
{
org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.NameBytesPair.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.NameBytesPair.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addAttribute(subBuilder.buildPartial());
break;
}
case 26:
{
bitField0_|=0x00000004;
startRow_=input.readBytes();
break;
}
case 34:
{
bitField0_|=0x00000008;
stopRow_=input.readBytes();
break;
}
case 42:
{
org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.NameBytesPair.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.NameBytesPair.newBuilder();
if (hasFilter()) {
subBuilder.mergeFrom(getFilter());
}
input.readMessage(subBuilder,extensionRegistry);
setFilter(subBuilder.buildPartial());
break;
}
case 50:
{
org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.TimeRange.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.TimeRange.newBuilder();
if (hasTimeRange()) {
subBuilder.mergeFrom(getTimeRange());
}
input.readMessage(subBuilder,extensionRegistry);
setTimeRange(subBuilder.buildPartial());
break;
}
case 56:
{
bitField0_|=0x00000040;
maxVersions_=input.readUInt32();
break;
}
case 64:
{
bitField0_|=0x00000080;
cacheBlocks_=input.readBool();
break;
}
case 72:
{
bitField0_|=0x00000100;
batchSize_=input.readUInt32();
break;
}
}
}
}
