{
  Job job=new Job(conf,NAME);
  job.setJarByClass(RowCounter.class);
  StringBuilder sb=new StringBuilder();
  final int columnoffset=2;
  for (int i=columnoffset; i < args.length; i++) {
    if (i > columnoffset) {
      sb.append(" ");
    }
    sb.append(args[i]);
  }
  Scan scan=new Scan();
  for (  String columnName : sb.toString().split(" ")) {
    String[] fields=columnName.split(":");
    if (fields.length == 1) {
      scan.addFamily(Bytes.toBytes(fields[0]));
    }
 else {
      scan.addColumn(Bytes.toBytes(fields[0]),Bytes.toBytes(fields[1]));
    }
  }
  TableMapReduceUtil.initTableMapperJob(args[1],scan,RowCounterMapper.class,ImmutableBytesWritable.class,Result.class,job);
  job.setNumReduceTasks(0);
  FileOutputFormat.setOutputPath(job,new Path(args[0]));
  return job;
}
