{
  RetryCounter retryCounter=retryCounterFactory.create();
  byte[] newData=appendMetaData(data);
  while (true) {
    try {
      return zk.setData(path,newData,version);
    }
 catch (    KeeperException e) {
switch (e.code()) {
case CONNECTIONLOSS:
case SESSIONEXPIRED:
case OPERATIONTIMEOUT:
        retryOrThrow(retryCounter,e,"setData");
      break;
case BADVERSION:
    try {
      Stat stat=new Stat();
      byte[] revData=zk.getData(path,false,stat);
      int idLength=Bytes.toInt(revData,ID_LENGTH_SIZE);
      int dataLength=revData.length - ID_LENGTH_SIZE - idLength;
      int dataOffset=ID_LENGTH_SIZE + idLength;
      if (Bytes.compareTo(revData,ID_LENGTH_SIZE,id.length,revData,dataOffset,dataLength) == 0) {
        return stat;
      }
    }
 catch (    KeeperException keeperException) {
      throw keeperException;
    }
default :
  throw e;
}
}
retryCounter.sleepUntilNextRetry();
retryCounter.useRetry();
}
}
