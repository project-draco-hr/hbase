{
  conf.setBoolean(HConstants.ZOOKEEPER_USEMULTI,true);
  final Server server=new DummyServer("ec2-54-234-230-108.compute-1.amazonaws.com");
  ReplicationQueues repQueues=ReplicationFactory.getReplicationQueues(new ReplicationQueuesArguments(conf,server,server.getZooKeeper()));
  repQueues.init(server.getServerName().toString());
  files.add("log1");
  files.add("log2");
  for (  String file : files) {
    repQueues.addLog("1",file);
  }
  Server s1=new DummyServer("ip-10-8-101-114.ec2.internal");
  Server s2=new DummyServer("ec2-107-20-52-47.compute-1.amazonaws.com");
  Server s3=new DummyServer("ec2-23-20-187-167.compute-1.amazonaws.com");
  ReplicationQueues rq1=ReplicationFactory.getReplicationQueues(new ReplicationQueuesArguments(s1.getConfiguration(),s1,s1.getZooKeeper()));
  rq1.init(s1.getServerName().toString());
  String serverName=server.getServerName().getServerName();
  List<String> unclaimed=rq1.getUnClaimedQueueIds(serverName);
  rq1.claimQueue(serverName,unclaimed.get(0)).getSecond();
  rq1.removeReplicatorIfQueueIsEmpty(unclaimed.get(0));
  ReplicationQueues rq2=ReplicationFactory.getReplicationQueues(new ReplicationQueuesArguments(s2.getConfiguration(),s2,s2.getZooKeeper()));
  rq2.init(s2.getServerName().toString());
  serverName=s1.getServerName().getServerName();
  unclaimed=rq2.getUnClaimedQueueIds(serverName);
  rq2.claimQueue(serverName,unclaimed.get(0)).getSecond();
  rq2.removeReplicatorIfQueueIsEmpty(unclaimed.get(0));
  ReplicationQueues rq3=ReplicationFactory.getReplicationQueues(new ReplicationQueuesArguments(s3.getConfiguration(),s3,s3.getZooKeeper()));
  rq3.init(s3.getServerName().toString());
  serverName=s2.getServerName().getServerName();
  unclaimed=rq3.getUnClaimedQueueIds(serverName);
  String queue3=rq3.claimQueue(serverName,unclaimed.get(0)).getFirst();
  rq3.removeReplicatorIfQueueIsEmpty(unclaimed.get(0));
  ReplicationQueueInfo replicationQueueInfo=new ReplicationQueueInfo(queue3);
  List<String> result=replicationQueueInfo.getDeadRegionServers();
  assertTrue(result.contains(server.getServerName().getServerName()));
  assertTrue(result.contains(s1.getServerName().getServerName()));
  assertTrue(result.contains(s2.getServerName().getServerName()));
  server.stop("");
}
