{
  conf.setBoolean(HConstants.ZOOKEEPER_USEMULTI,true);
  final Server s0=new DummyServer("cversion-change0.example.org");
  ReplicationQueues repQueues=ReplicationFactory.getReplicationQueues(new ReplicationQueuesArguments(conf,s0,s0.getZooKeeper()));
  repQueues.init(s0.getServerName().toString());
  files.add("log1");
  files.add("log2");
  for (  String file : files) {
    repQueues.addLog("1",file);
  }
  Server s1=new DummyServer("cversion-change1.example.org");
  ReplicationQueues rq1=ReplicationFactory.getReplicationQueues(new ReplicationQueuesArguments(s1.getConfiguration(),s1,s1.getZooKeeper()));
  rq1.init(s1.getServerName().toString());
  ReplicationQueuesClientZKImpl client=(ReplicationQueuesClientZKImpl)ReplicationFactory.getReplicationQueuesClient(new ReplicationQueuesClientArguments(s1.getConfiguration(),s1,s1.getZooKeeper()));
  int v0=client.getQueuesZNodeCversion();
  List<String> queues=rq1.getUnClaimedQueueIds(s0.getServerName().getServerName());
  for (  String queue : queues) {
    rq1.claimQueue(s0.getServerName().getServerName(),queue);
  }
  rq1.removeReplicatorIfQueueIsEmpty(s0.getServerName().getServerName());
  int v1=client.getQueuesZNodeCversion();
  assertEquals(v0 + 1,v1);
  s0.stop("");
}
