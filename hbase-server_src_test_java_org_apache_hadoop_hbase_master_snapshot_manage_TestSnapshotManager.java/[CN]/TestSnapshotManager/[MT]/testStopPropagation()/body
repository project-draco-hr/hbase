{
  SnapshotManager manager=getNewManager();
  FSUtils.setRootDir(UTIL.getConfiguration(),UTIL.getDataTestDir());
  String tableName="some table";
  SnapshotDescription snapshot=SnapshotDescription.newBuilder().setName("testAbort").setTable(tableName).build();
  TableDescriptors tables=Mockito.mock(TableDescriptors.class);
  Mockito.when(services.getTableDescriptors()).thenReturn(tables);
  HTableDescriptor descriptor=Mockito.mock(HTableDescriptor.class);
  Mockito.when(tables.get(Mockito.anyString())).thenReturn(descriptor);
  MasterFileSystem mfs=Mockito.mock(MasterFileSystem.class);
  Mockito.when(mfs.getFileSystem()).thenReturn(UTIL.getTestFileSystem());
  Mockito.when(services.getMasterFileSystem()).thenReturn(mfs);
  Mockito.when(services.getConfiguration()).thenReturn(UTIL.getConfiguration());
  manager.snapshotDisabledTable(snapshot);
  Mockito.verify(pool,Mockito.times(1)).submit(Mockito.any(DisabledTableSnapshotHandler.class));
  manager.stop("stopping for test");
  SnapshotSentinel handler=manager.getCurrentSnapshotSentinel();
  assertNotNull("Snare didn't receive error notification from snapshot manager.",handler.getExceptionIfFailed());
}
