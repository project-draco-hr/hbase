{
  ByteBuffer bb=buffers.poll();
  if (bb != null) {
    bb.clear();
    return bb;
  }
  while (true) {
    int c=this.count.intValue();
    if (c >= this.maxPoolSize) {
      if (maxPoolSizeInfoLevelLogged) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Pool already reached its max capacity : " + this.maxPoolSize + " and no free buffers now. Consider increasing the value for '"+ MAX_POOL_SIZE_KEY+ "' ?");
        }
      }
 else {
        LOG.info("Pool already reached its max capacity : " + this.maxPoolSize + " and no free buffers now. Consider increasing the value for '"+ MAX_POOL_SIZE_KEY+ "' ?");
        maxPoolSizeInfoLevelLogged=true;
      }
      return null;
    }
    if (!this.count.compareAndSet(c,c + 1)) {
      continue;
    }
    if (LOG.isTraceEnabled()) {
      LOG.trace("Creating a new offheap ByteBuffer of size: " + this.bufferSize);
    }
    return this.directByteBuffer ? ByteBuffer.allocateDirect(this.bufferSize) : ByteBuffer.allocate(this.bufferSize);
  }
}
