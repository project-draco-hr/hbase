{
  MiniHBaseCluster cluster=UTIL.getHBaseCluster();
  final TableName tableName=TableName.valueOf(name.getMethodName());
  HMaster master=cluster.getMaster();
  MasterCoprocessorHost host=master.getMasterCoprocessorHost();
  CPMasterObserver cp=(CPMasterObserver)host.findCoprocessor(CPMasterObserver.class.getName());
  cp.enableBypass(true);
  cp.resetStates();
  assertFalse("No table created yet",cp.wasCreateTableCalled());
  HTableDescriptor htd=new HTableDescriptor(tableName);
  htd.addFamily(new HColumnDescriptor(TEST_FAMILY));
  try (Connection connection=ConnectionFactory.createConnection(UTIL.getConfiguration());Admin admin=connection.getAdmin()){
    tableCreationLatch=new CountDownLatch(1);
    admin.createTable(htd,Arrays.copyOfRange(HBaseTestingUtility.KEYS,1,HBaseTestingUtility.KEYS.length));
    assertTrue("Test table should be created",cp.wasCreateTableCalled());
    tableCreationLatch.await();
    assertTrue("Table pre create handler called.",cp.wasPreCreateTableActionCalled());
    assertTrue("Table create handler should be called.",cp.wasCreateTableActionCalled());
    RegionLocator regionLocator=connection.getRegionLocator(htd.getTableName());
    List<HRegionLocation> regions=regionLocator.getAllRegionLocations();
    admin.mergeRegionsAsync(regions.get(0).getRegionInfo().getEncodedNameAsBytes(),regions.get(1).getRegionInfo().getEncodedNameAsBytes(),true);
    assertTrue("Coprocessor should have been called on region merge",cp.wasDispatchMergeCalled());
    tableCreationLatch=new CountDownLatch(1);
    admin.disableTable(tableName);
    assertTrue(admin.isTableDisabled(tableName));
    assertTrue("Coprocessor should have been called on table disable",cp.wasDisableTableCalled());
    assertTrue("Disable table handler should be called.",cp.wasDisableTableActionCalled());
    assertFalse(cp.wasEnableTableCalled());
    admin.enableTable(tableName);
    assertTrue(admin.isTableEnabled(tableName));
    assertTrue("Coprocessor should have been called on table enable",cp.wasEnableTableCalled());
    assertTrue("Enable table handler should be called.",cp.wasEnableTableActionCalled());
    admin.disableTable(tableName);
    assertTrue(admin.isTableDisabled(tableName));
    htd.setMaxFileSize(512 * 1024 * 1024);
    modifyTableSync(admin,tableName,htd);
    assertTrue("Test table should have been modified",cp.wasModifyTableCalled());
    admin.addColumnFamily(tableName,new HColumnDescriptor(TEST_FAMILY2));
    assertTrue("New column family shouldn't have been added to test table",cp.preAddColumnCalledOnly());
    HColumnDescriptor hcd1=new HColumnDescriptor(TEST_FAMILY2);
    hcd1.setMaxVersions(25);
    admin.modifyColumnFamily(tableName,hcd1);
    assertTrue("Second column family should be modified",cp.preModifyColumnCalledOnly());
    admin.truncateTable(tableName,false);
    admin.disableTable(tableName);
    assertTrue(admin.isTableDisabled(tableName));
    deleteTable(admin,tableName);
    assertFalse("Test table should have been deleted",admin.tableExists(tableName));
    assertTrue("Coprocessor should have been called on table delete",cp.wasDeleteTableCalled());
    assertTrue("Delete table handler should be called.",cp.wasDeleteTableActionCalled());
    cp.enableBypass(false);
    cp.resetStates();
    admin.createTable(htd);
    assertTrue("Test table should be created",cp.wasCreateTableCalled());
    tableCreationLatch.await();
    assertTrue("Table pre create handler called.",cp.wasPreCreateTableActionCalled());
    assertTrue("Table create handler should be called.",cp.wasCreateTableActionCalled());
    assertFalse(cp.wasDisableTableCalled());
    assertFalse(cp.wasDisableTableActionCalled());
    admin.disableTable(tableName);
    assertTrue(admin.isTableDisabled(tableName));
    assertTrue("Coprocessor should have been called on table disable",cp.wasDisableTableCalled());
    assertTrue("Disable table handler should be called.",cp.wasDisableTableActionCalled());
    htd.setMaxFileSize(512 * 1024 * 1024);
    modifyTableSync(admin,tableName,htd);
    assertTrue("Test table should have been modified",cp.wasModifyTableCalled());
    admin.addColumnFamily(tableName,new HColumnDescriptor(TEST_FAMILY2));
    assertTrue("New column family should have been added to test table",cp.wasAddColumnCalled());
    assertTrue("Add column handler should be called.",cp.wasAddColumnFamilyActionCalled());
    HColumnDescriptor hcd=new HColumnDescriptor(TEST_FAMILY2);
    hcd.setMaxVersions(25);
    admin.modifyColumnFamily(tableName,hcd);
    assertTrue("Second column family should be modified",cp.wasModifyColumnCalled());
    assertTrue("Modify table handler should be called.",cp.wasModifyColumnFamilyActionCalled());
    assertFalse(cp.wasEnableTableCalled());
    assertFalse(cp.wasEnableTableActionCalled());
    admin.enableTable(tableName);
    assertTrue(admin.isTableEnabled(tableName));
    assertTrue("Coprocessor should have been called on table enable",cp.wasEnableTableCalled());
    assertTrue("Enable table handler should be called.",cp.wasEnableTableActionCalled());
    admin.disableTable(tableName);
    assertTrue(admin.isTableDisabled(tableName));
    assertFalse("No column family deleted yet",cp.wasDeleteColumnCalled());
    assertFalse("Delete table column handler should not be called.",cp.wasDeleteColumnFamilyActionCalled());
    admin.deleteColumnFamily(tableName,TEST_FAMILY2);
    HTableDescriptor tableDesc=admin.getTableDescriptor(tableName);
    assertNull("'" + Bytes.toString(TEST_FAMILY2) + "' should have been removed",tableDesc.getFamily(TEST_FAMILY2));
    assertTrue("Coprocessor should have been called on column delete",cp.wasDeleteColumnCalled());
    assertTrue("Delete table column handler should be called.",cp.wasDeleteColumnFamilyActionCalled());
    assertFalse("No table deleted yet",cp.wasDeleteTableCalled());
    assertFalse("Delete table handler should not be called.",cp.wasDeleteTableActionCalled());
    deleteTable(admin,tableName);
    assertFalse("Test table should have been deleted",admin.tableExists(tableName));
    assertTrue("Coprocessor should have been called on table delete",cp.wasDeleteTableCalled());
    assertTrue("Delete table handler should be called.",cp.wasDeleteTableActionCalled());
  }
 }
