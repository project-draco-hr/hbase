{
  MiniHBaseCluster cluster=UTIL.getHBaseCluster();
  String testNamespace="observed_ns";
  HMaster master=cluster.getMaster();
  MasterCoprocessorHost host=master.getCoprocessorHost();
  CPMasterObserver cp=(CPMasterObserver)host.findCoprocessor(CPMasterObserver.class.getName());
  cp.enableBypass(false);
  cp.resetStates();
  HBaseAdmin admin=UTIL.getHBaseAdmin();
  admin.createNamespace(NamespaceDescriptor.create(testNamespace).build());
  assertTrue("Test namespace should be created",cp.wasCreateNamespaceCalled());
  assertNotNull(admin.getNamespaceDescriptor(testNamespace));
  cp.enableBypass(true);
  cp.resetStates();
  admin.modifyNamespace(NamespaceDescriptor.create(testNamespace).build());
  assertTrue("Test namespace should not have been modified",cp.preModifyNamespaceCalledOnly());
  assertNotNull(admin.getNamespaceDescriptor(testNamespace));
  admin.deleteNamespace(testNamespace);
  assertTrue("Test namespace should not have been deleted",cp.preDeleteNamespaceCalledOnly());
  assertNotNull(admin.getNamespaceDescriptor(testNamespace));
  cp.enableBypass(false);
  cp.resetStates();
  admin.modifyNamespace(NamespaceDescriptor.create(testNamespace).build());
  assertTrue("Test namespace should have been modified",cp.wasModifyNamespaceCalled());
  admin.deleteNamespace(testNamespace);
  assertTrue("Test namespace should have been deleted",cp.wasDeleteNamespaceCalled());
  cp.enableBypass(true);
  cp.resetStates();
  admin.createNamespace(NamespaceDescriptor.create(testNamespace).build());
  assertTrue("Test namespace should not be created",cp.preCreateNamespaceCalledOnly());
}
