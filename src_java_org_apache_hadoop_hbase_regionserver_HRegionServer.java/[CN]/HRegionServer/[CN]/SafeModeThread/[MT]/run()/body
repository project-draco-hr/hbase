{
  int safemodeInterval=conf.getInt("hbase.regionserver.safemode.period",120 * 1000);
  try {
    Thread.sleep(safemodeInterval);
  }
 catch (  InterruptedException ex) {
    safeMode.set(false);
    compactSplitThread.setLimit(-1);
    if (LOG.isDebugEnabled()) {
      LOG.debug(this.getName() + " exiting on interrupt");
    }
    return;
  }
  LOG.info("leaving safe mode");
  safeMode.set(false);
  int compactionCheckInterval=conf.getInt("hbase.regionserver.thread.splitcompactcheckfrequency",20 * 1000);
  final int limitSteps[]={1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,-1};
  for (int i=0; i < limitSteps.length; i++) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("setting compaction limit to " + limitSteps[i]);
    }
    compactSplitThread.setLimit(limitSteps[i]);
    try {
      Thread.sleep(compactionCheckInterval);
    }
 catch (    InterruptedException ex) {
      compactSplitThread.setLimit(-1);
      if (LOG.isDebugEnabled()) {
        LOG.debug(this.getName() + " exiting on interrupt");
      }
      return;
    }
  }
  LOG.info("compactions no longer limited");
}
