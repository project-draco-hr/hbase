{
  checkOpen();
  requestCount.incrementAndGet();
  try {
    String scannerName=String.valueOf(scannerId);
    InternalScanner s=scanners.get(scannerName);
    if (s == null) {
      throw new UnknownScannerException("Name: " + scannerName);
    }
    this.leases.renewLease(scannerName);
    HbaseMapWritable<byte[],Cell> values=new HbaseMapWritable<byte[],Cell>();
    HStoreKey key=new HStoreKey();
    TreeMap<byte[],Cell> results=new TreeMap<byte[],Cell>(Bytes.BYTES_COMPARATOR);
    while (s.next(key,results)) {
      values.putAll(results);
      if (values.size() > 0) {
        break;
      }
      results.clear();
    }
    return values.size() == 0 ? null : new RowResult(key.getRow(),values);
  }
 catch (  IOException e) {
    checkFileSystem();
    throw e;
  }
}
