{
  try {
    for (    Map.Entry<Writable,Writable> e : c.entrySet()) {
      String key=e.getKey().toString();
      String value=e.getValue().toString();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Config from master: " + key + "="+ value);
      }
      this.conf.set(key,value);
    }
    String hra=conf.get("hbase.regionserver.address");
    if (address != null) {
      HServerAddress hsa=new HServerAddress(hra,this.serverInfo.getServerAddress().getPort());
      LOG.info("Master passed us address to use. Was=" + this.serverInfo.getServerAddress() + ", Now="+ hra);
      this.serverInfo.setServerAddress(hsa);
    }
    this.conf.set("fs.defaultFS",this.conf.get("hbase.rootdir"));
    this.fs=FileSystem.get(this.conf);
    Runtime.getRuntime().addShutdownHook(new ShutdownThread(this,Thread.currentThread(),this.shutdownHDFS));
    this.conf.setBoolean("fs.automatic.close",false);
    this.rootDir=new Path(this.conf.get(HConstants.HBASE_DIR));
    this.hlog=setupHLog();
    this.metrics=new RegionServerMetrics();
    startServiceThreads();
    isOnline=true;
  }
 catch (  Throwable e) {
    this.isOnline=false;
    this.stopRequested.set(true);
    throw convertThrowableToIOE(cleanup(e,"Failed init"),"Region server startup failed");
  }
}
