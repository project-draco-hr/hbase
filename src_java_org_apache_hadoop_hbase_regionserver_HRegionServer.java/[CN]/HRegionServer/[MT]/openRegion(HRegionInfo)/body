{
  if (!regionInfo.isMetaRegion() && !RegionHistorian.getInstance().isOnline()) {
    RegionHistorian.getInstance().online(this.conf);
  }
  Integer mapKey=Bytes.mapKey(regionInfo.getRegionName());
  HRegion region=this.onlineRegions.get(mapKey);
  if (region == null) {
    try {
      region=instantiateRegion(regionInfo);
      if (region.hasReferences()) {
        this.compactSplitThread.compactionRequested(region,"Region has references on open");
      }
    }
 catch (    Throwable e) {
      Throwable t=cleanup(e,"Error opening " + regionInfo.getRegionNameAsString());
      reportClose(regionInfo,StringUtils.stringifyException(t).getBytes());
      return;
    }
    this.lock.writeLock().lock();
    try {
      this.hlog.setSequenceNumber(region.getMinSequenceId());
      this.onlineRegions.put(mapKey,region);
    }
  finally {
      this.lock.writeLock().unlock();
    }
  }
  reportOpen(regionInfo);
}
