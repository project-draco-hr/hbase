{
  this.abortRequested=false;
  this.fsOk=true;
  this.conf=conf;
  this.isOnline=false;
  this.numRetries=conf.getInt("hbase.client.retries.number",2);
  this.threadWakeFrequency=conf.getInt(THREAD_WAKE_FREQUENCY,10 * 1000);
  this.msgInterval=conf.getInt("hbase.regionserver.msginterval",3 * 1000);
  this.serverLeaseTimeout=conf.getInt("hbase.master.lease.period",30 * 1000);
  this.cacheFlusher=new Flusher(conf,this);
  this.compactSplitThread=new CompactSplitThread(this);
  this.logRoller=new LogRoller(this);
  this.worker=new Worker();
  this.workerThread=new Thread(worker);
  this.server=HbaseRPC.getServer(this,address.getBindAddress(),address.getPort(),conf.getInt("hbase.regionserver.handler.count",10),false,conf);
  this.serverInfo=new HServerInfo(new HServerAddress(new InetSocketAddress(DEFAULT_HOST,this.server.getListenerAddress().getPort())),System.currentTimeMillis(),this.conf.getInt("hbase.regionserver.info.port",60030));
  this.numRegionsToReport=conf.getInt("hbase.regionserver.numregionstoreport",10);
  this.leases=new Leases(conf.getInt("hbase.regionserver.lease.period",3 * 60 * 1000),this.threadWakeFrequency);
  Runtime.getRuntime().addShutdownHook(new ShutdownThread(this));
}
