{
  boolean success=false;
  float slop=(float)conf.getFloat("hbase.regions.slop",0.1f);
  if (slop <= 0)   slop=1;
  for (int i=0; i < 5; i++) {
    success=true;
    waitForAllRegionsAssigned();
    int regionCount=getRegionCount();
    List<HRegionServer> servers=getOnlineRegionServers();
    double avg=cluster.getMaster().getServerManager().getAverageLoad();
    int avgLoadPlusSlop=(int)Math.ceil(avg * (1 + slop));
    int avgLoadMinusSlop=(int)Math.floor(avg * (1 - slop)) - 1;
    LOG.debug("There are " + servers.size() + " servers and "+ regionCount+ " regions. Load Average: "+ avg+ " low border: "+ avgLoadMinusSlop+ ", up border: "+ avgLoadPlusSlop+ "; attempt: "+ i);
    for (    HRegionServer server : servers) {
      int serverLoad=server.getOnlineRegions().size();
      LOG.debug(server.getServerName() + " Avg: " + avg+ " actual: "+ serverLoad);
      if (!(avg > 2.0 && serverLoad <= avgLoadPlusSlop && serverLoad >= avgLoadMinusSlop)) {
        LOG.debug(server.getServerName() + " Isn't balanced!!! Avg: " + avg+ " actual: "+ serverLoad+ " slop: "+ slop);
        success=false;
      }
    }
    if (!success) {
      try {
        Thread.sleep(10000);
      }
 catch (      InterruptedException e) {
      }
      cluster.getMaster().balance();
      continue;
    }
    return;
  }
  fail("After 5 attempts, region assignments were not balanced.");
}
