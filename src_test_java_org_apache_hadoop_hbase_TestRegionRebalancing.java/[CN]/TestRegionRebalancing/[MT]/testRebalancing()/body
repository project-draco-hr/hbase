{
  HConnection connection=HConnectionManager.getConnection(conf);
  CatalogTracker ct=new CatalogTracker(connection);
  ct.start();
  Map<HRegionInfo,ServerName> regions=MetaReader.fullScan(ct);
  for (  Map.Entry<HRegionInfo,ServerName> e : regions.entrySet()) {
    LOG.info(e);
  }
  table=new HTable(conf,"test");
  assertEquals("Test table should have 20 regions",20,table.getStartKeys().length);
  assertRegionsAreBalanced();
  LOG.info("Started second server=" + cluster.startRegionServer().getRegionServer().getServerName());
  cluster.getMaster().balance();
  assertRegionsAreBalanced();
  LOG.info("Started third server=" + cluster.startRegionServer().getRegionServer().getServerName());
  cluster.getMaster().balance();
  assertRegionsAreBalanced();
  LOG.info("Stopped third server=" + cluster.stopRegionServer(2,false));
  cluster.waitOnRegionServer(2);
  cluster.getMaster().balance();
  assertRegionsAreBalanced();
  LOG.info("Readding third server=" + cluster.startRegionServer().getRegionServer().getServerName());
  LOG.info("Added fourth server=" + cluster.startRegionServer().getRegionServer().getServerName());
  cluster.getMaster().balance();
  assertRegionsAreBalanced();
  for (int i=0; i < 6; i++) {
    LOG.info("Adding " + (i + 5) + "th region server");
    cluster.startRegionServer();
  }
  cluster.getMaster().balance();
  assertRegionsAreBalanced();
}
