{
  conf.setLong(StochasticLoadBalancer.MAX_STEPS_KEY,2000000L);
  conf.setFloat("hbase.master.balancer.stochastic.maxMovePercent",1.0f);
  loadBalancer.setConf(conf);
  int numHosts=100;
  int numRegions=100 * 100;
  int replication=3;
  int numRegionsPerServer=5;
  int numTables=10;
  Map<ServerName,List<HRegionInfo>> serverMap=createServerMap(numHosts,numRegions,numRegionsPerServer,replication,numTables);
  int numNodesPerHost=4;
  Map<ServerName,List<HRegionInfo>> newServerMap=new TreeMap<ServerName,List<HRegionInfo>>(serverMap);
  for (  Map.Entry<ServerName,List<HRegionInfo>> entry : serverMap.entrySet()) {
    for (int i=1; i < numNodesPerHost; i++) {
      ServerName s1=entry.getKey();
      ServerName s2=ServerName.valueOf(s1.getHostname(),s1.getPort() + i,1);
      newServerMap.put(s2,new ArrayList<HRegionInfo>());
    }
  }
  testWithCluster(newServerMap,null,true,true);
}
