{
  ServerName sn=new ServerName("test:8080",100);
  int numClusterStatusToAdd=20000;
  for (int i=0; i < numClusterStatusToAdd; i++) {
    ServerLoad sl=mock(ServerLoad.class);
    RegionLoad rl=mock(RegionLoad.class);
    when(rl.getStores()).thenReturn(i);
    Map<byte[],RegionLoad> regionLoadMap=new TreeMap<byte[],RegionLoad>(Bytes.BYTES_COMPARATOR);
    regionLoadMap.put(Bytes.toBytes(REGION_KEY),rl);
    when(sl.getRegionsLoad()).thenReturn(regionLoadMap);
    ClusterStatus clusterStatus=mock(ClusterStatus.class);
    when(clusterStatus.getServers()).thenReturn(Arrays.asList(sn));
    when(clusterStatus.getLoad(sn)).thenReturn(sl);
    loadBalancer.setClusterStatus(clusterStatus);
  }
  assertTrue(loadBalancer.loads.get(REGION_KEY) != null);
  assertTrue(loadBalancer.loads.get(REGION_KEY).size() == 15);
  Queue<RegionLoad> loads=loadBalancer.loads.get(REGION_KEY);
  int i=0;
  while (loads.size() > 0) {
    RegionLoad rl=loads.remove();
    assertEquals(i + (numClusterStatusToAdd - 15),rl.getStores());
    i++;
  }
}
