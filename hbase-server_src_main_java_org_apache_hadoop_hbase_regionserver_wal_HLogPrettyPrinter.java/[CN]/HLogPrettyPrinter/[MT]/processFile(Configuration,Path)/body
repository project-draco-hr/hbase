{
  FileSystem fs=FileSystem.get(conf);
  if (!fs.exists(p)) {
    throw new FileNotFoundException(p.toString());
  }
  if (!fs.isFile(p)) {
    throw new IOException(p + " is not a file");
  }
  if (outputJSON && !persistentOutput) {
    out.print("[");
    firstTxn=true;
  }
  Reader log=HLogFactory.createReader(fs,p,conf);
  try {
    FSHLog.Entry entry;
    while ((entry=log.next()) != null) {
      HLogKey key=entry.getKey();
      WALEdit edit=entry.getEdit();
      Map<String,Object> txn=key.toStringMap();
      long writeTime=key.getWriteTime();
      if (sequence >= 0 && ((Long)txn.get("sequence")) != sequence)       continue;
      if (region != null && !((String)txn.get("region")).equals(region))       continue;
      List<Map> actions=new ArrayList<Map>();
      for (      KeyValue kv : edit.getKeyValues()) {
        Map<String,Object> op=new HashMap<String,Object>(kv.toStringMap());
        if (outputValues)         op.put("value",Bytes.toStringBinary(kv.getValue()));
        if (row == null || ((String)op.get("row")).equals(row))         actions.add(op);
      }
      if (actions.size() == 0)       continue;
      txn.put("actions",actions);
      if (outputJSON) {
        if (firstTxn)         firstTxn=false;
 else         out.print(",");
        out.print(MAPPER.writeValueAsString(txn));
      }
 else {
        out.println("Sequence " + txn.get("sequence") + " "+ "from region "+ txn.get("region")+ " "+ "in table "+ txn.get("table")+ " at write timestamp: "+ new Date(writeTime));
        for (int i=0; i < actions.size(); i++) {
          Map op=actions.get(i);
          out.println("  Action:");
          out.println("    row: " + op.get("row"));
          out.println("    column: " + op.get("family") + ":"+ op.get("qualifier"));
          out.println("    timestamp: " + (new Date((Long)op.get("timestamp"))));
          if (outputValues)           out.println("    value: " + op.get("value"));
        }
      }
    }
  }
  finally {
    log.close();
  }
  if (outputJSON && !persistentOutput) {
    out.print("]");
  }
}
