{
  final NavigableMap<HRegionInfo,ServerName> regions=new TreeMap<HRegionInfo,ServerName>();
  MetaScannerVisitor visitor=new MetaScannerVisitor(){
    @Override public boolean processRow(    Result rowResult) throws IOException {
      HRegionInfo info=Writables.getHRegionInfo(rowResult.getValue(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER));
      if (!(Bytes.equals(info.getTableName(),tablename))) {
        return false;
      }
      byte[] value=rowResult.getValue(HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER);
      String hostAndPort=null;
      if (value != null && value.length > 0) {
        hostAndPort=Bytes.toString(value);
      }
      value=rowResult.getValue(HConstants.CATALOG_FAMILY,HConstants.STARTCODE_QUALIFIER);
      long startcode=-1L;
      if (value != null && value.length > 0)       startcode=Bytes.toLong(value);
      if (!(info.isOffline() || info.isSplit())) {
        ServerName sn=null;
        if (hostAndPort != null && hostAndPort.length() > 0) {
          sn=new ServerName(hostAndPort,startcode);
        }
        regions.put(new UnmodifyableHRegionInfo(info),sn);
      }
      return true;
    }
  }
;
  metaScan(conf,visitor,tablename);
  return regions;
}
