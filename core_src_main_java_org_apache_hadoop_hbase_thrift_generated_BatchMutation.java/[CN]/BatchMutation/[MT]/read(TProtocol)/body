{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
    _Fields fieldId=_Fields.findByThriftId(field.id);
    if (fieldId == null) {
      TProtocolUtil.skip(iprot,field.type);
    }
 else {
switch (fieldId) {
case ROW:
        if (field.type == TType.STRING) {
          this.row=iprot.readBinary();
        }
 else {
          TProtocolUtil.skip(iprot,field.type);
        }
      break;
case MUTATIONS:
    if (field.type == TType.LIST) {
{
        TList _list0=iprot.readListBegin();
        this.mutations=new ArrayList<Mutation>(_list0.size);
        for (int _i1=0; _i1 < _list0.size; ++_i1) {
          Mutation _elem2;
          _elem2=new Mutation();
          _elem2.read(iprot);
          this.mutations.add(_elem2);
        }
        iprot.readListEnd();
      }
    }
 else {
      TProtocolUtil.skip(iprot,field.type);
    }
  break;
}
iprot.readFieldEnd();
}
}
iprot.readStructEnd();
validate();
}
