{
  if (other == this) {
    return true;
  }
  if (!(other instanceof ByteString)) {
    return false;
  }
  if (size() != ((ByteString)other).size()) {
    return false;
  }
  if (size() == 0) {
    return true;
  }
  if (other instanceof LiteralByteString) {
    LiteralByteString otherAsLiteral=(LiteralByteString)other;
    int thisHash=peekCachedHashCode();
    int thatHash=otherAsLiteral.peekCachedHashCode();
    if (thisHash != 0 && thatHash != 0 && thisHash != thatHash) {
      return false;
    }
    return equalsRange((LiteralByteString)other,0,size());
  }
 else {
    return other.equals(this);
  }
}
