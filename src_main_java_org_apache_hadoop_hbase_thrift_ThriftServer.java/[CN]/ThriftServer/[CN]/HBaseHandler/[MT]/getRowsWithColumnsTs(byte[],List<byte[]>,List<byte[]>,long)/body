{
  try {
    List<Get> gets=new ArrayList<Get>(rows.size());
    HTable table=getTable(tableName);
    for (    byte[] row : rows) {
      Get get=new Get(row);
      if (columns != null) {
        byte[][] columnArr=columns.toArray(new byte[columns.size()][]);
        for (        byte[] column : columnArr) {
          byte[][] famAndQf=KeyValue.parseColumn(column);
          if (famAndQf.length == 1) {
            get.addFamily(famAndQf[0]);
          }
 else {
            get.addColumn(famAndQf[0],famAndQf[1]);
          }
        }
        get.setTimeRange(Long.MIN_VALUE,timestamp);
      }
      gets.add(get);
    }
    Result[] result=table.get(gets);
    return ThriftUtilities.rowResultFromHBase(result);
  }
 catch (  IOException e) {
    throw new IOError(e.getMessage());
  }
}
