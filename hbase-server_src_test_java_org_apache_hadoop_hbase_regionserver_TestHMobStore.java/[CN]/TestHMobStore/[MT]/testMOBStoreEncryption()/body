{
  final Configuration conf=TEST_UTIL.getConfiguration();
  conf.set(HConstants.CRYPTO_KEYPROVIDER_CONF_KEY,KeyProviderForTesting.class.getName());
  conf.set(HConstants.CRYPTO_MASTERKEY_NAME_CONF_KEY,"hbase");
  SecureRandom rng=new SecureRandom();
  byte[] keyBytes=new byte[AES.KEY_LENGTH];
  rng.nextBytes(keyBytes);
  String algorithm=conf.get(HConstants.CRYPTO_KEY_ALGORITHM_CONF_KEY,HConstants.CIPHER_AES);
  Key cfKey=new SecretKeySpec(keyBytes,algorithm);
  HColumnDescriptor hcd=new HColumnDescriptor(family);
  hcd.setMobEnabled(true);
  hcd.setMobThreshold(100);
  hcd.setMaxVersions(4);
  hcd.setEncryptionType(algorithm);
  hcd.setEncryptionKey(EncryptionUtil.wrapKey(conf,conf.get(HConstants.CRYPTO_MASTERKEY_NAME_CONF_KEY,User.getCurrent().getShortName()),cfKey));
  init(name.getMethodName(),conf,hcd,false);
  this.store.add(new KeyValue(row,family,qf1,1,value));
  this.store.add(new KeyValue(row,family,qf2,1,value));
  this.store.add(new KeyValue(row,family,qf3,1,value));
  flush(1);
  this.store.add(new KeyValue(row,family,qf4,1,value));
  this.store.add(new KeyValue(row,family,qf5,1,value));
  this.store.add(new KeyValue(row,family,qf6,1,value));
  flush(2);
  Collection<StoreFile> storefiles=this.store.getStorefiles();
  checkMobHFileEncrytption(storefiles);
  Scan scan=new Scan(get);
  InternalScanner scanner=(InternalScanner)store.getScanner(scan,scan.getFamilyMap().get(store.getFamily().getName()),0);
  List<Cell> results=new ArrayList<Cell>();
  scanner.next(results);
  Collections.sort(results,KeyValue.COMPARATOR);
  scanner.close();
  Assert.assertEquals(expected.size(),results.size());
  for (int i=0; i < results.size(); i++) {
    Assert.assertEquals(expected.get(i),results.get(i));
  }
  this.store.triggerMajorCompaction();
  CompactionContext requestCompaction=this.store.requestCompaction(1,null);
  this.store.compact(requestCompaction,NoLimitCompactionThroughputController.INSTANCE);
  Assert.assertEquals(1,this.store.getStorefiles().size());
  checkMobHFileEncrytption(this.store.getStorefiles());
}
