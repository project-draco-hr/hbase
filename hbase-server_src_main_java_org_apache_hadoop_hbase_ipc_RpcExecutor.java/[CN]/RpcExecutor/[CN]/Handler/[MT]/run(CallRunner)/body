{
  MonitoredRPCHandler status=RpcServer.getStatus();
  cr.setStatus(status);
  try {
    activeHandlerCount.incrementAndGet();
    cr.run();
  }
 catch (  Throwable e) {
    if (e instanceof Error) {
      int failedCount=failedHandlerCount.incrementAndGet();
      if (this.handlerFailureThreshhold >= 0 && failedCount > handlerCount * this.handlerFailureThreshhold) {
        String message="Number of failed RpcServer handler runs exceeded threshhold " + this.handlerFailureThreshhold + "; reason: "+ StringUtils.stringifyException(e);
        if (abortable != null) {
          abortable.abort(message,e);
        }
 else {
          LOG.error("Error but can't abort because abortable is null: " + StringUtils.stringifyException(e));
          throw e;
        }
      }
 else {
        LOG.warn("Handler errors " + StringUtils.stringifyException(e));
      }
    }
 else {
      LOG.warn("Handler  exception " + StringUtils.stringifyException(e));
    }
  }
 finally {
    activeHandlerCount.decrementAndGet();
  }
}
