{
  this.level0CompactMinFiles=config.getInt(MIN_FILES_L0_KEY,4);
  this.stripeCompactMinFiles=config.getInt(MIN_FILES_KEY,3);
  this.stripeCompactMaxFiles=config.getInt(MAX_FILES_KEY,10);
  this.maxRegionSplitImbalance=getFloat(config,MAX_REGION_SPLIT_IMBALANCE_KEY,1.5f,true);
  this.splitPartCount=getFloat(config,SPLIT_PARTS_KEY,2.0f,true);
  if (Math.abs(splitPartCount - 1.0) < EPSILON) {
    throw new RuntimeException("Split part count cannot be 1: " + this.splitPartCount);
  }
  double flushSize=sci.getMemstoreFlushSize();
  if (flushSize == 0) {
    flushSize=128 * 1024 * 1024;
  }
  long defaultSplitSize=(long)(flushSize * getLevel0MinFiles() * 4* splitPartCount);
  this.sizeToSplitAt=config.getLong(SIZE_TO_SPLIT_KEY,defaultSplitSize);
  this.initialCount=config.getInt(INITIAL_STRIPE_COUNT_KEY,1);
  this.splitPartSize=(long)(this.sizeToSplitAt / this.splitPartCount);
}
