{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.row=iprot.readBinary();
    struct.setRowIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list357=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.mutations=new ArrayList<Mutation>(_list357.size);
      for (int _i358=0; _i358 < _list357.size; ++_i358) {
        Mutation _elem359;
        _elem359=new Mutation();
        _elem359.read(iprot);
        struct.mutations.add(_elem359);
      }
    }
    struct.setMutationsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map360=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map360.size);
      for (int _i361=0; _i361 < _map360.size; ++_i361) {
        ByteBuffer _key362;
        ByteBuffer _val363;
        _key362=iprot.readBinary();
        _val363=iprot.readBinary();
        struct.attributes.put(_key362,_val363);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
