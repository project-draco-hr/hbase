{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(5);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.startRow=iprot.readBinary();
    struct.setStartRowIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list541=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list541.size);
      ByteBuffer _elem542;
      for (int _i543=0; _i543 < _list541.size; ++_i543) {
        _elem542=iprot.readBinary();
        struct.columns.add(_elem542);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map544=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map544.size);
      ByteBuffer _key545;
      ByteBuffer _val546;
      for (int _i547=0; _i547 < _map544.size; ++_i547) {
        _key545=iprot.readBinary();
        _val546=iprot.readBinary();
        struct.attributes.put(_key545,_val546);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
