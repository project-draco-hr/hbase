{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetTableName()).compareTo(other.isSetTableName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTableName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tableName,other.tableName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow()).compareTo(other.isSetRow());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.row,other.row);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumns()).compareTo(other.isSetColumns());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumns()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.columns,other.columns);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(other.isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTimestamp()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.timestamp,other.timestamp);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAttributes()).compareTo(other.isSetAttributes());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAttributes()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.attributes,other.attributes);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
