{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(5);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list328=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.rows=new ArrayList<ByteBuffer>(_list328.size);
      for (int _i329=0; _i329 < _list328.size; ++_i329) {
        ByteBuffer _elem330;
        _elem330=iprot.readBinary();
        struct.rows.add(_elem330);
      }
    }
    struct.setRowsIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list331=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list331.size);
      for (int _i332=0; _i332 < _list331.size; ++_i332) {
        ByteBuffer _elem333;
        _elem333=iprot.readBinary();
        struct.columns.add(_elem333);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map334=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map334.size);
      for (int _i335=0; _i335 < _map334.size; ++_i335) {
        ByteBuffer _key336;
        ByteBuffer _val337;
        _key336=iprot.readBinary();
        _val337=iprot.readBinary();
        struct.attributes.put(_key336,_val337);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
