{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list297=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.rows=new ArrayList<ByteBuffer>(_list297.size);
      for (int _i298=0; _i298 < _list297.size; ++_i298) {
        ByteBuffer _elem299;
        _elem299=iprot.readBinary();
        struct.rows.add(_elem299);
      }
    }
    struct.setRowsIsSet(true);
  }
  if (incoming.get(2)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map300=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map300.size);
      for (int _i301=0; _i301 < _map300.size; ++_i301) {
        ByteBuffer _key302;
        ByteBuffer _val303;
        _key302=iprot.readBinary();
        _val303=iprot.readBinary();
        struct.attributes.put(_key302,_val303);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
