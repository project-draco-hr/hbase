{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(6);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.startRow=iprot.readBinary();
    struct.setStartRowIsSet(true);
  }
  if (incoming.get(2)) {
    struct.stopRow=iprot.readBinary();
    struct.setStopRowIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TList _list559=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list559.size);
      ByteBuffer _elem560;
      for (int _i561=0; _i561 < _list559.size; ++_i561) {
        _elem560=iprot.readBinary();
        struct.columns.add(_elem560);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(4)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(5)) {
{
      org.apache.thrift.protocol.TMap _map562=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map562.size);
      ByteBuffer _key563;
      ByteBuffer _val564;
      for (int _i565=0; _i565 < _map562.size; ++_i565) {
        _key563=iprot.readBinary();
        _val564=iprot.readBinary();
        struct.attributes.put(_key563,_val564);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
