{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list268=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.rows=new ArrayList<ByteBuffer>(_list268.size);
      ByteBuffer _elem269;
      for (int _i270=0; _i270 < _list268.size; ++_i270) {
        _elem269=iprot.readBinary();
        struct.rows.add(_elem269);
      }
    }
    struct.setRowsIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list271=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list271.size);
      ByteBuffer _elem272;
      for (int _i273=0; _i273 < _list271.size; ++_i273) {
        _elem272=iprot.readBinary();
        struct.columns.add(_elem272);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map274=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map274.size);
      ByteBuffer _key275;
      ByteBuffer _val276;
      for (int _i277=0; _i277 < _map274.size; ++_i277) {
        _key275=iprot.readBinary();
        _val276=iprot.readBinary();
        struct.attributes.put(_key275,_val276);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
