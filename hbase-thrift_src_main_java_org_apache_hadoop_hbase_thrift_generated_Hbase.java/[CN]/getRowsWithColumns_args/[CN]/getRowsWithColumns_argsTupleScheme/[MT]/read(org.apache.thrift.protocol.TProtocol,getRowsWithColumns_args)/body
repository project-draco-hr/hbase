{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list268=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.rows=new ArrayList<ByteBuffer>(_list268.size);
      for (int _i269=0; _i269 < _list268.size; ++_i269) {
        ByteBuffer _elem270;
        _elem270=iprot.readBinary();
        struct.rows.add(_elem270);
      }
    }
    struct.setRowsIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list271=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list271.size);
      for (int _i272=0; _i272 < _list271.size; ++_i272) {
        ByteBuffer _elem273;
        _elem273=iprot.readBinary();
        struct.columns.add(_elem273);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map274=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map274.size);
      for (int _i275=0; _i275 < _map274.size; ++_i275) {
        ByteBuffer _key276;
        ByteBuffer _val277;
        _key276=iprot.readBinary();
        _val277=iprot.readBinary();
        struct.attributes.put(_key276,_val277);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
