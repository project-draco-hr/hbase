{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.startAndPrefix=iprot.readBinary();
    struct.setStartAndPrefixIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list523=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list523.size);
      ByteBuffer _elem524;
      for (int _i525=0; _i525 < _list523.size; ++_i525) {
        _elem524=iprot.readBinary();
        struct.columns.add(_elem524);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map526=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map526.size);
      ByteBuffer _key527;
      ByteBuffer _val528;
      for (int _i529=0; _i529 < _map526.size; ++_i529) {
        _key527=iprot.readBinary();
        _val528=iprot.readBinary();
        struct.attributes.put(_key527,_val528);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
