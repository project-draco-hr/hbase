{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list411=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.rowBatches=new ArrayList<BatchMutation>(_list411.size);
      BatchMutation _elem412;
      for (int _i413=0; _i413 < _list411.size; ++_i413) {
        _elem412=new BatchMutation();
        _elem412.read(iprot);
        struct.rowBatches.add(_elem412);
      }
    }
    struct.setRowBatchesIsSet(true);
  }
  if (incoming.get(2)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map414=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map414.size);
      ByteBuffer _key415;
      ByteBuffer _val416;
      for (int _i417=0; _i417 < _map414.size; ++_i417) {
        _key415=iprot.readBinary();
        _val416=iprot.readBinary();
        struct.attributes.put(_key415,_val416);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
