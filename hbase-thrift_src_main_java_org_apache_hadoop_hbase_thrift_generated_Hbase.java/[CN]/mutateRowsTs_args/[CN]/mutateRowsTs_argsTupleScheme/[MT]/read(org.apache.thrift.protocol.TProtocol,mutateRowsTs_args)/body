{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list411=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.rowBatches=new ArrayList<BatchMutation>(_list411.size);
      for (int _i412=0; _i412 < _list411.size; ++_i412) {
        BatchMutation _elem413;
        _elem413=new BatchMutation();
        _elem413.read(iprot);
        struct.rowBatches.add(_elem413);
      }
    }
    struct.setRowBatchesIsSet(true);
  }
  if (incoming.get(2)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map414=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map414.size);
      for (int _i415=0; _i415 < _map414.size; ++_i415) {
        ByteBuffer _key416;
        ByteBuffer _val417;
        _key416=iprot.readBinary();
        _val417=iprot.readBinary();
        struct.attributes.put(_key416,_val417);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
