{
  int newOffset=offset;
  byte tmp=input.get(newOffset++);
  if (tmp >= 0) {
    return new Pair<Integer,Integer>((int)tmp,newOffset - offset);
  }
  int result=tmp & 0x7f;
  tmp=input.get(newOffset++);
  if (tmp >= 0) {
    result|=tmp << 7;
  }
 else {
    result|=(tmp & 0x7f) << 7;
    tmp=input.get(newOffset++);
    if (tmp >= 0) {
      result|=tmp << 14;
    }
 else {
      result|=(tmp & 0x7f) << 14;
      tmp=input.get(newOffset++);
      if (tmp >= 0) {
        result|=tmp << 21;
      }
 else {
        result|=(tmp & 0x7f) << 21;
        tmp=input.get(newOffset++);
        result|=tmp << 28;
        if (tmp < 0) {
          for (int i=0; i < 5; i++) {
            tmp=input.get(newOffset++);
            if (tmp >= 0) {
              return new Pair<Integer,Integer>(result,newOffset - offset);
            }
          }
          throw new IOException("Malformed varint");
        }
      }
    }
  }
  return new Pair<Integer,Integer>(result,newOffset - offset);
}
