{
  byte[] r=Bytes.toBytes("row1");
  byte[] f=Bytes.toBytes("cf1");
  byte[] q1=Bytes.toBytes("qual1");
  byte[] q2=Bytes.toBytes("qual2");
  byte[] v=Bytes.toBytes("val1");
  byte[] tags=Bytes.toBytes("tag1");
  KeyValue kv=new KeyValue(r,f,q1,0,q1.length,1234L,Type.Put,v,0,v.length,tags);
  ByteBuffer buffer=ByteBuffer.wrap(kv.getBuffer());
  Cell bbCell1=new ByteBufferedCellImpl(buffer,0,buffer.remaining());
  kv=new KeyValue(r,f,q2,0,q2.length,1234L,Type.Put,v,0,v.length,tags);
  buffer=ByteBuffer.wrap(kv.getBuffer());
  Cell bbCell2=new ByteBufferedCellImpl(buffer,0,buffer.remaining());
  assertTrue(CellUtil.matchingRows(bbCell1,bbCell2));
  assertTrue(CellUtil.matchingRows(kv,bbCell2));
  assertTrue(CellUtil.matchingRow(bbCell1,r));
  assertTrue(CellUtil.matchingFamily(bbCell1,bbCell2));
  assertTrue(CellUtil.matchingFamily(kv,bbCell2));
  assertTrue(CellUtil.matchingFamily(bbCell1,f));
  assertFalse(CellUtil.matchingQualifier(bbCell1,bbCell2));
  assertTrue(CellUtil.matchingQualifier(kv,bbCell2));
  assertTrue(CellUtil.matchingQualifier(bbCell1,q1));
  assertTrue(CellUtil.matchingQualifier(bbCell2,q2));
  assertTrue(CellUtil.matchingValue(bbCell1,bbCell2));
  assertTrue(CellUtil.matchingValue(kv,bbCell2));
  assertTrue(CellUtil.matchingValue(bbCell1,v));
  assertFalse(CellUtil.matchingColumn(bbCell1,bbCell2));
  assertTrue(CellUtil.matchingColumn(kv,bbCell2));
  assertTrue(CellUtil.matchingColumn(bbCell1,f,q1));
  assertTrue(CellUtil.matchingColumn(bbCell2,f,q2));
}
