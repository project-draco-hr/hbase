{
  TEST_UTIL.getConfiguration().set("dfs.data.transfer.protection",protection);
  if (StringUtils.isBlank(encryptionAlgorithm) && StringUtils.isBlank(cipherSuite)) {
    TEST_UTIL.getConfiguration().setBoolean(DFS_ENCRYPT_DATA_TRANSFER_KEY,false);
  }
 else {
    TEST_UTIL.getConfiguration().setBoolean(DFS_ENCRYPT_DATA_TRANSFER_KEY,true);
  }
  if (StringUtils.isBlank(encryptionAlgorithm)) {
    TEST_UTIL.getConfiguration().unset(DFS_DATA_ENCRYPTION_ALGORITHM_KEY);
  }
 else {
    TEST_UTIL.getConfiguration().set(DFS_DATA_ENCRYPTION_ALGORITHM_KEY,encryptionAlgorithm);
  }
  if (StringUtils.isBlank(cipherSuite)) {
    TEST_UTIL.getConfiguration().unset(DFS_ENCRYPT_DATA_TRANSFER_CIPHER_SUITES_KEY);
  }
 else {
    TEST_UTIL.getConfiguration().set(DFS_ENCRYPT_DATA_TRANSFER_CIPHER_SUITES_KEY,cipherSuite);
  }
  TEST_UTIL.startMiniDFSCluster(3);
  FS=TEST_UTIL.getDFSCluster().getFileSystem();
  testDirOnTestFs=new Path("/" + name.getMethodName().replaceAll("[^0-9a-zA-Z]","_"));
  FS.mkdirs(testDirOnTestFs);
  if (useTransparentEncryption) {
    createEncryptionZone();
  }
}
