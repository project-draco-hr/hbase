{
  Configuration conf=getConf();
  ZooKeeperWatcher zkw=null;
  try {
    zkw=new ZooKeeperWatcher(getConf(),"Migrate ZK data to PB.",new ZKDataMigratorAbortable());
    if (ZKUtil.checkExists(zkw,zkw.baseZNode) == -1) {
      LOG.info("No hbase related data available in zookeeper. returning..");
      return 0;
    }
    List<String> children=ZKUtil.listChildrenNoWatch(zkw,zkw.baseZNode);
    if (children == null) {
      LOG.info("No child nodes to mirgrate. returning..");
      return 0;
    }
    String childPath=null;
    for (    String child : children) {
      childPath=ZKUtil.joinZNode(zkw.baseZNode,child);
      if (child.equals(conf.get("zookeeper.znode.rootserver","root-region-server"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.rs","rs"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.draining.rs","draining"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.master","master"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.backup.masters","backup-masters"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.state","shutdown"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.unassigned","unassigned"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.tableEnableDisable","table")) || child.equals(conf.get("zookeeper.znode.masterTableEnableDisable","table"))) {
        checkAndMigrateTableStatesToPB(zkw);
      }
 else       if (child.equals(conf.get("zookeeper.znode.masterTableEnableDisable92","table92"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.splitlog","splitlog"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.replication","replication"))) {
        checkAndMigrateReplicationNodesToPB(zkw);
      }
 else       if (child.equals(conf.get("zookeeper.znode.clusterId","hbaseid"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(SnapshotManager.ONLINE_SNAPSHOT_CONTROLLER_DESCRIPTION)) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
 else       if (child.equals(conf.get("zookeeper.znode.acl.parent","acl"))) {
        ZKUtil.deleteNodeRecursively(zkw,childPath);
      }
    }
  }
 catch (  Exception e) {
    LOG.error("Got exception while updating znodes ",e);
    throw new IOException(e);
  }
 finally {
    if (zkw != null) {
      zkw.close();
    }
  }
  return 0;
}
