{
  do {
    if (this.columns.size() == 0) {
      return ScanQueryMatcher.MatchCode.SEEK_NEXT_ROW;
    }
    if (this.column == null) {
      return ScanQueryMatcher.MatchCode.SEEK_NEXT_ROW;
    }
    int ret=Bytes.compareTo(column.getBuffer(),column.getOffset(),column.getLength(),bytes,offset,length);
    if (ret == 0) {
      if (sameAsPreviousTS(timestamp)) {
        return ScanQueryMatcher.MatchCode.SKIP;
      }
      int count=this.column.increment();
      if (count >= maxVersions || (count >= minVersions && isExpired(timestamp))) {
        this.columns.remove(this.index);
        resetTS();
        if (this.columns.size() == this.index) {
          this.column=null;
        }
 else {
          this.column=this.columns.get(this.index);
        }
      }
 else {
        setTS(timestamp);
      }
      return ScanQueryMatcher.MatchCode.INCLUDE;
    }
    resetTS();
    if (ret > 0) {
      return ScanQueryMatcher.MatchCode.SEEK_NEXT_COL;
    }
    if (ret <= -1) {
      if (++this.index >= this.columns.size()) {
        return ScanQueryMatcher.MatchCode.SEEK_NEXT_ROW;
      }
      this.column=this.columns.get(this.index);
    }
  }
 while (true);
}
