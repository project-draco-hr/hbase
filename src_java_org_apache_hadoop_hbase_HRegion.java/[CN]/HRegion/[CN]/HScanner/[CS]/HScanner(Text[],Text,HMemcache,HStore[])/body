{
  long scanTime=System.currentTimeMillis();
  this.scanners=new HInternalScannerInterface[stores.length + 1];
  for (int i=0; i < this.scanners.length; i++) {
    this.scanners[i]=null;
  }
  this.resultSets=new TreeMap[scanners.length];
  this.keys=new HStoreKey[scanners.length];
  this.wildcardMatch=false;
  this.multipleMatchers=false;
  try {
    HInternalScannerInterface scanner=memcache.getScanner(scanTime,cols,firstRow);
    if (scanner.isWildcardScanner()) {
      this.wildcardMatch=true;
    }
    if (scanner.isMultipleMatchScanner()) {
      this.multipleMatchers=true;
    }
    scanners[0]=scanner;
    for (int i=0; i < stores.length; i++) {
      scanner=stores[i].getScanner(scanTime,cols,firstRow);
      if (scanner.isWildcardScanner()) {
        this.wildcardMatch=true;
      }
      if (scanner.isMultipleMatchScanner()) {
        this.multipleMatchers=true;
      }
      scanners[i + 1]=scanner;
    }
  }
 catch (  IOException e) {
    for (int i=0; i < this.scanners.length; i++) {
      if (scanners[i] != null) {
        closeScanner(i);
      }
    }
    throw e;
  }
  for (int i=0; i < scanners.length; i++) {
    keys[i]=new HStoreKey();
    resultSets[i]=new TreeMap<Text,byte[]>();
    if (scanners[i] != null && !scanners[i].next(keys[i],resultSets[i])) {
      closeScanner(i);
    }
  }
}
