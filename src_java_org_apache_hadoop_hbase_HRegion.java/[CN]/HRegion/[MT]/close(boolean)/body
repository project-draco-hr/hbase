{
  lock.obtainWriteLock();
  try {
    boolean shouldClose=false;
synchronized (writestate) {
      if (writestate.closed) {
        LOG.info("region " + this.regionInfo.regionName + " closed");
        return new Vector<HStoreFile>();
      }
      while (writestate.writesOngoing) {
        try {
          writestate.wait();
        }
 catch (        InterruptedException iex) {
        }
      }
      writestate.writesOngoing=true;
      shouldClose=true;
    }
    if (!shouldClose) {
      return null;
    }
    LOG.info("closing region " + this.regionInfo.regionName);
    Vector<HStoreFile> allHStoreFiles=null;
    if (!abort) {
      allHStoreFiles=internalFlushcache();
    }
    for (    HStore store : stores.values()) {
      store.close();
    }
    try {
      return allHStoreFiles;
    }
  finally {
synchronized (writestate) {
        writestate.closed=true;
        writestate.writesOngoing=false;
      }
      LOG.info("region " + this.regionInfo.regionName + " closed");
    }
  }
  finally {
    lock.releaseWriteLock();
  }
}
