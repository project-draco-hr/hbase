{
  HRegion a=srcA;
  HRegion b=srcB;
  FileSystem fs=srcA.getFilesystem();
  if (srcA.getStartKey() == null) {
    if (srcB.getStartKey() == null) {
      throw new IOException("Cannot merge two regions with null start key");
    }
  }
 else   if ((srcB.getStartKey() == null) || (srcA.getStartKey().compareTo(srcB.getStartKey()) > 0)) {
    a=srcB;
    b=srcA;
  }
  if (!a.getEndKey().equals(b.getStartKey())) {
    throw new IOException("Cannot merge non-adjacent regions");
  }
  HBaseConfiguration conf=a.getConf();
  HTableDescriptor tabledesc=a.getTableDesc();
  HLog log=a.getLog();
  Path rootDir=a.getRootDir();
  Text startKey=a.getStartKey();
  Text endKey=b.getEndKey();
  Path merges=new Path(a.getRegionDir(),MERGEDIR);
  if (!fs.exists(merges)) {
    fs.mkdirs(merges);
  }
  HRegionInfo newRegionInfo=new HRegionInfo(tabledesc,startKey,endKey);
  Path newRegionDir=HRegion.getRegionDir(merges,HRegionInfo.encodeRegionName(newRegionInfo.getRegionName()));
  if (fs.exists(newRegionDir)) {
    throw new IOException("Cannot merge; target file collision at " + newRegionDir);
  }
  LOG.info("starting merge of regions: " + a.getRegionName() + " and "+ b.getRegionName()+ " into new region "+ newRegionInfo.toString());
  Map<Text,Vector<HStoreFile>> byFamily=new TreeMap<Text,Vector<HStoreFile>>();
  byFamily=filesByFamily(byFamily,a.close());
  byFamily=filesByFamily(byFamily,b.close());
  for (  Map.Entry<Text,Vector<HStoreFile>> es : byFamily.entrySet()) {
    Text colFamily=es.getKey();
    Vector<HStoreFile> srcFiles=es.getValue();
    HStoreFile dst=new HStoreFile(conf,merges,HRegionInfo.encodeRegionName(newRegionInfo.getRegionName()),colFamily,Math.abs(rand.nextLong()));
    dst.mergeStoreFiles(srcFiles,fs,conf);
  }
  HRegion dstRegion=new HRegion(rootDir,log,fs,conf,newRegionInfo,newRegionDir,null);
  fs.delete(merges);
  LOG.info("merge completed. New region is " + dstRegion.getRegionName());
  return dstRegion;
}
