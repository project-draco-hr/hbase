{
  lock.obtainReadLock();
  try {
    HStore.HStoreSize biggest=largestHStore(midKey);
    if (biggest == null) {
      return false;
    }
    long triggerSize=this.desiredMaxFileSize + (this.desiredMaxFileSize / 2);
    boolean split=(biggest.getAggregate() >= triggerSize);
    if (split) {
      if (!biggest.isSplitable()) {
        LOG.warn("Region " + getRegionName().toString() + " is NOT splitable though its aggregate size is "+ StringUtils.humanReadableInt(biggest.getAggregate())+ " and desired size is "+ StringUtils.humanReadableInt(this.desiredMaxFileSize));
        split=false;
      }
 else {
        LOG.info("Splitting " + getRegionName().toString() + " because largest aggregate size is "+ StringUtils.humanReadableInt(biggest.getAggregate())+ " and desired size is "+ StringUtils.humanReadableInt(this.desiredMaxFileSize));
      }
    }
    return split;
  }
  finally {
    lock.releaseReadLock();
  }
}
