{
  checkMidKey(midKey);
  long startTime=System.currentTimeMillis();
  Path splits=getSplitsDir();
  HRegionInfo regionAInfo=new HRegionInfo(Math.abs(rand.nextLong()),this.regionInfo.tableDesc,this.regionInfo.startKey,midKey);
  Path dirA=getSplitRegionDir(splits,regionAInfo.regionName);
  if (fs.exists(dirA)) {
    throw new IOException("Cannot split; target file collision at " + dirA);
  }
  HRegionInfo regionBInfo=new HRegionInfo(Math.abs(rand.nextLong()),this.regionInfo.tableDesc,midKey,null);
  Path dirB=getSplitRegionDir(splits,regionBInfo.regionName);
  if (this.fs.exists(dirB)) {
    throw new IOException("Cannot split; target file collision at " + dirB);
  }
  if (listener != null) {
    listener.closing(getRegionName());
  }
  Vector<HStoreFile> hstoreFilesToSplit=close();
  if (hstoreFilesToSplit == null) {
    LOG.warn("Close came back null (Implement abort of close?)");
  }
  if (listener != null) {
    listener.closed(this.getRegionName());
  }
  for (  HStoreFile h : hstoreFilesToSplit) {
    HStoreFile.Reference aReference=new HStoreFile.Reference(getRegionName(),h.getFileId(),new HStoreKey(midKey),HStoreFile.Range.bottom);
    HStoreFile a=new HStoreFile(this.conf,splits,regionAInfo.regionName,h.getColFamily(),Math.abs(rand.nextLong()),aReference);
    HStoreFile.Reference bReference=new HStoreFile.Reference(getRegionName(),h.getFileId(),new HStoreKey(midKey),HStoreFile.Range.top);
    HStoreFile b=new HStoreFile(this.conf,splits,regionBInfo.regionName,h.getColFamily(),Math.abs(rand.nextLong()),bReference);
    h.splitStoreFile(a,b,this.fs);
  }
  HRegion regionA=new HRegion(rootDir,log,fs,conf,regionAInfo,dirA);
  HRegion regionB=new HRegion(rootDir,log,fs,conf,regionBInfo,dirB);
  boolean deleted=fs.delete(splits);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Cleaned up " + splits.toString() + " "+ deleted);
  }
  HRegion regions[]=new HRegion[]{regionA,regionB};
  LOG.info("Region split of " + this.regionInfo.regionName + " complete; "+ "new regions: "+ regions[0].getRegionName()+ ", "+ regions[1].getRegionName()+ ". Split took "+ StringUtils.formatTimeDiff(System.currentTimeMillis(),startTime));
  return regions;
}
