{
  lock.readLock().lock();
  try {
    if (this.closed.get()) {
      return;
    }
    boolean needFlush=false;
    long memcacheSize=this.memcacheSize.get();
    if (memcacheSize > this.memcacheFlushSize) {
      needFlush=true;
    }
 else     if (memcacheSize > 0) {
      if (this.noFlushCount >= this.optionalFlushCount) {
        LOG.info("Optional flush called " + this.noFlushCount + " times when data present without flushing.  Forcing one.");
        needFlush=true;
      }
 else {
        this.noFlushCount++;
      }
    }
    if (!needFlush) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Cache flush not needed for region " + regionInfo.getRegionName() + ". Cache size="+ memcacheSize+ ", cache flush threshold="+ this.memcacheFlushSize);
      }
      return;
    }
synchronized (writestate) {
      if ((!writestate.flushing) && writestate.writesEnabled) {
        writestate.flushing=true;
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug("NOT flushing memcache for region " + this.regionInfo.getRegionName() + ", flushing="+ writestate.flushing+ ", writesEnabled="+ writestate.writesEnabled);
        }
        return;
      }
    }
    this.noFlushCount=0;
    long startTime=-1;
synchronized (updateLock) {
      startTime=snapshotMemcaches();
    }
    try {
      internalFlushcache(startTime);
    }
  finally {
synchronized (writestate) {
        writestate.flushing=false;
        writestate.notifyAll();
      }
    }
  }
  finally {
    lock.readLock().unlock();
  }
}
