{
  lock.obtainReadLock();
  try {
    byte[][] memcacheResult=this.memcache.get(key,numVersions);
    if (memcacheResult != null && memcacheResult.length == numVersions) {
      return memcacheResult;
    }
    Text colFamily=HStoreKey.extractFamily(key.getColumn());
    HStore targetStore=stores.get(colFamily);
    if (targetStore == null) {
      return memcacheResult;
    }
    int amendedNumVersions=numVersions;
    if (memcacheResult != null) {
      amendedNumVersions-=memcacheResult.length;
    }
    byte[][] result=targetStore.get(key,amendedNumVersions,this.memcache);
    if (result == null) {
      result=memcacheResult;
    }
 else     if (memcacheResult != null) {
      byte[][] storeResult=result;
      result=new byte[memcacheResult.length + result.length][];
      for (int i=0; i < memcacheResult.length; i++) {
        result[i]=memcacheResult[i];
      }
      for (int i=0; i < storeResult.length; i++) {
        result[i + memcacheResult.length]=storeResult[i];
      }
    }
    return result;
  }
  finally {
    lock.releaseReadLock();
  }
}
