{
  boolean shouldCompact=false;
  lock.obtainReadLock();
  try {
synchronized (writestate) {
      if ((!writestate.writesOngoing) && writestate.writesEnabled && (!writestate.closed)&& recentCommits > MIN_COMMITS_FOR_COMPACTION) {
        writestate.writesOngoing=true;
        shouldCompact=true;
      }
    }
    if (!shouldCompact) {
      LOG.info("not compacting region " + this.regionInfo);
      return false;
    }
    LOG.info("starting compaction on region " + this.regionInfo);
    for (    HStore store : stores.values()) {
      store.compact();
    }
    LOG.info("compaction completed on region " + this.regionInfo);
    return true;
  }
  finally {
    lock.releaseReadLock();
synchronized (writestate) {
      writestate.writesOngoing=false;
      recentCommits=0;
      writestate.notifyAll();
    }
  }
}
