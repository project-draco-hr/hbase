{
  if (this.closed.get()) {
    return false;
  }
  try {
synchronized (writestate) {
      if (!writestate.compacting && writestate.writesEnabled) {
        writestate.compacting=true;
      }
 else {
        LOG.info("NOT compacting region " + this.regionInfo.getRegionName().toString() + ": compacting="+ writestate.compacting+ ", writesEnabled="+ writestate.writesEnabled);
        return false;
      }
    }
    long startTime=System.currentTimeMillis();
    LOG.info("starting compaction on region " + this.regionInfo.getRegionName().toString());
    boolean status=true;
    doRegionCompactionPrep();
    for (    HStore store : stores.values()) {
      if (!store.compact()) {
        status=false;
      }
    }
    doRegionCompactionCleanup();
    LOG.info("compaction completed on region " + this.regionInfo.getRegionName().toString() + ". Took "+ StringUtils.formatTimeDiff(System.currentTimeMillis(),startTime));
    return status;
  }
  finally {
synchronized (writestate) {
      writestate.compacting=false;
      writestate.notifyAll();
    }
  }
}
