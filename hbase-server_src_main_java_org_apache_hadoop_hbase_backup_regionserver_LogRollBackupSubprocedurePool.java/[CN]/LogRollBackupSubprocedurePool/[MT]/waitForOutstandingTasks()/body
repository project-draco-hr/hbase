{
  LOG.debug("Waiting for backup procedure to finish.");
  try {
    for (    Future<Void> f : futures) {
      f.get();
    }
    return true;
  }
 catch (  InterruptedException e) {
    if (aborted) {
      throw new ForeignException("Interrupted and found to be aborted while waiting for tasks!",e);
    }
    Thread.currentThread().interrupt();
  }
catch (  ExecutionException e) {
    if (e.getCause() instanceof ForeignException) {
      throw (ForeignException)e.getCause();
    }
    throw new ForeignException(name,e.getCause());
  }
 finally {
    for (    Future<Void> f : futures) {
      if (!f.isDone()) {
        f.cancel(true);
      }
    }
  }
  return false;
}
