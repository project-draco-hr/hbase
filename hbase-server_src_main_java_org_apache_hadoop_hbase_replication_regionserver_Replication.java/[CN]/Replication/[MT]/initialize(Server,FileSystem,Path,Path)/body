{
  this.server=server;
  this.conf=this.server.getConfiguration();
  this.replication=isReplication(this.conf);
  this.scheduleThreadPool=Executors.newScheduledThreadPool(1,new ThreadFactoryBuilder().setNameFormat(server.getServerName() + "Replication Statistics #%d").setDaemon(true).build());
  if (replication) {
    try {
      this.zkHelper=new ReplicationZookeeper(server,this.replicating);
      this.replicationQueues=new ReplicationQueuesZKImpl(server.getZooKeeper(),this.conf,this.server);
      this.replicationQueues.init(this.server.getServerName().toString());
    }
 catch (    KeeperException ke) {
      throw new IOException("Failed replication handler create " + "(replicating=" + this.replicating,ke);
    }
    this.replicationManager=new ReplicationSourceManager(zkHelper,replicationQueues,conf,this.server,fs,this.replicating,logDir,oldLogDir);
    this.statsThreadPeriod=this.conf.getInt("replication.stats.thread.period.seconds",5 * 60);
    LOG.debug("ReplicationStatisticsThread " + this.statsThreadPeriod);
  }
 else {
    this.replicationManager=null;
    this.zkHelper=null;
    this.replicationQueues=null;
  }
}
