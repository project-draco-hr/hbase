{
  try (Table table=connection.getTable(LABELS_TABLE_NAME)){
    Batch.Call<VisibilityLabelsService,GetAuthsResponse> callable=new Batch.Call<VisibilityLabelsService,GetAuthsResponse>(){
      ServerRpcController controller=new ServerRpcController();
      CoprocessorRpcUtils.BlockingRpcCallback<GetAuthsResponse> rpcCallback=new CoprocessorRpcUtils.BlockingRpcCallback<GetAuthsResponse>();
      public GetAuthsResponse call(      VisibilityLabelsService service) throws IOException {
        GetAuthsRequest.Builder getAuthReqBuilder=GetAuthsRequest.newBuilder();
        getAuthReqBuilder.setUser(ByteString.copyFrom(Bytes.toBytes(user)));
        service.getAuths(controller,getAuthReqBuilder.build(),rpcCallback);
        GetAuthsResponse response=rpcCallback.get();
        if (controller.failedOnException()) {
          throw controller.getFailedOn();
        }
        return response;
      }
    }
;
    Map<byte[],GetAuthsResponse> result=table.coprocessorService(VisibilityLabelsService.class,HConstants.EMPTY_BYTE_ARRAY,HConstants.EMPTY_BYTE_ARRAY,callable);
    return result.values().iterator().next();
  }
 }
