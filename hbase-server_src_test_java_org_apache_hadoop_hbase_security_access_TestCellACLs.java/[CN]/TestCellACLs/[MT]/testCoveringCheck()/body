{
  grantOnTable(TEST_UTIL,USER_OTHER.getShortName(),TEST_TABLE.getTableName(),TEST_FAMILY,null,Action.READ);
  verifyDenied(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        Put p;
        p=new Put(TEST_ROW).add(TEST_FAMILY,TEST_Q1,ZERO);
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
,USER_OTHER);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        Put p;
        p=new Put(TEST_ROW).add(TEST_FAMILY,TEST_Q1,ZERO);
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
,USER_OWNER);
  verifyDenied(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        Put p;
        p=new Put(TEST_ROW).add(TEST_FAMILY,TEST_Q1,ONE);
        t.put(p);
      }
  finally {
        t.close();
      }
      return null;
    }
  }
,USER_OTHER);
  verifyAllowed(new AccessTestAction(){
    @Override public Object run() throws Exception {
      HTable t=new HTable(conf,TEST_TABLE.getTableName());
      try {
        return t.get(new Get(TEST_ROW).addColumn(TEST_FAMILY,TEST_Q1));
      }
  finally {
        t.close();
      }
    }
  }
,USER_OTHER);
}
