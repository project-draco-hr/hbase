{
  Entry[] oldTable=entries;
  int oldCapacity=oldTable.length;
  if (oldCapacity == MAXIMUM_CAPACITY) {
    threshold=Integer.MAX_VALUE;
    return;
  }
  long requiredSpace=(newCapacity - oldCapacity) * ClassSize.REFERENCE;
  checkAndFreeMemory(requiredSpace);
  Entry[] newTable=new Entry[newCapacity];
  for (int i=0; i < oldCapacity; i++) {
    Entry<K,V> entry=oldTable[i];
    if (entry != null) {
      oldTable[i]=null;
      do {
        Entry<K,V> next=entry.next;
        int idx=hashIndex(entry.hash,newCapacity);
        entry.next=newTable[idx];
        newTable[idx]=entry;
        entry=next;
      }
 while (entry != null);
    }
  }
  entries=newTable;
  threshold=(int)(newCapacity * loadFactor);
}
