{
  if (rsLogTimestampMap == null || rsLogTimestampMap.isEmpty()) {
    return null;
  }
  HashMap<String,String> rsLogTimestamptMins=new HashMap<String,String>();
  HashMap<String,HashMap<String,String>> rsLogTimestampMapByRS=new HashMap<String,HashMap<String,String>>();
  for (  Entry<String,HashMap<String,String>> tableEntry : rsLogTimestampMap.entrySet()) {
    String table=tableEntry.getKey();
    HashMap<String,String> rsLogTimestamp=tableEntry.getValue();
    for (    Entry<String,String> rsEntry : rsLogTimestamp.entrySet()) {
      String rs=rsEntry.getKey();
      String ts=rsEntry.getValue();
      if (!rsLogTimestampMapByRS.containsKey(rs)) {
        rsLogTimestampMapByRS.put(rs,new HashMap<String,String>());
        rsLogTimestampMapByRS.get(rs).put(table,ts);
      }
 else {
        rsLogTimestampMapByRS.get(rs).put(table,ts);
      }
    }
  }
  for (  String rs : rsLogTimestampMapByRS.keySet()) {
    rsLogTimestamptMins.put(rs,getMinValue(rsLogTimestampMapByRS.get(rs)));
  }
  return rsLogTimestamptMins;
}
