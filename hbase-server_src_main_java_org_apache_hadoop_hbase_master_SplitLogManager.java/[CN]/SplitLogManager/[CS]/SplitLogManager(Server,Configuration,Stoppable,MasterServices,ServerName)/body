{
  this.server=server;
  this.conf=conf;
  this.stopper=stopper;
  this.choreService=new ChoreService(serverName.toString() + "_splitLogManager_");
  if (server.getCoordinatedStateManager() != null) {
    SplitLogManagerCoordination coordination=((BaseCoordinatedStateManager)server.getCoordinatedStateManager()).getSplitLogManagerCoordination();
    Set<String> failedDeletions=Collections.synchronizedSet(new HashSet<String>());
    SplitLogManagerDetails details=new SplitLogManagerDetails(tasks,master,failedDeletions,serverName);
    coordination.setDetails(details);
    coordination.init();
  }
  this.unassignedTimeout=conf.getInt("hbase.splitlog.manager.unassigned.timeout",DEFAULT_UNASSIGNED_TIMEOUT);
  this.timeoutMonitor=new TimeoutMonitor(conf.getInt("hbase.splitlog.manager.timeoutmonitor.period",1000),stopper);
  choreService.scheduleChore(timeoutMonitor);
}
