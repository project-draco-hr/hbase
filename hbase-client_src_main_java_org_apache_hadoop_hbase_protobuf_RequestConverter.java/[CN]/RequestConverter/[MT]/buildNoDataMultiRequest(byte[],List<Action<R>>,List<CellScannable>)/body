{
  MultiRequest.Builder builder=getMultiRequestBuilderWithRegionAndAtomicSet(regionName,false);
  for (  Action<R> action : actions) {
    MultiAction.Builder protoAction=MultiAction.newBuilder();
    Row row=action.getAction();
    if (row instanceof Get) {
      protoAction.setGet(ProtobufUtil.toGet((Get)row));
    }
 else     if (row instanceof Put) {
      Put p=(Put)row;
      cells.add(p);
      protoAction.setMutation(ProtobufUtil.toMutationNoData(MutationType.PUT,p));
    }
 else     if (row instanceof Delete) {
      Delete d=(Delete)row;
      int size=d.size();
      if (size > 0) {
        cells.add(d);
        protoAction.setMutation(ProtobufUtil.toMutationNoData(MutationType.DELETE,d));
      }
 else {
        protoAction.setMutation(ProtobufUtil.toMutation(MutationType.DELETE,d));
      }
    }
 else     if (row instanceof Append) {
      Append a=(Append)row;
      cells.add(a);
      protoAction.setMutation(ProtobufUtil.toMutationNoData(MutationType.APPEND,a));
    }
 else     if (row instanceof Increment) {
      Increment i=(Increment)row;
      cells.add(i);
      protoAction.setMutation(ProtobufUtil.toMutationNoData(MutationType.INCREMENT,i));
    }
 else     if (row instanceof RowMutations) {
      continue;
    }
 else {
      throw new DoNotRetryIOException("Multi doesn't support " + row.getClass().getName());
    }
    builder.addAction(protoAction.build());
  }
  return builder.build();
}
