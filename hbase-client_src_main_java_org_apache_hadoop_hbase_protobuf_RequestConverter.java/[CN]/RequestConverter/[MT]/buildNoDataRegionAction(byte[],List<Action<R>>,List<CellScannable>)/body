{
  RegionAction.Builder builder=getRegionActionBuilderWithRegion(regionName);
  ClientProtos.Action.Builder actionBuilder=ClientProtos.Action.newBuilder();
  for (  Action<R> action : actions) {
    Row row=action.getAction();
    actionBuilder.clear();
    actionBuilder.setIndex(action.getOriginalIndex());
    if (row instanceof Get) {
      Get g=(Get)row;
      builder.addAction(actionBuilder.setGet(ProtobufUtil.toGet(g)));
    }
 else     if (row instanceof Put) {
      Put p=(Put)row;
      cells.add(p);
      builder.addAction(actionBuilder.setMutation(ProtobufUtil.toMutationNoData(MutationType.PUT,p)));
    }
 else     if (row instanceof Delete) {
      Delete d=(Delete)row;
      int size=d.size();
      if (size > 0) {
        cells.add(d);
        builder.addAction(actionBuilder.setMutation(ProtobufUtil.toMutationNoData(MutationType.DELETE,d)));
      }
 else {
        builder.addAction(actionBuilder.setMutation(ProtobufUtil.toMutation(MutationType.DELETE,d)));
      }
    }
 else     if (row instanceof Append) {
      Append a=(Append)row;
      cells.add(a);
      builder.addAction(actionBuilder.setMutation(ProtobufUtil.toMutationNoData(MutationType.APPEND,a)));
    }
 else     if (row instanceof Increment) {
      Increment i=(Increment)row;
      cells.add(i);
      builder.addAction(actionBuilder.setMutation(ProtobufUtil.toMutationNoData(MutationType.INCREMENT,i)));
    }
 else     if (row instanceof RowMutations) {
      continue;
    }
 else {
      throw new DoNotRetryIOException("Multi doesn't support " + row.getClass().getName());
    }
  }
  return builder;
}
