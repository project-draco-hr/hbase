{
  Set<String> peerIds=new HashSet<>(this.replicationPeers.getAllPeerIds());
  try {
    List<String> replicators=this.queuesClient.getListOfReplicators();
    for (    String replicator : replicators) {
      List<String> queueIds=this.queuesClient.getAllQueues(replicator);
      for (      String queueId : queueIds) {
        ReplicationQueueInfo queueInfo=new ReplicationQueueInfo(queueId);
        if (!peerIds.contains(queueInfo.getPeerId())) {
          if (!undeletedQueueIds.containsKey(replicator)) {
            undeletedQueueIds.put(replicator,new ArrayList<String>());
          }
          undeletedQueueIds.get(replicator).add(queueId);
          String msg="Undeleted replication queue for removed peer found: " + String.format("[removedPeerId=%s, replicator=%s, queueId=%s]",queueInfo.getPeerId(),replicator,queueId);
          errorReporter.reportError(HBaseFsck.ErrorReporter.ERROR_CODE.UNDELETED_REPLICATION_QUEUE,msg);
        }
      }
    }
  }
 catch (  KeeperException ke) {
    throw new IOException(ke);
  }
  checkUnDeletedHFileRefsQueues(peerIds);
}
