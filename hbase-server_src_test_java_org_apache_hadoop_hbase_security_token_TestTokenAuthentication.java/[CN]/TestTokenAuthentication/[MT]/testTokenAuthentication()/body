{
  UserGroupInformation testuser=UserGroupInformation.createUserForTesting("testuser",new String[]{"testgroup"});
  testuser.setAuthenticationMethod(UserGroupInformation.AuthenticationMethod.TOKEN);
  final Configuration conf=TEST_UTIL.getConfiguration();
  conf.set("hadoop.security.authentication","kerberos");
  conf.set("randomkey",UUID.randomUUID().toString());
  testuser.setConfiguration(conf);
  Token<AuthenticationTokenIdentifier> token=secretManager.generateToken("testuser");
  testuser.addToken(token);
  testuser.doAs(new PrivilegedExceptionAction<Object>(){
    public Object run() throws Exception {
      HTable table=new HTable(conf,".META.");
      IdentityProtocol prot=table.coprocessorProxy(IdentityProtocol.class,HConstants.EMPTY_START_ROW);
      String myname=prot.whoami();
      assertEquals("testuser",myname);
      String authMethod=prot.getAuthMethod();
      assertEquals("TOKEN",authMethod);
      return null;
    }
  }
);
}
