{
  this.conf=conf;
  this.startcode=EnvironmentEdgeManager.currentTime();
  String hostname=Strings.domainNamePointerToHostName(DNS.getDefaultHost("default","default"));
  int port=0;
  InetSocketAddress initialIsa=new InetSocketAddress(hostname,port);
  if (initialIsa.getAddress() == null) {
    throw new IllegalArgumentException("Failed resolve of " + initialIsa);
  }
  final List<BlockingServiceAndInterface> sai=new ArrayList<BlockingServiceAndInterface>(1);
  BlockingService service=AuthenticationProtos.AuthenticationService.newReflectiveBlockingService(this);
  sai.add(new BlockingServiceAndInterface(service,AuthenticationProtos.AuthenticationService.BlockingInterface.class));
  this.rpcServer=new RpcServer(this,"tokenServer",sai,initialIsa,conf,new FifoRpcScheduler(conf,1));
  InetSocketAddress address=rpcServer.getListenerAddress();
  if (address == null) {
    throw new IOException("Listener channel is closed");
  }
  this.isa=address;
  this.sleeper=new Sleeper(1000,this);
}
