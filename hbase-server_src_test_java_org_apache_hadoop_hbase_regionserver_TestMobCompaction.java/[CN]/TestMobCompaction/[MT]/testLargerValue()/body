{
  init(200);
  byte[] dummyData=makeDummyData(300);
  HRegionIncommon loader=new HRegionIncommon(region);
  for (int i=0; i < compactionThreshold; i++) {
    Put p=createPut(i,dummyData);
    loader.put(p);
    loader.flushcache();
  }
  assertEquals("Before compaction: store files",compactionThreshold,countStoreFiles());
  assertEquals("Before compaction: mob file count",compactionThreshold,countMobFiles());
  assertEquals("Before compaction: rows",compactionThreshold,countRows());
  assertEquals("Before compaction: mob rows",compactionThreshold,countMobRows());
  region.getTableDesc().getFamily(COLUMN_FAMILY).setValue(MobConstants.MOB_THRESHOLD,Bytes.toBytes(500L));
  region.initialize();
  region.compactStores();
  assertEquals("After compaction: store files",1,countStoreFiles());
  assertEquals("After compaction: mob file count",compactionThreshold,countMobFiles());
  assertEquals("After compaction: referenced mob file count",0,countReferencedMobFiles());
  assertEquals("After compaction: rows",compactionThreshold,countRows());
  assertEquals("After compaction: mob rows",0,countMobRows());
}
