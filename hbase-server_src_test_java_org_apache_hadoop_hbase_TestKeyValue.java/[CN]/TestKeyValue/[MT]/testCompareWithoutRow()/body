{
  final KeyValue.KeyComparator c=KeyValue.KEY_COMPARATOR;
  byte[] row=Bytes.toBytes("row");
  byte[] fa=Bytes.toBytes("fa");
  byte[] fami=Bytes.toBytes("fami");
  byte[] fami1=Bytes.toBytes("fami1");
  byte[] qual0=Bytes.toBytes("");
  byte[] qual1=Bytes.toBytes("qf1");
  byte[] qual2=Bytes.toBytes("qf2");
  long ts=1;
  KeyValue kv_0=new KeyValue(row,fa,qual0,ts,Type.Put);
  KeyValue kv0_0=new KeyValue(row,fami,qual0,ts,Type.Put);
  KeyValue kv0_1=new KeyValue(row,fami,qual1,ts,Type.Put);
  KeyValue kv0_2=new KeyValue(row,fami,qual2,ts,Type.Put);
  KeyValue kv1_0=new KeyValue(row,fami1,qual0,ts,Type.Put);
  assertKVLessWithoutRow(c,0,kv0_1,kv0_2);
  assertKVLessWithoutRow(c,0,kv0_1,kv1_0);
  int commonLength=KeyValue.ROW_LENGTH_SIZE + KeyValue.FAMILY_LENGTH_SIZE + row.length;
  assertKVLessWithoutRow(c,commonLength + 2,kv_0,kv0_0);
  assertKVLessWithoutRow(c,commonLength + 4,kv0_0,kv0_1);
  assertKVLessWithoutRow(c,commonLength + 4,kv0_1,kv1_0);
  assertKVLessWithoutRow(c,commonLength + 6,kv0_1,kv0_2);
}
