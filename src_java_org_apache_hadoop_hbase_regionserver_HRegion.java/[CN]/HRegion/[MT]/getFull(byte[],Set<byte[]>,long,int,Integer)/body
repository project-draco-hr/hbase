{
  if (columns != null) {
    for (    byte[] column : columns) {
      checkColumn(column);
    }
  }
  HStoreKey key=new HStoreKey(row,ts,this.regionInfo);
  Integer lid=getLock(lockid,row);
  HashSet<HStore> storeSet=new HashSet<HStore>();
  try {
    HbaseMapWritable<byte[],Cell> result=new HbaseMapWritable<byte[],Cell>();
    if (columns != null) {
      for (      byte[] bs : columns) {
        HStore store=stores.get(Bytes.mapKey(HStoreKey.getFamily(bs)));
        if (store != null) {
          storeSet.add(store);
        }
      }
    }
 else {
      storeSet.addAll(stores.values());
    }
    if (columns != null) {
      for (      byte[] bs : columns) {
        if (HStoreKey.getFamilyDelimiterIndex(bs) == (bs.length - 1)) {
          HStore store=stores.get(Bytes.mapKey(HStoreKey.getFamily(bs)));
          store.getFull(key,null,numVersions,result);
          storeSet.remove(store);
        }
      }
    }
    for (    HStore targetStore : storeSet) {
      targetStore.getFull(key,columns,numVersions,result);
    }
    return result;
  }
  finally {
    if (lockid == null)     releaseRowLock(lid);
  }
}
