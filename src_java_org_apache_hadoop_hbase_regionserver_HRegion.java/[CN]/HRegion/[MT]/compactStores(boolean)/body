{
  byte[] midKey=null;
  if (this.closed.get()) {
    return midKey;
  }
  try {
synchronized (writestate) {
      if (!writestate.compacting && writestate.writesEnabled) {
        writestate.compacting=true;
      }
 else {
        LOG.info("NOT compacting region " + this + ": compacting="+ writestate.compacting+ ", writesEnabled="+ writestate.writesEnabled);
        return midKey;
      }
    }
    LOG.info("starting compaction on region " + this);
    long startTime=System.currentTimeMillis();
    doRegionCompactionPrep();
    for (    HStore store : stores.values()) {
      final byte[] key=store.compact(force);
      if (key != null && midKey == null) {
        midKey=key;
      }
    }
    doRegionCompactionCleanup();
    LOG.info("compaction completed on region " + this + " in "+ StringUtils.formatTimeDiff(System.currentTimeMillis(),startTime));
  }
  finally {
synchronized (writestate) {
      writestate.compacting=false;
      writestate.notifyAll();
    }
  }
  return midKey;
}
