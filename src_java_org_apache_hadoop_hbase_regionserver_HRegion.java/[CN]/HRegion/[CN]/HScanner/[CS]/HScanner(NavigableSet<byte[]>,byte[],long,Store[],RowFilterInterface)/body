{
  this.filter=filter;
  this.scanners=new InternalScanner[stores.length];
  try {
    for (int i=0; i < stores.length; i++) {
      NavigableSet<byte[]> columnSubset=new TreeSet<byte[]>(Bytes.BYTES_COMPARATOR);
      for (      byte[] c : columns) {
        if (KeyValue.FAMILY_COMPARATOR.compare(stores[i].storeName,c) == 0) {
          columnSubset.add(c);
        }
      }
      RowFilterInterface f=filter;
      if (f != null) {
        f=WritableUtils.clone(filter,conf);
      }
      scanners[i]=stores[i].getScanner(timestamp,columnSubset,firstRow,f);
    }
  }
 catch (  IOException e) {
    for (int i=0; i < this.scanners.length; i++) {
      if (scanners[i] != null) {
        closeScanner(i);
      }
    }
    throw e;
  }
  this.resultSets=new List[scanners.length];
  for (int i=0; i < scanners.length; i++) {
    resultSets[i]=new ArrayList<KeyValue>();
    if (scanners[i] != null && !scanners[i].next(resultSets[i])) {
      closeScanner(i);
    }
  }
  activeScannerCount.incrementAndGet();
}
