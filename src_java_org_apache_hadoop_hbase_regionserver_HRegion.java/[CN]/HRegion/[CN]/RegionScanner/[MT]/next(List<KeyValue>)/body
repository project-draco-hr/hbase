{
  if (closing.get() || closed.get()) {
    close();
    throw new NotServingRegionException(regionInfo.getRegionNameAsString() + " is closing=" + closing.get()+ " or closed="+ closed.get());
  }
  KeyValue kv=this.storeHeap.peek();
  if (kv == null) {
    return false;
  }
  byte[] currentRow=kv.getRow();
  if (stopRow != null && comparator.compareRows(stopRow,0,stopRow.length,currentRow,0,currentRow.length) <= 0) {
    return false;
  }
  this.storeHeap.next(results);
  while (true) {
    kv=this.storeHeap.peek();
    if (kv == null) {
      return false;
    }
    byte[] row=kv.getRow();
    if (!Bytes.equals(currentRow,row)) {
      if (results.isEmpty()) {
        currentRow=row;
        if (stopRow != null && comparator.compareRows(stopRow,0,stopRow.length,currentRow,0,currentRow.length) <= 0) {
          return false;
        }
        continue;
      }
      return true;
    }
    this.storeHeap.next(results);
  }
}
