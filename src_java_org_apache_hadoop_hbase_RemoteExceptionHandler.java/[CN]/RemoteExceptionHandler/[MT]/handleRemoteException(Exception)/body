{
  Exception ex=e;
  if (e instanceof RemoteException) {
    RemoteException r=(RemoteException)e;
    Class c=null;
    try {
      c=Class.forName(r.getClassName());
    }
 catch (    ClassNotFoundException x) {
      throw r;
    }
    Constructor ctor=null;
    try {
      Class[] parameterTypes={String.class};
      ctor=c.getConstructor(parameterTypes);
    }
 catch (    NoSuchMethodException x) {
      throw r;
    }
    try {
      Object[] arguments={r.getMessage()};
      ex=(Exception)ctor.newInstance(arguments);
    }
 catch (    IllegalAccessException x) {
      throw r;
    }
catch (    InvocationTargetException x) {
      throw r;
    }
catch (    InstantiationException x) {
      throw r;
    }
  }
  if (ex instanceof IOException) {
    IOException io=(IOException)ex;
    throw io;
  }
 else   if (ex instanceof RuntimeException) {
    RuntimeException re=(RuntimeException)ex;
    throw re;
  }
 else {
    AssertionError a=new AssertionError("unexpected exception");
    a.initCause(ex);
    throw a;
  }
}
