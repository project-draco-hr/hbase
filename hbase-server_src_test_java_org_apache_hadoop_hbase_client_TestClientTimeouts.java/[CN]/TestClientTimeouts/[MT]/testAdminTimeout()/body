{
  long lastLimit=HConstants.DEFAULT_HBASE_CLIENT_PREFETCH_LIMIT;
  HConnection lastConnection=null;
  boolean lastFailed=false;
  int initialInvocations=RandomTimeoutRpcEngine.getNumberOfInvocations();
  RandomTimeoutRpcEngine engine=new RandomTimeoutRpcEngine(TEST_UTIL.getConfiguration());
  try {
    for (int i=0; i < 5 || (lastFailed && i < 100); ++i) {
      lastFailed=false;
      Configuration conf=HBaseConfiguration.create(TEST_UTIL.getConfiguration());
      conf.setLong(HConstants.HBASE_CLIENT_PREFETCH_LIMIT,++lastLimit);
      try {
        HBaseAdmin admin=new HBaseAdmin(conf);
        HConnection connection=admin.getConnection();
        assertFalse(connection == lastConnection);
        lastConnection=connection;
        ((HConnectionManager.HConnectionImplementation)connection).setRpcEngine(engine);
        HBaseAdmin.checkHBaseAvailable(conf);
        admin.setBalancerRunning(false,false);
      }
 catch (      MasterNotRunningException ex) {
        lastFailed=true;
      }
    }
    assertFalse(lastFailed);
    assertTrue(RandomTimeoutRpcEngine.getNumberOfInvocations() > initialInvocations);
  }
  finally {
    engine.close();
  }
}
