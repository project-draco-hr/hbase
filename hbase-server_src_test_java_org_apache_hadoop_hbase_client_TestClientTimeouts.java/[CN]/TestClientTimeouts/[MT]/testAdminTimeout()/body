{
  boolean lastFailed=false;
  int initialInvocations=RandomTimeoutBlockingRpcChannel.invokations.get();
  RandomTimeoutRpcClient rpcClient=(RandomTimeoutRpcClient)RpcClientFactory.createClient(TEST_UTIL.getConfiguration(),TEST_UTIL.getClusterKey());
  try {
    for (int i=0; i < 5 || (lastFailed && i < 100); ++i) {
      lastFailed=false;
      Configuration conf=HBaseConfiguration.create(TEST_UTIL.getConfiguration());
      conf.set(HConstants.HBASE_CLIENT_INSTANCE_ID,String.valueOf(-1));
      Admin admin=null;
      Connection connection=null;
      try {
        connection=ConnectionFactory.createConnection(conf);
        admin=connection.getAdmin();
        HBaseAdmin.available(conf);
        admin.setBalancerRunning(false,false);
      }
 catch (      MasterNotRunningException ex) {
        lastFailed=true;
      }
 finally {
        if (admin != null) {
          admin.close();
          if (admin.getConnection().isClosed()) {
            rpcClient=(RandomTimeoutRpcClient)RpcClientFactory.createClient(TEST_UTIL.getConfiguration(),TEST_UTIL.getClusterKey());
          }
        }
        if (connection != null) {
          connection.close();
        }
      }
    }
    assertFalse(lastFailed);
    assertTrue(RandomTimeoutBlockingRpcChannel.invokations.get() > initialInvocations);
  }
  finally {
    rpcClient.close();
  }
}
