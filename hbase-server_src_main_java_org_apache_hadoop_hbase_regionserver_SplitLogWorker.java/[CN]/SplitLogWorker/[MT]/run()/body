{
  try {
    LOG.info("SplitLogWorker " + this.serverName + " starting");
    this.watcher.registerListener(this);
    boolean distributedLogReplay=this.conf.getBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY,HConstants.DEFAULT_DISTRIBUTED_LOG_REPLAY_CONFIG);
    if (distributedLogReplay) {
      HConnectionManager.getConnection(conf);
    }
    int res=-1;
    while (res == -1 && !exitWorker) {
      try {
        res=ZKUtil.checkExists(watcher,watcher.splitLogZNode);
      }
 catch (      KeeperException e) {
        LOG.warn("Exception when checking for " + watcher.splitLogZNode + " ... retrying",e);
      }
      if (res == -1) {
        try {
          LOG.info(watcher.splitLogZNode + " znode does not exist, waiting for master to create");
          Thread.sleep(1000);
        }
 catch (        InterruptedException e) {
          LOG.debug("Interrupted while waiting for " + watcher.splitLogZNode + (exitWorker ? "" : " (ERROR: exitWorker is not set, " + "exiting anyway)"));
          exitWorker=true;
          break;
        }
      }
    }
    if (!exitWorker) {
      taskLoop();
    }
  }
 catch (  Throwable t) {
    LOG.error("unexpected error ",t);
  }
 finally {
    LOG.info("SplitLogWorker " + this.serverName + " exiting");
  }
}
