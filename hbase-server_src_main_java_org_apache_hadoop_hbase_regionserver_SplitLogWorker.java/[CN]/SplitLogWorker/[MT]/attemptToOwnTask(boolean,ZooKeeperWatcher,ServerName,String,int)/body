{
  int latestZKVersion=FAILED_TO_OWN_TASK;
  try {
    SplitLogTask slt=new SplitLogTask.Owned(server);
    Stat stat=zkw.getRecoverableZooKeeper().setData(task,slt.toByteArray(),taskZKVersion);
    if (stat == null) {
      LOG.warn("zk.setData() returned null for path " + task);
      SplitLogCounters.tot_wkr_task_heartbeat_failed.incrementAndGet();
      return FAILED_TO_OWN_TASK;
    }
    latestZKVersion=stat.getVersion();
    SplitLogCounters.tot_wkr_task_heartbeat.incrementAndGet();
    return latestZKVersion;
  }
 catch (  KeeperException e) {
    if (!isFirstTime) {
      if (e.code().equals(KeeperException.Code.NONODE)) {
        LOG.warn("NONODE failed to assert ownership for " + task,e);
      }
 else       if (e.code().equals(KeeperException.Code.BADVERSION)) {
        LOG.warn("BADVERSION failed to assert ownership for " + task,e);
      }
 else {
        LOG.warn("failed to assert ownership for " + task,e);
      }
    }
  }
catch (  InterruptedException e1) {
    LOG.warn("Interrupted while trying to assert ownership of " + task + " "+ StringUtils.stringifyException(e1));
    Thread.currentThread().interrupt();
  }
  SplitLogCounters.tot_wkr_task_heartbeat_failed.incrementAndGet();
  return FAILED_TO_OWN_TASK;
}
