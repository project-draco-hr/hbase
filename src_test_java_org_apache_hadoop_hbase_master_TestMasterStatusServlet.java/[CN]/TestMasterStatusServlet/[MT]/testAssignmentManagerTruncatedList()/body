{
  AssignmentManager am=Mockito.mock(AssignmentManager.class);
  NavigableMap<String,RegionState> regionsInTransition=Maps.newTreeMap();
  for (byte i=0; i < 100; i++) {
    HRegionInfo hri=new HRegionInfo(FAKE_TABLE.getName(),new byte[]{i},new byte[]{(byte)(i + 1)});
    regionsInTransition.put(hri.getEncodedName(),new RegionState(hri,RegionState.State.CLOSING,12345L,FAKE_HOST));
  }
  regionsInTransition.put(HRegionInfo.FIRST_META_REGIONINFO.getEncodedName(),new RegionState(HRegionInfo.FIRST_META_REGIONINFO,RegionState.State.CLOSING,12345L,FAKE_HOST));
  Mockito.doReturn(regionsInTransition).when(am).getRegionsInTransition();
  StringWriter sw=new StringWriter();
  new AssignmentManagerStatusTmpl().setLimit(50).render(sw,am);
  String result=sw.toString();
  assertTrue(result.contains(HRegionInfo.FIRST_META_REGIONINFO.getEncodedName()));
  Matcher matcher=Pattern.compile("CLOSING").matcher(result);
  int count=0;
  while (matcher.find()) {
    count++;
  }
  assertEquals(50,count);
}
