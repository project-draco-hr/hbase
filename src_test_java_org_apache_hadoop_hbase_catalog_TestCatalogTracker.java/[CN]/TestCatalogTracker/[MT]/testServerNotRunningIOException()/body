{
  final HRegionInterface implementation=Mockito.mock(HRegionInterface.class);
  HConnection connection=mockConnection(implementation);
  try {
    Mockito.when(implementation.getRegionInfo((byte[])Mockito.any())).thenThrow(new IOException("Server not running, aborting")).thenReturn(new HRegionInfo());
    Mockito.when(connection.getRegionServerWithRetries((ServerCallable<Result>)Mockito.any())).thenReturn(getMetaTableRowResult());
    final CatalogTracker ct=constructAndStartCatalogTracker(connection);
    try {
      RootRegionTracker.setRootLocation(this.watcher,SN);
      ct.setMetaLocation(SN);
      final AtomicBoolean metaSet=new AtomicBoolean(false);
      Thread t=new Thread(){
        @Override public void run(){
          try {
            metaSet.set(ct.waitForMetaServerConnectionDefault() != null);
          }
 catch (          NotAllMetaRegionsOnlineException e) {
            throw new RuntimeException(e);
          }
catch (          IOException e) {
            throw new RuntimeException(e);
          }
        }
      }
;
      t.start();
      while (!t.isAlive())       Threads.sleep(1);
      Threads.sleep(1);
      ct.setMetaLocation(SN);
      t.join();
      Assert.assertTrue(metaSet.get());
    }
  finally {
      ct.resetMetaLocation();
      RootRegionTracker.deleteRootLocation(this.watcher);
    }
  }
  finally {
    HConnectionManager.deleteConnection(UTIL.getConfiguration(),true);
  }
}
