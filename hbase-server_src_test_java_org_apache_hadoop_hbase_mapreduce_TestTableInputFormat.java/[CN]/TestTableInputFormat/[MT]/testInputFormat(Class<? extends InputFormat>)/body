{
  final Job job=MapreduceTestingShim.createJob(UTIL.getConfiguration());
  job.setInputFormatClass(clazz);
  job.setOutputFormatClass(NullOutputFormat.class);
  job.setMapperClass(ExampleVerifier.class);
  job.setNumReduceTasks(0);
  LOG.debug("submitting job.");
  assertTrue("job failed!",job.waitForCompletion(true));
  assertEquals("Saw the wrong number of instances of the filtered-for row.",2,job.getCounters().findCounter(TestTableInputFormat.class.getName() + ":row","aaa").getValue());
  assertEquals("Saw any instances of the filtered out row.",0,job.getCounters().findCounter(TestTableInputFormat.class.getName() + ":row","bbb").getValue());
  assertEquals("Saw the wrong number of instances of columnA.",1,job.getCounters().findCounter(TestTableInputFormat.class.getName() + ":family","columnA").getValue());
  assertEquals("Saw the wrong number of instances of columnB.",1,job.getCounters().findCounter(TestTableInputFormat.class.getName() + ":family","columnB").getValue());
  assertEquals("Saw the wrong count of values for the filtered-for row.",2,job.getCounters().findCounter(TestTableInputFormat.class.getName() + ":value","value aaa").getValue());
  assertEquals("Saw the wrong count of values for the filtered-out row.",0,job.getCounters().findCounter(TestTableInputFormat.class.getName() + ":value","value bbb").getValue());
}
