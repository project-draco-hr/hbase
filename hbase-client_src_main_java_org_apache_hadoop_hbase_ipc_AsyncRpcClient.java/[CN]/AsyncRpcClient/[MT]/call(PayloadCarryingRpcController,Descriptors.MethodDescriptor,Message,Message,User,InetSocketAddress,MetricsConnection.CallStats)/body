{
  if (pcrc == null) {
    pcrc=new PayloadCarryingRpcController();
  }
  final AsyncRpcChannel connection=createRpcChannel(md.getService().getName(),addr,ticket);
  Promise<Message> promise=connection.callMethod(md,pcrc,param,returnType,callStats);
  long timeout=pcrc.hasCallTimeout() ? pcrc.getCallTimeout() : 0;
  try {
    Message response=timeout > 0 ? promise.get(timeout,TimeUnit.MILLISECONDS) : promise.get();
    return new Pair<>(response,pcrc.cellScanner());
  }
 catch (  ExecutionException e) {
    throw wrapException(addr,e);
  }
catch (  TimeoutException e) {
    CallTimeoutException cte=new CallTimeoutException(promise.toString());
    throw wrapException(addr,cte);
  }
}
