{
  if (pcrc == null) {
    pcrc=new PayloadCarryingRpcController();
  }
  final AsyncRpcChannel connection=createRpcChannel(md.getService().getName(),addr,ticket);
  Promise<Message> promise=connection.callMethod(md,pcrc,param,returnType,callStats);
  long timeout=pcrc.hasCallTimeout() ? pcrc.getCallTimeout() : 0;
  try {
    Message response=timeout > 0 ? promise.get(timeout,TimeUnit.MILLISECONDS) : promise.get();
    return new Pair<>(response,pcrc.cellScanner());
  }
 catch (  ExecutionException e) {
    if (e.getCause() instanceof IOException) {
      throw (IOException)e.getCause();
    }
 else {
      throw new IOException(e.getCause());
    }
  }
catch (  TimeoutException e) {
    throw new CallTimeoutException(promise.toString());
  }
}
