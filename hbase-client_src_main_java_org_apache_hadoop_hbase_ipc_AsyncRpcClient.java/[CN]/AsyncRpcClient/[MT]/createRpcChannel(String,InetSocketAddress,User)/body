{
  if (this.failedServers.isFailedServer(location)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Not trying to connect to " + location + " this server is in the failed servers list");
    }
    throw new FailedServerException("This server is in the failed servers list: " + location);
  }
  int hashCode=ConnectionId.hashCode(ticket,serviceName,location);
  AsyncRpcChannel rpcChannel;
synchronized (connections) {
    if (closed) {
      throw new StoppedRpcClientException();
    }
    rpcChannel=connections.get(hashCode);
    if (rpcChannel == null || !rpcChannel.isAlive()) {
      rpcChannel=new AsyncRpcChannel(this.bootstrap,this,ticket,serviceName,location);
      connections.put(hashCode,rpcChannel);
    }
  }
  return rpcChannel;
}
