{
  LOG.info("testLogFilesAreArchived");
  final SplitLogManager slm=new SplitLogManager(ds,conf,stopper,master,DUMMY_MASTER);
  FileSystem fs=TEST_UTIL.getTestFileSystem();
  Path dir=TEST_UTIL.getDataTestDirOnTestFS("testLogFilesAreArchived");
  conf.set(HConstants.HBASE_DIR,dir.toString());
  Path logDirPath=new Path(dir,UUID.randomUUID().toString());
  fs.mkdirs(logDirPath);
  String logFile=ServerName.valueOf("foo",1,1).toString();
  fs.create(new Path(logDirPath,logFile)).close();
  new Thread(){
    @Override public void run(){
      boolean done=false;
      while (!done) {
        for (        Map.Entry<String,Task> entry : slm.getTasks().entrySet()) {
          final ServerName worker1=ServerName.valueOf("worker1,1,1");
          SplitLogTask slt=new SplitLogTask.Done(worker1,RecoveryMode.LOG_SPLITTING);
          try {
            ZKUtil.setData(zkw,entry.getKey(),slt.toByteArray());
          }
 catch (          KeeperException e) {
            LOG.warn(e);
          }
          done=true;
        }
      }
    }
  }
.start();
  slm.splitLogDistributed(logDirPath);
  assertFalse(fs.exists(logDirPath));
}
