{
  TEST_UTIL=new HBaseTestingUtility();
  TEST_UTIL.startMiniZKCluster();
  conf=TEST_UTIL.getConfiguration();
  zkw=new ZooKeeperWatcher(conf,"split-log-manager-tests" + UUID.randomUUID().toString(),null);
  master=new DummyMasterServices(zkw,conf);
  ZKUtil.deleteChildrenRecursively(zkw,zkw.znodePaths.baseZNode);
  ZKUtil.createAndFailSilent(zkw,zkw.znodePaths.baseZNode);
  assertTrue(ZKUtil.checkExists(zkw,zkw.znodePaths.baseZNode) != -1);
  LOG.debug(zkw.znodePaths.baseZNode + " created");
  ZKUtil.createAndFailSilent(zkw,zkw.znodePaths.splitLogZNode);
  assertTrue(ZKUtil.checkExists(zkw,zkw.znodePaths.splitLogZNode) != -1);
  LOG.debug(zkw.znodePaths.splitLogZNode + " created");
  resetCounters();
  Mockito.when(sm.isServerOnline(Mockito.any(ServerName.class))).thenReturn(true);
  to=12000;
  conf.setInt(HConstants.HBASE_SPLITLOG_MANAGER_TIMEOUT,to);
  conf.setInt("hbase.splitlog.manager.unassigned.timeout",2 * to);
  conf.setInt("hbase.splitlog.manager.timeoutmonitor.period",100);
  to=to + 16 * 100;
  this.mode=(conf.getBoolean(HConstants.DISTRIBUTED_LOG_REPLAY_KEY,false) ? RecoveryMode.LOG_REPLAY : RecoveryMode.LOG_SPLITTING);
}
