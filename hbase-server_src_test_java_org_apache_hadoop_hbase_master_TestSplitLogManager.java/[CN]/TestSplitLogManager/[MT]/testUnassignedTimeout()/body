{
  LOG.info("TestUnassignedTimeout - iff all tasks are unassigned then" + " resubmit");
  String tasknode1=ZKSplitLog.getEncodedNodeName(zkw,"orphan/1");
  final ServerName worker1=new ServerName("worker1,1,1");
  SplitLogTask slt=new SplitLogTask.Owned(worker1);
  zkw.getRecoverableZooKeeper().create(tasknode1,slt.toByteArray(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  int to=1000;
  conf.setInt("hbase.splitlog.manager.timeout",to);
  conf.setInt("hbase.splitlog.manager.unassigned.timeout",2 * to);
  conf.setInt("hbase.splitlog.manager.timeoutmonitor.period",100);
  slm=new SplitLogManager(zkw,conf,stopper,master,DUMMY_MASTER,null);
  slm.finishInitialization();
  waitForCounter(tot_mgr_orphan_task_acquired,0,1,100);
  TaskBatch batch=new TaskBatch();
  submitTaskAndWait(batch,"foo/1");
  for (int i=0; i < (3 * to) / 100; i++) {
    Thread.sleep(100);
    final ServerName worker2=new ServerName("worker1,1,1");
    slt=new SplitLogTask.Owned(worker2);
    ZKUtil.setData(zkw,tasknode1,slt.toByteArray());
  }
  LOG.info("waiting for manager to resubmit the orphan task");
  waitForCounter(tot_mgr_resubmit,0,1,to + 500);
  waitForCounter(tot_mgr_resubmit_unassigned,0,1,2 * to + 500);
}
