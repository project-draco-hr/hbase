{
  LOG.info("TestMultipleResbmits - no indefinite resubmissions");
  conf.setInt("hbase.splitlog.max.resubmit",2);
  slm=new SplitLogManager(zkw,conf,stopper,master,DUMMY_MASTER);
  TaskBatch batch=new TaskBatch();
  String tasknode=submitTaskAndWait(batch,"foo/1");
  int version=ZKUtil.checkExists(zkw,tasknode);
  final ServerName worker1=new ServerName("worker1,1,1");
  final ServerName worker2=new ServerName("worker2,1,1");
  final ServerName worker3=new ServerName("worker3,1,1");
  SplitLogTask slt=new SplitLogTask.Owned(worker1);
  ZKUtil.setData(zkw,tasknode,slt.toByteArray());
  waitForCounter(tot_mgr_heartbeat,0,1,to / 2);
  waitForCounter(tot_mgr_resubmit,0,1,to + to / 2);
  int version1=ZKUtil.checkExists(zkw,tasknode);
  assertTrue(version1 > version);
  slt=new SplitLogTask.Owned(worker2);
  ZKUtil.setData(zkw,tasknode,slt.toByteArray());
  waitForCounter(tot_mgr_heartbeat,1,2,to / 2);
  waitForCounter(tot_mgr_resubmit,1,2,to + to / 2);
  int version2=ZKUtil.checkExists(zkw,tasknode);
  assertTrue(version2 > version1);
  slt=new SplitLogTask.Owned(worker3);
  ZKUtil.setData(zkw,tasknode,slt.toByteArray());
  waitForCounter(tot_mgr_heartbeat,1,2,to / 2);
  waitForCounter(tot_mgr_resubmit_threshold_reached,0,1,to + to / 2);
  Thread.sleep(to + to / 2);
  assertEquals(2L,tot_mgr_resubmit.get());
}
