{
  TestRpcServer rpcServer=new TestRpcServer();
  AsyncRpcClient client=createRpcClient(CONF);
  try {
    rpcServer.start();
    InetSocketAddress address=rpcServer.getListenerAddress();
    MethodDescriptor md=SERVICE.getDescriptorForType().findMethodByName("echo");
    EchoRequestProto param=EchoRequestProto.newBuilder().setMessage("hello").build();
    RpcChannel channel=client.createRpcChannel(ServerName.valueOf(address.getHostName(),address.getPort(),System.currentTimeMillis()),User.getCurrent(),0);
    final AtomicBoolean done=new AtomicBoolean(false);
    channel.callMethod(md,new PayloadCarryingRpcController(),param,md.getOutputType().toProto(),new RpcCallback<Message>(){
      @Override public void run(      Message parameter){
        done.set(true);
      }
    }
);
    TEST_UTIL.waitFor(1000,new Waiter.Predicate<Exception>(){
      @Override public boolean evaluate() throws Exception {
        return done.get();
      }
    }
);
  }
  finally {
    client.close();
    rpcServer.stop();
  }
}
