{
  try (HTable table=(HTable)util.getConnection().getTable(TEST_TABLE)){
    RegionLocator locator=table.getRegionLocator();
    Map<byte[],String> results=table.coprocessorService(PingProtos.PingService.class,null,ROW_A,new Batch.Call<PingProtos.PingService,String>(){
      @Override public String call(      PingProtos.PingService instance) throws IOException {
        BlockingRpcCallback<PingProtos.PingResponse> rpcCallback=new BlockingRpcCallback<PingProtos.PingResponse>();
        instance.ping(null,PingProtos.PingRequest.newBuilder().build(),rpcCallback);
        return rpcCallback.get().getPong();
      }
    }
);
    assertEquals(1,results.size());
    verifyRegionResults(locator,results,ROW_A);
    final String name="NAME";
    results=hello(table,name,null,ROW_A);
    assertEquals(1,results.size());
    verifyRegionResults(locator,results,"Hello, NAME",ROW_A);
  }
 }
