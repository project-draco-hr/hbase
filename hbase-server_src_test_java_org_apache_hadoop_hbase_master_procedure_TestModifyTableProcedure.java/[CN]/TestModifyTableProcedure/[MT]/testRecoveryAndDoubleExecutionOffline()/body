{
  final TableName tableName=TableName.valueOf("testRecoveryAndDoubleExecutionOffline");
  final String cf2="cf2";
  final String cf3="cf3";
  final ProcedureExecutor<MasterProcedureEnv> procExec=getMasterProcedureExecutor();
  HRegionInfo[] regions=MasterProcedureTestingUtility.createTable(procExec,tableName,null,"cf1",cf3);
  UTIL.getHBaseAdmin().disableTable(tableName);
  ProcedureTestingUtility.waitNoProcedureRunning(procExec);
  ProcedureTestingUtility.setKillAndToggleBeforeStoreUpdate(procExec,true);
  HTableDescriptor htd=new HTableDescriptor(UTIL.getHBaseAdmin().getTableDescriptor(tableName));
  boolean newCompactionEnableOption=htd.isCompactionEnabled() ? false : true;
  htd.setCompactionEnabled(newCompactionEnableOption);
  htd.addFamily(new HColumnDescriptor(cf2));
  htd.removeFamily(cf3.getBytes());
  htd.setRegionReplication(3);
  long procId=procExec.submitProcedure(new ModifyTableProcedure(procExec.getEnvironment(),htd),nonceGroup,nonce);
  int numberOfSteps=ModifyTableState.values().length;
  MasterProcedureTestingUtility.testRecoveryAndDoubleExecution(procExec,procId,numberOfSteps,ModifyTableState.values());
  HTableDescriptor currentHtd=UTIL.getHBaseAdmin().getTableDescriptor(tableName);
  assertEquals(newCompactionEnableOption,currentHtd.isCompactionEnabled());
  assertEquals(2,currentHtd.getFamiliesKeys().size());
  MasterProcedureTestingUtility.validateTableCreation(UTIL.getHBaseCluster().getMaster(),tableName,regions,false,"cf1",cf2);
}
