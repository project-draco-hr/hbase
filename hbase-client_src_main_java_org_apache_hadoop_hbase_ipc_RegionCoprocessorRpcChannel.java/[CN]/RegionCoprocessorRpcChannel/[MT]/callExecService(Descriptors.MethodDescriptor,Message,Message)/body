{
  if (LOG.isTraceEnabled()) {
    LOG.trace("Call: " + method.getName() + ", "+ request.toString());
  }
  if (row == null) {
    throw new IllegalArgumentException("Missing row property for remote region location");
  }
  final ClientProtos.CoprocessorServiceCall call=ClientProtos.CoprocessorServiceCall.newBuilder().setRow(HBaseZeroCopyByteString.wrap(row)).setServiceName(method.getService().getFullName()).setMethodName(method.getName()).setRequest(request.toByteString()).build();
  RegionServerCallable<CoprocessorServiceResponse> callable=new RegionServerCallable<CoprocessorServiceResponse>(connection,table,row){
    public CoprocessorServiceResponse call() throws Exception {
      byte[] regionName=getLocation().getRegionInfo().getRegionName();
      return ProtobufUtil.execService(getStub(),call,regionName);
    }
  }
;
  CoprocessorServiceResponse result=rpcFactory.<CoprocessorServiceResponse>newCaller().callWithRetries(callable);
  Message response=null;
  if (result.getValue().hasValue()) {
    response=responsePrototype.newBuilderForType().mergeFrom(result.getValue().getValue()).build();
  }
 else {
    response=responsePrototype.getDefaultInstanceForType();
  }
  lastRegion=result.getRegion().getValue().toByteArray();
  if (LOG.isTraceEnabled()) {
    LOG.trace("Result is region=" + Bytes.toStringBinary(lastRegion) + ", value="+ response);
  }
  return response;
}
