{
  final String nonexistent="nonexistent";
  HColumnDescriptor nonexistentHcd=new HColumnDescriptor(nonexistent);
  Exception exception=null;
  try {
    this.admin.addColumn(nonexistent,nonexistentHcd);
  }
 catch (  IOException e) {
    exception=e;
  }
  assertTrue(exception instanceof TableNotFoundException);
  exception=null;
  try {
    this.admin.deleteTable(nonexistent);
  }
 catch (  IOException e) {
    exception=e;
  }
  assertTrue(exception instanceof TableNotFoundException);
  exception=null;
  try {
    this.admin.deleteColumn(nonexistent,nonexistent);
  }
 catch (  IOException e) {
    exception=e;
  }
  assertTrue(exception instanceof TableNotFoundException);
  exception=null;
  try {
    this.admin.disableTable(nonexistent);
  }
 catch (  IOException e) {
    exception=e;
  }
  assertTrue(exception instanceof TableNotFoundException);
  exception=null;
  try {
    this.admin.enableTable(nonexistent);
  }
 catch (  IOException e) {
    exception=e;
  }
  assertTrue(exception instanceof TableNotFoundException);
  exception=null;
  try {
    this.admin.modifyColumn(nonexistent,nonexistentHcd);
  }
 catch (  IOException e) {
    exception=e;
  }
  assertTrue(exception instanceof TableNotFoundException);
  exception=null;
  try {
    HTableDescriptor htd=new HTableDescriptor(nonexistent);
    this.admin.modifyTable(htd.getName(),htd);
  }
 catch (  IOException e) {
    exception=e;
  }
  assertTrue(exception instanceof TableNotFoundException);
  final String tableName="testDeleteEditUnknownColumnFamilyAndOrTable" + System.currentTimeMillis();
  HTableDescriptor htd=new HTableDescriptor(tableName);
  htd.addFamily(new HColumnDescriptor("cf"));
  this.admin.createTable(htd);
  try {
    exception=null;
    try {
      this.admin.deleteColumn(htd.getName(),nonexistentHcd.getName());
    }
 catch (    IOException e) {
      exception=e;
    }
    assertTrue("found=" + exception.getClass().getName(),exception instanceof InvalidFamilyOperationException);
    exception=null;
    try {
      this.admin.modifyColumn(htd.getName(),nonexistentHcd);
    }
 catch (    IOException e) {
      exception=e;
    }
    assertTrue("found=" + exception.getClass().getName(),exception instanceof InvalidFamilyOperationException);
  }
  finally {
    this.admin.disableTable(tableName);
    this.admin.deleteTable(tableName);
  }
}
