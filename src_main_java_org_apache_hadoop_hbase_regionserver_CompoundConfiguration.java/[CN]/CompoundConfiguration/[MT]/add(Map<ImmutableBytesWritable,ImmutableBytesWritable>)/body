{
  this.configs.add(0,new ImmutableConfigMap(){
    Map<ImmutableBytesWritable,ImmutableBytesWritable> m=map;
    @Override public String get(    String key){
      ImmutableBytesWritable ibw=new ImmutableBytesWritable(Bytes.toBytes(key));
      if (!m.containsKey(ibw))       return null;
      ImmutableBytesWritable value=m.get(ibw);
      if (value == null || value.get() == null)       return null;
      return Bytes.toString(value.get());
    }
    @Override public String getRaw(    String key){
      return get(key);
    }
    @Override public Class<?> getClassByName(    String name) throws ClassNotFoundException {
      return null;
    }
    @Override public int size(){
      return m.size();
    }
    @Override public String toString(){
      return m.toString();
    }
  }
);
  return this;
}
