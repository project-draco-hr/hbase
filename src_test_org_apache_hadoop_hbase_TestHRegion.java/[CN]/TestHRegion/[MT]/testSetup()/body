{
  try {
    if (System.getProperty("test.build.data") == null) {
      String dir=new File(new File("").getAbsolutePath(),"build/contrib/hbase/test").getAbsolutePath();
      System.out.println(dir);
      System.setProperty("test.build.data",dir);
    }
    conf=new HBaseConfiguration();
    Environment.getenv();
    if (Environment.debugging) {
      Logger rootLogger=Logger.getRootLogger();
      rootLogger.setLevel(Level.WARN);
      ConsoleAppender consoleAppender=null;
      for (Enumeration<Appender> e=(Enumeration<Appender>)rootLogger.getAllAppenders(); e.hasMoreElements(); ) {
        Appender a=e.nextElement();
        if (a instanceof ConsoleAppender) {
          consoleAppender=(ConsoleAppender)a;
          break;
        }
      }
      if (consoleAppender != null) {
        Layout layout=consoleAppender.getLayout();
        if (layout instanceof PatternLayout) {
          PatternLayout consoleLayout=(PatternLayout)layout;
          consoleLayout.setConversionPattern("%d %-5p [%t] %l: %m%n");
        }
      }
      Logger.getLogger("org.apache.hadoop.hbase").setLevel(Environment.logLevel);
    }
    cluster=new MiniDFSCluster(conf,2,true,(String[])null);
    fs=cluster.getFileSystem();
    parentdir=new Path("/hbase");
    fs.mkdirs(parentdir);
    newlogdir=new Path(parentdir,"log");
    oldlogfile=new Path(parentdir,"oldlogfile");
    log=new HLog(fs,newlogdir,conf);
    desc=new HTableDescriptor("test",3);
    desc.addFamily(new Text("contents:"));
    desc.addFamily(new Text("anchor:"));
    region=new HRegion(parentdir,log,fs,conf,new HRegionInfo(1,desc,null,null),null,oldlogfile);
  }
 catch (  IOException e) {
    failures=true;
    throw e;
  }
  initialized=true;
}
