{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list244=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.rows=new ArrayList<ByteBuffer>(_list244.size);
      for (int _i245=0; _i245 < _list244.size; ++_i245) {
        ByteBuffer _elem246;
        _elem246=iprot.readBinary();
        struct.rows.add(_elem246);
      }
    }
    struct.setRowsIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list247=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list247.size);
      for (int _i248=0; _i248 < _list247.size; ++_i248) {
        ByteBuffer _elem249;
        _elem249=iprot.readBinary();
        struct.columns.add(_elem249);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map250=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map250.size);
      for (int _i251=0; _i251 < _map250.size; ++_i251) {
        ByteBuffer _key252;
        ByteBuffer _val253;
        _key252=iprot.readBinary();
        _val253=iprot.readBinary();
        struct.attributes.put(_key252,_val253);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
