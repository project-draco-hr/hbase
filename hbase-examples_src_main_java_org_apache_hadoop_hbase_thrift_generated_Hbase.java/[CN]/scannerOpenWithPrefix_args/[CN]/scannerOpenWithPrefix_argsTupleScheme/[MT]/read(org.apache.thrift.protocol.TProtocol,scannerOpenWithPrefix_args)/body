{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.startAndPrefix=iprot.readBinary();
    struct.setStartAndPrefixIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list499=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list499.size);
      for (int _i500=0; _i500 < _list499.size; ++_i500) {
        ByteBuffer _elem501;
        _elem501=iprot.readBinary();
        struct.columns.add(_elem501);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map502=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map502.size);
      for (int _i503=0; _i503 < _map502.size; ++_i503) {
        ByteBuffer _key504;
        ByteBuffer _val505;
        _key504=iprot.readBinary();
        _val505=iprot.readBinary();
        struct.attributes.put(_key504,_val505);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
