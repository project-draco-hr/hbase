{
  addRows(this.hmemcache);
  Thread.sleep(1);
  addRows(this.hmemcache);
  Thread.sleep(1);
  addRows(this.hmemcache);
  Thread.sleep(1);
  addRows(this.hmemcache);
  long now=System.currentTimeMillis();
  Map<KeyValue,Counter> versionCounter=new TreeMap<KeyValue,Counter>(this.hmemcache.comparatorIgnoreTimestamp);
  for (int i=0; i < ROW_COUNT; i++) {
    KeyValue kv=new KeyValue(getRowName(i),now);
    List<KeyValue> all=new ArrayList<KeyValue>();
    NavigableSet<KeyValue> deletes=new TreeSet<KeyValue>(KeyValue.COMPARATOR);
    this.hmemcache.getFull(kv,null,null,1,versionCounter,deletes,all,System.currentTimeMillis());
    isExpectedRowWithoutTimestamps(i,all);
  }
  versionCounter=new TreeMap<KeyValue,Counter>(this.hmemcache.comparatorIgnoreTimestamp);
  for (int i=0; i < ROW_COUNT; i++) {
    KeyValue kv=new KeyValue(getRowName(i),now);
    List<KeyValue> all=new ArrayList<KeyValue>();
    NavigableSet<KeyValue> deletes=new TreeSet<KeyValue>(KeyValue.COMPARATOR);
    this.hmemcache.getFull(kv,null,null,2,versionCounter,deletes,all,System.currentTimeMillis());
    byte[] previousRow=null;
    int count=0;
    for (    KeyValue k : all) {
      if (previousRow != null) {
        assertTrue(this.hmemcache.comparator.compareRows(k,previousRow) == 0);
      }
      previousRow=k.getRow();
      count++;
    }
    assertEquals(ROW_COUNT * 2,count);
  }
}
