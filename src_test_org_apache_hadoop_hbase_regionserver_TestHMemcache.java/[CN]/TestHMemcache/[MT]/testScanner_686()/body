{
  addRows(this.hmemcache);
  long timestamp=System.currentTimeMillis();
  NavigableSet<byte[]> cols=new TreeSet<byte[]>(Bytes.BYTES_COMPARATOR);
  for (int i=0; i < ROW_COUNT; i++) {
    for (int ii=0; ii < COLUMNS_COUNT; ii++) {
      cols.add(getColumnName(i,ii));
    }
  }
  for (int startRowId=0; startRowId < ROW_COUNT; startRowId++) {
    InternalScanner scanner=this.hmemcache.getScanner(timestamp,cols,getRowName(startRowId));
    List<KeyValue> results=new ArrayList<KeyValue>();
    for (int i=0; scanner.next(results); i++) {
      int rowId=startRowId + i;
      assertTrue("Row name",KeyValue.COMPARATOR.compareRows(results.get(0),getRowName(rowId)) == 0);
      assertEquals("Count of columns",COLUMNS_COUNT,results.size());
      List<KeyValue> row=new ArrayList<KeyValue>();
      for (      KeyValue kv : results) {
        row.add(kv);
      }
      isExpectedRowWithoutTimestamps(rowId,row);
      results.clear();
    }
  }
}
