{
  try {
    final long now=System.currentTimeMillis();
    EnvironmentEdgeManagerTestHelper.injectEdge(new EnvironmentEdge(){
      public long currentTime(){
        return now;
      }
    }
);
    KeyValue[] kvs=new KeyValue[]{new KeyValue(Bytes.toBytes("R1"),Bytes.toBytes("cf"),null,now - 100,KeyValue.Type.DeleteFamily),new KeyValue(Bytes.toBytes("R1"),Bytes.toBytes("cf"),null,now - 1000,KeyValue.Type.DeleteFamily),KeyValueTestUtil.create("R1","cf","a",now - 50,KeyValue.Type.Put,"v3"),KeyValueTestUtil.create("R1","cf","a",now - 55,KeyValue.Type.Delete,"dontcare"),KeyValueTestUtil.create("R1","cf","a",now - 55,KeyValue.Type.Put,"deleted-version v2"),KeyValueTestUtil.create("R1","cf","a",now - 60,KeyValue.Type.Put,"v1"),KeyValueTestUtil.create("R1","cf","a",now - 65,KeyValue.Type.Put,"v0"),KeyValueTestUtil.create("R1","cf","a",now - 100,KeyValue.Type.DeleteColumn,"dont-care"),KeyValueTestUtil.create("R1","cf","b",now - 600,KeyValue.Type.DeleteColumn,"dont-care"),KeyValueTestUtil.create("R1","cf","b",now - 70,KeyValue.Type.Put,"v2"),KeyValueTestUtil.create("R1","cf","b",now - 750,KeyValue.Type.Put,"v1"),KeyValueTestUtil.create("R1","cf","c",now - 500,KeyValue.Type.Delete,"dontcare"),KeyValueTestUtil.create("R1","cf","c",now - 600,KeyValue.Type.Put,"v1"),KeyValueTestUtil.create("R1","cf","c",now - 1000,KeyValue.Type.Delete,"dontcare"),KeyValueTestUtil.create("R1","cf","d",now - 60,KeyValue.Type.Put,"expired put"),KeyValueTestUtil.create("R1","cf","d",now - 100,KeyValue.Type.Delete,"not-expired delete")};
    List<KeyValueScanner> scanners=scanFixture(kvs);
    Scan scan=new Scan();
    scan.setMaxVersions(2);
    ScanInfo scanInfo=new ScanInfo(CONF,Bytes.toBytes("cf"),0,2,500,KeepDeletedCells.FALSE,200,CellComparator.COMPARATOR);
    StoreScanner scanner=new StoreScanner(scan,scanInfo,ScanType.COMPACT_DROP_DELETES,null,scanners,HConstants.OLDEST_TIMESTAMP);
    List<Cell> results=new ArrayList<Cell>();
    results=new ArrayList<Cell>();
    assertEquals(true,scanner.next(results));
    assertEquals(kvs[0],results.get(0));
    assertEquals(kvs[2],results.get(1));
    assertEquals(kvs[3],results.get(2));
    assertEquals(kvs[5],results.get(3));
    assertEquals(kvs[9],results.get(4));
    assertEquals(kvs[14],results.get(5));
    assertEquals(kvs[15],results.get(6));
    assertEquals(7,results.size());
    scanner.close();
  }
  finally {
    EnvironmentEdgeManagerTestHelper.reset();
  }
}
