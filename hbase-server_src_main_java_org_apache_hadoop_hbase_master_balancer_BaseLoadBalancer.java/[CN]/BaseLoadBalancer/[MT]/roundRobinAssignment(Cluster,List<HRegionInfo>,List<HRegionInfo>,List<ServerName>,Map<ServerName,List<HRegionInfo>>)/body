{
  int numServers=servers.size();
  int numRegions=regions.size();
  int max=(int)Math.ceil((float)numRegions / numServers);
  int serverIdx=0;
  if (numServers > 1) {
    serverIdx=RANDOM.nextInt(numServers);
  }
  int regionIdx=0;
  for (int j=0; j < numServers; j++) {
    ServerName server=servers.get((j + serverIdx) % numServers);
    List<HRegionInfo> serverRegions=new ArrayList<HRegionInfo>(max);
    for (int i=regionIdx; i < numRegions; i+=numServers) {
      HRegionInfo region=regions.get(i % numRegions);
      if (cluster.wouldLowerAvailability(region,server)) {
        unassignedRegions.add(region);
      }
 else {
        serverRegions.add(region);
        cluster.doAssignRegion(region,server);
      }
    }
    assignments.put(server,serverRegions);
    regionIdx++;
  }
}
