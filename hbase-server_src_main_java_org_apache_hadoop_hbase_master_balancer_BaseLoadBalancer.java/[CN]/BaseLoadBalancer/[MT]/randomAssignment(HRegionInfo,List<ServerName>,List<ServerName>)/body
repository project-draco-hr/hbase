{
  int numServers=servers == null ? 0 : servers.size();
  int numBackupMasters=backupMasters == null ? 0 : backupMasters.size();
  if (numServers == 0 && numBackupMasters == 0) {
    LOG.warn("Wanted to do random assignment but no servers to assign to");
    return null;
  }
  if (servers != null && shouldBeOnMaster(regionInfo) && servers.contains(masterServerName)) {
    return masterServerName;
  }
  int i=RANDOM.nextInt(numBackupMasters + numServers * backupMasterWeight);
  if (i < numBackupMasters) {
    return backupMasters.get(i);
  }
  i=(i - numBackupMasters) / backupMasterWeight;
  ServerName sn=servers.get(i);
  if (sn.equals(masterServerName)) {
    if (numServers > 1) {
      i=(i == 0 ? 1 : i - 1);
      sn=servers.get(i);
    }
 else     if (numBackupMasters > 0) {
      sn=backupMasters.get(0);
    }
  }
  return sn;
}
