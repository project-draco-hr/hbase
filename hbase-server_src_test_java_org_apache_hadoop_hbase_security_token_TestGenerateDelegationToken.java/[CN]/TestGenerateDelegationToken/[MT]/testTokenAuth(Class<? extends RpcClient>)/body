{
  TEST_UTIL.getConfiguration().set(RpcClientFactory.CUSTOM_RPC_CLIENT_IMPL_CONF_KEY,rpcImplClass.getName());
  try (Connection conn=ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());Table table=conn.getTable(TableName.META_TABLE_NAME)){
    CoprocessorRpcChannel rpcChannel=table.coprocessorService(HConstants.EMPTY_START_ROW);
    AuthenticationProtos.AuthenticationService.BlockingInterface service=AuthenticationProtos.AuthenticationService.newBlockingStub(rpcChannel);
    WhoAmIResponse response=service.whoAmI(null,WhoAmIRequest.getDefaultInstance());
    assertEquals(USERNAME,response.getUsername());
    assertEquals(AuthenticationMethod.TOKEN.name(),response.getAuthMethod());
    try {
      service.getAuthenticationToken(null,GetAuthenticationTokenRequest.getDefaultInstance());
    }
 catch (    ServiceException e) {
      AccessDeniedException exc=(AccessDeniedException)ProtobufUtil.getRemoteException(e);
      assertTrue(exc.getMessage().contains("Token generation only allowed for Kerberos authenticated clients"));
    }
  }
 }
