{
  List<byte[]> victimRegions=new LinkedList<byte[]>();
  for (  ServerName server : fromServers) {
    ServerLoad serverLoad=clusterStatus.getLoad(server);
    List<byte[]> regions=new LinkedList<byte[]>(serverLoad.getRegionsLoad().keySet());
    int victimRegionCount=(int)Math.ceil(fractionOfRegions * regions.size());
    LOG.debug("Removing " + victimRegionCount + " regions from "+ server.getServerName());
    for (int i=0; i < victimRegionCount; ++i) {
      int victimIx=random.nextInt(regions.size());
      String regionId=HRegionInfo.encodeRegionName(regions.remove(victimIx));
      victimRegions.add(Bytes.toBytes(regionId));
    }
  }
  LOG.info("Moving " + victimRegions.size() + " regions from "+ fromServers.size()+ " servers to "+ toServers.size()+ " different servers");
  HBaseAdmin admin=this.context.getHaseIntegrationTestingUtility().getHBaseAdmin();
  for (  byte[] victimRegion : victimRegions) {
    int targetIx=random.nextInt(toServers.size());
    admin.move(victimRegion,Bytes.toBytes(toServers.get(targetIx).getServerName()));
  }
}
