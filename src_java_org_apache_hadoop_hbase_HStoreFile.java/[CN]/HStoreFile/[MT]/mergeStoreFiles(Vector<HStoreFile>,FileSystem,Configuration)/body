{
  MapFile.Writer out=new MapFile.Writer(conf,fs,getMapFilePath().toString(),HStoreKey.class,ImmutableBytesWritable.class);
  try {
    for (    HStoreFile src : srcFiles) {
      MapFile.Reader in=new MapFile.Reader(fs,src.getMapFilePath().toString(),conf);
      try {
        HStoreKey readkey=new HStoreKey();
        ImmutableBytesWritable readval=new ImmutableBytesWritable();
        while (in.next(readkey,readval)) {
          out.append(readkey,readval);
        }
      }
  finally {
        in.close();
      }
    }
  }
  finally {
    out.close();
  }
  long unifiedSeqId=-1;
  for (Iterator<HStoreFile> it=srcFiles.iterator(); it.hasNext(); ) {
    HStoreFile hsf=it.next();
    long curSeqId=hsf.loadInfo(fs);
    if (curSeqId > unifiedSeqId) {
      unifiedSeqId=curSeqId;
    }
  }
  writeInfo(fs,unifiedSeqId);
}
