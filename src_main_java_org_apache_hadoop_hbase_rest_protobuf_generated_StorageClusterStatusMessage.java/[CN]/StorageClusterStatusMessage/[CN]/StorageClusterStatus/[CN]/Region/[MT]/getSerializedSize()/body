{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,name_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(2,stores_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(3,storefiles_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(4,storefileSizeMB_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(5,memstoreSizeMB_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(6,storefileIndexSizeMB_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(7,readRequestsCount_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(8,writeRequestsCount_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(9,rootIndexSizeKB_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(10,totalStaticIndexSizeKB_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(11,totalStaticBloomSizeKB_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(12,totalCompactingKVs_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(13,currentCompactedKVs_);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
