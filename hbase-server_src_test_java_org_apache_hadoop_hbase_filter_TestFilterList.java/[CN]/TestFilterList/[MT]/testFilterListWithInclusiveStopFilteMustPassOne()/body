{
  byte[] r1=Bytes.toBytes("Row1");
  byte[] r11=Bytes.toBytes("Row11");
  byte[] r2=Bytes.toBytes("Row2");
  FilterList flist=new FilterList(FilterList.Operator.MUST_PASS_ONE);
  flist.addFilter(new AlwaysNextColFilter());
  flist.addFilter(new InclusiveStopFilter(r1));
  flist.filterRowKey(KeyValueUtil.createFirstOnRow(r1));
  assertEquals(flist.filterKeyValue(new KeyValue(r1,r1,r1)),ReturnCode.INCLUDE);
  assertEquals(flist.filterKeyValue(new KeyValue(r11,r11,r11)),ReturnCode.INCLUDE);
  flist.reset();
  flist.filterRowKey(KeyValueUtil.createFirstOnRow(r2));
  assertEquals(flist.filterKeyValue(new KeyValue(r2,r2,r2)),ReturnCode.SKIP);
}
