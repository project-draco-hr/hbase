{
  TableName tableName=TableName.valueOf("testtb");
  queue.addBack(new TestTableProcedure(1,tableName,TableProcedureInterface.TableOperationType.EDIT));
  queue.addBack(new TestTableProcedure(2,tableName,TableProcedureInterface.TableOperationType.READ));
  queue.addBack(new TestTableProcedure(3,tableName,TableProcedureInterface.TableOperationType.EDIT));
  queue.addBack(new TestTableProcedure(4,tableName,TableProcedureInterface.TableOperationType.READ));
  queue.addBack(new TestTableProcedure(5,tableName,TableProcedureInterface.TableOperationType.READ));
  Procedure proc=queue.poll();
  assertEquals(1,proc.getProcId());
  assertEquals(true,queue.tryAcquireTableExclusiveLock(proc,tableName));
  assertEquals(null,queue.poll(0));
  queue.releaseTableExclusiveLock(proc,tableName);
  Procedure rdProc=queue.poll();
  assertEquals(2,rdProc.getProcId());
  assertEquals(true,queue.tryAcquireTableSharedLock(rdProc,tableName));
  assertEquals(null,queue.poll(0));
  queue.releaseTableSharedLock(rdProc,tableName);
  Procedure wrProc=queue.poll();
  assertEquals(true,queue.tryAcquireTableExclusiveLock(wrProc,tableName));
  assertEquals(null,queue.poll(0));
  queue.releaseTableExclusiveLock(wrProc,tableName);
  rdProc=queue.poll();
  assertEquals(4,rdProc.getProcId());
  assertEquals(true,queue.tryAcquireTableSharedLock(rdProc,tableName));
  Procedure rdProc2=queue.poll();
  assertEquals(5,rdProc2.getProcId());
  assertEquals(true,queue.tryAcquireTableSharedLock(rdProc2,tableName));
  queue.releaseTableSharedLock(rdProc,tableName);
  queue.releaseTableSharedLock(rdProc2,tableName);
  assertEquals(0,queue.size());
  assertTrue("queue should be deleted",queue.markTableAsDeleted(tableName,wrProc));
}
