{
  if (obj == this) {
    return true;
  }
  if (!(obj instanceof org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Scan)) {
    return super.equals(obj);
  }
  org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Scan other=(org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Scan)obj;
  boolean result=true;
  result=result && getColumnList().equals(other.getColumnList());
  result=result && getAttributeList().equals(other.getAttributeList());
  result=result && (hasStartRow() == other.hasStartRow());
  if (hasStartRow()) {
    result=result && getStartRow().equals(other.getStartRow());
  }
  result=result && (hasStopRow() == other.hasStopRow());
  if (hasStopRow()) {
    result=result && getStopRow().equals(other.getStopRow());
  }
  result=result && (hasFilter() == other.hasFilter());
  if (hasFilter()) {
    result=result && getFilter().equals(other.getFilter());
  }
  result=result && (hasTimeRange() == other.hasTimeRange());
  if (hasTimeRange()) {
    result=result && getTimeRange().equals(other.getTimeRange());
  }
  result=result && (hasMaxVersions() == other.hasMaxVersions());
  if (hasMaxVersions()) {
    result=result && (getMaxVersions() == other.getMaxVersions());
  }
  result=result && (hasCacheBlocks() == other.hasCacheBlocks());
  if (hasCacheBlocks()) {
    result=result && (getCacheBlocks() == other.getCacheBlocks());
  }
  result=result && (hasBatchSize() == other.hasBatchSize());
  if (hasBatchSize()) {
    result=result && (getBatchSize() == other.getBatchSize());
  }
  result=result && (hasMaxResultSize() == other.hasMaxResultSize());
  if (hasMaxResultSize()) {
    result=result && (getMaxResultSize() == other.getMaxResultSize());
  }
  result=result && (hasStoreLimit() == other.hasStoreLimit());
  if (hasStoreLimit()) {
    result=result && (getStoreLimit() == other.getStoreLimit());
  }
  result=result && (hasStoreOffset() == other.hasStoreOffset());
  if (hasStoreOffset()) {
    result=result && (getStoreOffset() == other.getStoreOffset());
  }
  result=result && (hasLoadColumnFamiliesOnDemand() == other.hasLoadColumnFamiliesOnDemand());
  if (hasLoadColumnFamiliesOnDemand()) {
    result=result && (getLoadColumnFamiliesOnDemand() == other.getLoadColumnFamiliesOnDemand());
  }
  result=result && (hasCachingCount() == other.hasCachingCount());
  if (hasCachingCount()) {
    result=result && (getCachingCount() == other.getCachingCount());
  }
  result=result && (hasPrefetching() == other.hasPrefetching());
  if (hasPrefetching()) {
    result=result && (getPrefetching() == other.getPrefetching());
  }
  result=result && getUnknownFields().equals(other.getUnknownFields());
  return result;
}
