{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
{
    int dataSize=0;
    for (int i=0; i < cellsPerResult_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(cellsPerResult_.get(i));
    }
    size+=dataSize;
    size+=1 * getCellsPerResultList().size();
  }
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(2,scannerId_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(3,moreResults_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(4,ttl_);
  }
  for (int i=0; i < results_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,results_.get(i));
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(6,stale_);
  }
{
    int dataSize=0;
    dataSize=1 * getPartialFlagPerResultList().size();
    size+=dataSize;
    size+=1 * getPartialFlagPerResultList().size();
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(8,moreResultsInRegion_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(9,heartbeatMessage_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(10,scanMetrics_);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
