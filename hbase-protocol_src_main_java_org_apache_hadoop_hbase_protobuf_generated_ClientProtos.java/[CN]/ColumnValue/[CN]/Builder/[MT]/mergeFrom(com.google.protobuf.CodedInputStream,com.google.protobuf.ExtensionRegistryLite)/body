{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 10:
{
bitField0_|=0x00000001;
row_=input.readBytes();
break;
}
case 16:
{
int rawValue=input.readEnum();
org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto.MutationType value=org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto.MutationType.valueOf(rawValue);
if (value == null) {
unknownFields.mergeVarintField(2,rawValue);
}
 else {
bitField0_|=0x00000002;
mutateType_=value;
}
break;
}
case 26:
{
org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto.ColumnValue.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto.ColumnValue.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addColumnValue(subBuilder.buildPartial());
break;
}
case 32:
{
bitField0_|=0x00000008;
timestamp_=input.readUInt64();
break;
}
case 42:
{
org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.NameBytesPair.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.NameBytesPair.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addAttribute(subBuilder.buildPartial());
break;
}
case 48:
{
bitField0_|=0x00000020;
writeToWAL_=input.readBool();
break;
}
case 58:
{
org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.TimeRange.Builder subBuilder=org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.TimeRange.newBuilder();
if (hasTimeRange()) {
subBuilder.mergeFrom(getTimeRange());
}
input.readMessage(subBuilder,extensionRegistry);
setTimeRange(subBuilder.buildPartial());
break;
}
case 64:
{
bitField0_|=0x00000080;
associatedCellCount_=input.readInt32();
break;
}
}
}
}
