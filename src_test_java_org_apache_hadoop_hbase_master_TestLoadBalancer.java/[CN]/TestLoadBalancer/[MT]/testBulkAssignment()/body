{
  for (  int[] mock : regionsAndServersMocks) {
    LOG.debug("testBulkAssignment with " + mock[0] + " regions and "+ mock[1]+ " servers");
    List<HRegionInfo> regions=randomRegions(mock[0]);
    List<HServerInfo> servers=randomServers(mock[1],0);
    Map<HServerInfo,List<HRegionInfo>> assignments=LoadBalancer.roundRobinAssignment(regions.toArray(new HRegionInfo[regions.size()]),servers);
    float average=(float)regions.size() / servers.size();
    int min=(int)Math.floor(average);
    int max=(int)Math.ceil(average);
    if (assignments != null && !assignments.isEmpty()) {
      for (      List<HRegionInfo> regionList : assignments.values()) {
        assertTrue(regionList.size() == min || regionList.size() == max);
      }
    }
    returnRegions(regions);
    returnServers(servers);
  }
}
