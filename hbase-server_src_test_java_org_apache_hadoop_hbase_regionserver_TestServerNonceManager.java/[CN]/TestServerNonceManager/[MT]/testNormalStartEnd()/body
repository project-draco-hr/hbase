{
  final long[] numbers=new long[]{NO_NONCE,1,2,Long.MAX_VALUE,Long.MIN_VALUE};
  ServerNonceManager nm=createManager();
  for (int i=0; i < numbers.length; ++i) {
    for (int j=0; j < numbers.length; ++j) {
      assertTrue(nm.startOperation(numbers[i],numbers[j],createStoppable()));
    }
  }
  for (int i=0; i < numbers.length; ++i) {
    assertTrue(nm.startOperation(numbers[i],NO_NONCE,createStoppable()));
  }
  for (int i=0; i < numbers.length; ++i) {
    for (int j=0; j < numbers.length; ++j) {
      nm.endOperation(numbers[i],numbers[j],false);
      assertTrue(nm.startOperation(numbers[i],numbers[j],createStoppable()));
    }
  }
  for (int i=0; i < numbers.length; ++i) {
    for (int j=0; j < numbers.length; ++j) {
      nm.endOperation(numbers[i],numbers[j],true);
      assertEquals(numbers[j] == NO_NONCE,nm.startOperation(numbers[i],numbers[j],createStoppable()));
    }
  }
}
