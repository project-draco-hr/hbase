{
  if (replicatedScanner == null) {
    Configuration conf=context.getConfiguration();
    final Scan scan=new Scan();
    scan.setCaching(conf.getInt(TableInputFormat.SCAN_CACHEDROWS,1));
    long startTime=conf.getLong(NAME + ".startTime",0);
    long endTime=conf.getLong(NAME + ".endTime",Long.MAX_VALUE);
    String families=conf.get(NAME + ".families",null);
    if (families != null) {
      String[] fams=families.split(",");
      for (      String fam : fams) {
        scan.addFamily(Bytes.toBytes(fam));
      }
    }
    scan.setTimeRange(startTime,endTime);
    if (versions >= 0) {
      scan.setMaxVersions(versions);
    }
    HConnectionManager.execute(new HConnectable<Void>(conf){
      @Override public Void connect(      HConnection conn) throws IOException {
        String zkClusterKey=conf.get(NAME + ".peerQuorumAddress");
        Configuration peerConf=HBaseConfiguration.create(conf);
        ZKUtil.applyClusterKeyToConf(peerConf,zkClusterKey);
        TableName tableName=TableName.valueOf(conf.get(NAME + ".tableName"));
        Table replicatedTable=new HTable(peerConf,tableName);
        scan.setStartRow(value.getRow());
        replicatedScanner=replicatedTable.getScanner(scan);
        return null;
      }
    }
);
  }
  Result res=replicatedScanner.next();
  try {
    Result.compareResults(value,res);
    context.getCounter(Counters.GOODROWS).increment(1);
  }
 catch (  Exception e) {
    LOG.warn("Bad row",e);
    context.getCounter(Counters.BADROWS).increment(1);
  }
}
