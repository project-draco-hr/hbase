{
  if (replicatedScanner == null) {
    Configuration conf=context.getConfiguration();
    sleepMsBeforeReCompare=conf.getInt(NAME + ".sleepMsBeforeReCompare",0);
    final Scan scan=new Scan();
    scan.setBatch(batch);
    scan.setCacheBlocks(false);
    scan.setCaching(conf.getInt(TableInputFormat.SCAN_CACHEDROWS,1));
    long startTime=conf.getLong(NAME + ".startTime",0);
    long endTime=conf.getLong(NAME + ".endTime",Long.MAX_VALUE);
    String families=conf.get(NAME + ".families",null);
    if (families != null) {
      String[] fams=families.split(",");
      for (      String fam : fams) {
        scan.addFamily(Bytes.toBytes(fam));
      }
    }
    String rowPrefixes=conf.get(NAME + ".rowPrefixes",null);
    setRowPrefixFilter(scan,rowPrefixes);
    scan.setTimeRange(startTime,endTime);
    int versions=conf.getInt(NAME + ".versions",-1);
    LOG.info("Setting number of version inside map as: " + versions);
    if (versions >= 0) {
      scan.setMaxVersions(versions);
    }
    TableName tableName=TableName.valueOf(conf.get(NAME + ".tableName"));
    sourceConnection=ConnectionFactory.createConnection(conf);
    sourceTable=sourceConnection.getTable(tableName);
    final TableSplit tableSplit=(TableSplit)(context.getInputSplit());
    String zkClusterKey=conf.get(NAME + ".peerQuorumAddress");
    Configuration peerConf=HBaseConfiguration.createClusterConf(conf,zkClusterKey,PEER_CONFIG_PREFIX);
    replicatedConnection=ConnectionFactory.createConnection(peerConf);
    replicatedTable=replicatedConnection.getTable(tableName);
    scan.setStartRow(value.getRow());
    scan.setStopRow(tableSplit.getEndRow());
    replicatedScanner=replicatedTable.getScanner(scan);
    currentCompareRowInPeerTable=replicatedScanner.next();
  }
  while (true) {
    if (currentCompareRowInPeerTable == null) {
      logFailRowAndIncreaseCounter(context,Counters.ONLY_IN_SOURCE_TABLE_ROWS,value);
      break;
    }
    int rowCmpRet=Bytes.compareTo(value.getRow(),currentCompareRowInPeerTable.getRow());
    if (rowCmpRet == 0) {
      try {
        Result.compareResults(value,currentCompareRowInPeerTable);
        context.getCounter(Counters.GOODROWS).increment(1);
      }
 catch (      Exception e) {
        logFailRowAndIncreaseCounter(context,Counters.CONTENT_DIFFERENT_ROWS,value);
        LOG.error("Exception while comparing row : " + e);
      }
      currentCompareRowInPeerTable=replicatedScanner.next();
      break;
    }
 else     if (rowCmpRet < 0) {
      logFailRowAndIncreaseCounter(context,Counters.ONLY_IN_SOURCE_TABLE_ROWS,value);
      break;
    }
 else {
      logFailRowAndIncreaseCounter(context,Counters.ONLY_IN_PEER_TABLE_ROWS,currentCompareRowInPeerTable);
      currentCompareRowInPeerTable=replicatedScanner.next();
    }
  }
}
