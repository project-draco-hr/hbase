{
  if (args.length < 2) {
    printUsage(null);
    return false;
  }
  restoreDefaults();
  try {
    for (int i=0; i < args.length; i++) {
      String cmd=args[i];
      if (cmd.equals("-h") || cmd.startsWith("--h")) {
        printUsage(null);
        return false;
      }
      final String startTimeArgKey="--starttime=";
      if (cmd.startsWith(startTimeArgKey)) {
        startTime=Long.parseLong(cmd.substring(startTimeArgKey.length()));
        continue;
      }
      final String endTimeArgKey="--endtime=";
      if (cmd.startsWith(endTimeArgKey)) {
        endTime=Long.parseLong(cmd.substring(endTimeArgKey.length()));
        continue;
      }
      final String versionsArgKey="--versions=";
      if (cmd.startsWith(versionsArgKey)) {
        versions=Integer.parseInt(cmd.substring(versionsArgKey.length()));
        continue;
      }
      final String batchArgKey="--batch=";
      if (cmd.startsWith(batchArgKey)) {
        batch=Integer.parseInt(cmd.substring(batchArgKey.length()));
        continue;
      }
      final String familiesArgKey="--families=";
      if (cmd.startsWith(familiesArgKey)) {
        families=cmd.substring(familiesArgKey.length());
        continue;
      }
      final String rowPrefixesKey="--row-prefixes=";
      if (cmd.startsWith(rowPrefixesKey)) {
        rowPrefixes=cmd.substring(rowPrefixesKey.length());
        continue;
      }
      if (cmd.startsWith("--")) {
        printUsage("Invalid argument '" + cmd + "'");
      }
      final String delimiterArgKey="--delimiter=";
      if (cmd.startsWith(delimiterArgKey)) {
        delimiter=cmd.substring(delimiterArgKey.length());
        continue;
      }
      final String sleepToReCompareKey="--recomparesleep=";
      if (cmd.startsWith(sleepToReCompareKey)) {
        sleepMsBeforeReCompare=Integer.parseInt(cmd.substring(sleepToReCompareKey.length()));
        continue;
      }
      if (i == args.length - 2) {
        peerId=cmd;
      }
      if (i == args.length - 1) {
        tableName=cmd;
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    printUsage("Can't start because " + e.getMessage());
    return false;
  }
  return true;
}
