{
  if (trailer.getMetaIndexCount() == 0) {
    return null;
  }
  if (metaBlockIndexReader == null) {
    throw new IOException("Meta index not loaded");
  }
  byte[] nameBytes=Bytes.toBytes(metaBlockName);
  int block=metaBlockIndexReader.rootBlockContainingKey(nameBytes,0,nameBytes.length);
  if (block == -1)   return null;
  long offset=metaBlockIndexReader.getRootBlockOffset(block);
  long nextOffset;
  if (block == metaBlockIndexReader.getRootBlockCount() - 1) {
    nextOffset=trailer.getFileInfoOffset();
  }
 else {
    nextOffset=metaBlockIndexReader.getRootBlockOffset(block + 1);
  }
  long startTimeNs=System.nanoTime();
  String cacheKey=HFile.getBlockCacheKey(name,offset);
synchronized (metaBlockIndexReader.getRootBlockKey(block)) {
    metaLoads.incrementAndGet();
    if (blockCache != null) {
      HFileBlock cachedBlock=(HFileBlock)blockCache.getBlock(cacheKey,true);
      if (cachedBlock != null) {
        cacheHits.incrementAndGet();
        return cachedBlock.getBufferWithoutHeader();
      }
    }
    HFileBlock hfileBlock=fsBlockReader.readBlockData(offset,nextOffset - offset,metaBlockIndexReader.getRootBlockDataSize(block),true);
    hfileBlock.expectType(BlockType.META);
    HFile.readTimeNano.addAndGet(System.nanoTime() - startTimeNs);
    HFile.readOps.incrementAndGet();
    if (cacheBlock && blockCache != null) {
      blockCache.cacheBlock(cacheKey,hfileBlock,inMemory);
    }
    return hfileBlock.getBufferWithoutHeader();
  }
}
