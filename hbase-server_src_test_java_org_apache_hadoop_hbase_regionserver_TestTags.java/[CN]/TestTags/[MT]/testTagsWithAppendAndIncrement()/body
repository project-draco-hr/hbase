{
  TableName tableName=TableName.valueOf(TEST_NAME.getMethodName());
  byte[] f=Bytes.toBytes("f");
  byte[] q=Bytes.toBytes("q");
  byte[] row1=Bytes.toBytes("r1");
  byte[] row2=Bytes.toBytes("r2");
  HTableDescriptor desc=new HTableDescriptor(tableName);
  HColumnDescriptor colDesc=new HColumnDescriptor(f);
  desc.addFamily(colDesc);
  TEST_UTIL.getHBaseAdmin().createTable(desc);
  HTable table=null;
  try {
    table=new HTable(TEST_UTIL.getConfiguration(),tableName);
    Put put=new Put(row1);
    byte[] v=Bytes.toBytes(2L);
    put.add(f,q,v,new Tag[]{new Tag((byte)1,"tag1")});
    table.put(put);
    Increment increment=new Increment(row1);
    increment.addColumn(f,q,1L);
    table.increment(increment);
    ResultScanner scanner=table.getScanner(new Scan());
    Result result=scanner.next();
    KeyValue kv=KeyValueUtil.ensureKeyValue(result.getColumnLatestCell(f,q));
    List<Tag> tags=kv.getTags();
    assertEquals(3L,Bytes.toLong(kv.getValueArray(),kv.getValueOffset(),kv.getValueLength()));
    assertEquals(1,tags.size());
    assertEquals("tag1",Bytes.toString(tags.get(0).getValue()));
    increment=new Increment(row1);
    increment.add(new KeyValue(row1,f,q,1234L,v,new Tag[]{new Tag((byte)1,"tag2")}));
    table.increment(increment);
    scanner=table.getScanner(new Scan());
    result=scanner.next();
    kv=KeyValueUtil.ensureKeyValue(result.getColumnLatestCell(f,q));
    tags=kv.getTags();
    assertEquals(5L,Bytes.toLong(kv.getValueArray(),kv.getValueOffset(),kv.getValueLength()));
    assertEquals(2,tags.size());
    assertEquals("tag1",Bytes.toString(tags.get(0).getValue()));
    assertEquals("tag2",Bytes.toString(tags.get(1).getValue()));
    put=new Put(row2);
    v=Bytes.toBytes(2L);
    put.add(f,q,v);
    table.put(put);
    increment=new Increment(row2);
    increment.add(new KeyValue(row2,f,q,1234L,v,new Tag[]{new Tag((byte)1,"tag2")}));
    table.increment(increment);
    Scan scan=new Scan();
    scan.setStartRow(row2);
    scanner=table.getScanner(scan);
    result=scanner.next();
    kv=KeyValueUtil.ensureKeyValue(result.getColumnLatestCell(f,q));
    tags=kv.getTags();
    assertEquals(4L,Bytes.toLong(kv.getValueArray(),kv.getValueOffset(),kv.getValueLength()));
    assertEquals(1,tags.size());
    assertEquals("tag2",Bytes.toString(tags.get(0).getValue()));
    byte[] row3=Bytes.toBytes("r3");
    put=new Put(row3);
    put.add(f,q,Bytes.toBytes("a"),new Tag[]{new Tag((byte)1,"tag1")});
    table.put(put);
    Append append=new Append(row3);
    append.add(f,q,Bytes.toBytes("b"));
    table.append(append);
    scan=new Scan();
    scan.setStartRow(row3);
    scanner=table.getScanner(scan);
    result=scanner.next();
    kv=KeyValueUtil.ensureKeyValue(result.getColumnLatestCell(f,q));
    tags=kv.getTags();
    assertEquals(1,tags.size());
    assertEquals("tag1",Bytes.toString(tags.get(0).getValue()));
    append=new Append(row3);
    append.add(new KeyValue(row3,f,q,1234L,v,new Tag[]{new Tag((byte)1,"tag2")}));
    table.append(append);
    scanner=table.getScanner(scan);
    result=scanner.next();
    kv=KeyValueUtil.ensureKeyValue(result.getColumnLatestCell(f,q));
    tags=kv.getTags();
    assertEquals(2,tags.size());
    assertEquals("tag1",Bytes.toString(tags.get(0).getValue()));
    assertEquals("tag2",Bytes.toString(tags.get(1).getValue()));
    byte[] row4=Bytes.toBytes("r4");
    put=new Put(row4);
    put.add(f,q,Bytes.toBytes("a"));
    table.put(put);
    append=new Append(row4);
    append.add(new KeyValue(row4,f,q,1234L,v,new Tag[]{new Tag((byte)1,"tag2")}));
    table.append(append);
    scan=new Scan();
    scan.setStartRow(row4);
    scanner=table.getScanner(scan);
    result=scanner.next();
    kv=KeyValueUtil.ensureKeyValue(result.getColumnLatestCell(f,q));
    tags=kv.getTags();
    assertEquals(1,tags.size());
    assertEquals("tag2",Bytes.toString(tags.get(0).getValue()));
  }
  finally {
    if (table != null) {
      table.close();
    }
  }
}
