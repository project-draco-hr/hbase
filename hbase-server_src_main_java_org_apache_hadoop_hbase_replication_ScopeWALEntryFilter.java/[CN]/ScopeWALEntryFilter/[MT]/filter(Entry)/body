{
  NavigableMap<byte[],Integer> scopes=entry.getKey().getScopes();
  if (scopes == null || scopes.isEmpty()) {
    return null;
  }
  ArrayList<Cell> cells=entry.getEdit().getCells();
  int size=cells.size();
  byte[] fam;
  for (int i=size - 1; i >= 0; i--) {
    Cell cell=cells.get(i);
    if (CellUtil.matchingColumn(cell,WALEdit.METAFAMILY,WALEdit.BULK_LOAD)) {
      Cell filteredBulkLoadEntryCell=filterBulkLoadEntries(scopes,cell);
      if (filteredBulkLoadEntryCell != null) {
        cells.set(i,filteredBulkLoadEntryCell);
      }
 else {
        cells.remove(i);
      }
    }
 else {
      fam=CellUtil.cloneFamily(cell);
      if (!scopes.containsKey(fam) || scopes.get(fam) == HConstants.REPLICATION_SCOPE_LOCAL) {
        cells.remove(i);
      }
    }
  }
  if (cells.size() < size / 2) {
    cells.trimToSize();
  }
  return entry;
}
