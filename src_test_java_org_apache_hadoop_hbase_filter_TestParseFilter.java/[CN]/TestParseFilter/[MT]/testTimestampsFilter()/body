{
  String filterString="TimestampsFilter(9223372036854775806, 6)";
  byte[] filterStringAsByteArray=Bytes.toBytes(filterString);
  filter=f.parseFilterString(filterStringAsByteArray);
  assertTrue(filter instanceof TimestampsFilter);
  TreeSet<Long> timestamps=((TimestampsFilter)filter).getTimestamps();
  assertEquals(timestamps.size(),2);
  assertTrue(timestamps.contains(new Long(6)));
  filterString="TimestampsFilter()";
  filterStringAsByteArray=Bytes.toBytes(filterString);
  filter=f.parseFilterString(filterStringAsByteArray);
  assertTrue(filter instanceof TimestampsFilter);
  timestamps=((TimestampsFilter)filter).getTimestamps();
  assertEquals(timestamps.size(),0);
  filterString="TimestampsFilter(9223372036854775808, 6)";
  filterStringAsByteArray=Bytes.toBytes(filterString);
  try {
    filter=f.parseFilterString(filterStringAsByteArray);
    assertTrue(filter instanceof TimestampsFilter);
  }
 catch (  IllegalArgumentException e) {
    System.out.println("Long Argument was too large");
  }
  filterString="TimestampsFilter(-45, 6)";
  filterStringAsByteArray=Bytes.toBytes(filterString);
  try {
    filter=f.parseFilterString(filterStringAsByteArray);
    assertTrue(filter instanceof TimestampsFilter);
  }
 catch (  IllegalArgumentException e) {
    System.out.println("Timestamp Arguments should not be negative");
  }
}
