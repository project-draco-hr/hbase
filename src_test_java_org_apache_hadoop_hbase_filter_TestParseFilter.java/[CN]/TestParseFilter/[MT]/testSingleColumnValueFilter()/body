{
  String filterString="SingleColumnValueFilter " + "('family', 'qualifier', >=, 'binary:a', true, false)";
  byte[] filterStringAsByteArray=Bytes.toBytes(filterString);
  filter=f.parseFilterString(filterStringAsByteArray);
  assertTrue(filter instanceof SingleColumnValueFilter);
  SingleColumnValueFilter singleColumnValueFilter=(SingleColumnValueFilter)filter;
  assertEquals("family",new String(singleColumnValueFilter.getFamily()));
  assertEquals("qualifier",new String(singleColumnValueFilter.getQualifier()));
  assertEquals(singleColumnValueFilter.getOperator(),CompareFilter.CompareOp.GREATER_OR_EQUAL);
  assertTrue(singleColumnValueFilter.getComparator() instanceof BinaryComparator);
  BinaryComparator binaryComparator=(BinaryComparator)singleColumnValueFilter.getComparator();
  assertEquals(new String(binaryComparator.getValue()),"a");
  assertTrue(singleColumnValueFilter.getFilterIfMissing());
  assertFalse(singleColumnValueFilter.getLatestVersionOnly());
  filterString="SingleColumnValueFilter ('family', 'qualifier', >, 'binaryprefix:a')";
  filterStringAsByteArray=Bytes.toBytes(filterString);
  filter=f.parseFilterString(filterStringAsByteArray);
  assertTrue(filter instanceof SingleColumnValueFilter);
  singleColumnValueFilter=(SingleColumnValueFilter)filter;
  assertEquals("family",new String(singleColumnValueFilter.getFamily()));
  assertEquals("qualifier",new String(singleColumnValueFilter.getQualifier()));
  assertEquals(singleColumnValueFilter.getOperator(),CompareFilter.CompareOp.GREATER);
  assertTrue(singleColumnValueFilter.getComparator() instanceof BinaryPrefixComparator);
  BinaryPrefixComparator binaryPrefixComparator=(BinaryPrefixComparator)singleColumnValueFilter.getComparator();
  assertEquals(new String(binaryPrefixComparator.getValue()),"a");
  assertFalse(singleColumnValueFilter.getFilterIfMissing());
  assertTrue(singleColumnValueFilter.getLatestVersionOnly());
}
