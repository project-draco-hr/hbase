{
  Admin admin=TEST_UTIL.getHBaseAdmin();
  final String tableName="testCallQueueTooBigException";
  HTableDescriptor desc=new HTableDescriptor(TableName.valueOf(Bytes.toBytes(tableName)));
  desc.addFamily(new HColumnDescriptor(FAMILY));
  admin.createTable(desc,Bytes.toBytes("aaaa"),Bytes.toBytes("zzzz"),3);
  Configuration conf=TEST_UTIL.getConfiguration();
  conf.setLong(HConstants.HBASE_CLIENT_OPERATION_TIMEOUT,100);
  conf.setInt(HConstants.HBASE_CLIENT_PAUSE,500);
  conf.setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,1);
  conf.setBoolean(HConstants.HBASE_CLIENT_FAST_FAIL_MODE_ENABLED,true);
  conf.setLong(HConstants.HBASE_CLIENT_FAST_FAIL_THREASHOLD_MS,0);
  conf.setClass(HConstants.HBASE_CLIENT_FAST_FAIL_INTERCEPTOR_IMPL,CallQueueTooBigPffeInterceptor.class,PreemptiveFastFailInterceptor.class);
  final Connection connection=ConnectionFactory.createConnection(conf);
  SimpleRpcScheduler srs=(SimpleRpcScheduler)TEST_UTIL.getHBaseCluster().getRegionServer(0).getRpcServer().getScheduler();
  Configuration newConf=HBaseConfiguration.create(TEST_UTIL.getConfiguration());
  newConf.setInt("hbase.ipc.server.max.callqueue.length",0);
  srs.onConfigurationChange(newConf);
  try (Table table=connection.getTable(TableName.valueOf(tableName))){
    Get get=new Get(new byte[1]);
    table.get(get);
  }
 catch (  Throwable ex) {
  }
  assertEquals("There should have been 1 hit",1,CallQueueTooBigPffeInterceptor.numCallQueueTooBig.get());
  newConf=HBaseConfiguration.create(TEST_UTIL.getConfiguration());
  newConf.setInt("hbase.ipc.server.max.callqueue.length",250);
  srs.onConfigurationChange(newConf);
}
