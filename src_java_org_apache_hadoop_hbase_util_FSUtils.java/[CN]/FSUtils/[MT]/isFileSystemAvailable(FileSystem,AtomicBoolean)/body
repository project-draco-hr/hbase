{
  if (!(fs instanceof DistributedFileSystem)) {
    return true;
  }
  boolean available=false;
  DistributedFileSystem dfs=(DistributedFileSystem)fs;
  int maxTries=dfs.getConf().getInt("hbase.client.retries.number",3);
  Path root=fs.makeQualified(new Path(dfs.getConf().get(HConstants.HBASE_DIR,"/")));
  for (int i=0; i < maxTries && (closed == null || !closed.get()); i++) {
    IOException ex=null;
    try {
      if (dfs.exists(root)) {
        available=true;
        break;
      }
    }
 catch (    IOException e) {
      ex=e;
    }
    String exception=(ex == null) ? "" : ": " + ex.getMessage();
    LOG.info("Failed exists test on " + root + " by thread "+ Thread.currentThread().getName()+ " (Attempt "+ i+ " of "+ maxTries+ "): "+ exception);
  }
  try {
    if (!available) {
      fs.close();
    }
  }
 catch (  IOException e) {
    LOG.error("file system close failed: ",e);
  }
  return available;
}
