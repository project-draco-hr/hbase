{
  Map<String,Integer> frags=new HashMap<String,Integer>();
  int cfCountTotal=0;
  int cfFragTotal=0;
  DirFilter df=new DirFilter(fs);
  FileStatus[] tableDirs=fs.listStatus(hbaseRootDir,df);
  for (int i=0; i < tableDirs.length; i++) {
    Path d=tableDirs[i].getPath();
    if (d.getName().equals(HConstants.HREGION_LOGDIR_NAME)) {
      continue;
    }
    int cfCount=0;
    int cfFrag=0;
    FileStatus[] regionDirs=fs.listStatus(d,df);
    for (int j=0; j < regionDirs.length; j++) {
      Path dd=regionDirs[j].getPath();
      if (dd.getName().equals(HConstants.HREGION_COMPACTIONDIR_NAME)) {
        continue;
      }
      FileStatus[] familyDirs=fs.listStatus(dd,df);
      for (int k=0; k < familyDirs.length; k++) {
        cfCount++;
        cfCountTotal++;
        Path family=familyDirs[k].getPath();
        FileStatus[] familyStatus=fs.listStatus(family);
        if (familyStatus.length > 1) {
          cfFrag++;
          cfFragTotal++;
        }
      }
    }
    frags.put(d.getName(),new Integer(Math.round((float)cfFrag / cfCount * 100)));
  }
  frags.put("-TOTAL-",new Integer(Math.round((float)cfFragTotal / cfCountTotal * 100)));
  return frags;
}
