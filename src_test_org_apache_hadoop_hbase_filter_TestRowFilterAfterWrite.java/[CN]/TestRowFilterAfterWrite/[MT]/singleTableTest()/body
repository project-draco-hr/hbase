{
  HTableDescriptor desc=new HTableDescriptor(TABLE_NAME);
  desc.addFamily(new HColumnDescriptor(FAMILY));
  HBaseAdmin admin=new HBaseAdmin(this.conf);
  admin.createTable(desc);
  HTable table=new HTable(conf,new Text(TABLE_NAME));
  for (int i=0; i < NUM_ROWS; i++) {
    BatchUpdate b=new BatchUpdate(new Text("row_" + String.format("%1$05d",i)));
    b.put(TEXT_COLUMN1,VALUE);
    b.put(TEXT_COLUMN2,String.format("%1$05d",i).getBytes());
    table.commit(b);
  }
  for (int n=0; n < NUM_REWRITES; n++) {
    for (int i=0; i < NUM_ROWS; i++) {
      BatchUpdate b=new BatchUpdate(new Text("row_" + String.format("%1$05d",i)));
      b.put(TEXT_COLUMN2,String.format("%1$05d",i).getBytes());
      table.commit(b);
    }
  }
  LOG.info("Waiting, for flushes to complete");
  Thread.sleep(5 * 1000);
  LOG.info("Done. No flush should happen after this");
  for (int i=0; i < NUM_ROWS; i++) {
    BatchUpdate b=new BatchUpdate(new Text("row_" + String.format("%1$05d",i)));
    b.put(TEXT_COLUMN2,String.format("%1$05d",i).getBytes());
    table.commit(b);
  }
  LOG.info("Print table contents using scanner after map/reduce for " + TABLE_NAME);
  scanTable(TABLE_NAME,true);
  LOG.info("Print table contents using scanner+filter after map/reduce for " + TABLE_NAME);
  scanTableWithRowFilter(TABLE_NAME,true);
}
