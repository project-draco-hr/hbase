{
  ThriftHBaseServiceHandler handler=new ThriftHBaseServiceHandler();
  byte[] rowName="testDeleteSingleTimestamp".getBytes();
  ByteBuffer table=ByteBuffer.wrap(tableAname);
  long timestamp1=System.currentTimeMillis() - 10;
  long timestamp2=System.currentTimeMillis();
  List<TColumnValue> columnValues=new ArrayList<TColumnValue>();
  TColumnValue columnValueA=new TColumnValue(ByteBuffer.wrap(familyAname),ByteBuffer.wrap(qualifierAname),ByteBuffer.wrap(valueAname));
  columnValueA.setTimestamp(timestamp1);
  columnValues.add(columnValueA);
  TPut put=new TPut(ByteBuffer.wrap(rowName),columnValues);
  put.setColumnValues(columnValues);
  handler.put(table,put);
  columnValueA.setTimestamp(timestamp2);
  handler.put(table,put);
  TGet get=new TGet(ByteBuffer.wrap(rowName));
  get.setMaxVersions(2);
  TResult result=handler.get(table,get);
  assertEquals(2,result.getColumnValuesSize());
  TDelete delete=new TDelete(ByteBuffer.wrap(rowName));
  List<TColumn> deleteColumns=new ArrayList<TColumn>();
  TColumn deleteColumn=new TColumn(ByteBuffer.wrap(familyAname));
  deleteColumn.setQualifier(qualifierAname);
  deleteColumns.add(deleteColumn);
  delete.setColumns(deleteColumns);
  delete.setDeleteType(TDeleteType.DELETE_COLUMN);
  handler.deleteSingle(table,delete);
  get=new TGet(ByteBuffer.wrap(rowName));
  result=handler.get(table,get);
  assertArrayEquals(rowName,result.getRow());
  assertEquals(1,result.getColumnValuesSize());
  assertEquals(timestamp1,result.getColumnValues().get(0).getTimestamp());
}
