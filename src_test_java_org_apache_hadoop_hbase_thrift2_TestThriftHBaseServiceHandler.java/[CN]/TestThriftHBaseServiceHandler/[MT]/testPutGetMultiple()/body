{
  ThriftHBaseServiceHandler handler=new ThriftHBaseServiceHandler();
  ByteBuffer table=ByteBuffer.wrap(tableAname);
  byte[] rowName1="testPutGetMultiple1".getBytes();
  byte[] rowName2="testPutGetMultiple2".getBytes();
  List<TColumnValue> columnValues=new ArrayList<TColumnValue>();
  columnValues.add(new TColumnValue(ByteBuffer.wrap(familyAname),ByteBuffer.wrap(qualifierAname),ByteBuffer.wrap(valueAname)));
  columnValues.add(new TColumnValue(ByteBuffer.wrap(familyBname),ByteBuffer.wrap(qualifierBname),ByteBuffer.wrap(valueBname)));
  List<TPut> puts=new ArrayList<TPut>();
  puts.add(new TPut(ByteBuffer.wrap(rowName1),columnValues));
  puts.add(new TPut(ByteBuffer.wrap(rowName2),columnValues));
  handler.putMultiple(table,puts);
  List<TGet> gets=new ArrayList<TGet>();
  gets.add(new TGet(ByteBuffer.wrap(rowName1)));
  gets.add(new TGet(ByteBuffer.wrap(rowName2)));
  List<TResult> results=handler.getMultiple(table,gets);
  assertEquals(2,results.size());
  assertArrayEquals(rowName1,results.get(0).getRow());
  assertTColumnValuesEqual(columnValues,results.get(0).getColumnValues());
  assertArrayEquals(rowName2,results.get(1).getRow());
  assertTColumnValuesEqual(columnValues,results.get(1).getColumnValues());
}
