{
  if (LOG.isDebugEnabled()) {
    LOG.debug("GET " + uriInfo.getAbsolutePath());
  }
  servlet.getMetrics().incrementRequests(1);
  if (generator == null) {
    servlet.getMetrics().incrementFailedGetRequests(1);
    return Response.status(Response.Status.NOT_FOUND).type(MIMETYPE_TEXT).entity("Not found" + CRLF).build();
  }
  CellSetModel model=new CellSetModel();
  RowModel rowModel=null;
  byte[] rowKey=null;
  int limit=batch;
  if (maxValues > 0) {
    limit=maxValues;
  }
  int count=limit;
  do {
    KeyValue value=null;
    try {
      value=generator.next();
    }
 catch (    IllegalStateException e) {
      if (ScannerResource.delete(id)) {
        servlet.getMetrics().incrementSucessfulDeleteRequests(1);
      }
 else {
        servlet.getMetrics().incrementFailedDeleteRequests(1);
      }
      servlet.getMetrics().incrementFailedGetRequests(1);
      return Response.status(Response.Status.GONE).type(MIMETYPE_TEXT).entity("Gone" + CRLF).build();
    }
    if (value == null) {
      LOG.info("generator exhausted");
      if (count == limit) {
        return Response.noContent().build();
      }
      break;
    }
    if (rowKey == null) {
      rowKey=value.getRow();
      rowModel=new RowModel(rowKey);
    }
    if (!Bytes.equals(value.getRow(),rowKey)) {
      if (maxRows > 0) {
        if (--maxRows == 0) {
          generator.putBack(value);
          break;
        }
      }
      model.addRow(rowModel);
      rowKey=value.getRow();
      rowModel=new RowModel(rowKey);
    }
    rowModel.addCell(new CellModel(value.getFamily(),value.getQualifier(),value.getTimestamp(),value.getValue()));
  }
 while (--count > 0);
  model.addRow(rowModel);
  ResponseBuilder response=Response.ok(model);
  response.cacheControl(cacheControl);
  servlet.getMetrics().incrementSucessfulGetRequests(1);
  return response.build();
}
