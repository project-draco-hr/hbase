{
  Connection connection=ConnectionFactory.createConnection(conf);
  TableName table=TableName.valueOf("testMissingRegionInfoQualifier");
  try {
    setupTable(table);
    final List<Delete> deletes=new LinkedList<Delete>();
    Table meta=connection.getTable(TableName.META_TABLE_NAME,hbfsckExecutorService);
    MetaTableAccessor.fullScanRegions(connection,new MetaTableAccessor.Visitor(){
      @Override public boolean visit(      Result rowResult) throws IOException {
        HRegionInfo hri=MetaTableAccessor.getHRegionInfo(rowResult);
        if (hri != null && !hri.getTable().isSystemTable()) {
          Delete delete=new Delete(rowResult.getRow());
          delete.addColumn(HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER);
          deletes.add(delete);
        }
        return true;
      }
    }
);
    meta.delete(deletes);
    meta.put(new Put(Bytes.toBytes(table + ",,1361911384013.810e28f59a57da91c66")).addColumn(HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER,Bytes.toBytes("node1:60020")));
    meta.put(new Put(Bytes.toBytes(table + ",,1361911384013.810e28f59a57da91c66")).addColumn(HConstants.CATALOG_FAMILY,HConstants.STARTCODE_QUALIFIER,Bytes.toBytes(1362150791183L)));
    meta.close();
    HBaseFsck hbck=doFsck(conf,false);
    assertTrue(hbck.getErrors().getErrorList().contains(HBaseFsck.ErrorReporter.ERROR_CODE.EMPTY_META_CELL));
    hbck=doFsck(conf,true);
    assertFalse(hbck.getErrors().getErrorList().contains(HBaseFsck.ErrorReporter.ERROR_CODE.EMPTY_META_CELL));
  }
  finally {
    cleanupTable(table);
  }
  connection.close();
}
