{
  TableName table=TableName.valueOf("testFixAssignmentsAndNoHdfsChecking");
  try {
    setupTable(table);
    assertEquals(ROWKEYS.length,countRows());
    deleteRegion(conf,tbl.getTableDescriptor(),Bytes.toBytes("A"),Bytes.toBytes("B"),true,false,false,false,HRegionInfo.DEFAULT_REPLICA_ID);
    HBaseFsck hbck=doFsck(conf,false);
    assertErrors(hbck,new HBaseFsck.ErrorReporter.ERROR_CODE[]{HBaseFsck.ErrorReporter.ERROR_CODE.NOT_DEPLOYED,HBaseFsck.ErrorReporter.ERROR_CODE.HOLE_IN_REGION_CHAIN});
    HBaseFsck fsck=new HBaseFsck(conf,hbfsckExecutorService);
    fsck.connect();
    HBaseFsck.setDisplayFullReport();
    fsck.setTimeLag(0);
    fsck.setCheckHdfs(false);
    fsck.onlineHbck();
    assertErrors(fsck,new HBaseFsck.ErrorReporter.ERROR_CODE[]{HBaseFsck.ErrorReporter.ERROR_CODE.NOT_DEPLOYED,HBaseFsck.ErrorReporter.ERROR_CODE.HOLE_IN_REGION_CHAIN});
    fsck.close();
    fsck=new HBaseFsck(conf,hbfsckExecutorService);
    fsck.connect();
    HBaseFsck.setDisplayFullReport();
    fsck.setTimeLag(0);
    fsck.setCheckHdfs(false);
    fsck.setFixAssignments(true);
    fsck.onlineHbck();
    assertTrue(fsck.shouldRerun());
    fsck.onlineHbck();
    assertNoErrors(fsck);
    assertEquals(ROWKEYS.length,countRows());
    fsck.close();
  }
  finally {
    cleanupTable(table);
  }
}
