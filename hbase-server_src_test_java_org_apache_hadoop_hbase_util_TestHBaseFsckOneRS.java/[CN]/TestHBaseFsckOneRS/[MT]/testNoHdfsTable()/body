{
  TableName table=TableName.valueOf("NoHdfsTable");
  setupTable(table);
  assertEquals(ROWKEYS.length,countRows());
  admin.flush(table);
  deleteRegion(conf,tbl.getTableDescriptor(),Bytes.toBytes(""),Bytes.toBytes("A"),false,false,true);
  deleteRegion(conf,tbl.getTableDescriptor(),Bytes.toBytes("A"),Bytes.toBytes("B"),false,false,true);
  deleteRegion(conf,tbl.getTableDescriptor(),Bytes.toBytes("B"),Bytes.toBytes("C"),false,false,true);
  deleteRegion(conf,tbl.getTableDescriptor(),Bytes.toBytes("C"),Bytes.toBytes(""),false,false,true);
  deleteTableDir(table);
  HBaseFsck hbck=doFsck(conf,false);
  assertErrors(hbck,new HBaseFsck.ErrorReporter.ERROR_CODE[]{HBaseFsck.ErrorReporter.ERROR_CODE.NOT_IN_HDFS,HBaseFsck.ErrorReporter.ERROR_CODE.NOT_IN_HDFS,HBaseFsck.ErrorReporter.ERROR_CODE.NOT_IN_HDFS,HBaseFsck.ErrorReporter.ERROR_CODE.NOT_IN_HDFS,HBaseFsck.ErrorReporter.ERROR_CODE.ORPHAN_TABLE_STATE});
  assertEquals(0,hbck.getOverlapGroups(table).size());
  doFsck(conf,true);
  assertNoErrors(doFsck(conf,false));
  assertFalse("Table " + table + " should have been deleted",admin.tableExists(table));
}
