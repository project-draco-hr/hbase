{
  int miss=0;
  long totalBytes=0;
  FSDataInputStream fsdis=fs.open(path);
  Reader reader=HFile.createReader(path,fsdis,fs.getFileStatus(path).getLen(),new CacheConfig(conf));
  reader.loadFileInfo();
  KeySampler kSampler=new KeySampler(rng,reader.getFirstKey(),reader.getLastKey(),keyLenGen);
  HFileScanner scanner=reader.getScanner(false,USE_PREAD);
  BytesWritable key=new BytesWritable();
  timer.reset();
  timer.start();
  for (int i=0; i < options.seekCount; ++i) {
    kSampler.next(key);
    byte[] k=new byte[key.getLength()];
    System.arraycopy(key.getBytes(),0,k,0,key.getLength());
    if (scanner.seekTo(k) >= 0) {
      ByteBuffer bbkey=scanner.getKey();
      ByteBuffer bbval=scanner.getValue();
      totalBytes+=bbkey.limit();
      totalBytes+=bbval.limit();
    }
 else {
      ++miss;
    }
  }
  timer.stop();
  System.out.printf("time: %s...avg seek: %s...%d hit...%d miss...avg I/O size: %.2fKB\n",timer.toString(),NanoTimer.nanoTimeToString(timer.read() / options.seekCount),options.seekCount - miss,miss,(double)totalBytes / 1024 / (options.seekCount - miss));
}
