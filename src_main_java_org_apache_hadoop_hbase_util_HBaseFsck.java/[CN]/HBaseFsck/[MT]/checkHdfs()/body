{
  Path rootDir=new Path(conf.get(HConstants.HBASE_DIR));
  FileSystem fs=rootDir.getFileSystem(conf);
  List<FileStatus> tableDirs=Lists.newArrayList();
  boolean foundVersionFile=false;
  FileStatus[] files=fs.listStatus(rootDir);
  for (  FileStatus file : files) {
    if (file.getPath().getName().equals(HConstants.VERSION_FILE_NAME)) {
      foundVersionFile=true;
    }
 else {
      tableDirs.add(file);
    }
  }
  if (!foundVersionFile) {
    errors.reportError("Version file does not exist in root dir " + rootDir);
  }
  for (  FileStatus tableDir : tableDirs) {
    String tableName=tableDir.getPath().getName();
    if (tableName.startsWith(".") && !tableName.equals(Bytes.toString(HConstants.META_TABLE_NAME)))     continue;
    FileStatus[] regionDirs=fs.listStatus(tableDir.getPath());
    for (    FileStatus regionDir : regionDirs) {
      String encodedName=regionDir.getPath().getName();
      if (!encodedName.toLowerCase().matches("[0-9a-f]+"))       continue;
      HbckInfo hbi=getOrCreateInfo(encodedName);
      hbi.foundRegionDir=regionDir;
      hbi.onlyEdits=true;
      FileStatus[] subDirs=fs.listStatus(regionDir.getPath());
      if (subDirs != null) {
        Path ePath=HLog.getRegionDirRecoveredEditsDir(regionDir.getPath());
        for (        FileStatus subDir : subDirs) {
          String sdName=subDir.getPath().getName();
          if (!sdName.startsWith(".") && !sdName.equals(ePath.getName())) {
            hbi.onlyEdits=false;
            break;
          }
        }
      }
    }
  }
}
