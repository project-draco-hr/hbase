{
  Mutate.Builder mutateBuilder=Mutate.newBuilder();
  mutateBuilder.setRow(ByteString.copyFrom(mutation.getRow()));
  mutateBuilder.setMutateType(mutateType);
  mutateBuilder.setWriteToWAL(mutation.getWriteToWAL());
  mutateBuilder.setTimestamp(mutation.getTimeStamp());
  Map<String,byte[]> attributes=mutation.getAttributesMap();
  if (!attributes.isEmpty()) {
    NameBytesPair.Builder attributeBuilder=NameBytesPair.newBuilder();
    for (    Map.Entry<String,byte[]> attribute : attributes.entrySet()) {
      attributeBuilder.setName(attribute.getKey());
      attributeBuilder.setValue(ByteString.copyFrom(attribute.getValue()));
      mutateBuilder.addAttribute(attributeBuilder.build());
    }
  }
  ColumnValue.Builder columnBuilder=ColumnValue.newBuilder();
  QualifierValue.Builder valueBuilder=QualifierValue.newBuilder();
  for (  Map.Entry<byte[],List<? extends Cell>> family : mutation.getFamilyMap().entrySet()) {
    columnBuilder.setFamily(ByteString.copyFrom(family.getKey()));
    columnBuilder.clearQualifierValue();
    for (    Cell cell : family.getValue()) {
      KeyValue kv=KeyValueUtil.ensureKeyValue(cell);
      valueBuilder.setQualifier(ByteString.copyFrom(kv.getQualifier()));
      valueBuilder.setValue(ByteString.copyFrom(kv.getValue()));
      valueBuilder.setTimestamp(kv.getTimestamp());
      if (mutateType == MutateType.DELETE) {
        KeyValue.Type keyValueType=KeyValue.Type.codeToType(kv.getType());
        valueBuilder.setDeleteType(toDeleteType(keyValueType));
      }
      columnBuilder.addQualifierValue(valueBuilder.build());
    }
    mutateBuilder.addColumnValue(columnBuilder.build());
  }
  return mutateBuilder.build();
}
