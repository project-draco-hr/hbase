{
  List<KeyValue> result=new ArrayList<KeyValue>();
  List<byte[]> rows=generateRows();
  Map<Integer,List<byte[]>> rowsToQualifier=new HashMap<Integer,List<byte[]>>();
  if (family == null) {
    family=new byte[columnFamilyLength];
    randomizer.nextBytes(family);
  }
  long baseTimestamp=Math.abs(randomizer.nextInt()) / baseTimestampDivide;
  byte[] value=new byte[valueLength];
  for (int i=0; i < howMany; ++i) {
    long timestamp=baseTimestamp;
    if (timestampDiffSize > 0) {
      timestamp+=randomizer.nextInt(timestampDiffSize);
    }
    Integer rowId=randomizer.nextInt(rows.size());
    byte[] row=rows.get(rowId);
    byte[] qualifier;
    float qualifierChance=randomizer.nextFloat();
    if (!rowsToQualifier.containsKey(rowId) || qualifierChance > chanceForSameQualifier + chanceForSimilarQualifier) {
      int qualifierLength=averageQualifierLength;
      qualifierLength+=randomizer.nextInt(2 * qualifierLengthVariance + 1) - qualifierLengthVariance;
      qualifier=new byte[qualifierLength];
      randomizer.nextBytes(qualifier);
      if (!rowsToQualifier.containsKey(rowId)) {
        rowsToQualifier.put(rowId,new ArrayList<byte[]>());
      }
      rowsToQualifier.get(rowId).add(qualifier);
    }
 else     if (qualifierChance > chanceForSameQualifier) {
      List<byte[]> previousQualifiers=rowsToQualifier.get(rowId);
      byte[] originalQualifier=previousQualifiers.get(randomizer.nextInt(previousQualifiers.size()));
      qualifier=new byte[originalQualifier.length];
      int commonPrefix=randomizer.nextInt(qualifier.length);
      System.arraycopy(originalQualifier,0,qualifier,0,commonPrefix);
      for (int j=commonPrefix; j < qualifier.length; ++j) {
        qualifier[j]=(byte)(randomizer.nextInt() & 0xff);
      }
      rowsToQualifier.get(rowId).add(qualifier);
    }
 else {
      List<byte[]> previousQualifiers=rowsToQualifier.get(rowId);
      qualifier=previousQualifiers.get(randomizer.nextInt(previousQualifiers.size()));
    }
    if (randomizer.nextFloat() < chanceForZeroValue) {
      for (int j=0; j < value.length; ++j) {
        value[j]=(byte)0;
      }
    }
 else {
      randomizer.nextBytes(value);
    }
    if (useTags) {
      result.add(new KeyValue(row,family,qualifier,timestamp,value,new Tag[]{new Tag((byte)1,"value1")}));
    }
 else {
      result.add(new KeyValue(row,family,qualifier,timestamp,value));
    }
  }
  Collections.sort(result,CellComparator.COMPARATOR);
  return result;
}
