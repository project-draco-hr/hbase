{
  if (NamespaceDescriptor.RESERVED_NAMESPACES.contains(name)) {
    throw new ConstraintException("Reserved namespace " + name + " cannot be removed.");
  }
  int tableCount=masterServices.listTableDescriptorsByNamespace(name).size();
  if (tableCount > 0) {
    throw new ConstraintException("Only empty namespaces can be removed. " + "Namespace " + name + " has "+ tableCount+ " tables");
  }
  Delete d=new Delete(Bytes.toBytes(name));
  table.delete(d);
  zkNamespaceManager.remove(name);
  FileSystem fs=masterServices.getMasterFileSystem().getFileSystem();
  for (  FileStatus status : fs.listStatus(FSUtils.getNamespaceDir(masterServices.getMasterFileSystem().getRootDir(),name))) {
    if (!HConstants.HBASE_NON_TABLE_DIRS.contains(status.getPath().getName())) {
      throw new IOException("Namespace directory contains table dir: " + status.getPath());
    }
  }
  if (!fs.delete(FSUtils.getNamespaceDir(masterServices.getMasterFileSystem().getRootDir(),name),true)) {
    throw new IOException("Failed to remove namespace: " + name);
  }
}
