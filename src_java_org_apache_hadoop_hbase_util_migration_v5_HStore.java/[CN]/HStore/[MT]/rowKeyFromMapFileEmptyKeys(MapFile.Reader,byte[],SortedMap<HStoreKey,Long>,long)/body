{
  HStoreKey searchKey=new HStoreKey(row);
  ImmutableBytesWritable readval=new ImmutableBytesWritable();
  HStoreKey readkey=new HStoreKey();
  HStoreKey finalKey=new HStoreKey();
  map.finalKey(finalKey);
  if (Bytes.compareTo(finalKey.getRow(),row) < 0) {
    candidateKeys.put(stripTimestamp(finalKey),new Long(finalKey.getTimestamp()));
    return;
  }
  HStoreKey deletedOrExpiredRow=null;
  boolean foundCandidate=false;
  while (!foundCandidate) {
    readkey=(HStoreKey)map.getClosest(searchKey,readval,true);
    if (readkey == null) {
      return;
    }
    do {
      if (Bytes.equals(readkey.getRow(),row)) {
        if (!HLogEdit.isDeleted(readval.get())) {
          if (ttl == HConstants.FOREVER || now < readkey.getTimestamp() + ttl) {
            candidateKeys.put(stripTimestamp(readkey),new Long(readkey.getTimestamp()));
            foundCandidate=true;
            continue;
          }
          if (LOG.isDebugEnabled()) {
            LOG.debug("rowAtOrBeforeFromMapFile:" + readkey + ": expired, skipped");
          }
        }
        deletedOrExpiredRow=stripTimestamp(readkey);
      }
 else       if (Bytes.compareTo(readkey.getRow(),row) > 0) {
        break;
      }
 else {
        if (!HLogEdit.isDeleted(readval.get())) {
          if (ttl == HConstants.FOREVER || now < readkey.getTimestamp() + ttl) {
            candidateKeys.put(stripTimestamp(readkey),new Long(readkey.getTimestamp()));
            foundCandidate=true;
            continue;
          }
          if (LOG.isDebugEnabled()) {
            LOG.debug("rowAtOrBeforeFromMapFile:" + readkey + ": expired, skipped");
          }
        }
        deletedOrExpiredRow=stripTimestamp(readkey);
      }
    }
 while (map.next(readkey,readval));
    if (!foundCandidate && deletedOrExpiredRow != null) {
      searchKey=deletedOrExpiredRow;
      deletedOrExpiredRow=null;
    }
 else {
      break;
    }
  }
}
