{
  initBlockCache();
  cacheStats=blockCache.getStats();
  HDFSBlocksDistribution hdfsBlocksDistribution=new HDFSBlocksDistribution();
  long tempNumStores=0;
  long tempNumStoreFiles=0;
  long tempMemstoreSize=0;
  long tempStoreFileSize=0;
  long tempReadRequestsCount=0;
  long tempWriteRequestsCount=0;
  long tempCheckAndMutateChecksFailed=0;
  long tempCheckAndMutateChecksPassed=0;
  long tempStorefileIndexSize=0;
  long tempTotalStaticIndexSize=0;
  long tempTotalStaticBloomSize=0;
  long tempNumMutationsWithoutWAL=0;
  long tempDataInMemoryWithoutWAL=0;
  int tempPercentFileLocal=0;
  for (  HRegion r : regionServer.getOnlineRegionsLocalContext()) {
    tempNumMutationsWithoutWAL+=r.numMutationsWithoutWAL.get();
    tempDataInMemoryWithoutWAL+=r.dataInMemoryWithoutWAL.get();
    tempReadRequestsCount+=r.readRequestsCount.get();
    tempWriteRequestsCount+=r.writeRequestsCount.get();
    tempCheckAndMutateChecksFailed+=r.checkAndMutateChecksFailed.get();
    tempCheckAndMutateChecksPassed+=r.checkAndMutateChecksPassed.get();
    tempNumStores+=r.stores.size();
    for (    Store store : r.stores.values()) {
      tempNumStoreFiles+=store.getStorefilesCount();
      tempMemstoreSize+=store.getMemStoreSize();
      tempStoreFileSize+=store.getStorefilesSize();
      tempStorefileIndexSize+=store.getStorefilesIndexSize();
      tempTotalStaticBloomSize+=store.getTotalStaticBloomSize();
      tempTotalStaticIndexSize+=store.getTotalStaticIndexSize();
    }
    hdfsBlocksDistribution.add(r.getHDFSBlocksDistribution());
  }
  float localityIndex=hdfsBlocksDistribution.getBlockLocalityIndex(regionServer.getServerName().getHostname());
  tempPercentFileLocal=(int)(localityIndex * 100);
  long currentTime=EnvironmentEdgeManager.currentTimeMillis();
  if (lastRan == 0) {
    lastRan=currentTime - period;
  }
  if ((currentTime - lastRan) > 0) {
    long currentRequestCount=getTotalRequestCount();
    requestsPerSecond=(currentRequestCount - lastRequestCount) / ((currentTime - lastRan) / 1000.0);
    lastRequestCount=currentRequestCount;
  }
  lastRan=currentTime;
  numStores=tempNumStores;
  long tempNumHLogFiles=regionServer.hlog.getNumLogFiles();
  if (regionServer.hlogForMeta != null) {
    tempNumHLogFiles+=regionServer.hlogForMeta.getNumLogFiles();
  }
  numHLogFiles=tempNumHLogFiles;
  long tempHlogFileSize=regionServer.hlog.getLogFileSize();
  if (regionServer.hlogForMeta != null) {
    tempHlogFileSize+=regionServer.hlogForMeta.getLogFileSize();
  }
  hlogFileSize=tempHlogFileSize;
  numStoreFiles=tempNumStoreFiles;
  memstoreSize=tempMemstoreSize;
  storeFileSize=tempStoreFileSize;
  readRequestsCount=tempReadRequestsCount;
  writeRequestsCount=tempWriteRequestsCount;
  checkAndMutateChecksFailed=tempCheckAndMutateChecksFailed;
  checkAndMutateChecksPassed=tempCheckAndMutateChecksPassed;
  storefileIndexSize=tempStorefileIndexSize;
  totalStaticIndexSize=tempTotalStaticIndexSize;
  totalStaticBloomSize=tempTotalStaticBloomSize;
  numMutationsWithoutWAL=tempNumMutationsWithoutWAL;
  dataInMemoryWithoutWAL=tempDataInMemoryWithoutWAL;
  percentFileLocal=tempPercentFileLocal;
}
