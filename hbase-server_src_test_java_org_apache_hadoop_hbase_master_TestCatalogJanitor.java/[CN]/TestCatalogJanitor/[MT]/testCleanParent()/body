{
  HBaseTestingUtility htu=new HBaseTestingUtility();
  setRootDirAndCleanIt(htu,"testCleanParent");
  MasterServices services=new MockMasterServices(htu);
  try {
    CatalogJanitor janitor=new CatalogJanitor(services);
    HTableDescriptor htd=new HTableDescriptor(TableName.valueOf("table"));
    htd.addFamily(new HColumnDescriptor("f"));
    HRegionInfo parent=new HRegionInfo(htd.getTableName(),Bytes.toBytes("aaa"),Bytes.toBytes("eee"));
    HRegionInfo splita=new HRegionInfo(htd.getTableName(),Bytes.toBytes("aaa"),Bytes.toBytes("ccc"));
    HRegionInfo splitb=new HRegionInfo(htd.getTableName(),Bytes.toBytes("ccc"),Bytes.toBytes("eee"));
    Result r=createResult(parent,splita,splitb);
    Path rootdir=services.getMasterFileSystem().getRootDir();
    Path tabledir=FSUtils.getTableDir(rootdir,htd.getTableName());
    Path storedir=HStore.getStoreHomedir(tabledir,splita,htd.getColumnFamilies()[0].getName());
    Reference ref=Reference.createTopReference(Bytes.toBytes("ccc"));
    long now=System.currentTimeMillis();
    Path p=new Path(storedir,Long.toString(now) + "." + parent.getEncodedName());
    FileSystem fs=services.getMasterFileSystem().getFileSystem();
    Path path=ref.write(fs,p);
    assertTrue(fs.exists(path));
    assertFalse(janitor.cleanParent(parent,r));
    assertTrue(fs.delete(p,true));
    assertTrue(janitor.cleanParent(parent,r));
  }
  finally {
    services.stop("shutdown");
  }
}
