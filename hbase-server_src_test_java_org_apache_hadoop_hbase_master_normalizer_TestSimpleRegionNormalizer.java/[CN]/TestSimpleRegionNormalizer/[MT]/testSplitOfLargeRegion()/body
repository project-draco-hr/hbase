{
  TableName testTable=TableName.valueOf("testSplitOfLargeRegion");
  List<HRegionInfo> hris=new ArrayList<>();
  Map<byte[],Integer> regionSizes=new HashMap<>();
  HRegionInfo hri1=new HRegionInfo(testTable,Bytes.toBytes("aaa"),Bytes.toBytes("bbb"));
  hris.add(hri1);
  regionSizes.put(hri1.getRegionName(),8);
  HRegionInfo hri2=new HRegionInfo(testTable,Bytes.toBytes("bbb"),Bytes.toBytes("ccc"));
  hris.add(hri2);
  regionSizes.put(hri2.getRegionName(),6);
  HRegionInfo hri3=new HRegionInfo(testTable,Bytes.toBytes("ccc"),Bytes.toBytes("ddd"));
  hris.add(hri3);
  regionSizes.put(hri3.getRegionName(),10);
  HRegionInfo hri4=new HRegionInfo(testTable,Bytes.toBytes("ddd"),Bytes.toBytes("eee"));
  hris.add(hri4);
  regionSizes.put(hri4.getRegionName(),30);
  setupMocksForNormalizer(regionSizes,hris);
  NormalizationPlan plan=normalizer.computePlanForTable(testTable,bothTypes);
  assertTrue(plan instanceof SplitNormalizationPlan);
  assertEquals(hri4,((SplitNormalizationPlan)plan).getRegionInfo());
}
