{
  TableName testTable=TableName.valueOf("testMergeOfSmallRegions");
  List<HRegionInfo> hris=new ArrayList<>();
  Map<byte[],Integer> regionSizes=new HashMap<>();
  HRegionInfo hri1=new HRegionInfo(testTable,Bytes.toBytes("aaa"),Bytes.toBytes("bbb"));
  hris.add(hri1);
  regionSizes.put(hri1.getRegionName(),1);
  HRegionInfo hri2=new HRegionInfo(testTable,Bytes.toBytes("bbb"),Bytes.toBytes("ccc"));
  hris.add(hri2);
  regionSizes.put(hri2.getRegionName(),10000);
  HRegionInfo hri3=new HRegionInfo(testTable,Bytes.toBytes("ccc"),Bytes.toBytes("ddd"));
  hris.add(hri3);
  regionSizes.put(hri3.getRegionName(),10000);
  HRegionInfo hri4=new HRegionInfo(testTable,Bytes.toBytes("ddd"),Bytes.toBytes("eee"));
  hris.add(hri4);
  regionSizes.put(hri4.getRegionName(),10000);
  HRegionInfo hri5=new HRegionInfo(testTable,Bytes.toBytes("eee"),Bytes.toBytes("fff"));
  hris.add(hri5);
  regionSizes.put(hri5.getRegionName(),2700);
  HRegionInfo hri6=new HRegionInfo(testTable,Bytes.toBytes("fff"),Bytes.toBytes("ggg"));
  hris.add(hri6);
  regionSizes.put(hri6.getRegionName(),2700);
  setupMocksForNormalizer(regionSizes,hris);
  List<NormalizationPlan> plans=normalizer.computePlanForTable(testTable);
  NormalizationPlan plan=plans.get(0);
  assertTrue(plan instanceof MergeNormalizationPlan);
  assertEquals(hri5,((MergeNormalizationPlan)plan).getFirstRegion());
  assertEquals(hri6,((MergeNormalizationPlan)plan).getSecondRegion());
}
