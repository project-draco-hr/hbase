{
  row=makeMTRow(RAND.nextInt(NUM_MT_ROWS));
  int transferAmount=RAND.nextInt(MAX_TRANSFER_AMT * 2) - MAX_TRANSFER_AMT;
  int table1Index=RAND.nextInt(tables.length);
  int table2Index;
  do {
    table2Index=RAND.nextInt(tables.length);
  }
 while (table2Index == table1Index);
  TransactionalTable table1=tables[table1Index];
  TransactionalTable table2=tables[table2Index];
  TransactionState transactionState=transactionManager.beginTransaction();
  int table1Amount=Bytes.toInt(table1.get(transactionState,new Get(row).addColumn(COL)).getValue(COL));
  int table2Amount=Bytes.toInt(table2.get(transactionState,new Get(row).addColumn(COL)).getValue(COL));
  table1Amount-=transferAmount;
  table2Amount+=transferAmount;
  table1.put(transactionState,new Put(row).add(FAMILY,QUAL_A,Bytes.toBytes(table1Amount)));
  table2.put(transactionState,new Put(row).add(FAMILY,QUAL_A,Bytes.toBytes(table2Amount)));
  super.preCommitSleep();
  transactionManager.tryCommit(transactionState);
  LOG.trace(Bytes.toString(table1.getTableName()) + ": " + table1Amount);
  LOG.trace(Bytes.toString(table2.getTableName()) + ": " + table2Amount);
}
