{
  if (filterArguments.size() != 2) {
    throw new IllegalArgumentException("Incorrect Arguments passed to Compare Filter. " + "Expected: 2 but got: " + filterArguments.size());
  }
  this.compareOp=ParseFilter.createCompareOp(filterArguments.get(0));
  this.comparator=ParseFilter.createComparator(ParseFilter.convertByteArrayToString(filterArguments.get(1)));
  if (this.comparator instanceof RegexStringComparator || this.comparator instanceof SubstringComparator) {
    if (this.compareOp != CompareOp.EQUAL && this.compareOp != CompareOp.NOT_EQUAL) {
      throw new IllegalArgumentException("A regexstring comparator and substring comparator" + " can only be used with EQUAL and NOT_EQUAL");
    }
  }
  return this;
}
