{
  this.rms=rms;
  this.id=id;
  this.keyPrefix="source." + this.id + ".";
  ageOfLastShippedOpKey=this.keyPrefix + "ageOfLastShippedOp";
  ageOfLastShippedOpGauge=rms.getMetricsRegistry().getGauge(ageOfLastShippedOpKey,0L);
  sizeOfLogQueueKey=this.keyPrefix + "sizeOfLogQueue";
  sizeOfLogQueueGauge=rms.getMetricsRegistry().getGauge(sizeOfLogQueueKey,0L);
  shippedBatchesKey=this.keyPrefix + "shippedBatches";
  shippedBatchesCounter=rms.getMetricsRegistry().getCounter(shippedBatchesKey,0L);
  shippedOpsKey=this.keyPrefix + "shippedOps";
  shippedOpsCounter=rms.getMetricsRegistry().getCounter(shippedOpsKey,0L);
  shippedKBsKey=this.keyPrefix + "shippedKBs";
  shippedKBsCounter=rms.getMetricsRegistry().getCounter(shippedKBsKey,0L);
  shippedBytesKey=this.keyPrefix + "shippedBytes";
  shippedBytesCounter=rms.getMetricsRegistry().getCounter(shippedBytesKey,0L);
  logReadInBytesKey=this.keyPrefix + "logReadInBytes";
  logReadInBytesCounter=rms.getMetricsRegistry().getCounter(logReadInBytesKey,0L);
  logReadInEditsKey=this.keyPrefix + "logEditsRead";
  logReadInEditsCounter=rms.getMetricsRegistry().getCounter(logReadInEditsKey,0L);
  logEditsFilteredKey=this.keyPrefix + "logEditsFiltered";
  logEditsFilteredCounter=rms.getMetricsRegistry().getCounter(logEditsFilteredKey,0L);
  shippedHFilesKey=this.keyPrefix + "shippedHFiles";
  shippedHFilesCounter=rms.getMetricsRegistry().getCounter(shippedHFilesKey,0L);
  sizeOfHFileRefsQueueKey=this.keyPrefix + "sizeOfHFileRefsQueue";
  sizeOfHFileRefsQueueGauge=rms.getMetricsRegistry().getGauge(sizeOfHFileRefsQueueKey,0L);
  unknownFileLengthKey=this.keyPrefix + "closedLogsWithUnknownFileLength";
  unknownFileLengthForClosedWAL=rms.getMetricsRegistry().getCounter(unknownFileLengthKey,0L);
  uncleanlyClosedKey=this.keyPrefix + "uncleanlyClosedLogs";
  uncleanlyClosedWAL=rms.getMetricsRegistry().getCounter(uncleanlyClosedKey,0L);
  uncleanlySkippedBytesKey=this.keyPrefix + "ignoredUncleanlyClosedLogContentsInBytes";
  uncleanlyClosedSkippedBytes=rms.getMetricsRegistry().getCounter(uncleanlySkippedBytesKey,0L);
  restartedKey=this.keyPrefix + "restartedLogReading";
  restartWALReading=rms.getMetricsRegistry().getCounter(restartedKey,0L);
  repeatedBytesKey=this.keyPrefix + "repeatedLogFileBytes";
  repeatedFileBytes=rms.getMetricsRegistry().getCounter(repeatedBytesKey,0L);
  completedLogsKey=this.keyPrefix + "completedLogs";
  completedWAL=rms.getMetricsRegistry().getCounter(completedLogsKey,0L);
  completedRecoveryKey=this.keyPrefix + "completedRecoverQueues";
  completedRecoveryQueue=rms.getMetricsRegistry().getCounter(completedRecoveryKey,0L);
}
