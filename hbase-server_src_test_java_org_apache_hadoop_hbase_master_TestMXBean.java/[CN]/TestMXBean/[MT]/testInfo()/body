{
  HMaster master=TEST_UTIL.getHBaseCluster().getMaster();
  MXBeanImpl info=MXBeanImpl.init(master);
  Assert.assertEquals(master.getAverageLoad(),info.getAverageLoad());
  Assert.assertEquals(master.getClusterId(),info.getClusterId());
  Assert.assertEquals(master.getMasterActiveTime(),info.getMasterActiveTime());
  Assert.assertEquals(master.getMasterStartTime(),info.getMasterStartTime());
  Assert.assertEquals(master.getCoprocessors().length,info.getCoprocessors().length);
  Assert.assertEquals(master.getServerManager().getOnlineServersList().size(),info.getRegionServers().size());
  Assert.assertEquals(master.getAssignmentManager().isRegionsInTransition(),info.getRegionsInTransition().length > 0);
  Assert.assertTrue(info.getRegionServers().size() == 4);
  String zkServers=info.getZookeeperQuorum();
  Assert.assertEquals(zkServers.split(",").length,TEST_UTIL.getZkCluster().getZooKeeperServerNum());
  verifyRegionServers(info.getRegionServers());
  TEST_UTIL.getMiniHBaseCluster().stopRegionServer(3,false);
  TEST_UTIL.getMiniHBaseCluster().waitOnRegionServer(3);
  Assert.assertTrue(info.getRegionServers().size() == 3);
  Assert.assertTrue(info.getDeadRegionServers().length == 1);
}
