'\n# Script to find hanging test from Jenkins build output\n# usage: ./findHangingTests.py <url of Jenkins build console>\n'
import re
import sys
import requests
BAD_RUN_STRINGS = ['Slave went offline during the build', 'The forked VM terminated without properly saying goodbye']
if (__name__ == '__main__'):
    if (len(sys.argv) != 2):
        print 'ERROR : Provide the jenkins job console URL as the only argument.'
        sys.exit(1)
    print 'Fetching {}'.format(sys.argv[1])
    result = get_bad_tests(sys.argv[1])
    if (not result):
        sys.exit(1)
    [all_tests, failed_tests, timedout_tests, hanging_tests] = result
    print 'Found {} hanging tests:'.format(len(hanging_tests))
    for test in hanging_tests:
        print test
    print '\n'
    print 'Found {} failed tests of which {} timed out:'.format(len(failed_tests), len(timedout_tests))
    for test in failed_tests:
        print '{0} {1}'.format(test, ('(Timed Out)' if (test in timedout_tests) else ''))
    print "\nA test may have had 0 or more atomic test failures before it timed out. So a 'Timed Out' test may have other errors too."
