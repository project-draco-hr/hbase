{
  String serverName=null;
  if (serverAddress != null && serverAddress.length() > 0) {
    serverName=HServerInfo.getServerName(serverAddress,startCode);
  }
  HServerInfo storedInfo=null;
synchronized (this.master.regionManager) {
    if (info.isOffline() || (serverName != null && this.master.regionManager.regionIsInTransition(info.getRegionNameAsString())) || (serverName != null && this.master.serverManager.isDead(serverName))) {
      return;
    }
    if (serverName != null) {
      storedInfo=this.master.serverManager.getServerInfo(serverName);
    }
    if (storedInfo == null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Current assignment of " + info.getRegionNameAsString() + " is not valid; "+ " Server '"+ serverAddress+ "' startCode: "+ startCode+ " unknown.");
      }
      if (!this.master.regionManager.isInitialMetaScanComplete() && serverName != null) {
        Path logDir=new Path(this.master.rootdir,HLog.getHLogDirectoryName(serverName));
        try {
          if (master.fs.exists(logDir)) {
            this.master.regionManager.splitLogLock.lock();
            try {
              HLog.splitLog(master.rootdir,logDir,master.fs,master.getConfiguration());
            }
  finally {
              this.master.regionManager.splitLogLock.unlock();
            }
          }
          if (LOG.isDebugEnabled()) {
            LOG.debug("Split " + logDir.toString());
          }
        }
 catch (        IOException e) {
          LOG.warn("unable to split region server log because: ",e);
          throw e;
        }
      }
      this.master.regionManager.setUnassigned(info,true);
    }
  }
}
