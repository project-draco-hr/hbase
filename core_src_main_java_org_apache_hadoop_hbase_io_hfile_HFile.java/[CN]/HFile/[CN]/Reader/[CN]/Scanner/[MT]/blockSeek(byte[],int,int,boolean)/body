{
  int klen, vlen;
  int lastLen=0;
  do {
    klen=block.getInt();
    vlen=block.getInt();
    int comp=this.reader.comparator.compare(key,offset,length,block.array(),block.arrayOffset() + block.position(),klen);
    if (comp == 0) {
      if (seekBefore) {
        block.position(block.position() - lastLen - 16);
        currKeyLen=block.getInt();
        currValueLen=block.getInt();
        return 1;
      }
      currKeyLen=klen;
      currValueLen=vlen;
      return 0;
    }
    if (comp < 0) {
      block.position(block.position() - lastLen - 16);
      currKeyLen=block.getInt();
      currValueLen=block.getInt();
      return 1;
    }
    block.position(block.position() + klen + vlen);
    lastLen=klen + vlen;
  }
 while (block.remaining() > 0);
  block.position(block.position() - lastLen - 8);
  currKeyLen=block.getInt();
  currValueLen=block.getInt();
  return 1;
}
