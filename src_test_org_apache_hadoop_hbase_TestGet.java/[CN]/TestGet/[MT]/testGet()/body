{
  MiniDFSCluster cluster=null;
  try {
    cluster=new MiniDFSCluster(conf,2,true,(String[])null);
    FileSystem fs=cluster.getFileSystem();
    Path dir=new Path("/hbase");
    fs.mkdirs(dir);
    HTableDescriptor desc=new HTableDescriptor("test");
    desc.addFamily(new HColumnDescriptor(CONTENTS.toString()));
    desc.addFamily(new HColumnDescriptor(HConstants.COLUMN_FAMILY.toString()));
    HRegionInfo info=new HRegionInfo(0L,desc,null,null);
    Path regionDir=HRegion.getRegionDir(dir,info.regionName);
    fs.mkdirs(regionDir);
    HLog log=new HLog(fs,new Path(regionDir,"log"),conf);
    HRegion r=new HRegion(dir,log,fs,conf,info,null);
    long lockid=r.startUpdate(ROW_KEY);
    ByteArrayOutputStream bytes=new ByteArrayOutputStream();
    DataOutputStream s=new DataOutputStream(bytes);
    CONTENTS.write(s);
    r.put(lockid,CONTENTS,bytes.toByteArray());
    bytes.reset();
    HGlobals.rootRegionInfo.write(s);
    r.put(lockid,HConstants.COL_REGIONINFO,bytes.toByteArray());
    r.commit(lockid,System.currentTimeMillis());
    lockid=r.startUpdate(ROW_KEY);
    r.put(lockid,HConstants.COL_SERVER,new HServerAddress(SERVER_ADDRESS).toString().getBytes(HConstants.UTF8_ENCODING));
    r.put(lockid,HConstants.COL_STARTCODE,String.valueOf(lockid).getBytes(HConstants.UTF8_ENCODING));
    r.put(lockid,new Text(HConstants.COLUMN_FAMILY + "region"),"region".getBytes(HConstants.UTF8_ENCODING));
    r.commit(lockid,System.currentTimeMillis());
    verifyGet(r,SERVER_ADDRESS);
    r.close();
    log.rollWriter();
    r=new HRegion(dir,log,fs,conf,info,null);
    verifyGet(r,SERVER_ADDRESS);
    lockid=r.startUpdate(ROW_KEY);
    r.put(lockid,new Text(HConstants.COLUMN_FAMILY + "region"),"region2".getBytes());
    String otherServerName="bar.foo.com:4321";
    r.put(lockid,HConstants.COL_SERVER,new HServerAddress(otherServerName).toString().getBytes(HConstants.UTF8_ENCODING));
    r.put(lockid,new Text(HConstants.COLUMN_FAMILY + "junk"),"junk".getBytes());
    r.commit(lockid,System.currentTimeMillis());
    verifyGet(r,otherServerName);
    r.close();
    log.rollWriter();
    r=new HRegion(dir,log,fs,conf,info,null);
    verifyGet(r,otherServerName);
    r.close();
    log.closeAndDelete();
  }
 catch (  IOException e) {
    e.printStackTrace();
    throw e;
  }
 finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
