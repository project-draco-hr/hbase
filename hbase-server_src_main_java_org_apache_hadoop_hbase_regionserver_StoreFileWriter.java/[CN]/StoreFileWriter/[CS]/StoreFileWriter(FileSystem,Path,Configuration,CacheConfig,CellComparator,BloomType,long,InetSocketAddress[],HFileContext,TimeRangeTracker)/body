{
  this.timeRangeTrackerSet=trt != null;
  this.timeRangeTracker=this.timeRangeTrackerSet ? trt : new TimeRangeTracker();
  writer=HFile.getWriterFactory(conf,cacheConf).withPath(fs,path).withComparator(comparator).withFavoredNodes(favoredNodes).withFileContext(fileContext).create();
  generalBloomFilterWriter=BloomFilterFactory.createGeneralBloomAtWrite(conf,cacheConf,bloomType,(int)Math.min(maxKeys,Integer.MAX_VALUE),writer);
  if (generalBloomFilterWriter != null) {
    this.bloomType=bloomType;
    if (LOG.isTraceEnabled()) {
      LOG.trace("Bloom filter type for " + path + ": "+ this.bloomType+ ", "+ generalBloomFilterWriter.getClass().getSimpleName());
    }
switch (bloomType) {
case ROW:
      bloomContext=new RowBloomContext(generalBloomFilterWriter,comparator);
    break;
case ROWCOL:
  bloomContext=new RowColBloomContext(generalBloomFilterWriter,comparator);
break;
default :
throw new IOException("Invalid Bloom filter type: " + bloomType + " (ROW or ROWCOL expected)");
}
}
 else {
this.bloomType=BloomType.NONE;
}
if (this.bloomType != BloomType.ROWCOL) {
this.deleteFamilyBloomFilterWriter=BloomFilterFactory.createDeleteBloomAtWrite(conf,cacheConf,(int)Math.min(maxKeys,Integer.MAX_VALUE),writer);
deleteFamilyBloomContext=new RowBloomContext(deleteFamilyBloomFilterWriter,comparator);
}
 else {
deleteFamilyBloomFilterWriter=null;
}
if (deleteFamilyBloomFilterWriter != null && LOG.isTraceEnabled()) {
LOG.trace("Delete Family Bloom filter type for " + path + ": "+ deleteFamilyBloomFilterWriter.getClass().getSimpleName());
}
}
