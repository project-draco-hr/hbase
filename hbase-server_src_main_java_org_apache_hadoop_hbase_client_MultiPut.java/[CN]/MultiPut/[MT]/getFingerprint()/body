{
  Map<String,Object> map=new HashMap<String,Object>();
  Map<String,Map> tableInfo=new HashMap<String,Map>();
  map.put("tables",tableInfo);
  for (  Map.Entry<byte[],List<Put>> entry : puts.entrySet()) {
    Set<String> familySet;
    try {
      String tableName=Bytes.toStringBinary(HRegionInfo.parseRegionName(entry.getKey())[0]);
      if (tableInfo.get(tableName) == null) {
        Map<String,Object> table=new HashMap<String,Object>();
        familySet=new TreeSet<String>();
        table.put("families",familySet);
        tableInfo.put(tableName,table);
      }
 else {
        familySet=(Set<String>)tableInfo.get(tableName).get("families");
      }
    }
 catch (    IOException ioe) {
      Map<String,Object> table=new HashMap<String,Object>();
      familySet=new TreeSet<String>();
      table.put("families",familySet);
      tableInfo.put(Bytes.toStringBinary(entry.getKey()),table);
    }
    for (    Put p : entry.getValue()) {
      for (      byte[] fam : p.getFamilyMap().keySet()) {
        familySet.add(Bytes.toStringBinary(fam));
      }
    }
  }
  return map;
}
