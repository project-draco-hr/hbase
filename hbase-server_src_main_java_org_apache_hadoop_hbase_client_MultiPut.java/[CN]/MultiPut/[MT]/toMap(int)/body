{
  Map<String,Object> map=getFingerprint();
  Map<String,Object> tableInfo=(Map<String,Object>)map.get("tables");
  int putCount=0;
  for (  Map.Entry<byte[],List<Put>> entry : puts.entrySet()) {
    if (putCount >= DEFAULT_MAX_PUT_OUTPUT) {
      putCount+=entry.getValue().size();
      continue;
    }
    List<Put> regionPuts=entry.getValue();
    List<Map<String,Object>> putSummaries=new ArrayList<Map<String,Object>>();
    int regionPutsToAdd=regionPuts.size();
    putCount+=regionPutsToAdd;
    if (putCount > DEFAULT_MAX_PUT_OUTPUT) {
      regionPutsToAdd-=putCount - DEFAULT_MAX_PUT_OUTPUT;
    }
    for (Iterator<Put> iter=regionPuts.iterator(); regionPutsToAdd-- > 0; ) {
      putSummaries.add(iter.next().toMap(maxCols));
    }
    String tableName="";
    try {
      tableName=Bytes.toStringBinary(HRegionInfo.parseRegionName(entry.getKey())[0]);
    }
 catch (    IOException ioe) {
      tableName=Bytes.toStringBinary(entry.getKey());
    }
    Map<String,Object> table=(Map<String,Object>)tableInfo.get(tableName);
    if (table == null) {
      table=new HashMap<String,Object>();
      tableInfo.put(tableName,table);
      table.put("puts",putSummaries);
    }
 else     if (table.get("puts") == null) {
      table.put("puts",putSummaries);
    }
 else {
      ((List<Map<String,Object>>)table.get("puts")).addAll(putSummaries);
    }
  }
  map.put("totalPuts",putCount);
  return map;
}
