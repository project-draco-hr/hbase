{
  if (parseArgs(args) != 0) {
    return -1;
  }
  try {
    fs=FileSystem.get(conf);
    LOG.info("Verifying that file system is available...");
    if (!FSUtils.isFileSystemAvailable(fs)) {
      throw new IOException("Filesystem must be available for upgrade to run.");
    }
    LOG.info("Verifying that HBase is not running...");
    try {
      HBaseAdmin admin=new HBaseAdmin(conf);
      if (admin.isMasterRunning()) {
        throw new IllegalStateException("HBase cluster must be off-line during upgrade.");
      }
    }
 catch (    MasterNotRunningException e) {
    }
    LOG.info("Starting upgrade" + (readOnly ? " check" : ""));
    rootdir=fs.makeQualified(new Path(this.conf.get(HConstants.HBASE_DIR)));
    if (!fs.exists(rootdir)) {
      throw new FileNotFoundException("HBase root directory " + rootdir.toString() + " does not exist.");
    }
    String version=FSUtils.checkVersion(fs,rootdir);
    if (version != null && version.compareTo(HConstants.FILE_SYSTEM_VERSION) == 0) {
      LOG.info("No upgrade necessary.");
      return 0;
    }
    FileStatus[] rootFiles=getRootDirFiles();
    if (version == null) {
      migrateFromNoVersion(rootFiles);
      migrateToV2(rootFiles);
    }
 else     if (version.compareTo("0.1") == 0) {
      migrateToV2(rootFiles);
    }
 else     if (version.compareTo("2") == 0) {
    }
 else {
      throw new IOException("Unrecognized version: " + version);
    }
    if (!readOnly) {
      LOG.info("Setting file system version.");
      FSUtils.setVersion(fs,rootdir);
      LOG.info("Upgrade successful.");
    }
 else     if (migrationNeeded) {
      LOG.info("Upgrade needed.");
    }
    return 0;
  }
 catch (  Exception e) {
    LOG.fatal("Upgrade" + (readOnly ? " check" : "") + " failed",e);
    return -1;
  }
}
