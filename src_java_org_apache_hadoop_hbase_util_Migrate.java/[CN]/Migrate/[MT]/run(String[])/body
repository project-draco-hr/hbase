{
  if (parseArgs(args) != 0) {
    return -1;
  }
  if (!setFsDefaultName()) {
    return -2;
  }
  if (!verifyFilesystem()) {
    return -3;
  }
  if (!notRunning()) {
    return -4;
  }
  try {
    LOG.info("Starting upgrade" + (readOnly ? " check" : ""));
    String versionStr=FSUtils.getVersion(fs,FSUtils.getRootDir(this.conf));
    if (versionStr == null) {
      throw new IOException("File system version file " + HConstants.VERSION_FILE_NAME + " does not exist. No upgrade possible."+ MIGRATION_LINK);
    }
    if (versionStr.compareTo(HConstants.FILE_SYSTEM_VERSION) == 0) {
      LOG.info("No upgrade necessary.");
      return 0;
    }
    float version=Float.parseFloat(versionStr);
    if (version == HBASE_0_1_VERSION || Integer.valueOf(versionStr) < PREVIOUS_VERSION) {
      String msg="Cannot upgrade from " + versionStr + " to "+ HConstants.FILE_SYSTEM_VERSION+ " you must install hbase-0.2.x, run "+ "the upgrade tool, reinstall this version and run this utility again."+ MIGRATION_LINK;
      System.out.println(msg);
      throw new IOException(msg);
    }
    if (!readOnly) {
      LOG.info("Setting file system version.");
      FSUtils.setVersion(fs,FSUtils.getRootDir(this.conf));
      LOG.info("Upgrade successful.");
    }
 else     if (this.migrationNeeded) {
      LOG.info("Upgrade needed.");
    }
    return 0;
  }
 catch (  Exception e) {
    LOG.fatal("Upgrade" + (readOnly ? " check" : "") + " failed",e);
    return -1;
  }
}
