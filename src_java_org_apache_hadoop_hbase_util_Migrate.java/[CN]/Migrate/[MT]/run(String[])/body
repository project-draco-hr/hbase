{
  if (parseArgs(args) != 0) {
    return -1;
  }
  try {
    fs=FileSystem.get(conf);
    LOG.info("Verifying that file system is available...");
    FSUtils.checkFileSystemAvailable(fs);
  }
 catch (  IOException e) {
    LOG.fatal("File system is not available",e);
    return -1;
  }
  LOG.info("Verifying that HBase is not running...");
  try {
    HBaseAdmin.checkHBaseAvailable(conf);
    LOG.fatal("HBase cluster must be off-line.");
    return -1;
  }
 catch (  MasterNotRunningException e) {
  }
  try {
    this.utils=new MetaUtils(conf);
    this.rootdir=utils.initialize();
    LOG.info("Starting upgrade" + (readOnly ? " check" : ""));
    String version=FSUtils.getVersion(fs,rootdir);
    if (version != null && version.compareTo(HConstants.FILE_SYSTEM_VERSION) == 0) {
      LOG.info("No upgrade necessary.");
      return 0;
    }
    FileStatus[] rootFiles=getRootDirFiles();
    if (version == null) {
      migrateFromNoVersion(rootFiles);
      migrateToV2(rootFiles);
    }
 else     if (version.compareTo("0.1") == 0) {
      migrateToV2(rootFiles);
    }
 else     if (version.compareTo("2") == 0) {
    }
 else {
      throw new IOException("Unrecognized version: " + version);
    }
    if (!readOnly) {
      LOG.info("Setting file system version.");
      FSUtils.setVersion(fs,rootdir);
      LOG.info("Upgrade successful.");
    }
 else     if (migrationNeeded) {
      LOG.info("Upgrade needed.");
    }
    return 0;
  }
 catch (  Exception e) {
    LOG.fatal("Upgrade" + (readOnly ? " check" : "") + " failed",e);
    return -1;
  }
 finally {
    if (utils != null && utils.isInitialized()) {
      utils.shutdown();
    }
  }
}
