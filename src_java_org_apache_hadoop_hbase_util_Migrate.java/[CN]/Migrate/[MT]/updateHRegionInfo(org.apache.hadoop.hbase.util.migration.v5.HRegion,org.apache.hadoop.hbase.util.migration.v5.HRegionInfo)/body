{
  byte[] oldHriTableName=oldHri.getTableDesc().getName();
  HTableDescriptor newHtd=Bytes.equals(HConstants.ROOT_TABLE_NAME,oldHriTableName) ? HTableDescriptor.ROOT_TABLEDESC : Bytes.equals(HConstants.META_TABLE_NAME,oldHriTableName) ? HTableDescriptor.META_TABLEDESC : new HTableDescriptor(oldHri.getTableDesc().getName());
  for (  org.apache.hadoop.hbase.util.migration.v5.HColumnDescriptor oldHcd : oldHri.getTableDesc().getFamilies()) {
    HColumnDescriptor newHcd=new HColumnDescriptor(HStoreKey.addDelimiter(oldHcd.getName()),oldHcd.getMaxValueLength(),HColumnDescriptor.CompressionType.valueOf(oldHcd.getCompressionType().toString()),oldHcd.isInMemory(),oldHcd.isBlockCacheEnabled(),oldHcd.getMaxValueLength(),oldHcd.getTimeToLive(),oldHcd.isBloomFilterEnabled());
    newHtd.addFamily(newHcd);
  }
  HRegionInfo newHri=new HRegionInfo(newHtd,oldHri.getStartKey(),oldHri.getEndKey(),oldHri.isSplit(),oldHri.getRegionId());
  BatchUpdate b=new BatchUpdate(newHri.getRegionName());
  b.put(HConstants.COL_REGIONINFO,Writables.getBytes(newHri));
  mr.batchUpdate(b);
  if (LOG.isDebugEnabled()) {
    LOG.debug("New " + Bytes.toString(HConstants.COL_REGIONINFO) + " for "+ oldHri.toString()+ " in "+ mr.toString()+ " is: "+ newHri.toString());
  }
}
