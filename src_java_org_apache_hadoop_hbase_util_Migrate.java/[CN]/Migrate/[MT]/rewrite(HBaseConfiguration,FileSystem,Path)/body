{
  Path familydir=mf.getParent().getParent();
  Path regiondir=familydir.getParent();
  Path basedir=regiondir.getParent();
  if (HStoreFile.isReference(mf)) {
    throw new IOException(mf.toString() + " is Reference");
  }
  HStoreFile hsf=new HStoreFile(conf,fs,basedir,Integer.parseInt(regiondir.getName()),Bytes.toBytes(familydir.getName()),Long.parseLong(mf.getName()),null);
  BloomFilterMapFile.Reader src=hsf.getReader(fs,false,false);
  HFile.Writer tgt=StoreFile.getWriter(fs,familydir);
  ImmutableBytesWritable deleteBytes=new ImmutableBytesWritable("HBASE::DELETEVAL".getBytes("UTF-8"));
  try {
    while (true) {
      HStoreKey key=new HStoreKey();
      ImmutableBytesWritable value=new ImmutableBytesWritable();
      if (!src.next(key,value)) {
        break;
      }
      byte[][] parts=KeyValue.parseColumn(key.getColumn());
      KeyValue kv=deleteBytes.equals(value) ? new KeyValue(key.getRow(),parts[0],parts[1],key.getTimestamp(),KeyValue.Type.Delete) : new KeyValue(key.getRow(),parts[0],parts[1],key.getTimestamp(),value.get());
      tgt.append(kv);
    }
    long seqid=hsf.loadInfo(fs);
    StoreFile.appendMetadata(tgt,seqid,hsf.isMajorCompaction());
    src.close();
    tgt.close();
    hsf.delete();
    fs.delete(mf.getParent(),true);
    fs.delete(new Path(familydir,"info"),true);
    LOG.info("Rewrote " + mf.toString() + " as "+ tgt.toString());
  }
 catch (  IOException e) {
    src.close();
    tgt.close();
    fs.delete(tgt.getPath(),true);
  }
}
