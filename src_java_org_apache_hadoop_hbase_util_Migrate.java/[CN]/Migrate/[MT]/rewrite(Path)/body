{
  FileStatus[] tableDirs=fs.listStatus(hbaseRootDir,new DirFilter(fs));
  for (int i=0; i < tableDirs.length; i++) {
    Path d=tableDirs[i].getPath();
    if (d.getName().equals(HConstants.HREGION_LOGDIR_NAME))     continue;
    FileStatus[] regionDirs=fs.listStatus(d,new DirFilter(fs));
    for (int j=0; j < regionDirs.length; j++) {
      Path dd=regionDirs[j].getPath();
      if (dd.equals(HConstants.HREGION_COMPACTIONDIR_NAME))       continue;
      FileStatus[] familyDirs=fs.listStatus(dd,new DirFilter(fs));
      for (int k=0; k < familyDirs.length; k++) {
        Path family=familyDirs[k].getPath();
        Path mfdir=new Path(family,"mapfiles");
        FileStatus[] mfs=fs.listStatus(mfdir);
        if (mfs.length > 1) {
          throw new IOException("Should only be one directory in: " + mfdir);
        }
        Path mf=mfs[0].getPath();
        Path infofile=new Path(new Path(family,"info"),mf.getName());
        rewrite(this.fs,mf,infofile);
      }
    }
  }
}
