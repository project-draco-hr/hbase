{
  byte[] tableName=Bytes.toBytes("testtable");
  byte[][] families={fam1,fam2,fam3};
  Configuration hc=initSplit();
  HRegion region=initHRegion(tableName,getName(),hc,CoprocessorImpl.class,families);
  addContent(region,fam3);
  region.flushcache();
  byte[] splitRow=region.compactStores();
  assertNotNull(splitRow);
  HRegion[] regions=split(region,splitRow);
  for (int i=0; i < regions.length; i++) {
    regions[i]=reopenRegion(regions[i],CoprocessorImpl.class);
  }
  region.close();
  region.getLog().closeAndDelete();
  Coprocessor c=region.getCoprocessorHost().findCoprocessor(CoprocessorImpl.class.getName());
  assertTrue(((CoprocessorImpl)c).wasOpened());
  assertTrue(((CoprocessorImpl)c).wasClosed());
  assertTrue(((CoprocessorImpl)c).wasFlushed());
  assertTrue(((CoprocessorImpl)c).wasCompacted());
  assertTrue(((CoprocessorImpl)c).wasSplit());
  for (int i=0; i < regions.length; i++) {
    regions[i].close();
    regions[i].getLog().closeAndDelete();
    c=region.getCoprocessorHost().findCoprocessor(CoprocessorImpl.class.getName());
    assertTrue(((CoprocessorImpl)c).wasOpened());
    assertTrue(((CoprocessorImpl)c).wasClosed());
    assertTrue(((CoprocessorImpl)c).wasCompacted());
  }
}
