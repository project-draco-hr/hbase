{
  HBackupFileSystem hbfs;
  LOG.info("create full backup image for all tables");
  String tablesetFull=table1.getNameAsString() + BackupRestoreConstants.TABLENAME_DELIMITER_IN_COMMAND + table2.getNameAsString()+ BackupRestoreConstants.TABLENAME_DELIMITER_IN_COMMAND+ table3.getNameAsString()+ BackupRestoreConstants.TABLENAME_DELIMITER_IN_COMMAND+ table4.getNameAsString();
  String backupIdFull=BackupClient.create("full",BACKUP_ROOT_DIR,tablesetFull,null);
  assertTrue(checkSucceeded(backupIdFull));
  Connection conn=ConnectionFactory.createConnection(conf1);
  HTable t1=(HTable)conn.getTable(table1);
  Put p1;
  for (int i=0; i < NB_ROWS_IN_BATCH; i++) {
    p1=new Put(Bytes.toBytes("row-t1" + i));
    p1.addColumn(famName,qualName,Bytes.toBytes("val" + i));
    t1.put(p1);
  }
  Assert.assertThat(TEST_UTIL.countRows(t1),CoreMatchers.equalTo(NB_ROWS_IN_BATCH * 2));
  t1.close();
  HTable t2=(HTable)conn.getTable(table2);
  Put p2;
  for (int i=0; i < 5; i++) {
    p2=new Put(Bytes.toBytes("row-t2" + i));
    p2.addColumn(famName,qualName,Bytes.toBytes("val" + i));
    t2.put(p2);
  }
  Assert.assertThat(TEST_UTIL.countRows(t2),CoreMatchers.equalTo(NB_ROWS_IN_BATCH + 5));
  t2.close();
  String tablesetIncMultiple=table1.getNameAsString() + BackupRestoreConstants.TABLENAME_DELIMITER_IN_COMMAND + table2.getNameAsString()+ BackupRestoreConstants.TABLENAME_DELIMITER_IN_COMMAND+ table3.getNameAsString();
  String backupIdIncMultiple=BackupClient.create("incremental",BACKUP_ROOT_DIR,tablesetIncMultiple,null);
  assertTrue(checkSucceeded(backupIdIncMultiple));
  String[] tablesRestoreFull=new String[]{table1.getNameAsString(),table2.getNameAsString(),table3.getNameAsString(),table4.getNameAsString()};
  String[] tablesMapFull=new String[]{table1_restore,table2_restore,table3_restore,table4_restore};
  hbfs=new HBackupFileSystem(conf1,new Path(BACKUP_ROOT_DIR),backupIdFull);
  RestoreClient.restore_stage1(hbfs,BACKUP_ROOT_DIR,backupIdFull,false,false,tablesRestoreFull,tablesMapFull,false);
  HBaseAdmin hAdmin=TEST_UTIL.getHBaseAdmin();
  assertTrue(hAdmin.tableExists(TableName.valueOf(table1_restore)));
  assertTrue(hAdmin.tableExists(TableName.valueOf(table2_restore)));
  assertTrue(hAdmin.tableExists(TableName.valueOf(table3_restore)));
  assertTrue(hAdmin.tableExists(TableName.valueOf(table4_restore)));
  hAdmin.close();
  HTable hTable=(HTable)conn.getTable(TableName.valueOf(table1_restore));
  Assert.assertThat(TEST_UTIL.countRows(hTable),CoreMatchers.equalTo(NB_ROWS_IN_BATCH));
  hTable.close();
  hTable=(HTable)conn.getTable(TableName.valueOf(table2_restore));
  Assert.assertThat(TEST_UTIL.countRows(hTable),CoreMatchers.equalTo(NB_ROWS_IN_BATCH));
  hTable.close();
  hTable=(HTable)conn.getTable(TableName.valueOf(table3_restore));
  Assert.assertThat(TEST_UTIL.countRows(hTable),CoreMatchers.equalTo(0));
  hTable.close();
  hTable=(HTable)conn.getTable(TableName.valueOf(table4_restore));
  Assert.assertThat(TEST_UTIL.countRows(hTable),CoreMatchers.equalTo(0));
  hTable.close();
  String[] tablesRestoreIncMultiple=new String[]{table1.getNameAsString(),table2.getNameAsString(),table3.getNameAsString()};
  String[] tablesMapIncMultiple=new String[]{table1_restore,table2_restore,table3_restore};
  hbfs=new HBackupFileSystem(conf1,new Path(BACKUP_ROOT_DIR),backupIdIncMultiple);
  RestoreClient.restore_stage1(hbfs,BACKUP_ROOT_DIR,backupIdIncMultiple,false,false,tablesRestoreIncMultiple,tablesMapIncMultiple,true);
  hTable=(HTable)conn.getTable(TableName.valueOf(table1_restore));
  Assert.assertThat(TEST_UTIL.countRows(hTable),CoreMatchers.equalTo(NB_ROWS_IN_BATCH * 2));
  hTable.close();
  hTable=(HTable)conn.getTable(TableName.valueOf(table2_restore));
  Assert.assertThat(TEST_UTIL.countRows(hTable),CoreMatchers.equalTo(NB_ROWS_IN_BATCH + 5));
  hTable.close();
  hTable=(HTable)conn.getTable(TableName.valueOf(table3_restore));
  Assert.assertThat(TEST_UTIL.countRows(hTable),CoreMatchers.equalTo(0));
  hTable.close();
  String tablesetIncEmpty=table4.getNameAsString();
  String backupIdIncEmpty=BackupClient.create("incremental",BACKUP_ROOT_DIR,tablesetIncEmpty,null);
  assertTrue(checkSucceeded(backupIdIncEmpty));
  String[] tablesRestoreIncEmpty=new String[]{table4.getNameAsString()};
  String[] tablesMapIncEmpty=new String[]{table4_restore};
  hbfs=new HBackupFileSystem(conf1,new Path(BACKUP_ROOT_DIR),backupIdIncEmpty);
  RestoreClient.restore_stage1(hbfs,BACKUP_ROOT_DIR,backupIdIncEmpty,false,false,tablesRestoreIncEmpty,tablesMapIncEmpty,true);
  hTable=(HTable)conn.getTable(TableName.valueOf(table4_restore));
  Assert.assertThat(TEST_UTIL.countRows(hTable),CoreMatchers.equalTo(0));
  hTable.close();
  conn.close();
}
