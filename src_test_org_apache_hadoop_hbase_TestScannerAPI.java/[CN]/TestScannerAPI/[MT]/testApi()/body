{
  final String tableName=getName();
  HBaseAdmin admin=new HBaseAdmin(conf);
  HTableDescriptor tableDesc=new HTableDescriptor(tableName);
  for (int i=0; i < columns.length; i++) {
    tableDesc.addFamily(new HColumnDescriptor(columns[i]));
  }
  admin.createTable(tableDesc);
  HTable table=new HTable(conf,getName());
  for (  Map.Entry<byte[],SortedMap<byte[],Cell>> row : values.entrySet()) {
    BatchUpdate b=new BatchUpdate(row.getKey());
    for (    Map.Entry<byte[],Cell> val : row.getValue().entrySet()) {
      b.put(val.getKey(),val.getValue().getValue());
    }
    table.commit(b);
  }
  HRegion region=null;
  try {
    Collection<HRegion> regions=cluster.getRegionThreads().get(0).getRegionServer().getOnlineRegions();
    for (    HRegion r : regions) {
      if (!r.getRegionInfo().isMetaRegion()) {
        region=r;
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    IOException iox=new IOException("error finding region");
    iox.initCause(e);
    throw iox;
  }
  @SuppressWarnings("null") ScannerIncommon scanner=new InternalScannerIncommon(region.getScanner(columns,startRow,System.currentTimeMillis(),null));
  try {
    verify(scanner);
  }
  finally {
    scanner.close();
  }
  scanner=new ClientScannerIncommon(table.getScanner(columns,startRow));
  try {
    verify(scanner);
  }
  finally {
    scanner.close();
  }
  Scanner scanner2=table.getScanner(columns,startRow);
  try {
    for (    RowResult r : scanner2) {
      assertTrue("row key",values.containsKey(r.getRow()));
      SortedMap<byte[],Cell> columnValues=values.get(r.getRow());
      assertEquals(columnValues.size(),r.size());
      for (      Map.Entry<byte[],Cell> e : columnValues.entrySet()) {
        byte[] column=e.getKey();
        assertTrue("column",r.containsKey(column));
        assertTrue("value",Arrays.equals(columnValues.get(column).getValue(),r.get(column).getValue()));
      }
    }
  }
  finally {
    scanner.close();
  }
}
