{
  RegionState.State state;
switch (proto.getState()) {
case OFFLINE:
    state=State.OFFLINE;
  break;
case PENDING_OPEN:
state=State.PENDING_OPEN;
break;
case OPENING:
state=State.OPENING;
break;
case OPEN:
state=State.OPEN;
break;
case PENDING_CLOSE:
state=State.PENDING_CLOSE;
break;
case CLOSING:
state=State.CLOSING;
break;
case CLOSED:
state=State.CLOSED;
break;
case SPLITTING:
state=State.SPLITTING;
break;
case SPLIT:
state=State.SPLIT;
break;
case FAILED_OPEN:
state=State.FAILED_OPEN;
break;
case FAILED_CLOSE:
state=State.FAILED_CLOSE;
break;
case MERGING:
state=State.MERGING;
break;
case MERGED:
state=State.MERGED;
break;
case SPLITTING_NEW:
state=State.SPLITTING_NEW;
break;
case MERGING_NEW:
state=State.MERGING_NEW;
break;
default :
throw new IllegalStateException("");
}
return new RegionState(HRegionInfo.convert(proto.getRegionInfo()),state,proto.getStamp(),null);
}
