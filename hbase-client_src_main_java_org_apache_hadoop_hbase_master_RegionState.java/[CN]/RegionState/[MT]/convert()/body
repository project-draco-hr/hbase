{
  ClusterStatusProtos.RegionState.Builder regionState=ClusterStatusProtos.RegionState.newBuilder();
  ClusterStatusProtos.RegionState.State rs;
switch (regionState.getState()) {
case OFFLINE:
    rs=ClusterStatusProtos.RegionState.State.OFFLINE;
  break;
case PENDING_OPEN:
rs=ClusterStatusProtos.RegionState.State.PENDING_OPEN;
break;
case OPENING:
rs=ClusterStatusProtos.RegionState.State.OPENING;
break;
case OPEN:
rs=ClusterStatusProtos.RegionState.State.OPEN;
break;
case PENDING_CLOSE:
rs=ClusterStatusProtos.RegionState.State.PENDING_CLOSE;
break;
case CLOSING:
rs=ClusterStatusProtos.RegionState.State.CLOSING;
break;
case CLOSED:
rs=ClusterStatusProtos.RegionState.State.CLOSED;
break;
case SPLITTING:
rs=ClusterStatusProtos.RegionState.State.SPLITTING;
break;
case SPLIT:
rs=ClusterStatusProtos.RegionState.State.SPLIT;
break;
case FAILED_OPEN:
rs=ClusterStatusProtos.RegionState.State.FAILED_OPEN;
break;
case FAILED_CLOSE:
rs=ClusterStatusProtos.RegionState.State.FAILED_CLOSE;
break;
default :
throw new IllegalStateException("");
}
regionState.setRegionInfo(HRegionInfo.convert(region));
regionState.setState(rs);
regionState.setStamp(getStamp());
return regionState.build();
}
