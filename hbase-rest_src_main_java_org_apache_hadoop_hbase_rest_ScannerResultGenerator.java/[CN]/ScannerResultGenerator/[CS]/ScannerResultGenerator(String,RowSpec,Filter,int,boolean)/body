{
  Table table=RESTServlet.getInstance().getTable(tableName);
  try {
    Scan scan;
    if (rowspec.hasEndRow()) {
      scan=new Scan(rowspec.getStartRow(),rowspec.getEndRow());
    }
 else {
      scan=new Scan(rowspec.getStartRow());
    }
    if (rowspec.hasColumns()) {
      byte[][] columns=rowspec.getColumns();
      for (      byte[] column : columns) {
        byte[][] split=KeyValue.parseColumn(column);
        if (split.length == 1) {
          scan.addFamily(split[0]);
        }
 else         if (split.length == 2) {
          scan.addColumn(split[0],split[1]);
        }
 else {
          throw new IllegalArgumentException("Invalid familyAndQualifier provided.");
        }
      }
    }
    scan.setTimeRange(rowspec.getStartTime(),rowspec.getEndTime());
    scan.setMaxVersions(rowspec.getMaxVersions());
    if (filter != null) {
      scan.setFilter(filter);
    }
    if (caching > 0) {
      scan.setCaching(caching);
    }
    scan.setCacheBlocks(cacheBlocks);
    if (rowspec.hasLabels()) {
      scan.setAuthorizations(new Authorizations(rowspec.getLabels()));
    }
    scanner=table.getScanner(scan);
    cached=null;
    id=Long.toString(System.currentTimeMillis()) + Integer.toHexString(scanner.hashCode());
  }
  finally {
    table.close();
  }
}
