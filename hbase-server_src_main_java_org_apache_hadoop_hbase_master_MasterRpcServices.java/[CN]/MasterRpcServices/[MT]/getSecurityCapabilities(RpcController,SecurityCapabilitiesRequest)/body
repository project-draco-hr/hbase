{
  SecurityCapabilitiesResponse.Builder response=SecurityCapabilitiesResponse.newBuilder();
  try {
    master.checkInitialized();
    Set<Capability> capabilities=new HashSet<>();
    if (User.isHBaseSecurityEnabled(master.getConfiguration())) {
      capabilities.add(Capability.SECURE_AUTHENTICATION);
    }
 else {
      capabilities.add(Capability.SIMPLE_AUTHENTICATION);
    }
    if (master.cpHost != null && master.cpHost.findCoprocessor(AccessController.class.getName()) != null) {
      if (AccessController.isAuthorizationSupported(master.getConfiguration())) {
        capabilities.add(Capability.AUTHORIZATION);
      }
      if (AccessController.isCellAuthorizationSupported(master.getConfiguration())) {
        capabilities.add(Capability.CELL_AUTHORIZATION);
      }
    }
    if (master.cpHost != null && master.cpHost.findCoprocessor(VisibilityController.class.getName()) != null) {
      if (VisibilityController.isCellAuthorizationSupported(master.getConfiguration())) {
        capabilities.add(Capability.CELL_VISIBILITY);
      }
    }
    response.addAllCapabilities(capabilities);
  }
 catch (  IOException e) {
    throw new ServiceException(e);
  }
  return response.build();
}
