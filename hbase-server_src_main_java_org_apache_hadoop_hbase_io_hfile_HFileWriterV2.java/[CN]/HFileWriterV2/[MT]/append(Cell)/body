{
  int klength=KeyValueUtil.keyLength(cell);
  byte[] value=cell.getValueArray();
  int voffset=cell.getValueOffset();
  int vlength=cell.getValueLength();
  boolean dupKey=checkKey(cell);
  checkValue(value,voffset,vlength);
  if (!dupKey) {
    checkBlockBoundary();
  }
  if (!fsBlockWriter.isWriting())   newBlock();
  fsBlockWriter.write(cell);
  totalKeyLength+=klength;
  totalValueLength+=vlength;
  if (firstKeyInBlock == null) {
    firstKeyInBlock=new byte[klength];
    KeyValueUtil.appendKeyTo(cell,firstKeyInBlock,0);
  }
  lastCell=cell;
  lastKeyLength=klength;
  entryCount++;
  this.maxMemstoreTS=Math.max(this.maxMemstoreTS,cell.getSequenceId());
}
