{
  while (!stopRequested) {
    HMsg msg=null;
synchronized (toDo) {
      while (toDo.size() == 0) {
        try {
          toDo.wait();
        }
 catch (        InterruptedException e) {
        }
      }
      msg=toDo.remove(0);
    }
    try {
switch (msg.getMsg()) {
case HMsg.MSG_REGION_OPEN:
        openRegion(msg.getRegionInfo());
      break;
case HMsg.MSG_REGION_CLOSE:
    closeRegion(msg.getRegionInfo(),true);
  break;
case HMsg.MSG_REGION_MERGE:
throw new IOException("TODO: need to figure out merge");
case HMsg.MSG_CALL_SERVER_STARTUP:
closeAllRegions();
continue;
case HMsg.MSG_REGIONSERVER_ALREADY_RUNNING:
stop();
continue;
case HMsg.MSG_REGION_CLOSE_WITHOUT_REPORT:
closeRegion(msg.getRegionInfo(),false);
break;
case HMsg.MSG_REGION_CLOSE_AND_DELETE:
closeAndDeleteRegion(msg.getRegionInfo());
break;
default :
throw new IOException("Impossible state during msg processing.  Instruction: " + msg);
}
}
 catch (IOException e) {
e.printStackTrace();
}
}
}
