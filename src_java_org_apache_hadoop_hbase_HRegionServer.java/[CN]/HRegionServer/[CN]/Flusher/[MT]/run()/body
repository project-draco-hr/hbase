{
  while (!stopRequested) {
    long startTime=System.currentTimeMillis();
synchronized (cacheFlusherLock) {
      Vector<HRegion> toFlush=new Vector<HRegion>();
      lock.readLock().lock();
      try {
        toFlush.addAll(regions.values());
      }
  finally {
        lock.readLock().unlock();
      }
      for (Iterator<HRegion> it=toFlush.iterator(); it.hasNext(); ) {
        HRegion cur=it.next();
        if (cur.isClosed()) {
          continue;
        }
        try {
          cur.optionallyFlush();
        }
 catch (        IOException iex) {
          iex.printStackTrace();
        }
      }
    }
    long waitTime=stopRequested ? 0 : threadWakeFrequency - (System.currentTimeMillis() - startTime);
    if (waitTime > 0) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Sleep cacheFlusher");
      }
      try {
        Thread.sleep(waitTime);
      }
 catch (      InterruptedException iex) {
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("Wake cacheFlusher");
      }
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("cacheFlusher exiting");
  }
}
