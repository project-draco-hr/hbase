{
  while (!stopRequested) {
    long startTime=System.currentTimeMillis();
    Vector<HRegion> toFlush=new Vector<HRegion>();
    locker.readLock().lock();
    try {
      toFlush.addAll(regions.values());
    }
  finally {
      locker.readLock().unlock();
    }
    for (Iterator<HRegion> it=toFlush.iterator(); it.hasNext(); ) {
      HRegion cur=it.next();
      try {
        cur.optionallyFlush();
      }
 catch (      IOException iex) {
        iex.printStackTrace();
      }
    }
    long waitTime=threadWakeFrequency - (System.currentTimeMillis() - startTime);
    if (waitTime > 0) {
      try {
        Thread.sleep(waitTime);
      }
 catch (      InterruptedException iex) {
      }
    }
  }
}
