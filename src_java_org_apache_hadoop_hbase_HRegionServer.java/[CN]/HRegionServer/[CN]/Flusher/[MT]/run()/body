{
  while (!stopRequested) {
    long startTime=System.currentTimeMillis();
synchronized (cacheFlusherLock) {
      Vector<HRegion> toFlush=new Vector<HRegion>();
      lock.readLock().lock();
      try {
        toFlush.addAll(onlineRegions.values());
      }
  finally {
        lock.readLock().unlock();
      }
      for (      HRegion cur : toFlush) {
        if (cur.isClosed()) {
          continue;
        }
        try {
          cur.optionallyFlush();
        }
 catch (        IOException iex) {
          LOG.error(iex);
        }
      }
    }
    long waitTime=stopRequested ? 0 : threadWakeFrequency - (System.currentTimeMillis() - startTime);
    if (waitTime > 0) {
      try {
        Thread.sleep(waitTime);
      }
 catch (      InterruptedException iex) {
      }
    }
  }
  LOG.info("cacheFlusher exiting");
}
