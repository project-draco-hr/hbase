{
  while (!stopRequested) {
    long startTime=System.currentTimeMillis();
    Vector<HRegion> toFlush=new Vector<HRegion>();
    locking.obtainReadLock();
    try {
      toFlush.addAll(regions.values());
    }
  finally {
      locking.releaseReadLock();
    }
    for (Iterator<HRegion> it=toFlush.iterator(); it.hasNext(); ) {
      HRegion cur=it.next();
      try {
        cur.optionallyFlush();
      }
 catch (      IOException iex) {
        iex.printStackTrace();
      }
    }
    long endTime=System.currentTimeMillis();
    try {
      Thread.sleep(threadWakeFrequency - (endTime - startTime));
    }
 catch (    InterruptedException iex) {
    }
  }
}
