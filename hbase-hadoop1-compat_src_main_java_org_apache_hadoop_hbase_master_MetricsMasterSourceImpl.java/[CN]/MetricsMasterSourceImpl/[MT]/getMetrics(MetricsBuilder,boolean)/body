{
  MetricsRecordBuilder metricsRecordBuilder=metricsBuilder.addRecord(metricsName).setContext(metricsContext);
  if (masterWrapper != null) {
    metricsRecordBuilder.addGauge(MASTER_ACTIVE_TIME_NAME,MASTER_ACTIVE_TIME_DESC,masterWrapper.getActiveTime()).addGauge(MASTER_START_TIME_NAME,MASTER_START_TIME_DESC,masterWrapper.getStartTime()).addGauge(AVERAGE_LOAD_NAME,AVERAGE_LOAD_DESC,masterWrapper.getAverageLoad()).tag(LIVE_REGION_SERVERS_NAME,LIVE_REGION_SERVERS_DESC,masterWrapper.getRegionServers()).addGauge(NUM_REGION_SERVERS_NAME,NUMBER_OF_REGION_SERVERS_DESC,masterWrapper.getNumRegionServers()).tag(DEAD_REGION_SERVERS_NAME,DEAD_REGION_SERVERS_DESC,masterWrapper.getDeadRegionServers()).addGauge(NUM_DEAD_REGION_SERVERS_NAME,NUMBER_OF_DEAD_REGION_SERVERS_DESC,masterWrapper.getNumDeadRegionServers()).tag(ZOOKEEPER_QUORUM_NAME,ZOOKEEPER_QUORUM_DESC,masterWrapper.getZookeeperQuorum()).tag(SERVER_NAME_NAME,SERVER_NAME_DESC,masterWrapper.getServerName()).tag(CLUSTER_ID_NAME,CLUSTER_ID_DESC,masterWrapper.getClusterId()).tag(IS_ACTIVE_MASTER_NAME,IS_ACTIVE_MASTER_DESC,String.valueOf(masterWrapper.getIsActiveMaster()));
  }
  metricsRegistry.snapshot(metricsRecordBuilder,all);
}
