{
  byte[] startKey=Bytes.toBytes("ddc");
  byte[] endKey=Bytes.toBytes("mmm");
  byte[] TABLE=Bytes.toBytes("testGetRegionsInRange");
  HTable table=TEST_UTIL.createTable(TABLE,new byte[][]{FAMILY},10);
  int numOfRegions=TEST_UTIL.createMultiRegions(table,FAMILY);
  assertEquals(25,numOfRegions);
  HBaseAdmin admin=new HBaseAdmin(TEST_UTIL.getConfiguration());
  List<HRegionLocation> regionsList=table.getRegionsInRange(startKey,endKey);
  assertEquals(10,regionsList.size());
  startKey=Bytes.toBytes("fff");
  regionsList=table.getRegionsInRange(startKey,endKey);
  assertEquals(7,regionsList.size());
  endKey=Bytes.toBytes("nnn");
  regionsList=table.getRegionsInRange(startKey,endKey);
  assertEquals(8,regionsList.size());
  regionsList=table.getRegionsInRange(HConstants.EMPTY_START_ROW,endKey);
  assertEquals(13,regionsList.size());
  regionsList=table.getRegionsInRange(startKey,HConstants.EMPTY_END_ROW);
  assertEquals(20,regionsList.size());
  regionsList=table.getRegionsInRange(HConstants.EMPTY_START_ROW,HConstants.EMPTY_END_ROW);
  assertEquals(25,regionsList.size());
  endKey=Bytes.toBytes("yyz");
  regionsList=table.getRegionsInRange(startKey,endKey);
  assertEquals(20,regionsList.size());
  startKey=Bytes.toBytes("aac");
  regionsList=table.getRegionsInRange(startKey,endKey);
  assertEquals(25,regionsList.size());
  startKey=endKey=Bytes.toBytes("ccc");
  regionsList=table.getRegionsInRange(startKey,endKey);
  assertEquals(1,regionsList.size());
}
