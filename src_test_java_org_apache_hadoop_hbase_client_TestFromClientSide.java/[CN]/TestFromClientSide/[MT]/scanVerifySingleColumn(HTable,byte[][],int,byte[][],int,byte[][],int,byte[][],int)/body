{
  Scan scan=new Scan();
  Result result=getSingleScanResult(ht,scan);
  assertSingleResult(result,ROWS[ROWIDX],FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX],VALUES[VALUEIDX]);
  scan=new Scan(ROWS[ROWIDX]);
  result=getSingleScanResult(ht,scan);
  assertSingleResult(result,ROWS[ROWIDX],FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX],VALUES[VALUEIDX]);
  scan=new Scan(ROWS[ROWIDX],ROWS[ROWIDX + 1]);
  result=getSingleScanResult(ht,scan);
  assertSingleResult(result,ROWS[ROWIDX],FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX],VALUES[VALUEIDX]);
  scan=new Scan(HConstants.EMPTY_START_ROW,ROWS[ROWIDX + 1]);
  result=getSingleScanResult(ht,scan);
  assertSingleResult(result,ROWS[ROWIDX],FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX],VALUES[VALUEIDX]);
  scan=new Scan();
  scan.addFamily(FAMILIES[FAMILYIDX]);
  result=getSingleScanResult(ht,scan);
  assertSingleResult(result,ROWS[ROWIDX],FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX],VALUES[VALUEIDX]);
  scan=new Scan();
  scan.addColumn(FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX]);
  result=getSingleScanResult(ht,scan);
  assertSingleResult(result,ROWS[ROWIDX],FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX],VALUES[VALUEIDX]);
  scan=new Scan();
  scan.addColumn(FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX + 1]);
  scan.addFamily(FAMILIES[FAMILYIDX]);
  result=getSingleScanResult(ht,scan);
  assertSingleResult(result,ROWS[ROWIDX],FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX],VALUES[VALUEIDX]);
  scan=new Scan();
  scan.addColumn(FAMILIES[FAMILYIDX - 1],QUALIFIERS[QUALIFIERIDX + 1]);
  scan.addColumn(FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX]);
  scan.addFamily(FAMILIES[FAMILYIDX + 1]);
  result=getSingleScanResult(ht,scan);
  assertSingleResult(result,ROWS[ROWIDX],FAMILIES[FAMILYIDX],QUALIFIERS[QUALIFIERIDX],VALUES[VALUEIDX]);
}
