{
  final long done=EnvironmentEdgeManager.currentTime() + waitTime;
  do {
    T result=predicate.evaluate();
    if (result != null && !result.equals(Boolean.FALSE)) {
      return result;
    }
    try {
      Thread.sleep(waitingTimeForEvents);
    }
 catch (    InterruptedException e) {
      LOG.warn("Interrupted while sleeping, waiting on " + purpose);
      throw (InterruptedIOException)new InterruptedIOException().initCause(e);
    }
    LOG.debug("Waiting on " + purpose);
  }
 while (EnvironmentEdgeManager.currentTime() < done && env.isRunning());
  throw new TimeoutIOException("Timed out while waiting on " + purpose);
}
