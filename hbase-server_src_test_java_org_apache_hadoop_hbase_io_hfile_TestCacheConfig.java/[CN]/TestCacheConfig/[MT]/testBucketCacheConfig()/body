{
  this.conf.set(CacheConfig.BUCKET_CACHE_IOENGINE_KEY,"offheap");
  final float percent=0.8f;
  this.conf.setFloat(CacheConfig.BUCKET_CACHE_COMBINED_PERCENTAGE_KEY,percent);
  final int bcSize=100;
  this.conf.setInt(CacheConfig.BUCKET_CACHE_SIZE_KEY,bcSize);
  CacheConfig cc=new CacheConfig(this.conf);
  basicBlockCacheOps(cc,false,false);
  assertTrue(cc.getBlockCache() instanceof CombinedBlockCache);
  CombinedBlockCache cbc=(CombinedBlockCache)cc.getBlockCache();
  BlockCache[] bcs=cbc.getBlockCaches();
  assertTrue(bcs[0] instanceof LruBlockCache);
  LruBlockCache lbc=(LruBlockCache)bcs[0];
  long expectedBCSize=(long)(bcSize * (1.0f - percent));
  long actualBCSize=lbc.getMaxSize() / (1024 * 1024);
  assertTrue(expectedBCSize == actualBCSize);
  assertTrue(bcs[1] instanceof BucketCache);
  BucketCache bc=(BucketCache)bcs[1];
  expectedBCSize=(long)(bcSize * percent);
  actualBCSize=(long)(bc.getMaxSize() / (1024 * 1024));
  assertTrue(expectedBCSize == actualBCSize);
}
