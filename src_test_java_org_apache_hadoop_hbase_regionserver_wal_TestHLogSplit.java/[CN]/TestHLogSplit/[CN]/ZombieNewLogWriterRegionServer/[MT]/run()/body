{
  if (stop.get()) {
    return;
  }
  boolean splitStarted=false;
  Path p=new Path(hbaseDir,new String(TABLE_NAME));
  while (!splitStarted) {
    try {
      FileStatus[] statuses=fs.listStatus(p);
      if (statuses != null && statuses.length > 0) {
        break;
      }
    }
 catch (    FileNotFoundException e) {
    }
catch (    IOException e1) {
      assertTrue("Failed to list status ",false);
    }
    flushToConsole("Juliet: split not started, sleeping a bit...");
    Threads.sleep(100);
  }
  String region="juliet";
  Path julietLog=new Path(hlogDir,HLOG_FILE_PREFIX + ".juliet");
  try {
    fs.mkdirs(new Path(new Path(hbaseDir,region),region));
    HLog.Writer writer=HLog.createWriter(fs,julietLog,conf);
    appendEntry(writer,"juliet".getBytes(),("juliet").getBytes(),("r").getBytes(),FAMILY,QUALIFIER,VALUE,0);
    writer.close();
    flushToConsole("Juliet file creator: created file " + julietLog);
  }
 catch (  IOException e1) {
    assertTrue("Failed to create file " + julietLog,false);
  }
}
