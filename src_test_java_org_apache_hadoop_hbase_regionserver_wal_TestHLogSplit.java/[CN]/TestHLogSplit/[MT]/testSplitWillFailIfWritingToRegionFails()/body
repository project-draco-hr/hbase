{
  generateHLogs(4);
  fs.initialize(fs.getUri(),conf);
  InstrumentedSequenceFileLogWriter.activateFailure=false;
  appendEntry(writer[4],TABLE_NAME,Bytes.toBytes("break"),("r" + 999).getBytes(),FAMILY,QUALIFIER,VALUE,0);
  writer[4].close();
  try {
    InstrumentedSequenceFileLogWriter.activateFailure=true;
    HLogSplitter logSplitter=HLogSplitter.createLogSplitter(conf);
    logSplitter.splitLog(hbaseDir,hlogDir,oldLogDir,fs,conf);
  }
 catch (  IOException e) {
    assertEquals("java.io.IOException: This exception is instrumented and should only be thrown for testing",e.getMessage());
    throw e;
  }
 finally {
    InstrumentedSequenceFileLogWriter.activateFailure=false;
  }
}
