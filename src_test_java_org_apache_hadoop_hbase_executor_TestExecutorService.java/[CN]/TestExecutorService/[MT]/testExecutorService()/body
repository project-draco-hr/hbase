{
  int maxThreads=5;
  int maxTries=10;
  int sleepInterval=10;
  ExecutorService executorService=new ExecutorService("unit_test");
  executorService.startExecutorService(ExecutorType.MASTER_SERVER_OPERATIONS,maxThreads);
  Executor executor=executorService.getExecutor(ExecutorType.MASTER_SERVER_OPERATIONS);
  AtomicBoolean lock=new AtomicBoolean(true);
  AtomicInteger counter=new AtomicInteger(0);
  for (int i=0; i < maxThreads; i++) {
    executorService.submit(new TestEventHandler(EventType.M_SERVER_SHUTDOWN,lock,counter));
  }
  int tries=0;
  while (counter.get() < maxThreads && tries < maxTries) {
    System.out.println("Waiting for all event handlers to start...");
    Thread.sleep(sleepInterval);
    tries++;
  }
  assertEquals(maxThreads,counter.get());
synchronized (lock) {
    lock.set(false);
    lock.notifyAll();
  }
  while (counter.get() < (maxThreads * 2) && tries < maxTries) {
    System.out.println("Waiting for all event handlers to finish...");
    Thread.sleep(sleepInterval);
    tries++;
  }
  assertEquals(maxThreads * 2,counter.get());
  for (int i=0; i < maxThreads; i++) {
    executorService.submit(new TestEventHandler(EventType.M_SERVER_SHUTDOWN,lock,counter));
  }
  Thread.sleep(executor.keepAliveTimeInMillis * 2);
}
