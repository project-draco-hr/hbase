{
  if (LOG.isTraceEnabled()) {
    LOG.trace("Scan table=" + tableName + ", startRow="+ Bytes.toStringBinary(scan.getStartRow()));
  }
  this.scan=scan;
  this.tableName=tableName;
  this.lastNext=System.currentTimeMillis();
  this.connection=connection;
  this.pool=pool;
  this.primaryOperationTimeout=primaryOperationTimeout;
  this.retries=conf.getInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,HConstants.DEFAULT_HBASE_CLIENT_RETRIES_NUMBER);
  if (scan.getMaxResultSize() > 0) {
    this.maxScannerResultSize=scan.getMaxResultSize();
  }
 else {
    this.maxScannerResultSize=conf.getLong(HConstants.HBASE_CLIENT_SCANNER_MAX_RESULT_SIZE_KEY,HConstants.DEFAULT_HBASE_CLIENT_SCANNER_MAX_RESULT_SIZE);
  }
  this.scannerTimeout=HBaseConfiguration.getInt(conf,HConstants.HBASE_CLIENT_SCANNER_TIMEOUT_PERIOD,HConstants.HBASE_REGIONSERVER_LEASE_PERIOD_KEY,HConstants.DEFAULT_HBASE_CLIENT_SCANNER_TIMEOUT_PERIOD);
  initScanMetrics(scan);
  if (this.scan.getCaching() > 0) {
    this.caching=this.scan.getCaching();
  }
 else {
    this.caching=conf.getInt(HConstants.HBASE_CLIENT_SCANNER_CACHING,HConstants.DEFAULT_HBASE_CLIENT_SCANNER_CACHING);
  }
  this.caller=rpcFactory.<Result[]>newCaller();
  this.rpcControllerFactory=controllerFactory;
  this.conf=conf;
  initCache();
  initializeScannerInConstruction();
}
