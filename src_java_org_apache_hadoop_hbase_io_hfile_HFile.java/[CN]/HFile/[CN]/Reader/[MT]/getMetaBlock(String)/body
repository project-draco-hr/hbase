{
  if (trailer.metaIndexCount == 0) {
    return null;
  }
  if (metaIndex == null) {
    throw new IOException("Meta index not loaded");
  }
  byte[] mbname=Bytes.toBytes(metaBlockName);
  int block=metaIndex.blockContainingKey(mbname,0,mbname.length);
  if (block == -1)   return null;
  long blockSize;
  if (block == metaIndex.count - 1) {
    blockSize=trailer.fileinfoOffset - metaIndex.blockOffsets[block];
  }
 else {
    blockSize=metaIndex.blockOffsets[block + 1] - metaIndex.blockOffsets[block];
  }
  ByteBuffer buf=decompress(metaIndex.blockOffsets[block],longToInt(blockSize),metaIndex.blockDataSizes[block]);
  byte[] magic=new byte[METABLOCKMAGIC.length];
  buf.get(magic,0,magic.length);
  if (!Arrays.equals(magic,METABLOCKMAGIC)) {
    throw new IOException("Meta magic is bad in block " + block);
  }
  buf.compact();
  buf.limit(buf.limit() - METABLOCKMAGIC.length);
  buf.rewind();
  return buf;
}
