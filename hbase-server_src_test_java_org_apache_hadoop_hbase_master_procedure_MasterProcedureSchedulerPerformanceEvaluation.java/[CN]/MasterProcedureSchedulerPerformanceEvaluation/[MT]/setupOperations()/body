{
  final ProcedureFactory[] tableOps=new ProcedureFactory[numTables];
  for (int i=0; i < numTables; ++i) {
    tableOps[i]=new TableProcedureFactory(TableName.valueOf("testTableLock-" + i));
  }
  final ProcedureFactory[] regionOps=new ProcedureFactory[numTables * regionsPerTable];
  for (int i=0; i < numTables; ++i) {
    for (int j=0; j < regionsPerTable; ++j) {
      regionOps[i * regionsPerTable + j]=new RegionProcedureFactory(new HRegionInfo(((TableProcedureFactory)tableOps[i]).tableName,Bytes.toBytes(j),Bytes.toBytes(j + 1)));
    }
  }
  if (opsType.equals("table")) {
    System.out.println("Operations: table only");
    ops=tableOps;
  }
 else   if (opsType.equals("region")) {
    System.out.println("Operations: region only");
    ops=regionOps;
  }
 else   if (opsType.equals("both")) {
    System.out.println("Operations: both (table + region)");
    ops=(ProcedureFactory[])ArrayUtils.addAll(tableOps,regionOps);
  }
 else {
    throw new Exception("-ops_type should be one of table/region/both.");
  }
}
