{
  procedureScheduler=new MasterProcedureScheduler(UTIL.getConfiguration(),new TableLockManager.NullTableLockManager());
  procedureScheduler.start();
  setupOperations();
  final Thread[] threads=new Thread[numThreads];
  for (int i=0; i < numThreads; ++i) {
    threads[i]=new AddProcsWorker();
  }
  final long addBackTime=runThreads(threads);
  System.out.println("Added " + numOps + " procedures to scheduler.");
  for (int i=0; i < numThreads; ++i) {
    threads[i]=new PollAndLockWorker();
  }
  final long pollTime=runThreads(threads);
  procedureScheduler.stop();
  final float pollTimeSec=pollTime / 1000.0f;
  final float addBackTimeSec=addBackTime / 1000.0f;
  System.out.println("******************************************");
  System.out.println("Time - addBack     : " + StringUtils.humanTimeDiff(addBackTime));
  System.out.println("Ops/sec - addBack  : " + StringUtils.humanSize(numOps / addBackTimeSec));
  System.out.println("Time - poll        : " + StringUtils.humanTimeDiff(pollTime));
  System.out.println("Ops/sec - poll     : " + StringUtils.humanSize(numOps / pollTimeSec));
  System.out.println("Num Operations     : " + numOps);
  System.out.println();
  System.out.println("Completed          : " + completed.get());
  System.out.println("Yield              : " + yield.get());
  System.out.println();
  System.out.println("Num Tables         : " + numTables);
  System.out.println("Regions per table  : " + regionsPerTable);
  System.out.println("Operations type    : " + ops_type);
  System.out.println("Threads            : " + numThreads);
  System.out.println("******************************************");
  return 0;
}
