def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TColumnIncrement')
    if (self.family is not None):
        oprot.writeFieldBegin('family', TType.STRING, 1)
        oprot.writeString(self.family)
        oprot.writeFieldEnd()
    if (self.qualifier is not None):
        oprot.writeFieldBegin('qualifier', TType.STRING, 2)
        oprot.writeString(self.qualifier)
        oprot.writeFieldEnd()
    if (self.amount is not None):
        oprot.writeFieldBegin('amount', TType.I64, 3)
        oprot.writeI64(self.amount)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
