{
  this.backupMasterWeight=backupMasterWeight;
  this.numRegions=0;
  this.numServers=clusterState.size();
  this.clusterState=clusterState;
  serversByLoad=new TreeMap<ServerAndLoad,List<HRegionInfo>>();
  for (  Map.Entry<ServerName,List<HRegionInfo>> server : clusterState.entrySet()) {
    if (master != null && numServers > 1 && master.equals(server.getKey())) {
      numServers--;
      continue;
    }
    List<HRegionInfo> regions=server.getValue();
    int sz=regions.size();
    if (sz == 0)     emptyRegionServerPresent=true;
    numRegions+=sz;
    if (backupMasters != null && backupMasters.contains(server.getKey())) {
      sz*=backupMasterWeight;
      numBackupMasters++;
    }
    serversByLoad.put(new ServerAndLoad(server.getKey(),sz),regions);
  }
}
