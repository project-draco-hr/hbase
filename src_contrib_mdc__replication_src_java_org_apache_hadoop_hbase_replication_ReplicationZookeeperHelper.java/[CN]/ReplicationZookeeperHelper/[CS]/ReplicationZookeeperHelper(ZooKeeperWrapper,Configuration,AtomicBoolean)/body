{
  this.zookeeperWrapper=zookeeperWrapper;
  this.conf=conf;
  String replicationZNodeName=conf.get("zookeeper.znode.replication","replication");
  String peersZNodeName=conf.get("zookeeper.znode.peers","peers");
  String repMasterZNodeName=conf.get("zookeeper.znode.master","master");
  this.replicationStateNodeName=conf.get("zookeeper.znode.state","state");
  String clusterIdName=conf.get("zookeeper.znode.clusterId","clusterId");
  this.peerClusters=new ArrayList<ZooKeeperWrapper>();
  this.replicationZNode=zookeeperWrapper.getZNode(zookeeperWrapper.getParentZNode(),replicationZNodeName);
  this.peersZNode=zookeeperWrapper.getZNode(replicationZNode,peersZNodeName);
  List<String> znodes=this.zookeeperWrapper.listZnodes(this.peersZNode,this);
  if (znodes != null) {
    for (    String znode : znodes) {
      connectToPeer(znode);
    }
  }
  String address=this.zookeeperWrapper.getData(this.replicationZNode,repMasterZNodeName);
  String idResult=this.zookeeperWrapper.getData(this.replicationZNode,clusterIdName);
  this.clusterId=idResult == null ? DEFAULT_CLUSTER_ID : Byte.valueOf(idResult);
  String thisCluster=this.conf.get(ZOOKEEPER_QUORUM) + ":" + this.conf.get("hbase.zookeeper.property.clientPort")+ ":"+ this.conf.get(ZOOKEEPER_ZNODE_PARENT);
  this.master=thisCluster.equals(address);
  LOG.info("This cluster (" + thisCluster + ") is a "+ (this.master ? "master" : "slave")+ " for replication"+ ", compared with ("+ address+ ")");
  this.isReplicating=isReplicating;
  setIsReplicating();
}
