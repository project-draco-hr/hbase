{
  StringBuilder builder=new StringBuilder();
  builder.append("PtBlockMeta [bufferOffset=");
  builder.append(bufferOffset);
  builder.append(", version=");
  builder.append(version);
  builder.append(", numMetaBytes=");
  builder.append(numMetaBytes);
  builder.append(", numKeyValueBytes=");
  builder.append(numKeyValueBytes);
  builder.append(", includesMvccVersion=");
  builder.append(includesMvccVersion);
  builder.append(", numRowBytes=");
  builder.append(numRowBytes);
  builder.append(", numFamilyBytes=");
  builder.append(numFamilyBytes);
  builder.append(", numQualifierBytes=");
  builder.append(numQualifierBytes);
  builder.append(", numTimestampBytes=");
  builder.append(numTimestampBytes);
  builder.append(", numMvccVersionBytes=");
  builder.append(numMvccVersionBytes);
  builder.append(", numValueBytes=");
  builder.append(numValueBytes);
  builder.append(", numTagBytes=");
  builder.append(numTagsBytes);
  builder.append(", nextNodeOffsetWidth=");
  builder.append(nextNodeOffsetWidth);
  builder.append(", familyOffsetWidth=");
  builder.append(familyOffsetWidth);
  builder.append(", qualifierOffsetWidth=");
  builder.append(qualifierOffsetWidth);
  builder.append(", tagOffsetWidth=");
  builder.append(tagsOffsetWidth);
  builder.append(", timestampIndexWidth=");
  builder.append(timestampIndexWidth);
  builder.append(", mvccVersionIndexWidth=");
  builder.append(mvccVersionIndexWidth);
  builder.append(", valueOffsetWidth=");
  builder.append(valueOffsetWidth);
  builder.append(", valueLengthWidth=");
  builder.append(valueLengthWidth);
  builder.append(", rowTreeDepth=");
  builder.append(rowTreeDepth);
  builder.append(", maxRowLength=");
  builder.append(maxRowLength);
  builder.append(", maxQualifierLength=");
  builder.append(maxQualifierLength);
  builder.append(", maxTagLength=");
  builder.append(maxTagsLength);
  builder.append(", minTimestamp=");
  builder.append(minTimestamp);
  builder.append(", timestampDeltaWidth=");
  builder.append(timestampDeltaWidth);
  builder.append(", minMvccVersion=");
  builder.append(minMvccVersion);
  builder.append(", mvccVersionDeltaWidth=");
  builder.append(mvccVersionDeltaWidth);
  builder.append(", allSameType=");
  builder.append(allSameType);
  builder.append(", allTypes=");
  builder.append(allTypes);
  builder.append(", numUniqueRows=");
  builder.append(numUniqueRows);
  builder.append(", numUniqueFamilies=");
  builder.append(numUniqueFamilies);
  builder.append(", numUniqueQualifiers=");
  builder.append(numUniqueQualifiers);
  builder.append(", numUniqueTags=");
  builder.append(numUniqueTags);
  builder.append("]");
  return builder.toString();
}
