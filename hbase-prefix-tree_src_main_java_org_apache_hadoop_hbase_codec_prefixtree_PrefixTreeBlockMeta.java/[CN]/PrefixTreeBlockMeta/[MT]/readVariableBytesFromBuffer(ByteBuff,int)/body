{
  int position=offset;
  version=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(version);
  numMetaBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numMetaBytes);
  numKeyValueBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numKeyValueBytes);
  setIncludesMvccVersion(buf.get(position));
  ++position;
  numRowBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numRowBytes);
  numFamilyBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numFamilyBytes);
  numQualifierBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numQualifierBytes);
  numTagsBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numTagsBytes);
  numTimestampBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numTimestampBytes);
  numMvccVersionBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numMvccVersionBytes);
  numValueBytes=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numValueBytes);
  nextNodeOffsetWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(nextNodeOffsetWidth);
  familyOffsetWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(familyOffsetWidth);
  qualifierOffsetWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(qualifierOffsetWidth);
  tagsOffsetWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(tagsOffsetWidth);
  timestampIndexWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(timestampIndexWidth);
  mvccVersionIndexWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(mvccVersionIndexWidth);
  valueOffsetWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(valueOffsetWidth);
  valueLengthWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(valueLengthWidth);
  rowTreeDepth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(rowTreeDepth);
  maxRowLength=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(maxRowLength);
  maxQualifierLength=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(maxQualifierLength);
  maxTagsLength=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(maxTagsLength);
  minTimestamp=UVLongTool.getLong(buf,position);
  position+=UVLongTool.numBytes(minTimestamp);
  timestampDeltaWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(timestampDeltaWidth);
  minMvccVersion=UVLongTool.getLong(buf,position);
  position+=UVLongTool.numBytes(minMvccVersion);
  mvccVersionDeltaWidth=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(mvccVersionDeltaWidth);
  setAllSameType(buf.get(position));
  ++position;
  allTypes=buf.get(position);
  ++position;
  numUniqueRows=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numUniqueRows);
  numUniqueFamilies=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numUniqueFamilies);
  numUniqueQualifiers=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numUniqueQualifiers);
  numUniqueTags=UVIntTool.getInt(buf,position);
  position+=UVIntTool.numBytes(numUniqueTags);
}
