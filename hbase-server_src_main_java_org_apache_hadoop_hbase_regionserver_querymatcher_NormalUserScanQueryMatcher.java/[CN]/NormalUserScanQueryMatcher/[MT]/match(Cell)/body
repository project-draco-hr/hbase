{
  if (filter != null && filter.filterAllRemaining()) {
    return MatchCode.DONE_SCAN;
  }
  MatchCode returnCode=preCheck(cell);
  if (returnCode != null) {
    return returnCode;
  }
  long timestamp=cell.getTimestamp();
  if (CellUtil.isDelete(cell)) {
    boolean includeDeleteMarker=seePastDeleteMarkers ? tr.withinTimeRange(timestamp) : tr.withinOrAfterTimeRange(timestamp);
    if (includeDeleteMarker) {
      this.deletes.add(cell);
    }
    return MatchCode.SKIP;
  }
  returnCode=checkDeleted(deletes,cell);
  if (returnCode != null) {
    return returnCode;
  }
  return matchColumn(cell);
}
