{
  ZooKeeperWatcher zkw=new ZooKeeperWatcher(UTIL.getConfiguration(),this.getClass().getSimpleName(),ABORTABLE,true);
  ServerName sn=new ServerName("example.com",1234,System.currentTimeMillis());
  HConnection connection=null;
  CatalogTracker ct=null;
  try {
    final HRegionInterface implementation=Mockito.mock(HRegionInterface.class);
    final long scannerid=123L;
    Mockito.when(implementation.openScanner((byte[])Mockito.any(),(Scan)Mockito.any())).thenThrow(new IOException("Server not running (1 of 3)")).thenThrow(new IOException("Server not running (2 of 3)")).thenThrow(new IOException("Server not running (3 of 3)")).thenReturn(scannerid);
    List<KeyValue> kvs=new ArrayList<KeyValue>();
    final byte[] rowToVerify=Bytes.toBytes("rowToVerify");
    kvs.add(new KeyValue(rowToVerify,HConstants.CATALOG_FAMILY,HConstants.REGIONINFO_QUALIFIER,Writables.getBytes(HRegionInfo.FIRST_META_REGIONINFO)));
    kvs.add(new KeyValue(rowToVerify,HConstants.CATALOG_FAMILY,HConstants.SERVER_QUALIFIER,Bytes.toBytes(sn.getHostAndPort())));
    kvs.add(new KeyValue(rowToVerify,HConstants.CATALOG_FAMILY,HConstants.STARTCODE_QUALIFIER,Bytes.toBytes(sn.getStartcode())));
    final Result[] result=new Result[]{new Result(kvs)};
    Mockito.when(implementation.next(Mockito.anyLong(),Mockito.anyInt())).thenReturn(result).thenReturn(null);
    connection=HConnectionTestingUtility.getSpiedConnection(UTIL.getConfiguration());
    final HRegionLocation anyLocation=new HRegionLocation(HRegionInfo.FIRST_META_REGIONINFO,sn.getHostname(),sn.getPort());
    Mockito.doReturn(anyLocation).when(connection).locateRegion((byte[])Mockito.any(),(byte[])Mockito.any());
    Mockito.doReturn(anyLocation).when(connection).getRegionLocation((byte[])Mockito.any(),(byte[])Mockito.any(),Mockito.anyBoolean());
    Mockito.doReturn(implementation).when(connection).getHRegionConnection(Mockito.anyString(),Mockito.anyInt());
    ct=new CatalogTracker(zkw,null,connection,ABORTABLE,0);
    ct.start();
    NavigableMap<HRegionInfo,Result> hris=MetaReader.getServerUserRegions(ct,sn);
    assertTrue(hris.size() == 1);
    assertTrue(hris.firstEntry().getKey().equals(HRegionInfo.FIRST_META_REGIONINFO));
    assertTrue(Bytes.equals(rowToVerify,hris.firstEntry().getValue().getRow()));
    Mockito.verify(implementation,Mockito.times(4)).openScanner((byte[])Mockito.any(),(Scan)Mockito.any());
  }
  finally {
    if (ct != null)     ct.stop();
    HConnectionManager.deleteConnection(UTIL.getConfiguration(),true);
    zkw.close();
  }
}
