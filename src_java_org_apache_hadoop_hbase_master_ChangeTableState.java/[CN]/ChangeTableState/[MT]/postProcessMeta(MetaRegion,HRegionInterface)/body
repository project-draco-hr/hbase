{
  if (LOG.isDebugEnabled()) {
    LOG.debug("processing unserved regions");
  }
  for (  HRegionInfo i : unservedRegions) {
    if (i.isOffline() && i.isSplit()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Skipping region " + i.toString() + " because it is offline because it has been split");
      }
      continue;
    }
    BatchUpdate b=new BatchUpdate(i.getRegionName());
    updateRegionInfo(b,i);
    b.delete(COL_SERVER);
    b.delete(COL_STARTCODE);
    server.batchUpdate(m.getRegionName(),b,-1L);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Updated columns in row: " + i.getRegionNameAsString());
    }
synchronized (master.regionManager) {
      if (online) {
        if (!master.regionManager.isUnassigned(i) && !master.regionManager.isAssigned(i.getRegionName()) && !master.regionManager.isPending(i.getRegionName())) {
          master.regionManager.setUnassigned(i,false);
        }
      }
 else {
        master.regionManager.removeRegion(i);
      }
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("processing regions currently being served");
  }
synchronized (master.regionManager) {
    for (    Map.Entry<String,HashSet<HRegionInfo>> e : servedRegions.entrySet()) {
      String serverName=e.getKey();
      if (online) {
        LOG.debug("Already online");
        continue;
      }
      for (      HRegionInfo i : e.getValue()) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("adding region " + i.getRegionNameAsString() + " to kill list");
        }
        master.regionManager.setClosing(serverName,i,true);
      }
    }
  }
  servedRegions.clear();
}
