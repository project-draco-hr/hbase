{
  long lastTimestamp=Long.MAX_VALUE;
  boolean hasChanges=false;
  try {
    FileStatus dirStatus=fs.getFileStatus(snapshotDir);
    lastTimestamp=dirStatus.getModificationTime();
    hasChanges|=(lastTimestamp >= lastModifiedTime);
  }
 catch (  FileNotFoundException e) {
    if (this.cache.size() > 0) {
      LOG.error("Snapshot directory: " + snapshotDir + " doesn't exist");
    }
    return;
  }
  try {
    Path snapshotTmpDir=new Path(snapshotDir,SnapshotDescriptionUtils.SNAPSHOT_TMP_DIR_NAME);
    FileStatus tempDirStatus=fs.getFileStatus(snapshotTmpDir);
    lastTimestamp=Math.min(lastTimestamp,tempDirStatus.getModificationTime());
    hasChanges|=(lastTimestamp >= lastModifiedTime);
    if (!hasChanges) {
      FileStatus[] tmpSnapshots=FSUtils.listStatus(fs,snapshotDir);
      if (tmpSnapshots != null) {
        for (        FileStatus dirStatus : tmpSnapshots) {
          lastTimestamp=Math.min(lastTimestamp,dirStatus.getModificationTime());
        }
        hasChanges|=(lastTimestamp >= lastModifiedTime);
      }
    }
  }
 catch (  FileNotFoundException e) {
  }
  if (!hasChanges) {
    return;
  }
  this.lastModifiedTime=lastTimestamp;
  this.cache.clear();
  Map<String,SnapshotDirectoryInfo> known=new HashMap<String,SnapshotDirectoryInfo>();
  FileStatus[] snapshots=FSUtils.listStatus(fs,snapshotDir);
  if (snapshots == null) {
    if (LOG.isDebugEnabled() && this.snapshots.size() > 0) {
      LOG.debug("No snapshots on-disk, cache empty");
    }
    this.snapshots.clear();
    return;
  }
  for (  FileStatus snapshot : snapshots) {
    String name=snapshot.getPath().getName();
    if (name.equals(SnapshotDescriptionUtils.SNAPSHOT_TMP_DIR_NAME)) {
      FileStatus[] running=FSUtils.listStatus(fs,snapshot.getPath());
      if (running == null)       continue;
      for (      FileStatus run : running) {
        this.cache.addAll(fileInspector.filesUnderSnapshot(run.getPath()));
      }
    }
 else {
      SnapshotDirectoryInfo files=this.snapshots.remove(name);
      if (files == null || files.hasBeenModified(snapshot.getModificationTime())) {
        Collection<String> storedFiles=fileInspector.filesUnderSnapshot(snapshot.getPath());
        files=new SnapshotDirectoryInfo(snapshot.getModificationTime(),storedFiles);
      }
      this.cache.addAll(files.getFiles());
      known.put(name,files);
    }
  }
  this.snapshots.clear();
  this.snapshots.putAll(known);
}
