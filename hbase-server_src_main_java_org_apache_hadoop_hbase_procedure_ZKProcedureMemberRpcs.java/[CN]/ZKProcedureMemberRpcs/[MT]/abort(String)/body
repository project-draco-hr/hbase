{
  LOG.debug("Aborting procedure member for znode " + abortZNode);
  String opName=ZKUtil.getNodeName(abortZNode);
  try {
    byte[] data=ZKUtil.getData(zkController.getWatcher(),abortZNode);
    ForeignException ee;
    try {
      if (data == null || data.length == 0) {
        return;
      }
 else       if (!ProtobufUtil.isPBMagicPrefix(data)) {
        String msg="Illegally formatted data in abort node for proc " + opName + ".  Killing the procedure.";
        LOG.error(msg);
        ee=new ForeignException(getMemberName(),new IllegalArgumentException(msg));
      }
 else {
        data=Arrays.copyOfRange(data,ProtobufUtil.lengthOfPBMagic(),data.length);
        ee=ForeignException.deserialize(data);
      }
    }
 catch (    IOException e) {
      LOG.warn("Got an error notification for op:" + opName + " but we can't read the information. Killing the procedure.");
      ee=new ForeignException(getMemberName(),e);
    }
    this.member.receiveAbortProcedure(opName,ee);
  }
 catch (  KeeperException e) {
    member.controllerConnectionFailure("Failed to get data for abort znode:" + abortZNode + zkController.getAbortZnode(),e,opName);
  }
catch (  InterruptedException e) {
    LOG.warn("abort already in progress",e);
    Thread.currentThread().interrupt();
  }
}
