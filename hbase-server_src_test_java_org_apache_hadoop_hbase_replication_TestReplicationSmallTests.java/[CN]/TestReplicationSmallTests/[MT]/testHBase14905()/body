{
  byte[] qualifierName=Bytes.toBytes("f1");
  Put put=new Put(Bytes.toBytes("r1"));
  put.addColumn(famName,qualifierName,Bytes.toBytes("v1002"));
  htable1.put(put);
  put.addColumn(famName,qualifierName,Bytes.toBytes("v1001"));
  htable1.put(put);
  put.addColumn(famName,qualifierName,Bytes.toBytes("v1112"));
  htable1.put(put);
  Scan scan=new Scan();
  scan.setMaxVersions(100);
  ResultScanner scanner1=htable1.getScanner(scan);
  Result[] res1=scanner1.next(1);
  scanner1.close();
  assertEquals(1,res1.length);
  assertEquals(3,res1[0].getColumnCells(famName,qualifierName).size());
  for (int i=0; i < NB_RETRIES; i++) {
    scan=new Scan();
    scan.setMaxVersions(100);
    scanner1=htable2.getScanner(scan);
    res1=scanner1.next(1);
    scanner1.close();
    if (res1.length != 1) {
      LOG.info("Only got " + res1.length + " rows");
      Thread.sleep(SLEEP_TIME);
    }
 else {
      int cellNumber=res1[0].getColumnCells(famName,Bytes.toBytes("f1")).size();
      if (cellNumber != 3) {
        LOG.info("Only got " + cellNumber + " cells");
        Thread.sleep(SLEEP_TIME);
      }
 else {
        break;
      }
    }
    if (i == NB_RETRIES - 1) {
      fail("Waited too much time for normal batch replication");
    }
  }
  put.addColumn(famName,qualifierName,Bytes.toBytes("v1111"));
  htable2.put(put);
  put.addColumn(famName,qualifierName,Bytes.toBytes("v1112"));
  htable2.put(put);
  scan=new Scan();
  scan.setMaxVersions(100);
  scanner1=htable2.getScanner(scan);
  res1=scanner1.next(NB_ROWS_IN_BATCH);
  scanner1.close();
  assertEquals(1,res1.length);
  assertEquals(5,res1[0].getColumnCells(famName,qualifierName).size());
  String[] args=new String[]{"--versions=100",PEER_ID,tableName.getNameAsString()};
  runVerifyReplication(args,0,1);
}
