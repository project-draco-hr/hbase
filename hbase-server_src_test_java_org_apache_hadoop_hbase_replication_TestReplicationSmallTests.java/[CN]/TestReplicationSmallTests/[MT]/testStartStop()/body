{
  setIsReplication(false);
  Put put=new Put(Bytes.toBytes("stop start"));
  put.add(famName,row,row);
  htable1.put(put);
  Get get=new Get(Bytes.toBytes("stop start"));
  for (int i=0; i < NB_RETRIES; i++) {
    if (i == NB_RETRIES - 1) {
      break;
    }
    Result res=htable2.get(get);
    if (res.size() >= 1) {
      fail("Replication wasn't stopped");
    }
 else {
      LOG.info("Row not replicated, let's wait a bit more...");
      Thread.sleep(SLEEP_TIME);
    }
  }
  setIsReplication(true);
  htable1.put(put);
  for (int i=0; i < NB_RETRIES; i++) {
    if (i == NB_RETRIES - 1) {
      fail("Waited too much time for put replication");
    }
    Result res=htable2.get(get);
    if (res.size() == 0) {
      LOG.info("Row not available");
      Thread.sleep(SLEEP_TIME);
    }
 else {
      assertArrayEquals(res.value(),row);
      break;
    }
  }
  put=new Put(Bytes.toBytes("do not rep"));
  put.add(noRepfamName,row,row);
  htable1.put(put);
  get=new Get(Bytes.toBytes("do not rep"));
  for (int i=0; i < NB_RETRIES; i++) {
    if (i == NB_RETRIES - 1) {
      break;
    }
    Result res=htable2.get(get);
    if (res.size() >= 1) {
      fail("Not supposed to be replicated");
    }
 else {
      LOG.info("Row not replicated, let's wait a bit more...");
      Thread.sleep(SLEEP_TIME);
    }
  }
}
