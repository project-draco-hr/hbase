{
  if (tableCfs == null) {
    throw new ReplicationException("tableCfs is null");
  }
  Map<TableName,List<String>> preTableCfs=this.replicationPeers.getPeerTableCFsConfig(id);
  if (preTableCfs == null) {
    throw new ReplicationException("Table-Cfs for peer" + id + " is null");
  }
  for (  Map.Entry<TableName,? extends Collection<String>> entry : tableCfs.entrySet()) {
    TableName table=entry.getKey();
    Collection<String> removeCfs=entry.getValue();
    if (preTableCfs.containsKey(table)) {
      List<String> cfs=preTableCfs.get(table);
      if (cfs == null && (removeCfs == null || removeCfs.isEmpty())) {
        preTableCfs.remove(table);
      }
 else       if (cfs != null && (removeCfs != null && !removeCfs.isEmpty())) {
        Set<String> cfSet=new HashSet<String>(cfs);
        cfSet.removeAll(removeCfs);
        if (cfSet.isEmpty()) {
          preTableCfs.remove(table);
        }
 else {
          preTableCfs.put(table,Lists.newArrayList(cfSet));
        }
      }
 else       if (cfs == null && (removeCfs != null && !removeCfs.isEmpty())) {
        throw new ReplicationException("Cannot remove cf of table: " + table + " which doesn't specify cfs from table-cfs config in peer: "+ id);
      }
 else       if (cfs != null && (removeCfs == null || removeCfs.isEmpty())) {
        throw new ReplicationException("Cannot remove table: " + table + " which has specified cfs from table-cfs config in peer: "+ id);
      }
    }
 else {
      throw new ReplicationException("No table: " + table + " in table-cfs config of peer: "+ id);
    }
  }
  setPeerTableCFs(id,preTableCfs);
}
