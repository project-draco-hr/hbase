{
  if (this.closed) {
    return;
  }
  flushCommits();
  if (cleanupPoolOnClose) {
    this.pool.shutdown();
    try {
      boolean terminated=false;
      do {
        terminated=this.pool.awaitTermination(60,TimeUnit.SECONDS);
      }
 while (!terminated);
    }
 catch (    InterruptedException e) {
      LOG.warn("waitForTermination interrupted");
    }
  }
  if (cleanupConnectionOnClose) {
    if (this.connection != null) {
      this.connection.close();
    }
  }
  this.closed=true;
}
