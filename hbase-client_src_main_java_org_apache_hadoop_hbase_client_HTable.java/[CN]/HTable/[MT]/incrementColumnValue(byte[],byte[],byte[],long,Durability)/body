{
  NullPointerException npe=null;
  if (row == null) {
    npe=new NullPointerException("row is null");
  }
 else   if (family == null) {
    npe=new NullPointerException("family is null");
  }
 else   if (qualifier == null) {
    npe=new NullPointerException("qualifier is null");
  }
  if (npe != null) {
    throw new IOException("Invalid arguments to incrementColumnValue",npe);
  }
  NonceGenerator ng=this.connection.getNonceGenerator();
  final long nonceGroup=ng.getNonceGroup(), nonce=ng.newNonce();
  RegionServerCallable<Long> callable=new RegionServerCallable<Long>(connection,getName(),row){
    @Override public Long call(    int callTimeout) throws IOException {
      PayloadCarryingRpcController controller=rpcControllerFactory.newController();
      controller.setPriority(getTableName());
      controller.setCallTimeout(callTimeout);
      try {
        MutateRequest request=RequestConverter.buildIncrementRequest(getLocation().getRegionInfo().getRegionName(),row,family,qualifier,amount,durability,nonceGroup,nonce);
        MutateResponse response=getStub().mutate(controller,request);
        Result result=ProtobufUtil.toResult(response.getResult(),controller.cellScanner());
        return Long.valueOf(Bytes.toLong(result.getValue(family,qualifier)));
      }
 catch (      ServiceException se) {
        throw ProtobufUtil.getRemoteException(se);
      }
    }
  }
;
  return rpcCallerFactory.<Long>newCaller(writeRpcTimeout).callWithRetries(callable,this.operationTimeout);
}
