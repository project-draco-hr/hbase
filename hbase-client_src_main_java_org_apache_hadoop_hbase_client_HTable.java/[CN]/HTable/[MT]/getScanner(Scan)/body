{
  if (scan.getBatch() > 0 && scan.isSmall()) {
    throw new IllegalArgumentException("Small scan should not be used with batching");
  }
  if (scan.getCaching() <= 0) {
    scan.setCaching(scannerCaching);
  }
  if (scan.getMaxResultSize() <= 0) {
    scan.setMaxResultSize(scannerMaxResultSize);
  }
  Boolean async=scan.isAsyncPrefetch();
  if (async == null) {
    async=connConfiguration.isClientScannerAsyncPrefetch();
  }
  if (scan.isReversed()) {
    if (scan.isSmall()) {
      return new ClientSmallReversedScanner(getConfiguration(),scan,getName(),this.connection,this.rpcCallerFactory,this.rpcControllerFactory,pool,connConfiguration.getReplicaCallTimeoutMicroSecondScan());
    }
 else {
      return new ReversedClientScanner(getConfiguration(),scan,getName(),this.connection,this.rpcCallerFactory,this.rpcControllerFactory,pool,connConfiguration.getReplicaCallTimeoutMicroSecondScan());
    }
  }
  if (scan.isSmall()) {
    return new ClientSmallScanner(getConfiguration(),scan,getName(),this.connection,this.rpcCallerFactory,this.rpcControllerFactory,pool,connConfiguration.getReplicaCallTimeoutMicroSecondScan());
  }
 else {
    if (async) {
      return new ClientAsyncPrefetchScanner(getConfiguration(),scan,getName(),this.connection,this.rpcCallerFactory,this.rpcControllerFactory,pool,connConfiguration.getReplicaCallTimeoutMicroSecondScan());
    }
 else {
      return new ClientSimpleScanner(getConfiguration(),scan,getName(),this.connection,this.rpcCallerFactory,this.rpcControllerFactory,pool,connConfiguration.getReplicaCallTimeoutMicroSecondScan());
    }
  }
}
