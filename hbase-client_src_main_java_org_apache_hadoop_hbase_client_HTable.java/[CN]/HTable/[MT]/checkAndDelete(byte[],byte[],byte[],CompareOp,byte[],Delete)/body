{
  CancellableRegionServerCallable<SingleResponse> callable=new CancellableRegionServerCallable<SingleResponse>(this.connection,getName(),row,this.rpcControllerFactory){
    @Override protected SingleResponse rpcCall() throws Exception {
      CompareType compareType=CompareType.valueOf(compareOp.name());
      MutateRequest request=RequestConverter.buildMutateRequest(getLocation().getRegionInfo().getRegionName(),row,family,qualifier,new BinaryComparator(value),compareType,delete);
      MutateResponse response=getStub().mutate(getRpcController(),request);
      return ResponseConverter.getResult(request,response,getRpcControllerCellScanner());
    }
  }
;
  List<Row> rows=new ArrayList<Row>();
  rows.add(delete);
  Object[] results=new Object[1];
  AsyncRequestFuture ars=multiAp.submitAll(pool,tableName,rows,null,results,callable,operationTimeout);
  ars.waitUntilDone();
  if (ars.hasError()) {
    throw ars.getErrors();
  }
  return ((SingleResponse.Entry)results[0]).isProcessed();
}
