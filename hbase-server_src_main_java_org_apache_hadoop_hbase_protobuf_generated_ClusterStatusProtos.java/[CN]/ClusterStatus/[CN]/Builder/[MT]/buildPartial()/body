{
  org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.ClusterStatus result=new org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.ClusterStatus(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  if (hbaseVersionBuilder_ == null) {
    result.hbaseVersion_=hbaseVersion_;
  }
 else {
    result.hbaseVersion_=hbaseVersionBuilder_.build();
  }
  if (liveServersBuilder_ == null) {
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      liveServers_=java.util.Collections.unmodifiableList(liveServers_);
      bitField0_=(bitField0_ & ~0x00000002);
    }
    result.liveServers_=liveServers_;
  }
 else {
    result.liveServers_=liveServersBuilder_.build();
  }
  if (deadServersBuilder_ == null) {
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      deadServers_=java.util.Collections.unmodifiableList(deadServers_);
      bitField0_=(bitField0_ & ~0x00000004);
    }
    result.deadServers_=deadServers_;
  }
 else {
    result.deadServers_=deadServersBuilder_.build();
  }
  if (regionsInTransitionBuilder_ == null) {
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      regionsInTransition_=java.util.Collections.unmodifiableList(regionsInTransition_);
      bitField0_=(bitField0_ & ~0x00000008);
    }
    result.regionsInTransition_=regionsInTransition_;
  }
 else {
    result.regionsInTransition_=regionsInTransitionBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000002;
  }
  if (clusterIdBuilder_ == null) {
    result.clusterId_=clusterId_;
  }
 else {
    result.clusterId_=clusterIdBuilder_.build();
  }
  if (masterCoprocessorsBuilder_ == null) {
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      masterCoprocessors_=java.util.Collections.unmodifiableList(masterCoprocessors_);
      bitField0_=(bitField0_ & ~0x00000020);
    }
    result.masterCoprocessors_=masterCoprocessors_;
  }
 else {
    result.masterCoprocessors_=masterCoprocessorsBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
    to_bitField0_|=0x00000004;
  }
  if (masterBuilder_ == null) {
    result.master_=master_;
  }
 else {
    result.master_=masterBuilder_.build();
  }
  if (backupMastersBuilder_ == null) {
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      backupMasters_=java.util.Collections.unmodifiableList(backupMasters_);
      bitField0_=(bitField0_ & ~0x00000080);
    }
    result.backupMasters_=backupMasters_;
  }
 else {
    result.backupMasters_=backupMastersBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
