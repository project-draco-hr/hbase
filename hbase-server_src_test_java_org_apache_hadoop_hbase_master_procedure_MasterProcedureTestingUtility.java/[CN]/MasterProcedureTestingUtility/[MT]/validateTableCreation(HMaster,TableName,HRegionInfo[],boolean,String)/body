{
  final FileSystem fs=master.getMasterFileSystem().getFileSystem();
  final Path tableDir=FSUtils.getTableDir(master.getMasterFileSystem().getRootDir(),tableName);
  assertTrue(fs.exists(tableDir));
  FSUtils.logFileSystemState(fs,tableDir,LOG);
  List<Path> allRegionDirs=FSUtils.getRegionDirs(fs,tableDir);
  for (int i=0; i < regions.length; ++i) {
    Path regionDir=new Path(tableDir,regions[i].getEncodedName());
    assertTrue(regions[i] + " region dir does not exist",fs.exists(regionDir));
    assertTrue(allRegionDirs.remove(regionDir));
    List<Path> allFamilyDirs=FSUtils.getFamilyDirs(fs,regionDir);
    for (int j=0; j < family.length; ++j) {
      final Path familyDir=new Path(regionDir,family[j]);
      if (hasFamilyDirs) {
        assertTrue(family[j] + " family dir does not exist",fs.exists(familyDir));
        assertTrue(allFamilyDirs.remove(familyDir));
      }
 else {
        if (!fs.exists(familyDir)) {
          LOG.warn(family[j] + " family dir does not exist");
        }
        allFamilyDirs.remove(familyDir);
      }
    }
    assertTrue("found extraneous families: " + allFamilyDirs,allFamilyDirs.isEmpty());
  }
  assertTrue("found extraneous regions: " + allRegionDirs,allRegionDirs.isEmpty());
  assertTrue(MetaTableAccessor.tableExists(master.getConnection(),tableName));
  assertEquals(regions.length,countMetaRegions(master,tableName));
  HTableDescriptor htd=master.getTableDescriptors().get(tableName);
  assertTrue("table descriptor not found",htd != null);
  for (int i=0; i < family.length; ++i) {
    assertTrue("family not found " + family[i],htd.getFamily(Bytes.toBytes(family[i])) != null);
  }
  assertEquals(family.length,htd.getFamilies().size());
}
