{
  this.lock.readLock().lock();
  try {
    KeyValue firstKv=KeyValue.createFirstOnRow(row,family,qualifier);
    SortedSet<KeyValue> snSs=snapshot.tailSet(firstKv);
    if (!snSs.isEmpty()) {
      KeyValue snKv=snSs.first();
      if (snKv.matchingRow(firstKv) && snKv.matchingQualifier(firstKv)) {
        if (snKv.getTimestamp() == now) {
          now+=1;
        }
      }
    }
    SortedSet<KeyValue> ss=kvset.tailSet(firstKv);
    Iterator<KeyValue> it=ss.iterator();
    while (it.hasNext()) {
      KeyValue kv=it.next();
      if (!firstKv.matchingColumn(family,qualifier) || !firstKv.matchingRow(kv)) {
        break;
      }
      if (firstKv.matchingQualifier(kv)) {
        if (kv.getType() == KeyValue.Type.Put.getCode()) {
          now=Math.max(now,kv.getTimestamp());
        }
      }
    }
    return upsert(Arrays.asList(new KeyValue[]{new KeyValue(row,family,qualifier,now,Bytes.toBytes(newValue))}));
  }
  finally {
    this.lock.readLock().unlock();
  }
}
