{
  if (memoizedHashCode != 0) {
    return memoizedHashCode;
  }
  int hash=41;
  hash=(19 * hash) + getDescriptorForType().hashCode();
  if (hasAllowAlias()) {
    hash=(37 * hash) + ALLOW_ALIAS_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashBoolean(getAllowAlias());
  }
  if (hasDeprecated()) {
    hash=(37 * hash) + DEPRECATED_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashBoolean(getDeprecated());
  }
  if (getUninterpretedOptionCount() > 0) {
    hash=(37 * hash) + UNINTERPRETED_OPTION_FIELD_NUMBER;
    hash=(53 * hash) + getUninterpretedOptionList().hashCode();
  }
  hash=hashFields(hash,getExtensionFields());
  hash=(29 * hash) + unknownFields.hashCode();
  memoizedHashCode=hash;
  return hash;
}
