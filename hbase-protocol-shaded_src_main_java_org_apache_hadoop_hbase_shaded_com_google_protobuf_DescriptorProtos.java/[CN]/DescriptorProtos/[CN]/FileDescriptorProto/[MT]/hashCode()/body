{
  if (memoizedHashCode != 0) {
    return memoizedHashCode;
  }
  int hash=41;
  hash=(19 * hash) + getDescriptorForType().hashCode();
  if (hasName()) {
    hash=(37 * hash) + NAME_FIELD_NUMBER;
    hash=(53 * hash) + getName().hashCode();
  }
  if (hasPackage()) {
    hash=(37 * hash) + PACKAGE_FIELD_NUMBER;
    hash=(53 * hash) + getPackage().hashCode();
  }
  if (getDependencyCount() > 0) {
    hash=(37 * hash) + DEPENDENCY_FIELD_NUMBER;
    hash=(53 * hash) + getDependencyList().hashCode();
  }
  if (getPublicDependencyCount() > 0) {
    hash=(37 * hash) + PUBLIC_DEPENDENCY_FIELD_NUMBER;
    hash=(53 * hash) + getPublicDependencyList().hashCode();
  }
  if (getWeakDependencyCount() > 0) {
    hash=(37 * hash) + WEAK_DEPENDENCY_FIELD_NUMBER;
    hash=(53 * hash) + getWeakDependencyList().hashCode();
  }
  if (getMessageTypeCount() > 0) {
    hash=(37 * hash) + MESSAGE_TYPE_FIELD_NUMBER;
    hash=(53 * hash) + getMessageTypeList().hashCode();
  }
  if (getEnumTypeCount() > 0) {
    hash=(37 * hash) + ENUM_TYPE_FIELD_NUMBER;
    hash=(53 * hash) + getEnumTypeList().hashCode();
  }
  if (getServiceCount() > 0) {
    hash=(37 * hash) + SERVICE_FIELD_NUMBER;
    hash=(53 * hash) + getServiceList().hashCode();
  }
  if (getExtensionCount() > 0) {
    hash=(37 * hash) + EXTENSION_FIELD_NUMBER;
    hash=(53 * hash) + getExtensionList().hashCode();
  }
  if (hasOptions()) {
    hash=(37 * hash) + OPTIONS_FIELD_NUMBER;
    hash=(53 * hash) + getOptions().hashCode();
  }
  if (hasSourceCodeInfo()) {
    hash=(37 * hash) + SOURCE_CODE_INFO_FIELD_NUMBER;
    hash=(53 * hash) + getSourceCodeInfo().hashCode();
  }
  if (hasSyntax()) {
    hash=(37 * hash) + SYNTAX_FIELD_NUMBER;
    hash=(53 * hash) + getSyntax().hashCode();
  }
  hash=(29 * hash) + unknownFields.hashCode();
  memoizedHashCode=hash;
  return hash;
}
