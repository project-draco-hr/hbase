{
  if (obj == this) {
    return true;
  }
  if (!(obj instanceof org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.FileOptions)) {
    return super.equals(obj);
  }
  org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.FileOptions other=(org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.FileOptions)obj;
  boolean result=true;
  result=result && (hasJavaPackage() == other.hasJavaPackage());
  if (hasJavaPackage()) {
    result=result && getJavaPackage().equals(other.getJavaPackage());
  }
  result=result && (hasJavaOuterClassname() == other.hasJavaOuterClassname());
  if (hasJavaOuterClassname()) {
    result=result && getJavaOuterClassname().equals(other.getJavaOuterClassname());
  }
  result=result && (hasJavaMultipleFiles() == other.hasJavaMultipleFiles());
  if (hasJavaMultipleFiles()) {
    result=result && (getJavaMultipleFiles() == other.getJavaMultipleFiles());
  }
  result=result && (hasJavaGenerateEqualsAndHash() == other.hasJavaGenerateEqualsAndHash());
  if (hasJavaGenerateEqualsAndHash()) {
    result=result && (getJavaGenerateEqualsAndHash() == other.getJavaGenerateEqualsAndHash());
  }
  result=result && (hasJavaStringCheckUtf8() == other.hasJavaStringCheckUtf8());
  if (hasJavaStringCheckUtf8()) {
    result=result && (getJavaStringCheckUtf8() == other.getJavaStringCheckUtf8());
  }
  result=result && (hasOptimizeFor() == other.hasOptimizeFor());
  if (hasOptimizeFor()) {
    result=result && optimizeFor_ == other.optimizeFor_;
  }
  result=result && (hasGoPackage() == other.hasGoPackage());
  if (hasGoPackage()) {
    result=result && getGoPackage().equals(other.getGoPackage());
  }
  result=result && (hasCcGenericServices() == other.hasCcGenericServices());
  if (hasCcGenericServices()) {
    result=result && (getCcGenericServices() == other.getCcGenericServices());
  }
  result=result && (hasJavaGenericServices() == other.hasJavaGenericServices());
  if (hasJavaGenericServices()) {
    result=result && (getJavaGenericServices() == other.getJavaGenericServices());
  }
  result=result && (hasPyGenericServices() == other.hasPyGenericServices());
  if (hasPyGenericServices()) {
    result=result && (getPyGenericServices() == other.getPyGenericServices());
  }
  result=result && (hasDeprecated() == other.hasDeprecated());
  if (hasDeprecated()) {
    result=result && (getDeprecated() == other.getDeprecated());
  }
  result=result && (hasCcEnableArenas() == other.hasCcEnableArenas());
  if (hasCcEnableArenas()) {
    result=result && (getCcEnableArenas() == other.getCcEnableArenas());
  }
  result=result && (hasObjcClassPrefix() == other.hasObjcClassPrefix());
  if (hasObjcClassPrefix()) {
    result=result && getObjcClassPrefix().equals(other.getObjcClassPrefix());
  }
  result=result && (hasCsharpNamespace() == other.hasCsharpNamespace());
  if (hasCsharpNamespace()) {
    result=result && getCsharpNamespace().equals(other.getCsharpNamespace());
  }
  result=result && getUninterpretedOptionList().equals(other.getUninterpretedOptionList());
  result=result && unknownFields.equals(other.unknownFields);
  result=result && getExtensionFields().equals(other.getExtensionFields());
  return result;
}
