{
  serverAddressToServerInfo.put(serverInfo.getServerAddress(),serverInfo);
  serversToServerInfo.put(serverInfo.getServerName(),serverInfo);
  HServerLoad load=serversToLoad.get(serverInfo.getServerName());
  if (load != null) {
    this.master.getMetrics().incrementRequests(load.getNumberOfRequests());
    if (!load.equals(serverInfo.getLoad())) {
synchronized (loadToServers) {
        Set<String> servers=loadToServers.get(load);
        servers.remove(serverInfo.getServerName());
        if (servers.size() > 0)         loadToServers.put(load,servers);
 else         loadToServers.remove(load);
      }
    }
  }
  load=serverInfo.getLoad();
  serversToLoad.put(serverInfo.getServerName(),load);
synchronized (loadToServers) {
    Set<String> servers=loadToServers.get(load);
    if (servers == null) {
      servers=new HashSet<String>();
    }
    servers.add(serverInfo.getServerName());
    loadToServers.put(load,servers);
  }
  return processMsgs(serverInfo,mostLoadedRegions,msgs);
}
