{
  LOG.info(serverInfo.getServerAddress().toString() + " no longer serving " + region);
  if (region.isRootRegion()) {
    if (region.isOffline()) {
      LOG.fatal("root region is marked offline");
      master.shutdown();
    }
    master.regionManager.unassignRootRegion();
  }
 else {
    boolean reassignRegion=!region.isOffline();
    boolean deleteRegion=false;
    boolean offlineRegion=false;
    master.regionManager.noLongerClosing(region.getRegionName());
    if (master.regionManager.isMarkedForOffline(region.getRegionName())) {
      reassignRegion=false;
      offlineRegion=true;
    }
    if (master.regionManager.isMarkedForDeletion(region.getRegionName())) {
      master.regionManager.regionDeleted(region.getRegionName());
      reassignRegion=false;
      deleteRegion=true;
    }
    if (region.isMetaTable()) {
      master.regionManager.offlineMetaRegion(region.getStartKey());
    }
    master.regionManager.noLongerUnassigned(region);
    if (!reassignRegion) {
      try {
        master.toDoQueue.put(new ProcessRegionClose(master,region,offlineRegion,deleteRegion));
      }
 catch (      InterruptedException e) {
        throw new RuntimeException("Putting into toDoQueue was interrupted.",e);
      }
    }
 else {
      master.regionManager.setUnassigned(region);
    }
  }
}
