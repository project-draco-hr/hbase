{
  String s=serverInfo.getServerAddress().toString().trim();
  LOG.info("Received start message from: " + s);
  if (!checkForGhostReferences(serverInfo)) {
    return;
  }
  HServerLoad load=serversToLoad.remove(s);
  if (load != null) {
synchronized (loadToServers) {
      Set<String> servers=loadToServers.get(load);
      if (servers != null) {
        servers.remove(s);
        loadToServers.put(load,servers);
      }
    }
  }
  HServerInfo storedInfo=serversToServerInfo.remove(s);
  if (storedInfo != null && !master.closed.get()) {
    HServerAddress root=master.getRootRegionLocation();
    boolean rootServer=false;
    if (root != null && root.equals(storedInfo.getServerAddress())) {
      master.regionManager.unsetRootRegion();
      rootServer=true;
    }
    try {
      master.toDoQueue.put(new ProcessServerShutdown(master,storedInfo,rootServer));
    }
 catch (    InterruptedException e) {
      LOG.error("Insertion into toDoQueue was interrupted",e);
    }
  }
  load=new HServerLoad();
  serverInfo.setLoad(load);
  serversToServerInfo.put(s,serverInfo);
  serversToLoad.put(s,load);
synchronized (loadToServers) {
    Set<String> servers=loadToServers.get(load);
    if (servers == null) {
      servers=new HashSet<String>();
    }
    servers.add(s);
    loadToServers.put(load,servers);
  }
}
