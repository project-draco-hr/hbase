{
  String serverName=serverInfo.getServerAddress().toString().trim();
  if (msgs.length > 0) {
    if (msgs[0].isType(HMsg.Type.MSG_REPORT_EXITING)) {
      processRegionServerExit(serverName,msgs);
      return EMPTY_HMSG_ARRAY;
    }
 else     if (msgs[0].isType(HMsg.Type.MSG_REPORT_QUIESCED)) {
      LOG.info("Region server " + serverName + " quiesced");
      quiescedServers.incrementAndGet();
    }
  }
  if (master.shutdownRequested.get()) {
    if (quiescedServers.get() >= serversToServerInfo.size()) {
      LOG.info("All user tables quiesced. Proceeding with shutdown");
      master.startShutdown();
    }
    if (!master.closed.get()) {
      if (msgs.length > 0 && msgs[0].isType(HMsg.Type.MSG_REPORT_QUIESCED)) {
        return EMPTY_HMSG_ARRAY;
      }
      return new HMsg[]{REGIONSERVER_QUIESCE};
    }
  }
  if (master.closed.get()) {
    return new HMsg[]{REGIONSERVER_STOP};
  }
  HServerInfo storedInfo=serversToServerInfo.get(serverName);
  if (storedInfo == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("received server report from unknown server: " + serverName);
    }
    return new HMsg[]{CALL_SERVER_STARTUP};
  }
 else   if (storedInfo.getStartCode() != serverInfo.getStartCode()) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("region server race condition detected: " + serverName);
    }
synchronized (serversToServerInfo) {
      removeServerInfo(serverName);
      serversToServerInfo.notifyAll();
    }
    return new HMsg[]{REGIONSERVER_STOP};
  }
 else {
    return processRegionServerAllsWell(serverName,serverInfo,mostLoadedRegions,msgs);
  }
}
