{
  MutationProto.Builder mutateBuilder=MutationProto.newBuilder();
  mutateBuilder.setRow(ByteString.copyFromUtf8("row"));
  mutateBuilder.setMutateType(MutationType.DELETE);
  mutateBuilder.setTimestamp(111111);
  ColumnValue.Builder valueBuilder=ColumnValue.newBuilder();
  valueBuilder.setFamily(ByteString.copyFromUtf8("f1"));
  QualifierValue.Builder qualifierBuilder=QualifierValue.newBuilder();
  qualifierBuilder.setQualifier(ByteString.copyFromUtf8("c1"));
  qualifierBuilder.setDeleteType(DeleteType.DELETE_ONE_VERSION);
  qualifierBuilder.setTimestamp(111222);
  valueBuilder.addQualifierValue(qualifierBuilder.build());
  qualifierBuilder.setQualifier(ByteString.copyFromUtf8("c2"));
  qualifierBuilder.setDeleteType(DeleteType.DELETE_MULTIPLE_VERSIONS);
  qualifierBuilder.setTimestamp(111333);
  valueBuilder.addQualifierValue(qualifierBuilder.build());
  mutateBuilder.addColumnValue(valueBuilder.build());
  MutationProto proto=mutateBuilder.build();
  assertEquals(MutationProto.Durability.USE_DEFAULT,proto.getDurability());
  mutateBuilder=MutationProto.newBuilder(proto);
  mutateBuilder.setDurability(MutationProto.Durability.USE_DEFAULT);
  Delete delete=ProtobufUtil.toDelete(proto);
  for (  ColumnValue.Builder column : mutateBuilder.getColumnValueBuilderList()) {
    for (    QualifierValue.Builder qualifier : column.getQualifierValueBuilderList()) {
      qualifier.setValue(ByteString.EMPTY);
    }
  }
  assertEquals(mutateBuilder.build(),ProtobufUtil.toMutation(MutationType.DELETE,delete));
}
