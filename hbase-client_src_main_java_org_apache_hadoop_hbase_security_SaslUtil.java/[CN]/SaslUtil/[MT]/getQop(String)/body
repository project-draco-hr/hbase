{
  QualityOfProtection qop=null;
  if (QualityOfProtection.AUTHENTICATION.name().toLowerCase().equals(stringQop) || QualityOfProtection.AUTHENTICATION.saslQop.equals(stringQop)) {
    qop=QualityOfProtection.AUTHENTICATION;
  }
 else   if (QualityOfProtection.INTEGRITY.name().toLowerCase().equals(stringQop) || QualityOfProtection.INTEGRITY.saslQop.equals(stringQop)) {
    qop=QualityOfProtection.INTEGRITY;
  }
 else   if (QualityOfProtection.PRIVACY.name().toLowerCase().equals(stringQop) || QualityOfProtection.PRIVACY.saslQop.equals(stringQop)) {
    qop=QualityOfProtection.PRIVACY;
  }
  if (qop == null) {
    throw new IllegalArgumentException("Invalid qop: " + stringQop + ". It must be one of 'authentication', 'integrity', 'privacy'.");
  }
  if (QualityOfProtection.AUTHENTICATION.saslQop.equals(stringQop) || QualityOfProtection.INTEGRITY.saslQop.equals(stringQop) || QualityOfProtection.PRIVACY.saslQop.equals(stringQop)) {
    log.warn("Use authentication/integrity/privacy as value for rpc protection " + "configurations instead of auth/auth-int/auth-conf.");
  }
  return qop;
}
