{
  return new AdminService(){
    @java.lang.Override public void getRegionInfo(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetRegionInfoRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetRegionInfoResponse> done){
      impl.getRegionInfo(controller,request,done);
    }
    @java.lang.Override public void getStoreFile(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetStoreFileRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetStoreFileResponse> done){
      impl.getStoreFile(controller,request,done);
    }
    @java.lang.Override public void getOnlineRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetOnlineRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetOnlineRegionResponse> done){
      impl.getOnlineRegion(controller,request,done);
    }
    @java.lang.Override public void openRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.OpenRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.OpenRegionResponse> done){
      impl.openRegion(controller,request,done);
    }
    @java.lang.Override public void closeRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.CloseRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.CloseRegionResponse> done){
      impl.closeRegion(controller,request,done);
    }
    @java.lang.Override public void flushRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.FlushRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.FlushRegionResponse> done){
      impl.flushRegion(controller,request,done);
    }
    @java.lang.Override public void splitRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.SplitRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.SplitRegionResponse> done){
      impl.splitRegion(controller,request,done);
    }
    @java.lang.Override public void compactRegion(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.CompactRegionRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.CompactRegionResponse> done){
      impl.compactRegion(controller,request,done);
    }
    @java.lang.Override public void mergeRegions(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.MergeRegionsRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.MergeRegionsResponse> done){
      impl.mergeRegions(controller,request,done);
    }
    @java.lang.Override public void replicateWALEntry(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.ReplicateWALEntryRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.ReplicateWALEntryResponse> done){
      impl.replicateWALEntry(controller,request,done);
    }
    @java.lang.Override public void replay(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.ReplicateWALEntryRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.ReplicateWALEntryResponse> done){
      impl.replay(controller,request,done);
    }
    @java.lang.Override public void rollWALWriter(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.RollWALWriterRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.RollWALWriterResponse> done){
      impl.rollWALWriter(controller,request,done);
    }
    @java.lang.Override public void getServerInfo(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetServerInfoRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetServerInfoResponse> done){
      impl.getServerInfo(controller,request,done);
    }
    @java.lang.Override public void stopServer(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.StopServerRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.StopServerResponse> done){
      impl.stopServer(controller,request,done);
    }
    @java.lang.Override public void updateFavoredNodes(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.UpdateFavoredNodesRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.UpdateFavoredNodesResponse> done){
      impl.updateFavoredNodes(controller,request,done);
    }
    @java.lang.Override public void updateConfiguration(    com.google.protobuf.RpcController controller,    org.apache.hadoop.hbase.protobuf.generated.AdminProtos.UpdateConfigurationRequest request,    com.google.protobuf.RpcCallback<org.apache.hadoop.hbase.protobuf.generated.AdminProtos.UpdateConfigurationResponse> done){
      impl.updateConfiguration(controller,request,done);
    }
  }
;
}
