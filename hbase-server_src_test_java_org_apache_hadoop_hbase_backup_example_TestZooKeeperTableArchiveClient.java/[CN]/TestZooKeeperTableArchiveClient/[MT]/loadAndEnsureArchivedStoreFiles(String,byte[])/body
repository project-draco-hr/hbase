{
  byte[] table=Bytes.toBytes(tableName);
  List<HRegion> servingRegions=UTIL.getHBaseCluster().getRegions(table);
  assertEquals(1,servingRegions.size());
  HRegion region=servingRegions.get(0);
  HRegionServer hrs=UTIL.getRSForFirstRegionInTable(table);
  FileSystem fs=hrs.getFileSystem();
  LOG.debug("-------Loading table");
  UTIL.loadRegion(region,family);
  region.waitForFlushesAndCompactions();
  Store store=region.getStore(family);
  try {
    store.compactRecentForTesting(store.getStorefilesCount());
  }
 catch (  RuntimeException e) {
    LOG.debug("Failed to compact store:" + e.getMessage() + ", current store files:"+ store.getStorefilesCount());
  }
  Path storeArchiveDir=HFileArchiveTestingUtil.getStoreArchivePath(UTIL.getConfiguration(),region,store);
  int storeFiles=FSUtils.listStatus(fs,storeArchiveDir,null).length;
  assertTrue("Didn't create a store archive directory",fs.exists(storeArchiveDir));
  assertThat(null,new HasAnyFiles(fs,storeArchiveDir));
  return storeFiles;
}
