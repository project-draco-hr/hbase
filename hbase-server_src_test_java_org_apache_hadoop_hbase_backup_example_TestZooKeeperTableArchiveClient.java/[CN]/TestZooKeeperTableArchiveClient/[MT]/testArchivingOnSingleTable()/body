{
  LOG.debug("----Starting archiving");
  archivingClient.enableHFileBackupAsync(TABLE_NAME);
  assertTrue("Archving didn't get turned on",archivingClient.getArchivingEnabled(TABLE_NAME));
  List<HRegion> servingRegions=UTIL.getHBaseCluster().getRegions(TABLE_NAME);
  assertEquals(1,servingRegions.size());
  HRegion region=servingRegions.get(0);
  HRegionServer hrs=UTIL.getRSForFirstRegionInTable(TABLE_NAME);
  FileSystem fs=hrs.getFileSystem();
  LOG.debug("-------Loading table");
  UTIL.loadRegion(region,TEST_FAM);
  loadAndCompact(region);
  Store store=region.getStore(TEST_FAM);
  Path storeArchiveDir=HFileArchiveTestingUtil.getStoreArchivePath(UTIL.getConfiguration(),region,store);
  assertTrue("Didn't create a store archive directory",fs.exists(storeArchiveDir));
  assertTrue("No files in the store archive",FSUtils.listStatus(fs,storeArchiveDir,null).length > 0);
  Configuration conf=UTIL.getConfiguration();
  Path archiveDir=HFileArchiveUtil.getArchivePath(conf);
  Path tmpFile=new Path(archiveDir,"toDelete");
  FSDataOutputStream out=fs.create(tmpFile);
  out.write(1);
  out.close();
  assertTrue(fs.exists(tmpFile));
  Thread.sleep(ttl);
  FSUtils.logFileSystemState(fs,archiveDir,LOG);
  ensureHFileCleanersRun();
  assertTrue("Store archive got deleted",fs.exists(storeArchiveDir));
  assertTrue("Archived HFiles got deleted",FSUtils.listStatus(fs,storeArchiveDir,null).length > 0);
  assertFalse("Tmp file (non-table archive file) didn't " + "get deleted, archive dir: " + fs.listStatus(archiveDir),fs.exists(tmpFile));
  LOG.debug("Turning off hfile backup.");
  archivingClient.disableHFileBackup();
  LOG.debug("Deleting table from archive.");
  Path primaryTable=new Path(HFileArchiveUtil.getArchivePath(UTIL.getConfiguration()),STRING_TABLE_NAME);
  fs.delete(primaryTable,true);
  LOG.debug("Deleted primary table, waiting for file cleaners to run");
  Thread.sleep(ttl);
  UTIL.getHBaseCluster().getMaster().getHFileCleaner().triggerNow();
  Thread.sleep(ttl);
  LOG.debug("File cleaners done, checking results.");
  assertTrue(fs.exists(HFileArchiveUtil.getArchivePath(UTIL.getConfiguration())));
}
