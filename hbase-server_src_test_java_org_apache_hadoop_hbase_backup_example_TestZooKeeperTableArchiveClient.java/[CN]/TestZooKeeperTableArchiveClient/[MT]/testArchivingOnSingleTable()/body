{
  createArchiveDirectory();
  FileSystem fs=UTIL.getTestFileSystem();
  Path archiveDir=getArchiveDir();
  Path tableDir=getTableDir(STRING_TABLE_NAME);
  toCleanup.add(archiveDir);
  toCleanup.add(tableDir);
  Configuration conf=UTIL.getConfiguration();
  Stoppable stop=new StoppableImplementation();
  HFileCleaner cleaner=setupAndCreateCleaner(conf,fs,archiveDir,stop);
  List<BaseHFileCleanerDelegate> cleaners=turnOnArchiving(STRING_TABLE_NAME,cleaner);
  final LongTermArchivingHFileCleaner delegate=(LongTermArchivingHFileCleaner)cleaners.get(0);
  HColumnDescriptor hcd=new HColumnDescriptor(TEST_FAM);
  HRegion region=UTIL.createTestRegion(STRING_TABLE_NAME,hcd);
  final CompactedHFilesDischarger compactionCleaner=new CompactedHFilesDischarger(100,stop,region);
  loadFlushAndCompact(region,TEST_FAM);
  compactionCleaner.chore();
  List<Path> files=getAllFiles(fs,archiveDir);
  if (files == null) {
    FSUtils.logFileSystemState(fs,UTIL.getDataTestDir(),LOG);
    throw new RuntimeException("Didn't archive any files!");
  }
  CountDownLatch finished=setupCleanerWatching(delegate,cleaners,files.size());
  runCleaner(cleaner,finished,stop);
  List<Path> archivedFiles=getAllFiles(fs,archiveDir);
  assertEquals("Archived files changed after running archive cleaner.",files,archivedFiles);
  assertTrue(fs.exists(HFileArchiveUtil.getArchivePath(UTIL.getConfiguration())));
}
