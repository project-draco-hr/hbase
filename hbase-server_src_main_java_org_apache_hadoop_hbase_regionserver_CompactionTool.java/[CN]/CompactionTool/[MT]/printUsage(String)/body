{
  if (message != null && message.length() > 0) {
    System.err.println(message);
  }
  System.err.println("Usage: java " + this.getClass().getName() + " \\");
  System.err.println("  [-compactOnce] [-major] [-mapred] [-D<property=value>]* files...");
  System.err.println();
  System.err.println("Options:");
  System.err.println(" mapred         Use MapReduce to run compaction.");
  System.err.println(" compactOnce    Execute just one compaction step. (default: while needed)");
  System.err.println(" major          Trigger major compaction.");
  System.err.println();
  System.err.println("Note: -D properties will be applied to the conf used. ");
  System.err.println("For example: ");
  System.err.println(" To preserve input files, pass -D" + CONF_COMPLETE_COMPACTION + "=false");
  System.err.println(" To stop delete of compacted file, pass -D" + CONF_DELETE_COMPACTED + "=false");
  System.err.println(" To set tmp dir, pass -D" + CONF_TMP_DIR + "=ALTERNATE_DIR");
  System.err.println();
  System.err.println("Examples:");
  System.err.println(" To compact the full 'TestTable' using MapReduce:");
  System.err.println(" $ bin/hbase " + this.getClass().getName() + " -mapred hdfs:///hbase/TestTable");
  System.err.println();
  System.err.println(" To compact column family 'x' of the table 'TestTable' region 'abc':");
  System.err.println(" $ bin/hbase " + this.getClass().getName() + " hdfs:///hbase/TestTable/abc/x");
}
