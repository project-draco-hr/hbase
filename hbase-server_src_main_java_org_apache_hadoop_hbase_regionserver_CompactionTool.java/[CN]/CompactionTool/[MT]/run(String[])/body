{
  Set<Path> toCompactDirs=new HashSet<Path>();
  boolean compactOnce=false;
  boolean mapred=false;
  Configuration conf=getConf();
  FileSystem fs=FileSystem.get(conf);
  try {
    for (int i=0; i < args.length; ++i) {
      String opt=args[i];
      if (opt.equals("-compactOnce")) {
        compactOnce=true;
      }
 else       if (opt.equals("-mapred")) {
        mapred=true;
      }
 else       if (!opt.startsWith("-")) {
        Path path=new Path(opt);
        FileStatus status=fs.getFileStatus(path);
        if (!status.isDir()) {
          printUsage("Specified path is not a directory. path=" + path);
          return 1;
        }
        toCompactDirs.add(path);
      }
 else {
        printUsage();
      }
    }
  }
 catch (  Exception e) {
    printUsage(e.getMessage());
    return 1;
  }
  if (toCompactDirs.size() == 0) {
    printUsage("No directories to compact specified.");
    return 1;
  }
  if (mapred) {
    return doMapReduce(fs,toCompactDirs,compactOnce);
  }
 else {
    return doClient(fs,toCompactDirs,compactOnce);
  }
}
