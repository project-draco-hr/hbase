{
  List<Path> storeDirs=new LinkedList<Path>();
  for (  Path compactDir : toCompactDirs) {
    if (isFamilyDir(fs,compactDir)) {
      storeDirs.add(compactDir);
    }
 else     if (isRegionDir(fs,compactDir)) {
      for (      Path familyDir : FSUtils.getFamilyDirs(fs,compactDir)) {
        storeDirs.add(familyDir);
      }
    }
 else     if (isTableDir(fs,compactDir)) {
      for (      Path regionDir : FSUtils.getRegionDirs(fs,compactDir)) {
        for (        Path familyDir : FSUtils.getFamilyDirs(fs,regionDir)) {
          storeDirs.add(familyDir);
        }
      }
    }
 else {
      throw new IOException("Specified path is not a table, region or family directory. path=" + compactDir);
    }
  }
  FSDataOutputStream stream=fs.create(path);
  LOG.info("Create input file=" + path + " with "+ storeDirs.size()+ " dirs to compact.");
  try {
    final byte[] newLine=Bytes.toBytes("\n");
    for (    Path storeDir : storeDirs) {
      stream.write(Bytes.toBytes(storeDir.toString()));
      stream.write(newLine);
    }
  }
  finally {
    stream.close();
  }
}
