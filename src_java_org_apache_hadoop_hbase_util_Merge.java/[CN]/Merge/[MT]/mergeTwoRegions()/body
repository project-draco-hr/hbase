{
  LOG.info("Merging regions " + this.region1.toString() + " and "+ this.region2.toString()+ " in table "+ this.tableName.toString());
  MetaScannerListener listener=new MetaScannerListener(region1,region2);
  this.utils.scanRootRegion(listener);
  HRegionInfo meta1=listener.getMeta1();
  if (meta1 == null) {
    throw new IOException("Could not find meta region for " + region1);
  }
  HRegionInfo meta2=listener.getMeta2();
  if (meta2 == null) {
    throw new IOException("Could not find meta region for " + region2);
  }
  LOG.info("Found meta for region1 " + meta1.getRegionName() + ", meta for region2 "+ meta2.getRegionName());
  HRegion metaRegion1=this.utils.getMetaRegion(meta1);
  HRegionInfo info1=Writables.getHRegionInfo(metaRegion1.get(region1,HConstants.COL_REGIONINFO));
  if (info1 == null) {
    throw new NullPointerException("info1 is null using key " + region1 + " in "+ meta1);
  }
  HRegion metaRegion2=null;
  if (Bytes.equals(meta1.getRegionName(),meta2.getRegionName())) {
    metaRegion2=metaRegion1;
  }
 else {
    metaRegion2=utils.getMetaRegion(meta2);
  }
  HRegionInfo info2=Writables.getHRegionInfo(metaRegion2.get(region2,HConstants.COL_REGIONINFO));
  if (info2 == null) {
    throw new NullPointerException("info2 is null using key " + meta2);
  }
  HRegion merged=merge(info1,metaRegion1,info2,metaRegion2);
  listener=new MetaScannerListener(merged.getRegionName(),null);
  utils.scanRootRegion(listener);
  HRegionInfo mergedInfo=listener.getMeta1();
  if (mergedInfo == null) {
    throw new IOException("Could not find meta region for " + merged.getRegionName());
  }
  HRegion mergeMeta=null;
  if (Bytes.equals(mergedInfo.getRegionName(),meta1.getRegionName())) {
    mergeMeta=metaRegion1;
  }
 else   if (Bytes.equals(mergedInfo.getRegionName(),meta2.getRegionName())) {
    mergeMeta=metaRegion2;
  }
 else {
    mergeMeta=utils.getMetaRegion(mergedInfo);
  }
  LOG.info("Adding " + merged.getRegionInfo() + " to "+ mergeMeta.getRegionInfo());
  HRegion.addRegionToMETA(mergeMeta,merged);
  merged.close();
}
