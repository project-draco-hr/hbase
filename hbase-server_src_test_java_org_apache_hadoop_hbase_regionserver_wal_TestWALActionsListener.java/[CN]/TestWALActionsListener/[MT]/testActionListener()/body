{
  DummyWALActionsListener observer=new DummyWALActionsListener();
  List<WALActionsListener> list=new ArrayList<WALActionsListener>();
  list.add(observer);
  final WALFactory wals=new WALFactory(conf,list,"testActionListener");
  DummyWALActionsListener laterobserver=new DummyWALActionsListener();
  HRegionInfo hri=new HRegionInfo(TableName.valueOf(SOME_BYTES),SOME_BYTES,SOME_BYTES,false);
  final WAL wal=wals.getWAL(hri.getEncodedNameAsBytes(),hri.getTable().getNamespace());
  for (int i=0; i < 20; i++) {
    byte[] b=Bytes.toBytes(i + "");
    KeyValue kv=new KeyValue(b,b,b);
    WALEdit edit=new WALEdit();
    edit.add(kv);
    HTableDescriptor htd=new HTableDescriptor(TableName.valueOf(SOME_BYTES));
    htd.addFamily(new HColumnDescriptor(b));
    NavigableMap<byte[],Integer> scopes=new TreeMap<byte[],Integer>(Bytes.BYTES_COMPARATOR);
    for (    byte[] fam : htd.getFamiliesKeys()) {
      scopes.put(fam,0);
    }
    final long txid=wal.append(hri,new WALKey(hri.getEncodedNameAsBytes(),TableName.valueOf(b),0,scopes),edit,true);
    wal.sync(txid);
    if (i == 10) {
      wal.registerWALActionsListener(laterobserver);
    }
    if (i % 2 == 0) {
      wal.rollWriter();
    }
  }
  wal.close();
  assertEquals(11,observer.preLogRollCounter);
  assertEquals(11,observer.postLogRollCounter);
  assertEquals(5,laterobserver.preLogRollCounter);
  assertEquals(5,laterobserver.postLogRollCounter);
  assertEquals(1,observer.closedCount);
}
