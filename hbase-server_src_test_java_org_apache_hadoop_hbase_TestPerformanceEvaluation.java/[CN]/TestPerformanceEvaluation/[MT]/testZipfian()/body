{
  TestOptions opts=new PerformanceEvaluation.TestOptions();
  opts.setValueZipf(true);
  final int valueSize=1024;
  opts.setValueSize(valueSize);
  RandomReadTest rrt=new RandomReadTest(null,opts,null);
  Constructor<?> ctor=Histogram.class.getDeclaredConstructor(com.codahale.metrics.Reservoir.class);
  ctor.setAccessible(true);
  Histogram histogram=(Histogram)ctor.newInstance(new UniformReservoir(1024 * 500));
  for (int i=0; i < 100; i++) {
    histogram.update(rrt.getValueLength(null));
  }
  Snapshot snapshot=histogram.getSnapshot();
  double stddev=snapshot.getStdDev();
  assertTrue(stddev != 0 && stddev != 1.0);
  assertTrue(snapshot.getStdDev() != 0);
  double median=snapshot.getMedian();
  assertTrue(median != 0 && median != 1 && median != valueSize);
}
