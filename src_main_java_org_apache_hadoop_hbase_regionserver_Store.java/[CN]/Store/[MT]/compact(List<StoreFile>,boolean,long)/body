{
  int maxKeyCount=0;
  for (  StoreFile file : filesToCompact) {
    StoreFile.Reader r=file.getReader();
    if (r != null) {
      maxKeyCount+=(r.getBloomFilterType() == family.getBloomFilterType()) ? r.getFilterEntries() : r.getEntries();
    }
  }
  List<StoreFileScanner> scanners=StoreFileScanner.getScannersForStoreFiles(filesToCompact,false,false);
  StoreFile.Writer writer=null;
  try {
    if (majorCompaction) {
      InternalScanner scanner=null;
      try {
        Scan scan=new Scan();
        scan.setMaxVersions(family.getMaxVersions());
        scanner=new StoreScanner(this,scan,scanners);
        ArrayList<KeyValue> kvs=new ArrayList<KeyValue>();
        while (scanner.next(kvs)) {
          for (          KeyValue kv : kvs) {
            if (writer == null) {
              writer=createWriterInTmp(maxKeyCount,this.compactionCompression);
            }
            writer.append(kv);
          }
          kvs.clear();
        }
      }
  finally {
        if (scanner != null) {
          scanner.close();
        }
      }
    }
 else {
      MinorCompactingStoreScanner scanner=null;
      try {
        scanner=new MinorCompactingStoreScanner(this,scanners);
        writer=createWriterInTmp(maxKeyCount);
        while (scanner.next(writer)) {
        }
      }
  finally {
        if (scanner != null)         scanner.close();
      }
    }
  }
  finally {
    if (writer != null) {
      writer.appendMetadata(maxId,majorCompaction);
      writer.close();
    }
  }
  return writer;
}
