{
  conf=TEST_UTIL.getConfiguration();
  SecureTestUtil.enableSecurity(conf);
  conf.set("hbase.coprocessor.master.classes",AccessController.class.getName() + "," + VisibilityController.class.getName());
  conf.set("hbase.coprocessor.region.classes",AccessController.class.getName() + "," + VisibilityController.class.getName());
  TEST_UTIL.startMiniCluster(2);
  TEST_UTIL.waitTableEnabled(AccessControlLists.ACL_TABLE_NAME.getName(),50000);
  TEST_UTIL.waitTableEnabled(LABELS_TABLE_NAME.getName(),50000);
  addLabels();
  SUPERUSER=User.createUserForTesting(conf,"admin",new String[]{"supergroup"});
  NORMAL_USER1=User.createUserForTesting(conf,"user1",new String[]{});
  NORMAL_USER2=User.createUserForTesting(conf,"user2",new String[]{});
  HTable acl=new HTable(conf,AccessControlLists.ACL_TABLE_NAME);
  try {
    BlockingRpcChannel service=acl.coprocessorService(LABELS_TABLE_NAME.getName());
    AccessControlService.BlockingInterface protocol=AccessControlService.newBlockingStub(service);
    ProtobufUtil.grant(protocol,NORMAL_USER1.getShortName(),LABELS_TABLE_NAME,null,null,Permission.Action.EXEC);
    ProtobufUtil.grant(protocol,NORMAL_USER2.getShortName(),LABELS_TABLE_NAME,null,null,Permission.Action.EXEC);
  }
  finally {
    acl.close();
  }
}
