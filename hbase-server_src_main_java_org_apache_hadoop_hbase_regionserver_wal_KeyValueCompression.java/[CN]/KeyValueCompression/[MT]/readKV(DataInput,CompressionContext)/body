{
  int keylength=WritableUtils.readVInt(in);
  int vlength=WritableUtils.readVInt(in);
  int tagsLength=WritableUtils.readVInt(in);
  int length=(int)KeyValue.getKeyValueDataStructureSize(keylength,vlength,tagsLength);
  byte[] backingArray=new byte[length];
  int pos=0;
  pos=Bytes.putInt(backingArray,pos,keylength);
  pos=Bytes.putInt(backingArray,pos,vlength);
  int elemLen=Compressor.uncompressIntoArray(backingArray,pos + Bytes.SIZEOF_SHORT,in,readContext.rowDict);
  checkLength(elemLen,Short.MAX_VALUE);
  pos=Bytes.putShort(backingArray,pos,(short)elemLen);
  pos+=elemLen;
  elemLen=Compressor.uncompressIntoArray(backingArray,pos + Bytes.SIZEOF_BYTE,in,readContext.familyDict);
  checkLength(elemLen,Byte.MAX_VALUE);
  pos=Bytes.putByte(backingArray,pos,(byte)elemLen);
  pos+=elemLen;
  elemLen=Compressor.uncompressIntoArray(backingArray,pos,in,readContext.qualifierDict);
  pos+=elemLen;
  in.readFully(backingArray,pos,length - pos);
  return new KeyValue(backingArray,0,length);
}
