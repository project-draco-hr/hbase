{
  handler.createTable(tableAname,getColumnDescriptors());
  handler.mutateRow(tableAname,rowAname,getMutations(),null);
  assertEquals(valueAname,handler.get(tableAname,rowAname,columnAname,null).get(0).value);
  TRowResult rowResult1=handler.getRow(tableAname,rowAname,null).get(0);
  assertEquals(rowAname,rowResult1.row);
  assertEquals(valueBname,rowResult1.columns.get(columnBname).value);
  handler.mutateRows(tableAname,getBatchMutations(),null);
  List<TCell> cells=handler.get(tableAname,rowAname,columnAname,null);
  assertFalse(cells.size() > 0);
  assertEquals(valueCname,handler.get(tableAname,rowAname,columnBname,null).get(0).value);
  List<TCell> versions=handler.getVer(tableAname,rowAname,columnBname,MAXVERSIONS,null);
  assertEquals(valueCname,versions.get(0).value);
  assertEquals(valueBname,versions.get(1).value);
  TRowResult rowResult2=handler.getRow(tableAname,rowBname,null).get(0);
  assertEquals(rowBname,rowResult2.row);
  assertEquals(valueCname,rowResult2.columns.get(columnAname).value);
  assertEquals(valueDname,rowResult2.columns.get(columnBname).value);
  handler.deleteAll(tableAname,rowAname,columnBname,null);
  handler.deleteAllRow(tableAname,rowBname,null);
  int size=handler.get(tableAname,rowAname,columnBname,null).size();
  assertEquals(0,size);
  size=handler.getRow(tableAname,rowBname,null).size();
  assertEquals(0,size);
  List<Mutation> mutations=new ArrayList<Mutation>();
  mutations.add(new Mutation(false,columnAname,null,true));
  handler.mutateRow(tableAname,rowAname,mutations,null);
  TRowResult rowResult3=handler.getRow(tableAname,rowAname,null).get(0);
  assertEquals(rowAname,rowResult3.row);
  assertEquals(0,rowResult3.columns.get(columnAname).value.remaining());
  handler.disableTable(tableAname);
  handler.deleteTable(tableAname);
}
