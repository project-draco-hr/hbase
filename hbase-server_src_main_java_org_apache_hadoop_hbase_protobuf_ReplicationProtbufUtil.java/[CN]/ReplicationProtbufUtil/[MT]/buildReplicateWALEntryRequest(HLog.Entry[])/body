{
  AdminProtos.WALEntry.WALEdit.FamilyScope.Builder scopeBuilder=AdminProtos.WALEntry.WALEdit.FamilyScope.newBuilder();
  AdminProtos.WALEntry.Builder entryBuilder=AdminProtos.WALEntry.newBuilder();
  AdminProtos.ReplicateWALEntryRequest.Builder builder=AdminProtos.ReplicateWALEntryRequest.newBuilder();
  for (  HLog.Entry entry : entries) {
    entryBuilder.clear();
    AdminProtos.WALEntry.WALKey.Builder keyBuilder=entryBuilder.getKeyBuilder();
    HLogKey key=entry.getKey();
    keyBuilder.setEncodedRegionName(ByteString.copyFrom(key.getEncodedRegionName()));
    keyBuilder.setTableName(ByteString.copyFrom(key.getTablename()));
    keyBuilder.setLogSequenceNumber(key.getLogSeqNum());
    keyBuilder.setWriteTime(key.getWriteTime());
    UUID clusterId=key.getClusterId();
    if (clusterId != null) {
      AdminProtos.UUID.Builder uuidBuilder=keyBuilder.getClusterIdBuilder();
      uuidBuilder.setLeastSigBits(clusterId.getLeastSignificantBits());
      uuidBuilder.setMostSigBits(clusterId.getMostSignificantBits());
    }
    WALEdit edit=entry.getEdit();
    AdminProtos.WALEntry.WALEdit.Builder editBuilder=entryBuilder.getEditBuilder();
    NavigableMap<byte[],Integer> scopes=edit.getScopes();
    if (scopes != null && !scopes.isEmpty()) {
      for (      Map.Entry<byte[],Integer> scope : scopes.entrySet()) {
        scopeBuilder.setFamily(ByteString.copyFrom(scope.getKey()));
        AdminProtos.WALEntry.WALEdit.ScopeType scopeType=AdminProtos.WALEntry.WALEdit.ScopeType.valueOf(scope.getValue().intValue());
        scopeBuilder.setScopeType(scopeType);
        editBuilder.addFamilyScope(scopeBuilder.build());
      }
    }
    List<KeyValue> keyValues=edit.getKeyValues();
    for (    KeyValue value : keyValues) {
      editBuilder.addKeyValueBytes(ByteString.copyFrom(value.getBuffer(),value.getOffset(),value.getLength()));
    }
    builder.addEntry(entryBuilder.build());
  }
  return builder.build();
}
