{
  ZooKeeperWatcher watcher=new ZooKeeperWatcher(HBaseConfiguration.create(),"testIsClientReadable",null,false);
  assertTrue(watcher.isClientReadable(watcher.znodePaths.baseZNode));
  assertTrue(watcher.isClientReadable(watcher.znodePaths.getZNodeForReplica(0)));
  assertTrue(watcher.isClientReadable(watcher.znodePaths.masterAddressZNode));
  assertTrue(watcher.isClientReadable(watcher.znodePaths.clusterIdZNode));
  assertTrue(watcher.isClientReadable(watcher.znodePaths.tableZNode));
  assertTrue(watcher.isClientReadable(ZKUtil.joinZNode(watcher.znodePaths.tableZNode,"foo")));
  assertTrue(watcher.isClientReadable(watcher.znodePaths.rsZNode));
  assertFalse(watcher.isClientReadable(watcher.znodePaths.tableLockZNode));
  assertFalse(watcher.isClientReadable(watcher.znodePaths.balancerZNode));
  assertFalse(watcher.isClientReadable(watcher.znodePaths.regionNormalizerZNode));
  assertFalse(watcher.isClientReadable(watcher.znodePaths.clusterStateZNode));
  assertFalse(watcher.isClientReadable(watcher.znodePaths.drainingZNode));
  assertFalse(watcher.isClientReadable(watcher.znodePaths.recoveringRegionsZNode));
  assertFalse(watcher.isClientReadable(watcher.znodePaths.splitLogZNode));
  assertFalse(watcher.isClientReadable(watcher.znodePaths.backupMasterAddressesZNode));
  watcher.close();
}
