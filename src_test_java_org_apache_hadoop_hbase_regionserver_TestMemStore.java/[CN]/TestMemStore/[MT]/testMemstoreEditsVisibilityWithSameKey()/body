{
  final byte[] row=Bytes.toBytes(1);
  final byte[] f=Bytes.toBytes("family");
  final byte[] q1=Bytes.toBytes("q1");
  final byte[] q2=Bytes.toBytes("q2");
  final byte[] v1=Bytes.toBytes("value1");
  final byte[] v2=Bytes.toBytes("value2");
  ReadWriteConsistencyControl.WriteEntry w=rwcc.beginMemstoreInsert();
  KeyValue kv11=new KeyValue(row,f,q1,v1);
  kv11.setMemstoreTS(w.getWriteNumber());
  memstore.add(kv11);
  KeyValue kv12=new KeyValue(row,f,q2,v1);
  kv12.setMemstoreTS(w.getWriteNumber());
  memstore.add(kv12);
  rwcc.completeMemstoreInsert(w);
  ReadWriteConsistencyControl.resetThreadReadPoint(rwcc);
  KeyValueScanner s=this.memstore.getScanners().get(0);
  assertScannerResults(s,new KeyValue[]{kv11,kv12});
  w=rwcc.beginMemstoreInsert();
  KeyValue kv21=new KeyValue(row,f,q1,v2);
  kv21.setMemstoreTS(w.getWriteNumber());
  memstore.add(kv21);
  KeyValue kv22=new KeyValue(row,f,q2,v2);
  kv22.setMemstoreTS(w.getWriteNumber());
  memstore.add(kv22);
  ReadWriteConsistencyControl.resetThreadReadPoint(rwcc);
  s=this.memstore.getScanners().get(0);
  assertScannerResults(s,new KeyValue[]{kv11,kv12});
  rwcc.completeMemstoreInsert(w);
  ReadWriteConsistencyControl.resetThreadReadPoint(rwcc);
  s=this.memstore.getScanners().get(0);
  assertScannerResults(s,new KeyValue[]{kv21,kv11,kv22,kv12});
}
