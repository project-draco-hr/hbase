{
  ClusterStatus status=this.cluster.getClusterStatus();
  List<ServerName> victimServers=new LinkedList<ServerName>(status.getServers());
  int liveCount=(int)Math.ceil(FRC_SERVERS_THAT_HOARD_AND_LIVE * victimServers.size());
  int deadCount=(int)Math.ceil(FRC_SERVERS_THAT_HOARD_AND_DIE * victimServers.size());
  Assert.assertTrue((liveCount + deadCount) < victimServers.size());
  List<ServerName> targetServers=new ArrayList<ServerName>(liveCount);
  for (int i=0; i < liveCount + deadCount; ++i) {
    int victimIx=RandomUtils.nextInt(victimServers.size());
    targetServers.add(victimServers.remove(victimIx));
  }
  unbalanceRegions(status,victimServers,targetServers,HOARD_FRC_OF_REGIONS);
  Thread.sleep(waitForUnbalanceMilliSec);
  for (int i=0; i < liveCount; ++i) {
    killRs(targetServers.get(i));
  }
  Thread.sleep(waitForKillsMilliSec);
  forceBalancer();
  Thread.sleep(waitAfterBalanceMilliSec);
  for (int i=0; i < liveCount; ++i) {
    startRs(targetServers.get(i));
  }
}
