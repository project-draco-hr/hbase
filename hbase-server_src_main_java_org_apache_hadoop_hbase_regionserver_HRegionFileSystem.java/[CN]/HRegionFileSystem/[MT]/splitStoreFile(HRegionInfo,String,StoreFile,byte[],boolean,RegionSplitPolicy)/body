{
  if (splitPolicy == null || !splitPolicy.skipStoreFileRangeCheck()) {
    if (top) {
      KeyValue splitKey=KeyValueUtil.createFirstOnRow(splitRow);
      byte[] lastKey=f.createReader().getLastKey();
      if (lastKey == null)       return null;
      if (f.getReader().getComparator().compareFlatKey(splitKey.getBuffer(),splitKey.getKeyOffset(),splitKey.getKeyLength(),lastKey,0,lastKey.length) > 0) {
        return null;
      }
    }
 else {
      KeyValue splitKey=KeyValueUtil.createLastOnRow(splitRow);
      byte[] firstKey=f.createReader().getFirstKey();
      if (firstKey == null)       return null;
      if (f.getReader().getComparator().compareFlatKey(splitKey.getBuffer(),splitKey.getKeyOffset(),splitKey.getKeyLength(),firstKey,0,firstKey.length) < 0) {
        return null;
      }
    }
  }
  f.closeReader(true);
  Path splitDir=new Path(getSplitsDir(hri),familyName);
  Reference r=top ? Reference.createTopReference(splitRow) : Reference.createBottomReference(splitRow);
  String parentRegionName=regionInfoForFs.getEncodedName();
  Path p=new Path(splitDir,f.getPath().getName() + "." + parentRegionName);
  return r.write(fs,p);
}
