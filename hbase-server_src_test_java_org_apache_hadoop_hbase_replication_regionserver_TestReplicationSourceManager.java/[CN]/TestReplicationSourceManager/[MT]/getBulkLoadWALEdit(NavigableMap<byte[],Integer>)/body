{
  Map<byte[],List<Path>> storeFiles=new HashMap<>(1);
  Map<String,Long> storeFilesSize=new HashMap<>(1);
  List<Path> p=new ArrayList<>(1);
  Path hfilePath1=new Path(Bytes.toString(f1));
  p.add(hfilePath1);
  try {
    storeFilesSize.put(hfilePath1.getName(),fs.getFileStatus(hfilePath1).getLen());
  }
 catch (  IOException e) {
    LOG.debug("Failed to calculate the size of hfile " + hfilePath1);
    storeFilesSize.put(hfilePath1.getName(),0L);
  }
  storeFiles.put(f1,p);
  scope.put(f1,1);
  p=new ArrayList<>(1);
  Path hfilePath2=new Path(Bytes.toString(f2));
  p.add(hfilePath2);
  try {
    storeFilesSize.put(hfilePath2.getName(),fs.getFileStatus(hfilePath2).getLen());
  }
 catch (  IOException e) {
    LOG.debug("Failed to calculate the size of hfile " + hfilePath2);
    storeFilesSize.put(hfilePath2.getName(),0L);
  }
  storeFiles.put(f2,p);
  BulkLoadDescriptor desc=ProtobufUtil.toBulkLoadDescriptor(hri.getTable(),ByteStringer.wrap(hri.getEncodedNameAsBytes()),storeFiles,storeFilesSize,1);
  WALEdit logEdit=WALEdit.createBulkLoadEvent(hri,desc);
  return logEdit;
}
