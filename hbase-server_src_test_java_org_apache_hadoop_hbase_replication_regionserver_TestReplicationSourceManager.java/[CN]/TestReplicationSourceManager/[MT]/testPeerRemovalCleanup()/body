{
  String replicationSourceImplName=conf.get("replication.replicationsource.implementation");
  try {
    DummyServer server=new DummyServer();
    final ReplicationQueues rq=ReplicationFactory.getReplicationQueues(new ReplicationQueuesArguments(server.getConfiguration(),server,server.getZooKeeper()));
    rq.init(server.getServerName().toString());
    conf.set("replication.replicationsource.implementation",FailInitializeDummyReplicationSource.class.getName());
    final ReplicationPeers rp=manager.getReplicationPeers();
    rp.registerPeer("FakePeer",new ReplicationPeerConfig().setClusterKey("localhost:1:/hbase"));
    Waiter.waitFor(conf,20000,new Waiter.Predicate<Exception>(){
      @Override public boolean evaluate() throws Exception {
        return (rp.getConnectedPeer("FakePeer") != null);
      }
    }
);
    List<ReplicationSourceInterface> sources=manager.getSources();
    for (    ReplicationSourceInterface source : sources) {
      assertNotEquals("FakePeer",source.getPeerClusterId());
    }
    rq.addLog("FakePeer","FakeFile");
    rp.unregisterPeer("FakePeer");
    Waiter.waitFor(conf,20000,new Waiter.Predicate<Exception>(){
      @Override public boolean evaluate() throws Exception {
        List<String> peers=rp.getAllPeerIds();
        return (!rq.getAllQueues().contains("FakePeer")) && (rp.getConnectedPeer("FakePeer") == null) && (!peers.contains("FakePeer"));
      }
    }
);
  }
  finally {
    conf.set("replication.replicationsource.implementation",replicationSourceImplName);
  }
}
