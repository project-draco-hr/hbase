{
  String regionName=rs.getRegionInfo().getRegionNameAsString();
  LOG.info("Assigning region " + regionName + " to "+ sinfo.getServerName());
  rs.setPendingOpen(sinfo.getServerName());
synchronized (this.regionsInTransition) {
    byte[] data=null;
    try {
      data=Writables.getBytes(new RegionTransitionEventData(HBaseEventType.M2ZK_REGION_OFFLINE,HMaster.MASTER));
    }
 catch (    IOException e) {
      LOG.error("Error creating event data for " + HBaseEventType.M2ZK_REGION_OFFLINE,e);
    }
    zkWrapper.createUnassignedRegion(rs.getRegionInfo().getEncodedName(),data);
    LOG.debug("Created UNASSIGNED zNode " + regionName + " in state "+ HBaseEventType.M2ZK_REGION_OFFLINE);
    this.regionsInTransition.put(regionName,rs);
  }
  returnMsgs.add(new HMsg(HMsg.Type.MSG_REGION_OPEN,rs.getRegionInfo()));
}
