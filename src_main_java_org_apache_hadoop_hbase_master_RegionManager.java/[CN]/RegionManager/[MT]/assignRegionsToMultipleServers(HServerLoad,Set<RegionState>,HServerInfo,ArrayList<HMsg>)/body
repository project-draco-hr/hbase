{
  boolean isMetaAssign=false;
  for (  RegionState s : regionsToAssign) {
    if (s.getRegionInfo().isMetaRegion())     isMetaAssign=true;
  }
  int nRegionsToAssign=regionsToAssign.size();
  int otherServersRegionsCount=regionsToGiveOtherServers(nRegionsToAssign,thisServersLoad);
  nRegionsToAssign-=otherServersRegionsCount;
  if (nRegionsToAssign > 0 || isMetaAssign) {
    LOG.debug("Assigning for " + info + ": total nregions to assign="+ nRegionsToAssign+ ", regions to give other servers than this="+ otherServersRegionsCount+ ", isMetaAssign="+ isMetaAssign);
    HServerLoad heavierLoad=new HServerLoad();
    int nservers=computeNextHeaviestLoad(thisServersLoad,heavierLoad);
    int nregions=0;
    for (HServerLoad load=new HServerLoad(thisServersLoad); load.compareTo(heavierLoad) <= 0 && nregions < nRegionsToAssign; load.setNumberOfRegions(load.getNumberOfRegions() + 1), nregions++) {
    }
    if (nregions < nRegionsToAssign) {
      if (nservers > 0) {
        nregions=(int)Math.ceil((1.0 * nRegionsToAssign) / (1.0 * nservers));
      }
 else {
        nregions=(int)Math.ceil((1.0 * nRegionsToAssign) / (1.0 * master.getServerManager().numServers()));
      }
    }
 else {
      nregions=nRegionsToAssign;
    }
    LOG.debug("Assigning " + info + " "+ nregions+ " regions");
    assignRegions(regionsToAssign,nregions,info,returnMsgs);
  }
}
