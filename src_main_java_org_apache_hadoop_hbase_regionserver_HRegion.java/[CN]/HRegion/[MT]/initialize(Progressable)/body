{
  this.closing.set(false);
  this.closed.set(false);
  checkRegioninfoOnFilesystem();
  cleanupTmpDir();
  long maxSeqId=-1;
  for (  HColumnDescriptor c : this.regionInfo.getTableDesc().getFamilies()) {
    Store store=instantiateHStore(this.tableDir,c);
    this.stores.put(c.getName(),store);
    long storeSeqId=store.getMaxSequenceId();
    if (storeSeqId > maxSeqId) {
      maxSeqId=storeSeqId;
    }
  }
  maxSeqId=replayRecoveredEditsIfAny(this.regiondir,maxSeqId,reporter);
  SplitTransaction.cleanupAnySplitDetritus(this);
  FSUtils.deleteDirectory(this.fs,new Path(regiondir,MERGEDIR));
  if (this.regionInfo.getTableDesc().isReadOnly()) {
    this.writestate.setReadOnly(true);
  }
  this.writestate.compacting=false;
  this.lastFlushTime=EnvironmentEdgeManager.currentTimeMillis();
  long nextSeqid=maxSeqId + 1;
  LOG.info("Onlined " + this.toString() + "; next sequenceid="+ nextSeqid);
  return nextSeqid;
}
