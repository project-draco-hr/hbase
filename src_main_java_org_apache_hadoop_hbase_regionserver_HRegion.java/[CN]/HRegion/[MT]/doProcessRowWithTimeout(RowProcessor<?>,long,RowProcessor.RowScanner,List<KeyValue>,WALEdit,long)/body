{
  FutureTask<Void> task=new FutureTask<Void>(new Callable<Void>(){
    @Override public Void call() throws IOException {
      processor.process(now,scanner,mutations,walEdits);
      return null;
    }
  }
);
  Thread t=new Thread(task);
  t.setDaemon(true);
  t.start();
  try {
    task.get(timeout,TimeUnit.MILLISECONDS);
  }
 catch (  TimeoutException te) {
    LOG.error("RowProcessor timeout on row:" + Bytes.toStringBinary(processor.getRow()) + " timeout:"+ timeout,te);
    throw new IOException(te);
  }
catch (  Exception e) {
    throw new IOException(e);
  }
}
