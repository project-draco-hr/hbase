{
  checkReadOnly();
  checkResources();
  boolean isPut=w instanceof Put;
  if (!isPut && !(w instanceof Delete))   throw new IOException("Action must be Put or Delete");
  splitsAndClosesLock.readLock().lock();
  try {
    RowLock lock=isPut ? ((Put)w).getRowLock() : ((Delete)w).getRowLock();
    Get get=new Get(row,lock);
    checkFamily(family);
    get.addColumn(family,qualifier);
    Integer lid=getLock(lockId,get.getRow(),true);
    List<KeyValue> result=new ArrayList<KeyValue>();
    try {
      result=get(get);
      boolean matches=false;
      if (result.size() == 0 && expectedValue.length == 0) {
        matches=true;
      }
 else       if (result.size() == 1) {
        byte[] actualValue=result.get(0).getValue();
        matches=Bytes.equals(expectedValue,actualValue);
      }
      if (matches) {
        if (isPut) {
          put(((Put)w).getFamilyMap(),writeToWAL);
        }
 else {
          Delete d=(Delete)w;
          prepareDelete(d);
          delete(d.getFamilyMap(),writeToWAL);
        }
        return true;
      }
      return false;
    }
  finally {
      if (lockId == null)       releaseRowLock(lid);
    }
  }
  finally {
    splitsAndClosesLock.readLock().unlock();
  }
}
