{
  boolean flush=false;
  startRegionOperation();
  Integer lid=null;
  try {
    WALEdit walEdit=new WALEdit();
    if (coprocessorHost != null) {
      for (      Mutation m : rm.getMutations()) {
        if (m instanceof Put) {
          if (coprocessorHost.prePut((Put)m,walEdit,m.getWriteToWAL())) {
            return;
          }
        }
 else         if (m instanceof Delete) {
          Delete d=(Delete)m;
          prepareDelete(d);
          if (coprocessorHost.preDelete(d,walEdit,d.getWriteToWAL())) {
            return;
          }
        }
      }
    }
    lid=getLock(lockid,rm.getRow(),true);
    this.updatesLock.readLock().lock();
    MultiVersionConsistencyControl.WriteEntry w=mvcc.beginMemstoreInsert();
    long now=EnvironmentEdgeManager.currentTimeMillis();
    byte[] byteNow=Bytes.toBytes(now);
    try {
      for (      Mutation m : rm.getMutations()) {
        if (m instanceof Put) {
          Map<byte[],List<KeyValue>> familyMap=m.getFamilyMap();
          checkFamilies(familyMap.keySet());
          checkTimestamps(familyMap,now);
          updateKVTimestamps(familyMap.values(),byteNow);
        }
 else         if (m instanceof Delete) {
          Delete d=(Delete)m;
          prepareDelete(d);
          prepareDeleteTimestamps(d,byteNow);
        }
 else {
          throw new DoNotRetryIOException("Action must be Put or Delete. But was: " + m.getClass().getName());
        }
        if (m.getWriteToWAL()) {
          addFamilyMapToWALEdit(m.getFamilyMap(),walEdit);
        }
      }
      this.log.append(regionInfo,this.htableDescriptor.getName(),walEdit,HConstants.DEFAULT_CLUSTER_ID,now,this.htableDescriptor);
      long addedSize=0;
      for (      Mutation m : rm.getMutations()) {
        addedSize+=applyFamilyMapToMemstore(m.getFamilyMap(),w);
      }
      flush=isFlushSize(this.addAndGetGlobalMemstoreSize(addedSize));
    }
  finally {
      mvcc.completeMemstoreInsert(w);
      this.updatesLock.readLock().unlock();
    }
    if (coprocessorHost != null) {
      for (      Mutation m : rm.getMutations()) {
        if (m instanceof Put) {
          coprocessorHost.postPut((Put)m,walEdit,m.getWriteToWAL());
        }
 else         if (m instanceof Delete) {
          coprocessorHost.postDelete((Delete)m,walEdit,m.getWriteToWAL());
        }
      }
    }
  }
  finally {
    if (lid != null) {
      releaseRowLock(lid);
    }
    if (flush) {
      requestFlush();
    }
    closeRegionOperation();
  }
}
