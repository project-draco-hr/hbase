{
  this.tableDir=tableDir;
  this.comparator=regionInfo.getComparator();
  this.log=log;
  this.fs=fs;
  this.conf=conf;
  this.regionInfo=regionInfo;
  this.rsServices=rsServices;
  this.threadWakeFrequency=conf.getLong(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000);
  String encodedNameStr=this.regionInfo.getEncodedName();
  this.regiondir=getRegionDir(this.tableDir,encodedNameStr);
  long flushSize=regionInfo.getTableDesc().getMemStoreFlushSize();
  if (flushSize == HTableDescriptor.DEFAULT_MEMSTORE_FLUSH_SIZE) {
    flushSize=conf.getLong("hbase.hregion.memstore.flush.size",HTableDescriptor.DEFAULT_MEMSTORE_FLUSH_SIZE);
  }
  this.memstoreFlushSize=flushSize;
  this.blockingMemStoreSize=this.memstoreFlushSize * conf.getLong("hbase.hregion.memstore.block.multiplier",2);
  if (rsServices != null) {
    this.coprocessorHost=new CoprocessorHost(this,rsServices,conf);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Instantiated " + this);
  }
}
