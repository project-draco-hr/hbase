{
  TableName tableName=TableName.valueOf("testBulkLoad");
  long l=System.currentTimeMillis();
  Admin admin=TEST_UTIL.getHBaseAdmin();
  createTable(admin,tableName);
  Scan scan=createScan();
  final Table table=init(admin,l,scan,tableName);
  final Path hfilePath=writeToHFile(l,"/temp/testBulkLoad/","/temp/testBulkLoad/col/file",false);
  Configuration conf=TEST_UTIL.getConfiguration();
  conf.setBoolean("hbase.mapreduce.bulkload.assign.sequenceNumbers",true);
  final LoadIncrementalHFiles bulkload=new LoadIncrementalHFiles(conf);
  try (RegionLocator locator=TEST_UTIL.getConnection().getRegionLocator(tableName)){
    bulkload.doBulkLoad(hfilePath,admin,table,locator);
  }
   ResultScanner scanner=table.getScanner(scan);
  Result result=scanner.next();
  result=scanAfterBulkLoad(scanner,result,"version2");
  Put put0=new Put(Bytes.toBytes("row1"));
  put0.add(new KeyValue(Bytes.toBytes("row1"),Bytes.toBytes("col"),Bytes.toBytes("q"),l,Bytes.toBytes("version3")));
  table.put(put0);
  admin.flush(tableName);
  scanner=table.getScanner(scan);
  result=scanner.next();
  while (result != null) {
    List<Cell> cells=result.getColumnCells(Bytes.toBytes("col"),Bytes.toBytes("q"));
    for (    Cell _c : cells) {
      if (Bytes.toString(_c.getRowArray(),_c.getRowOffset(),_c.getRowLength()).equals("row1")) {
        System.out.println(Bytes.toString(_c.getRowArray(),_c.getRowOffset(),_c.getRowLength()));
        System.out.println(Bytes.toString(_c.getQualifierArray(),_c.getQualifierOffset(),_c.getQualifierLength()));
        System.out.println(Bytes.toString(_c.getValueArray(),_c.getValueOffset(),_c.getValueLength()));
        Assert.assertEquals("version3",Bytes.toString(_c.getValueArray(),_c.getValueOffset(),_c.getValueLength()));
      }
    }
    result=scanner.next();
  }
  scanner.close();
  table.close();
}
