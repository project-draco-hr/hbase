{
  out.writeByte(DELETE_VERSION);
  Bytes.writeByteArray(out,this.row);
  out.writeLong(this.ts);
  out.writeLong(this.lockId);
  out.writeBoolean(this.writeToWAL);
  out.writeInt(familyMap.size());
  for (  Map.Entry<byte[],List<KeyValue>> entry : familyMap.entrySet()) {
    Bytes.writeByteArray(out,entry.getKey());
    List<KeyValue> list=entry.getValue();
    out.writeInt(list.size());
    for (    KeyValue kv : list) {
      kv.write(out);
    }
  }
  if (this.attributes == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(this.attributes.size());
    for (    Map.Entry<String,byte[]> attr : this.attributes.entrySet()) {
      WritableUtils.writeString(out,attr.getKey());
      Bytes.writeByteArray(out,attr.getValue());
    }
  }
}
