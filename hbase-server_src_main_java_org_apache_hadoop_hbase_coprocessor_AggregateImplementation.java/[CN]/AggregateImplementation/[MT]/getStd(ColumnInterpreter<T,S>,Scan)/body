{
  S sumVal=null, sumSqVal=null, tempVal=null;
  long rowCountVal=0l;
  InternalScanner scanner=((RegionCoprocessorEnvironment)getEnvironment()).getRegion().getScanner(scan);
  byte[] colFamily=scan.getFamilies()[0];
  byte[] qualifier=scan.getFamilyMap().get(colFamily).pollFirst();
  List<KeyValue> results=new ArrayList<KeyValue>();
  boolean hasMoreRows=false;
  try {
    do {
      tempVal=null;
      hasMoreRows=scanner.next(results);
      for (      KeyValue kv : results) {
        tempVal=ci.add(tempVal,ci.castToReturnType(ci.getValue(colFamily,qualifier,kv)));
      }
      results.clear();
      sumVal=ci.add(sumVal,tempVal);
      sumSqVal=ci.add(sumSqVal,ci.multiply(tempVal,tempVal));
      rowCountVal++;
    }
 while (hasMoreRows);
  }
  finally {
    scanner.close();
  }
  List<S> l=new ArrayList<S>();
  l.add(sumVal);
  l.add(sumSqVal);
  Pair<List<S>,Long> p=new Pair<List<S>,Long>(l,rowCountVal);
  return p;
}
