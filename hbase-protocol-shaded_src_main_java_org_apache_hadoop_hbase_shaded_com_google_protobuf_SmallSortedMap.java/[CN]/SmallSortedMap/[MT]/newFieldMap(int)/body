{
  return new SmallSortedMap<FieldDescriptorType,Object>(arraySize){
    @Override @SuppressWarnings("unchecked") public void makeImmutable(){
      if (!isImmutable()) {
        for (int i=0; i < getNumArrayEntries(); i++) {
          final Map.Entry<FieldDescriptorType,Object> entry=getArrayEntryAt(i);
          if (entry.getKey().isRepeated()) {
            final List value=(List)entry.getValue();
            entry.setValue(Collections.unmodifiableList(value));
          }
        }
        for (        Map.Entry<FieldDescriptorType,Object> entry : getOverflowEntries()) {
          if (entry.getKey().isRepeated()) {
            final List value=(List)entry.getValue();
            entry.setValue(Collections.unmodifiableList(value));
          }
        }
      }
      super.makeImmutable();
    }
  }
;
}
