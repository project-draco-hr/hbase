{
  Node name_node=columnfamily.getElementsByTagName("name").item(0);
  String colname=name_node.getFirstChild().getNodeValue();
  if (colname.indexOf(":") == -1) {
    colname+=":";
  }
  int max_versions=HColumnDescriptor.DEFAULT_VERSIONS;
  NodeList max_versions_list=columnfamily.getElementsByTagName("max-versions");
  if (max_versions_list.getLength() > 0) {
    max_versions=Integer.parseInt(max_versions_list.item(0).getFirstChild().getNodeValue());
  }
  CompressionType compression=HColumnDescriptor.DEFAULT_COMPRESSION;
  NodeList compression_list=columnfamily.getElementsByTagName("compression");
  if (compression_list.getLength() > 0) {
    compression=CompressionType.valueOf(compression_list.item(0).getFirstChild().getNodeValue());
  }
  boolean in_memory=HColumnDescriptor.DEFAULT_IN_MEMORY;
  NodeList in_memory_list=columnfamily.getElementsByTagName("in-memory");
  if (in_memory_list.getLength() > 0) {
    in_memory=Boolean.valueOf(in_memory_list.item(0).getFirstChild().getNodeValue());
  }
  boolean block_cache=HColumnDescriptor.DEFAULT_BLOCKCACHE;
  NodeList block_cache_list=columnfamily.getElementsByTagName("block-cache");
  if (block_cache_list.getLength() > 0) {
    block_cache=Boolean.valueOf(block_cache_list.item(0).getFirstChild().getNodeValue());
  }
  int max_cell_size=HColumnDescriptor.DEFAULT_LENGTH;
  NodeList max_cell_size_list=columnfamily.getElementsByTagName("max-cell-size");
  if (max_cell_size_list.getLength() > 0) {
    max_cell_size=Integer.valueOf(max_cell_size_list.item(0).getFirstChild().getNodeValue());
  }
  int ttl=HColumnDescriptor.DEFAULT_TTL;
  NodeList ttl_list=columnfamily.getElementsByTagName("time-to-live");
  if (ttl_list.getLength() > 0) {
    ttl=Integer.valueOf(ttl_list.item(0).getFirstChild().getNodeValue());
  }
  boolean bloomfilter=HColumnDescriptor.DEFAULT_BLOOMFILTER;
  NodeList bloomfilter_list=columnfamily.getElementsByTagName("bloomfilter");
  if (bloomfilter_list.getLength() > 0) {
    bloomfilter=Boolean.valueOf(bloomfilter_list.item(0).getFirstChild().getNodeValue());
  }
  return new HColumnDescriptor(Bytes.toBytes(colname),max_versions,compression,in_memory,block_cache,max_cell_size,ttl,bloomfilter);
}
