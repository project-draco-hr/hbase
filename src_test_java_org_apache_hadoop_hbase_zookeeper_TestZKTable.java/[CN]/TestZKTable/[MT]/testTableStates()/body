{
  final String name="testDisabled";
  Abortable abortable=new Abortable(){
    @Override public void abort(    String why,    Throwable e){
      LOG.info(why,e);
    }
  }
;
  ZooKeeperWatcher zkw=new ZooKeeperWatcher(TEST_UTIL.getConfiguration(),name,abortable);
  ZKTable zkt=new ZKTable(zkw);
  assertTrue(zkt.isEnabledTable(name));
  assertFalse(zkt.isDisablingTable(name));
  assertFalse(zkt.isDisabledTable(name));
  assertFalse(zkt.isEnablingTable(name));
  assertFalse(zkt.isDisablingOrDisabledTable(name));
  assertFalse(zkt.isDisabledOrEnablingTable(name));
  zkt.setDisablingTable(name);
  assertTrue(zkt.isDisablingTable(name));
  assertTrue(zkt.isDisablingOrDisabledTable(name));
  assertFalse(zkt.getDisabledTables().contains(name));
  zkt.setDisabledTable(name);
  assertTrue(zkt.isDisabledTable(name));
  assertTrue(zkt.isDisablingOrDisabledTable(name));
  assertFalse(zkt.isDisablingTable(name));
  assertTrue(zkt.getDisabledTables().contains(name));
  zkt.setEnablingTable(name);
  assertTrue(zkt.isEnablingTable(name));
  assertTrue(zkt.isDisabledOrEnablingTable(name));
  assertFalse(zkt.isDisabledTable(name));
  assertFalse(zkt.getDisabledTables().contains(name));
  zkt.setEnabledTable(name);
  assertTrue(zkt.isEnabledTable(name));
  assertFalse(zkt.isEnablingTable(name));
}
