{
  return new com.google.protobuf.BlockingService(){
    public final com.google.protobuf.Descriptors.ServiceDescriptor getDescriptorForType(){
      return getDescriptor();
    }
    public final com.google.protobuf.Message callBlockingMethod(    com.google.protobuf.Descriptors.MethodDescriptor method,    com.google.protobuf.RpcController controller,    com.google.protobuf.Message request) throws com.google.protobuf.ServiceException {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("Service.callBlockingMethod() given method descriptor for " + "wrong service type.");
      }
switch (method.getIndex()) {
case 0:
        return impl.getSchemaAlterStatus(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetSchemaAlterStatusRequest)request);
case 1:
      return impl.getTableDescriptors(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableDescriptorsRequest)request);
case 2:
    return impl.getTableNames(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableNamesRequest)request);
case 3:
  return impl.getClusterStatus(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetClusterStatusRequest)request);
case 4:
return impl.isMasterRunning(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsMasterRunningRequest)request);
case 5:
return impl.addColumn(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AddColumnRequest)request);
case 6:
return impl.deleteColumn(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteColumnRequest)request);
case 7:
return impl.modifyColumn(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyColumnRequest)request);
case 8:
return impl.moveRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MoveRegionRequest)request);
case 9:
return impl.dispatchMergingRegions(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DispatchMergingRegionsRequest)request);
case 10:
return impl.assignRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AssignRegionRequest)request);
case 11:
return impl.unassignRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.UnassignRegionRequest)request);
case 12:
return impl.offlineRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.OfflineRegionRequest)request);
case 13:
return impl.deleteTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteTableRequest)request);
case 14:
return impl.truncateTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.TruncateTableRequest)request);
case 15:
return impl.enableTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableTableRequest)request);
case 16:
return impl.disableTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DisableTableRequest)request);
case 17:
return impl.modifyTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyTableRequest)request);
case 18:
return impl.createTable(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateTableRequest)request);
case 19:
return impl.shutdown(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ShutdownRequest)request);
case 20:
return impl.stopMaster(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.StopMasterRequest)request);
case 21:
return impl.balance(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.BalanceRequest)request);
case 22:
return impl.setBalancerRunning(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetBalancerRunningRequest)request);
case 23:
return impl.isBalancerEnabled(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsBalancerEnabledRequest)request);
case 24:
return impl.runCatalogScan(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RunCatalogScanRequest)request);
case 25:
return impl.enableCatalogJanitor(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableCatalogJanitorRequest)request);
case 26:
return impl.isCatalogJanitorEnabled(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsCatalogJanitorEnabledRequest)request);
case 27:
return impl.execMasterService(controller,(org.apache.hadoop.hbase.protobuf.generated.ClientProtos.CoprocessorServiceRequest)request);
case 28:
return impl.snapshot(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SnapshotRequest)request);
case 29:
return impl.getCompletedSnapshots(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetCompletedSnapshotsRequest)request);
case 30:
return impl.deleteSnapshot(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteSnapshotRequest)request);
case 31:
return impl.isSnapshotDone(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsSnapshotDoneRequest)request);
case 32:
return impl.restoreSnapshot(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RestoreSnapshotRequest)request);
case 33:
return impl.isRestoreSnapshotDone(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsRestoreSnapshotDoneRequest)request);
case 34:
return impl.execProcedure(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ExecProcedureRequest)request);
case 35:
return impl.execProcedureWithRet(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ExecProcedureRequest)request);
case 36:
return impl.isProcedureDone(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsProcedureDoneRequest)request);
case 37:
return impl.modifyNamespace(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyNamespaceRequest)request);
case 38:
return impl.createNamespace(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateNamespaceRequest)request);
case 39:
return impl.deleteNamespace(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteNamespaceRequest)request);
case 40:
return impl.getNamespaceDescriptor(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetNamespaceDescriptorRequest)request);
case 41:
return impl.listNamespaceDescriptors(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListNamespaceDescriptorsRequest)request);
case 42:
return impl.listTableDescriptorsByNamespace(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableDescriptorsByNamespaceRequest)request);
case 43:
return impl.listTableNamesByNamespace(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableNamesByNamespaceRequest)request);
case 44:
return impl.getTableState(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableStateRequest)request);
case 45:
return impl.setQuota(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetQuotaRequest)request);
case 46:
return impl.getLastMajorCompactionTimestamp(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MajorCompactionTimestampRequest)request);
case 47:
return impl.getLastMajorCompactionTimestampForRegion(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MajorCompactionTimestampForRegionRequest)request);
case 48:
return impl.getProcedureResult(controller,(org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetProcedureResultRequest)request);
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
public final com.google.protobuf.Message getRequestPrototype(com.google.protobuf.Descriptors.MethodDescriptor method){
if (method.getService() != getDescriptor()) {
throw new java.lang.IllegalArgumentException("Service.getRequestPrototype() given method " + "descriptor for wrong service type.");
}
switch (method.getIndex()) {
case 0:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetSchemaAlterStatusRequest.getDefaultInstance();
case 1:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableDescriptorsRequest.getDefaultInstance();
case 2:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableNamesRequest.getDefaultInstance();
case 3:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetClusterStatusRequest.getDefaultInstance();
case 4:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsMasterRunningRequest.getDefaultInstance();
case 5:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AddColumnRequest.getDefaultInstance();
case 6:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteColumnRequest.getDefaultInstance();
case 7:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyColumnRequest.getDefaultInstance();
case 8:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MoveRegionRequest.getDefaultInstance();
case 9:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DispatchMergingRegionsRequest.getDefaultInstance();
case 10:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AssignRegionRequest.getDefaultInstance();
case 11:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.UnassignRegionRequest.getDefaultInstance();
case 12:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.OfflineRegionRequest.getDefaultInstance();
case 13:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteTableRequest.getDefaultInstance();
case 14:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.TruncateTableRequest.getDefaultInstance();
case 15:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableTableRequest.getDefaultInstance();
case 16:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DisableTableRequest.getDefaultInstance();
case 17:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyTableRequest.getDefaultInstance();
case 18:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateTableRequest.getDefaultInstance();
case 19:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ShutdownRequest.getDefaultInstance();
case 20:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.StopMasterRequest.getDefaultInstance();
case 21:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.BalanceRequest.getDefaultInstance();
case 22:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetBalancerRunningRequest.getDefaultInstance();
case 23:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsBalancerEnabledRequest.getDefaultInstance();
case 24:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RunCatalogScanRequest.getDefaultInstance();
case 25:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableCatalogJanitorRequest.getDefaultInstance();
case 26:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsCatalogJanitorEnabledRequest.getDefaultInstance();
case 27:
return org.apache.hadoop.hbase.protobuf.generated.ClientProtos.CoprocessorServiceRequest.getDefaultInstance();
case 28:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SnapshotRequest.getDefaultInstance();
case 29:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetCompletedSnapshotsRequest.getDefaultInstance();
case 30:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteSnapshotRequest.getDefaultInstance();
case 31:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsSnapshotDoneRequest.getDefaultInstance();
case 32:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RestoreSnapshotRequest.getDefaultInstance();
case 33:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsRestoreSnapshotDoneRequest.getDefaultInstance();
case 34:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ExecProcedureRequest.getDefaultInstance();
case 35:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ExecProcedureRequest.getDefaultInstance();
case 36:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsProcedureDoneRequest.getDefaultInstance();
case 37:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyNamespaceRequest.getDefaultInstance();
case 38:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateNamespaceRequest.getDefaultInstance();
case 39:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteNamespaceRequest.getDefaultInstance();
case 40:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetNamespaceDescriptorRequest.getDefaultInstance();
case 41:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListNamespaceDescriptorsRequest.getDefaultInstance();
case 42:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableDescriptorsByNamespaceRequest.getDefaultInstance();
case 43:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableNamesByNamespaceRequest.getDefaultInstance();
case 44:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableStateRequest.getDefaultInstance();
case 45:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetQuotaRequest.getDefaultInstance();
case 46:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MajorCompactionTimestampRequest.getDefaultInstance();
case 47:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MajorCompactionTimestampForRegionRequest.getDefaultInstance();
case 48:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetProcedureResultRequest.getDefaultInstance();
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
public final com.google.protobuf.Message getResponsePrototype(com.google.protobuf.Descriptors.MethodDescriptor method){
if (method.getService() != getDescriptor()) {
throw new java.lang.IllegalArgumentException("Service.getResponsePrototype() given method " + "descriptor for wrong service type.");
}
switch (method.getIndex()) {
case 0:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetSchemaAlterStatusResponse.getDefaultInstance();
case 1:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableDescriptorsResponse.getDefaultInstance();
case 2:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableNamesResponse.getDefaultInstance();
case 3:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetClusterStatusResponse.getDefaultInstance();
case 4:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsMasterRunningResponse.getDefaultInstance();
case 5:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AddColumnResponse.getDefaultInstance();
case 6:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteColumnResponse.getDefaultInstance();
case 7:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyColumnResponse.getDefaultInstance();
case 8:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MoveRegionResponse.getDefaultInstance();
case 9:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DispatchMergingRegionsResponse.getDefaultInstance();
case 10:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.AssignRegionResponse.getDefaultInstance();
case 11:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.UnassignRegionResponse.getDefaultInstance();
case 12:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.OfflineRegionResponse.getDefaultInstance();
case 13:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteTableResponse.getDefaultInstance();
case 14:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.TruncateTableResponse.getDefaultInstance();
case 15:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableTableResponse.getDefaultInstance();
case 16:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DisableTableResponse.getDefaultInstance();
case 17:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyTableResponse.getDefaultInstance();
case 18:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateTableResponse.getDefaultInstance();
case 19:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ShutdownResponse.getDefaultInstance();
case 20:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.StopMasterResponse.getDefaultInstance();
case 21:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.BalanceResponse.getDefaultInstance();
case 22:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetBalancerRunningResponse.getDefaultInstance();
case 23:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsBalancerEnabledResponse.getDefaultInstance();
case 24:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RunCatalogScanResponse.getDefaultInstance();
case 25:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.EnableCatalogJanitorResponse.getDefaultInstance();
case 26:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsCatalogJanitorEnabledResponse.getDefaultInstance();
case 27:
return org.apache.hadoop.hbase.protobuf.generated.ClientProtos.CoprocessorServiceResponse.getDefaultInstance();
case 28:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SnapshotResponse.getDefaultInstance();
case 29:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetCompletedSnapshotsResponse.getDefaultInstance();
case 30:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteSnapshotResponse.getDefaultInstance();
case 31:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsSnapshotDoneResponse.getDefaultInstance();
case 32:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.RestoreSnapshotResponse.getDefaultInstance();
case 33:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsRestoreSnapshotDoneResponse.getDefaultInstance();
case 34:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ExecProcedureResponse.getDefaultInstance();
case 35:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ExecProcedureResponse.getDefaultInstance();
case 36:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.IsProcedureDoneResponse.getDefaultInstance();
case 37:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ModifyNamespaceResponse.getDefaultInstance();
case 38:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.CreateNamespaceResponse.getDefaultInstance();
case 39:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.DeleteNamespaceResponse.getDefaultInstance();
case 40:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetNamespaceDescriptorResponse.getDefaultInstance();
case 41:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListNamespaceDescriptorsResponse.getDefaultInstance();
case 42:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableDescriptorsByNamespaceResponse.getDefaultInstance();
case 43:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.ListTableNamesByNamespaceResponse.getDefaultInstance();
case 44:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetTableStateResponse.getDefaultInstance();
case 45:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.SetQuotaResponse.getDefaultInstance();
case 46:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MajorCompactionTimestampResponse.getDefaultInstance();
case 47:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.MajorCompactionTimestampResponse.getDefaultInstance();
case 48:
return org.apache.hadoop.hbase.protobuf.generated.MasterProtos.GetProcedureResultResponse.getDefaultInstance();
default :
throw new java.lang.AssertionError("Can't get here.");
}
}
}
;
}
