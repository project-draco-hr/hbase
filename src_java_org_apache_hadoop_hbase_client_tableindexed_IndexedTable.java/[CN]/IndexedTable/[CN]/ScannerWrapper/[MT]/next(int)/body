{
  RowResult[] indexResult=indexScanner.next(nbRows);
  if (indexResult == null) {
    return null;
  }
  RowResult[] result=new RowResult[indexResult.length];
  for (int i=0; i < indexResult.length; i++) {
    RowResult row=indexResult[i];
    byte[] baseRow=row.get(INDEX_BASE_ROW_COLUMN).getValue();
    LOG.debug("next index row [" + Bytes.toString(row.getRow()) + "] -> base row ["+ Bytes.toString(baseRow)+ "]");
    HbaseMapWritable<byte[],Cell> colValues=new HbaseMapWritable<byte[],Cell>();
    if (columns != null && columns.length > 0) {
      LOG.debug("Going to base table for remaining columns");
      RowResult baseResult=IndexedTable.this.getRow(baseRow,columns);
      colValues.putAll(baseResult);
    }
    for (    Entry<byte[],Cell> entry : row.entrySet()) {
      byte[] col=entry.getKey();
      if (HStoreKey.matchingFamily(INDEX_COL_FAMILY_NAME,col)) {
        continue;
      }
      colValues.put(col,entry.getValue());
    }
    result[i]=new RowResult(baseRow,colValues);
  }
  return result;
}
