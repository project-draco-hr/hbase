{
  int maxIters=3;
  String replicas="--replicas=" + replicaCount;
  String splitPolicy="--splitPolicy=" + DisabledRegionSplitPolicy.class.getName();
  String writeOpts=format("%s --nomapred --table=%s --presplit=16 sequentialWrite 4",splitPolicy,tableName);
  String readOpts=format("--nomapred --table=%s --latency --sampleRate=0.1 randomRead 4",tableName);
  String replicaReadOpts=format("%s %s",replicas,readOpts);
  ArrayList<TimingResult> resultsWithoutReplica=new ArrayList<TimingResult>(maxIters);
  ArrayList<TimingResult> resultsWithReplica=new ArrayList<TimingResult>(maxIters);
  LOG.debug("Populating table.");
  new PerfEvalCallable(util.getHBaseAdmin(),writeOpts).call();
  assertEquals("Table must be created with DisabledRegionSplitPolicy. Broken test.",DisabledRegionSplitPolicy.class.getName(),util.getHBaseAdmin().getTableDescriptor(tableName).getRegionSplitPolicyClassName());
  startMonkey();
  for (int i=0; i < maxIters; i++) {
    LOG.debug("Launching non-replica job " + (i + 1) + "/"+ maxIters);
    resultsWithoutReplica.add(new PerfEvalCallable(util.getHBaseAdmin(),readOpts).call());
    Thread.sleep(5000l);
  }
  cleanUpMonkey("Altering table.");
  LOG.debug("Altering " + tableName + " replica count to "+ replicaCount);
  IntegrationTestingUtility.setReplicas(util.getHBaseAdmin(),tableName,replicaCount);
  setUpMonkey();
  startMonkey();
  for (int i=0; i < maxIters; i++) {
    LOG.debug("Launching replica job " + (i + 1) + "/"+ maxIters);
    resultsWithReplica.add(new PerfEvalCallable(util.getHBaseAdmin(),replicaReadOpts).call());
    Thread.sleep(5000l);
  }
  DescriptiveStatistics withoutReplicaStats=new DescriptiveStatistics();
  for (  TimingResult tr : resultsWithoutReplica) {
    withoutReplicaStats.addValue(tr.elapsedTime);
  }
  DescriptiveStatistics withReplicaStats=new DescriptiveStatistics();
  for (  TimingResult tr : resultsWithReplica) {
    withReplicaStats.addValue(tr.elapsedTime);
  }
  LOG.info(Objects.toStringHelper("testName").add("withoutReplicas",resultsWithoutReplica).add("withReplicas",resultsWithReplica).add("withoutReplicasMean",withoutReplicaStats.getMean()).add("withReplicasMean",withReplicaStats.getMean()).toString());
  assertTrue("Running with region replicas under chaos should be as fast or faster than without. " + "withReplicas.mean: " + withReplicaStats.getMean() + "ms "+ "withoutReplicas.mean: "+ withoutReplicaStats.getMean()+ "ms.",withReplicaStats.getMean() <= withoutReplicaStats.getMean());
}
