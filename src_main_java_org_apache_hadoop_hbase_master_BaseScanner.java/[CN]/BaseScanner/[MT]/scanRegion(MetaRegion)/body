{
  HRegionInterface regionServer=null;
  long scannerId=-1L;
  LOG.info(Thread.currentThread().getName() + " scanning meta region " + region.toString());
  NavigableMap<HRegionInfo,Result> splitParents=new TreeMap<HRegionInfo,Result>();
  List<byte[]> emptyRows=new ArrayList<byte[]>();
  int rows=0;
  try {
    regionServer=this.master.getServerConnection().getHRegionConnection(region.getServer());
    Scan s=new Scan().addFamily(HConstants.CATALOG_FAMILY);
    s.setCaching(1);
    scannerId=regionServer.openScanner(region.getRegionName(),s);
    while (true) {
      Result values=regionServer.next(scannerId);
      if (values == null || values.size() == 0) {
        break;
      }
      HRegionInfo info=master.getHRegionInfo(values.getRow(),values);
      if (info == null) {
        emptyRows.add(values.getRow());
        continue;
      }
      String serverAddress=getServerAddress(values);
      long startCode=getStartCode(values);
      checkAssigned(regionServer,region,info,serverAddress,startCode);
      if (isSplitParent(info)) {
        splitParents.put(info,values);
      }
      rows+=1;
    }
    if (rootRegion) {
      this.master.getRegionManager().setNumMetaRegions(rows);
    }
  }
 catch (  IOException e) {
    if (e instanceof RemoteException) {
      e=RemoteExceptionHandler.decodeRemoteException((RemoteException)e);
      if (e instanceof UnknownScannerException) {
        scannerId=-1L;
      }
    }
    throw e;
  }
 finally {
    try {
      if (scannerId != -1L && regionServer != null) {
        regionServer.close(scannerId);
      }
    }
 catch (    IOException e) {
      LOG.error("Closing scanner",RemoteExceptionHandler.checkIOException(e));
    }
  }
  if (emptyRows.size() > 0) {
    LOG.warn("Found " + emptyRows.size() + " rows with empty HRegionInfo "+ "while scanning meta region "+ Bytes.toString(region.getRegionName()));
    this.master.deleteEmptyMetaRows(regionServer,region.getRegionName(),emptyRows);
  }
  if (splitParents.size() > 0) {
    for (    Map.Entry<HRegionInfo,Result> e : splitParents.entrySet()) {
      HRegionInfo hri=e.getKey();
      cleanupAndVerifySplits(region.getRegionName(),regionServer,hri,e.getValue());
    }
  }
  LOG.info(Thread.currentThread().getName() + " scan of " + rows+ " row(s) of meta region "+ region.toString()+ " complete");
}
