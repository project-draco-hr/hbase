{
  lock.lock();
  try {
    if (this.closing) {
      return;
    }
    if (withHeapClose)     this.closing=true;
    if (this.store != null)     this.store.deleteChangedReaderObserver(this);
    if (withHeapClose) {
      for (      KeyValueHeap h : this.heapsForDelayedClose) {
        h.close();
      }
      this.heapsForDelayedClose.clear();
      if (this.heap != null) {
        this.heap.close();
        this.heap=null;
      }
    }
 else {
      if (this.heap != null) {
        this.heapsForDelayedClose.add(this.heap);
        this.heap=null;
      }
    }
    this.lastTop=null;
  }
  finally {
    lock.unlock();
  }
}
