{
  final boolean isCompaction=false;
  boolean usePread=get || scanUsePread;
  List<KeyValueScanner> scanners=null;
  try {
    flushLock.lock();
    scanners=selectScannersFrom(store.getScanners(flushedStoreFiles,cacheBlocks,get,usePread,isCompaction,matcher,scan.getStartRow(),scan.getStopRow(),this.readPt,true));
    flushedStoreFiles.clear();
  }
  finally {
    flushLock.unlock();
  }
  seekScanners(scanners,lastTopKey,false,parallelSeekEnabled);
  for (int i=0; i < currentScanners.size(); i++) {
    if (!currentScanners.get(i).isFileScanner()) {
      currentScanners.remove(i);
      break;
    }
  }
  addCurrentScanners(scanners);
  resetKVHeap(this.currentScanners,store.getComparator());
  Cell cell=heap.peek();
  if (cell == null) {
    cell=lastTopKey;
  }
  if ((matcher.curCell == null) || !CellUtil.matchingRows(cell,matcher.curCell)) {
    this.countPerRow=0;
    matcher.setToNewRow(cell);
  }
}
