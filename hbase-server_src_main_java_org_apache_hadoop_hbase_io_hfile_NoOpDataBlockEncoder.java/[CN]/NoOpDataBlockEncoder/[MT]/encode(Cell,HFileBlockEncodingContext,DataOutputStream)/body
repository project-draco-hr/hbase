{
  int klength=KeyValueUtil.keyLength(cell);
  int vlength=cell.getValueLength();
  out.writeInt(klength);
  out.writeInt(vlength);
  CellUtil.writeFlatKey(cell,out);
  out.write(cell.getValueArray(),cell.getValueOffset(),vlength);
  int encodedKvSize=klength + vlength + KeyValue.KEYVALUE_INFRASTRUCTURE_SIZE;
  if (encodingCtx.getHFileContext().isIncludesTags()) {
    int tagsLength=cell.getTagsLength();
    out.writeShort(tagsLength);
    if (tagsLength > 0) {
      out.write(cell.getTagsArray(),cell.getTagsOffset(),tagsLength);
    }
    encodedKvSize+=tagsLength + KeyValue.TAGS_LENGTH_SIZE;
  }
  if (encodingCtx.getHFileContext().isIncludesMvcc()) {
    WritableUtils.writeVLong(out,cell.getSequenceId());
    encodedKvSize+=WritableUtils.getVIntSize(cell.getSequenceId());
  }
  return encodedKvSize;
}
