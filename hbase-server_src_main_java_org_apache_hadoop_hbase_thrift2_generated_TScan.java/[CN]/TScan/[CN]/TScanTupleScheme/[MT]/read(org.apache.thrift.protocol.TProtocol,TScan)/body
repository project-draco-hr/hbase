{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(9);
  if (incoming.get(0)) {
    struct.startRow=iprot.readBinary();
    struct.setStartRowIsSet(true);
  }
  if (incoming.get(1)) {
    struct.stopRow=iprot.readBinary();
    struct.setStopRowIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list91=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.columns=new ArrayList<TColumn>(_list91.size);
      for (int _i92=0; _i92 < _list91.size; ++_i92) {
        TColumn _elem93;
        _elem93=new TColumn();
        _elem93.read(iprot);
        struct.columns.add(_elem93);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
    struct.caching=iprot.readI32();
    struct.setCachingIsSet(true);
  }
  if (incoming.get(4)) {
    struct.maxVersions=iprot.readI32();
    struct.setMaxVersionsIsSet(true);
  }
  if (incoming.get(5)) {
    struct.timeRange=new TTimeRange();
    struct.timeRange.read(iprot);
    struct.setTimeRangeIsSet(true);
  }
  if (incoming.get(6)) {
    struct.filterString=iprot.readBinary();
    struct.setFilterStringIsSet(true);
  }
  if (incoming.get(7)) {
    struct.batchSize=iprot.readI32();
    struct.setBatchSizeIsSet(true);
  }
  if (incoming.get(8)) {
{
      org.apache.thrift.protocol.TMap _map94=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map94.size);
      for (int _i95=0; _i95 < _map94.size; ++_i95) {
        ByteBuffer _key96;
        ByteBuffer _val97;
        _key96=iprot.readBinary();
        _val97=iprot.readBinary();
        struct.attributes.put(_key96,_val97);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
