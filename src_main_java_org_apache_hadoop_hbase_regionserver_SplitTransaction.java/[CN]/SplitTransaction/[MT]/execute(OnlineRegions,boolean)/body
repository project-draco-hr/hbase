{
  LOG.info("Starting split of region " + this.parent);
  if (!this.parent.splitsAndClosesLock.writeLock().isHeldByCurrentThread()) {
    throw new SplitAndCloseWriteLockNotHeld();
  }
  HTable t=null;
  if (updateMeta)   t=getTable(this.parent.getConf());
  createSplitDir(this.parent.getFilesystem(),this.splitdir);
  this.journal.add(JournalEntry.CREATE_SPLIT_DIR);
  List<StoreFile> hstoreFilesToSplit=this.parent.close(false);
  this.journal.add(JournalEntry.CLOSED_PARENT_REGION);
  if (or != null)   or.removeFromOnlineRegions(this.parent.getRegionInfo());
  this.journal.add(JournalEntry.OFFLINED_PARENT);
  splitStoreFiles(this.splitdir,hstoreFilesToSplit);
  this.journal.add(JournalEntry.STARTED_REGION_A_CREATION);
  HRegion a=createDaughterRegion(this.hri_a);
  this.journal.add(JournalEntry.STARTED_REGION_B_CREATION);
  HRegion b=createDaughterRegion(this.hri_b);
  Put editParentPut=createOfflineParentPut();
  if (t != null)   t.put(editParentPut);
  HRegionInfo hri=this.hri_a;
  try {
    if (t != null)     t.put(createDaughterPut(hri));
    hri=this.hri_b;
    if (t != null)     t.put(createDaughterPut(hri));
  }
 catch (  IOException e) {
    LOG.warn("Failed adding daughter " + hri.toString());
  }
  if (t != null)   t.close();
  this.parent.splitsAndClosesLock.writeLock().unlock();
  return new PairOfSameType<HRegion>(a,b);
}
