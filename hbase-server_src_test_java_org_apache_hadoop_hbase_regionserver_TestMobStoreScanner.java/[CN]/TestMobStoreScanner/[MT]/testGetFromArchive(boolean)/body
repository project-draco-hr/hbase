{
  TableName tn=TableName.valueOf("testGetFromArchive" + reversed);
  setUp(defaultThreshold,tn);
  long ts1=System.currentTimeMillis();
  long ts2=ts1 + 1;
  long ts3=ts1 + 2;
  byte[] value=generateMobValue((int)defaultThreshold + 1);
  ;
  Put put1=new Put(row1);
  put1.addColumn(family,qf1,ts3,value);
  put1.addColumn(family,qf2,ts2,value);
  put1.addColumn(family,qf3,ts1,value);
  table.put(put1);
  admin.flush(tn);
  Path mobFamilyPath;
  mobFamilyPath=new Path(MobUtils.getMobRegionPath(TEST_UTIL.getConfiguration(),tn),hcd.getNameAsString());
  FileSystem fs=FileSystem.get(TEST_UTIL.getConfiguration());
  FileStatus[] files=fs.listStatus(mobFamilyPath);
  Path rootDir=FSUtils.getRootDir(TEST_UTIL.getConfiguration());
  Path tableDir=FSUtils.getTableDir(rootDir,tn);
  HRegionInfo regionInfo=MobUtils.getMobRegionInfo(tn);
  Path storeArchiveDir=HFileArchiveUtil.getStoreArchivePath(TEST_UTIL.getConfiguration(),regionInfo,tableDir,family);
  fs.mkdirs(storeArchiveDir);
  int fileCount=0;
  for (  FileStatus file : files) {
    fileCount++;
    Path filePath=file.getPath();
    Path src=new Path(mobFamilyPath,filePath.getName());
    Path dst=new Path(storeArchiveDir,filePath.getName());
    fs.rename(src,dst);
  }
  FileStatus[] files1=fs.listStatus(mobFamilyPath);
  Assert.assertEquals(0,files1.length);
  FileStatus[] files2=fs.listStatus(storeArchiveDir);
  Assert.assertEquals(fileCount,files2.length);
  Scan scan=new Scan();
  setScan(scan,reversed,false);
  ResultScanner results=table.getScanner(scan);
  int count=0;
  for (  Result res : results) {
    List<Cell> cells=res.listCells();
    for (    Cell cell : cells) {
      Assert.assertEquals(Bytes.toString(value),Bytes.toString(CellUtil.cloneValue(cell)));
      count++;
    }
  }
  results.close();
  Assert.assertEquals(3,count);
}
