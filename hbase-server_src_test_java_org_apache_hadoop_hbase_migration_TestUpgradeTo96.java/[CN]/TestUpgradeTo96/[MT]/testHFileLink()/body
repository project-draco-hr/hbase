{
  Path rootDir=FSUtils.getRootDir(TEST_UTIL.getConfiguration());
  Path aFileLink=new Path(rootDir,"table/2086db948c48/cf/table=21212abcdc33-0906db948c48");
  Path preNamespaceTablePath=new Path(rootDir,"table/21212abcdc33/cf/0906db948c48");
  Path preNamespaceArchivePath=new Path(rootDir,".archive/table/21212abcdc33/cf/0906db948c48");
  Path preNamespaceTempPath=new Path(rootDir,".tmp/table/21212abcdc33/cf/0906db948c48");
  boolean preNSTablePathExists=false;
  boolean preNSArchivePathExists=false;
  boolean preNSTempPathExists=false;
  assertTrue(HFileLink.isHFileLink(aFileLink));
  HFileLink hFileLink=new HFileLink(TEST_UTIL.getConfiguration(),aFileLink);
  assertTrue(hFileLink.getArchivePath().toString().startsWith(rootDir.toString()));
  HFileV1Detector t=new HFileV1Detector();
  t.setConf(TEST_UTIL.getConfiguration());
  FileLink fileLink=t.getFileLinkWithPreNSPath(aFileLink);
  assertTrue(fileLink.getLocations().length == 6);
  for (  Path p : fileLink.getLocations()) {
    if (p.equals(preNamespaceArchivePath))     preNSArchivePathExists=true;
    if (p.equals(preNamespaceTablePath))     preNSTablePathExists=true;
    if (p.equals(preNamespaceTempPath))     preNSTempPathExists=true;
  }
  assertTrue(preNSArchivePathExists & preNSTablePathExists & preNSTempPathExists);
}
