{
  final PrintStream dest=filePath.endsWith(".log") ? System.err : System.out;
  final ServerType serverType;
  final int serverPort;
  Matcher m=LOG_PATH_FORMAT_RE.matcher(filePath);
  if (m.matches()) {
    serverType=ServerType.valueOf(m.group(1));
    serverPort=Integer.valueOf(m.group(2));
  }
 else {
    LOG.error("Unrecognized log path format: " + filePath);
    return;
  }
  final String logMsgPrefix="[" + serverType + (serverPort != 0 ? ":" + serverPort : "")+ "] ";
  LOG.debug("Tailing " + filePath);
  Thread t=new Thread(new Runnable(){
    @Override public void run(){
      try {
        FileInputStream fis=new FileInputStream(filePath);
        BufferedReader br=new BufferedReader(new InputStreamReader(fis));
        String line;
        while (true) {
          try {
            Thread.sleep(200);
          }
 catch (          InterruptedException e) {
            LOG.error("Tailer for " + filePath + " interrupted");
            break;
          }
          while ((line=br.readLine()) != null) {
            line=logMsgPrefix + processLine(line);
synchronized (printLock) {
              if (line.endsWith("\n")) {
                dest.print(line);
              }
 else {
                dest.println(line);
              }
              dest.flush();
            }
          }
        }
      }
 catch (      IOException ex) {
        LOG.error("Failed tailing " + filePath,ex);
      }
    }
  }
);
  t.setDaemon(true);
  t.setName("Tailer for " + filePath);
  t.start();
}
