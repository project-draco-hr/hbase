{
  final int capacity=16;
  final int writerThreadsCount=1;
  this.bc=new BucketCache("heap",capacity,1,new int[]{1},writerThreadsCount,capacity,null,100);
  assertEquals(writerThreadsCount,bc.writerThreads.length);
  assertEquals(writerThreadsCount,bc.writerQueues.size());
  this.wt=bc.writerThreads[0];
  this.q=bc.writerQueues.get(0);
  for (int i=0; i != MAX_NUMBER_OF_TRIES_BEFORE_TEST_FAILURE; i++) {
    if (wt.getThread().getState() == State.RUNNABLE) {
      Thread.sleep(1);
    }
  }
  assertThat(wt.getThread().getState(),is(not(State.RUNNABLE)));
  wt.disableWriter();
  this.plainKey=new BlockCacheKey("f",0);
  this.plainCacheable=Mockito.mock(Cacheable.class);
  bc.cacheBlock(this.plainKey,plainCacheable);
  for (int i=0; i != MAX_NUMBER_OF_TRIES_BEFORE_TEST_FAILURE; i++) {
    if (!bc.ramCache.isEmpty()) {
      Thread.sleep(1);
    }
  }
  assertThat(bc.ramCache.isEmpty(),is(true));
  assertTrue(q.isEmpty());
}
