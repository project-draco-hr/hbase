{
  AccessControlProtos.Permission.Builder ret=AccessControlProtos.Permission.newBuilder();
  if (perm instanceof TablePermission) {
    TablePermission tablePerm=(TablePermission)perm;
    if (tablePerm.hasNamespace()) {
      ret.setType(AccessControlProtos.Permission.Type.Namespace);
      AccessControlProtos.NamespacePermission.Builder builder=AccessControlProtos.NamespacePermission.newBuilder();
      builder.setNamespaceName(ByteString.copyFromUtf8(tablePerm.getNamespace()));
      Permission.Action[] actions=perm.getActions();
      if (actions != null) {
        for (        Permission.Action a : actions) {
          builder.addAction(toPermissionAction(a));
        }
      }
      ret.setNamespacePermission(builder);
      return ret.build();
    }
 else     if (tablePerm.hasTable()) {
      ret.setType(AccessControlProtos.Permission.Type.Table);
      AccessControlProtos.TablePermission.Builder builder=AccessControlProtos.TablePermission.newBuilder();
      builder.setTableName(ProtobufUtil.toProtoTableName(tablePerm.getTableName()));
      if (tablePerm.hasFamily()) {
        builder.setFamily(ByteStringer.wrap(tablePerm.getFamily()));
      }
      if (tablePerm.hasQualifier()) {
        builder.setQualifier(ByteStringer.wrap(tablePerm.getQualifier()));
      }
      Permission.Action actions[]=perm.getActions();
      if (actions != null) {
        for (        Permission.Action a : actions) {
          builder.addAction(toPermissionAction(a));
        }
      }
      ret.setTablePermission(builder);
      return ret.build();
    }
  }
  ret.setType(AccessControlProtos.Permission.Type.Global);
  AccessControlProtos.GlobalPermission.Builder builder=AccessControlProtos.GlobalPermission.newBuilder();
  Permission.Action actions[]=perm.getActions();
  if (actions != null) {
    for (    Permission.Action a : actions) {
      builder.addAction(toPermissionAction(a));
    }
  }
  ret.setGlobalPermission(builder);
  return ret.build();
}
