{
  if (dataBlockIndexReader == null) {
    throw new IOException("Block index not loaded");
  }
  if (dataBlockOffset < 0 || dataBlockOffset >= trailer.getLoadOnOpenDataOffset()) {
    throw new IOException("Requested block is out of range: " + dataBlockOffset + ", lastDataBlockOffset: "+ trailer.getLastDataBlockOffset());
  }
  String cacheKey=HFile.getBlockCacheKey(name,dataBlockOffset);
  IdLock.Entry lockEntry=offsetLock.getLockEntry(dataBlockOffset);
  try {
    blockLoads.incrementAndGet();
    cacheBlock&=cacheConf.shouldCacheDataOnRead();
    if (cacheConf.isBlockCacheEnabled()) {
      HFileBlock cachedBlock=(HFileBlock)cacheConf.getBlockCache().getBlock(cacheKey,cacheBlock);
      if (cachedBlock != null) {
        cacheHits.incrementAndGet();
        if (isCompaction) {
          HRegion.incrNumericMetric(this.compactionBlockReadCacheHitCntMetric,1);
        }
 else {
          HRegion.incrNumericMetric(this.fsBlockReadCacheHitCntMetric,1);
        }
        if (cachedBlock.getBlockType() == BlockType.DATA)         HFile.dataBlockReadCnt.incrementAndGet();
        return cachedBlock;
      }
    }
    long startTimeNs=System.nanoTime();
    HFileBlock dataBlock=fsBlockReader.readBlockData(dataBlockOffset,onDiskBlockSize,-1,pread);
    dataBlock.setColumnFamilyName(this.getColumnFamilyName());
    long delta=System.nanoTime() - startTimeNs;
    HFile.readTimeNano.addAndGet(delta);
    HFile.readOps.incrementAndGet();
    if (isCompaction) {
      HRegion.incrTimeVaryingMetric(this.compactionReadTimeNanoMetric,delta);
    }
 else {
      HRegion.incrTimeVaryingMetric(this.fsReadTimeNanoMetric,delta);
    }
    if (cacheBlock) {
      cacheConf.getBlockCache().cacheBlock(cacheKey,dataBlock,cacheConf.isInMemory());
    }
    if (dataBlock.getBlockType() == BlockType.DATA)     HFile.dataBlockReadCnt.incrementAndGet();
    return dataBlock;
  }
  finally {
    offsetLock.releaseLockEntry(lockEntry);
  }
}
