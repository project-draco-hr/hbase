{
  ConcurrentMap<byte[],RegionLocations> tableLocations=getTableLocations(tableName);
  RegionLocations regionLocations=getCachedLocation(tableName,row);
  if (regionLocations != null) {
    RegionLocations updatedLocations=regionLocations.removeByServer(serverName);
    if (updatedLocations != regionLocations) {
      byte[] startKey=regionLocations.getRegionLocation().getRegionInfo().getStartKey();
      boolean removed=false;
      if (updatedLocations.isEmpty()) {
        removed=tableLocations.remove(startKey,regionLocations);
      }
 else {
        removed=tableLocations.replace(startKey,regionLocations,updatedLocations);
      }
      if (removed) {
        if (metrics != null) {
          metrics.incrMetaCacheNumClearRegion();
        }
        if (LOG.isTraceEnabled()) {
          LOG.trace("Removed locations of table: " + tableName + " ,row: "+ Bytes.toString(row)+ " mapping to server: "+ serverName+ " from cache");
        }
      }
    }
  }
}
