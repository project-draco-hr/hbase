{
synchronized (map) {
    long now=System.currentTimeMillis();
    map.reset();
    ImmutableBytesWritable readval=new ImmutableBytesWritable();
    HStoreKey readkey=(HStoreKey)map.getClosest(key,readval);
    if (readkey == null) {
      return;
    }
    do {
      byte[] readcol=readkey.getColumn();
      if ((columns == null || columns.contains(readcol)) && (!results.containsKey(readcol) || results.get(readcol).getNumValues() < numVersions) && key.matchesWithoutColumn(readkey)) {
        if (HLogEdit.isDeleted(readval.get())) {
          if (!deletes.containsKey(readcol) || deletes.get(readcol).longValue() < readkey.getTimestamp()) {
            deletes.put(readcol,Long.valueOf(readkey.getTimestamp()));
          }
        }
 else         if (!(deletes.containsKey(readcol) && deletes.get(readcol).longValue() >= readkey.getTimestamp())) {
          if (!(deletes.containsKey(readcol) && deletes.get(readcol).longValue() >= readkey.getTimestamp())) {
            if (!isExpired(readkey,ttl,now)) {
              if (!results.containsKey(readcol)) {
                results.put(readcol,new Cell(readval.get(),readkey.getTimestamp()));
              }
 else {
                results.get(readcol).add(readval.get(),readkey.getTimestamp());
              }
              readval=new ImmutableBytesWritable();
            }
          }
        }
      }
 else       if (HStoreKey.compareTwoRowKeys(info,key.getRow(),readkey.getRow()) < 0) {
        break;
      }
    }
 while (map.next(readkey,readval));
  }
}
