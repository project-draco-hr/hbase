{
  HStoreKey searchKey=null;
  ImmutableBytesWritable readval=new ImmutableBytesWritable();
  HStoreKey readkey=new HStoreKey();
  HStoreKey strippedKey=null;
synchronized (map) {
    map.reset();
    if (!map.next(readkey,readval)) {
      return;
    }
    if (candidateKeys.isEmpty()) {
      searchKey=new HStoreKey(row);
      HStoreKey finalKey=new HStoreKey();
      map.finalKey(finalKey);
      if (finalKey.getRow().compareTo(row) < 0) {
        candidateKeys.put(stripTimestamp(finalKey),new Long(finalKey.getTimestamp()));
        return;
      }
      readkey=(HStoreKey)map.getClosest(searchKey,readval,true);
      if (readkey == null) {
        return;
      }
      do {
        if (readkey.getRow().equals(row)) {
          if (!HLogEdit.isDeleted(readval.get())) {
            candidateKeys.put(stripTimestamp(readkey),new Long(readkey.getTimestamp()));
          }
        }
 else         if (readkey.getRow().compareTo(row) > 0) {
          return;
        }
 else {
          if (!HLogEdit.isDeleted(readval.get())) {
            candidateKeys.put(stripTimestamp(readkey),new Long(readkey.getTimestamp()));
          }
        }
      }
 while (map.next(readkey,readval));
    }
 else {
      searchKey=new HStoreKey(candidateKeys.firstKey().getRow());
      HStoreKey finalKey=new HStoreKey();
      map.finalKey(finalKey);
      if (finalKey.getRow().compareTo(searchKey.getRow()) < 0) {
        strippedKey=stripTimestamp(finalKey);
        if (candidateKeys.containsKey(strippedKey)) {
          long bestCandidateTs=candidateKeys.get(strippedKey).longValue();
          if (bestCandidateTs < finalKey.getTimestamp()) {
            candidateKeys.put(strippedKey,new Long(finalKey.getTimestamp()));
          }
        }
 else {
          candidateKeys.put(strippedKey,new Long(finalKey.getTimestamp()));
        }
      }
      return;
    }
    readkey=(HStoreKey)map.getClosest(searchKey,readval,true);
    if (readkey == null) {
      return;
    }
    do {
      if (readkey.getRow().equals(row)) {
        strippedKey=stripTimestamp(readkey);
        if (!HLogEdit.isDeleted(readval.get())) {
          candidateKeys.put(strippedKey,new Long(readkey.getTimestamp()));
        }
 else {
          if (candidateKeys.containsKey(strippedKey)) {
            long bestCandidateTs=candidateKeys.get(strippedKey).longValue();
            if (bestCandidateTs <= readkey.getTimestamp()) {
              candidateKeys.remove(strippedKey);
            }
          }
        }
      }
 else       if (readkey.getRow().compareTo(row) > 0) {
        return;
      }
 else {
        strippedKey=stripTimestamp(readkey);
        if (!HLogEdit.isDeleted(readval.get())) {
          candidateKeys.put(strippedKey,readkey.getTimestamp());
        }
 else {
          if (candidateKeys.containsKey(strippedKey)) {
            long bestCandidateTs=candidateKeys.get(strippedKey).longValue();
            if (bestCandidateTs <= readkey.getTimestamp()) {
              candidateKeys.remove(strippedKey);
            }
          }
        }
      }
    }
 while (map.next(readkey,readval));
  }
}
