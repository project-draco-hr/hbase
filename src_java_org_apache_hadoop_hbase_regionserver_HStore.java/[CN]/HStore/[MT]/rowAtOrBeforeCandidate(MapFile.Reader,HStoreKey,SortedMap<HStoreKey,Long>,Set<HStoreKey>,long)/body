{
  HStoreKey searchKey=sk;
  if (searchKey.getHRegionInfo() == null) {
    searchKey.setHRegionInfo(this.info);
  }
  HStoreKey readkey=null;
  ImmutableBytesWritable readval=new ImmutableBytesWritable();
  HStoreKey knownNoGoodKey=null;
  for (boolean foundCandidate=false; !foundCandidate; ) {
    readkey=(HStoreKey)map.getClosest(searchKey,readval,true);
    if (readkey == null) {
      break;
    }
    HStoreKey deletedOrExpiredRow=null;
    do {
      readkey.setHRegionInfo(this.info);
      if (HStoreKey.equalsTwoRowKeys(this.info,readkey.getRow(),searchKey.getRow())) {
        if (!HLogEdit.isDeleted(readval.get())) {
          if (handleNonDelete(readkey,now,deletes,candidateKeys)) {
            foundCandidate=true;
            continue;
          }
        }
        HStoreKey copy=addCopyToDeletes(readkey,deletes);
        if (deletedOrExpiredRow == null) {
          deletedOrExpiredRow=copy;
        }
      }
 else       if (HStoreKey.compareTwoRowKeys(this.info,readkey.getRow(),searchKey.getRow()) > 0) {
        break;
      }
 else {
        if (!HLogEdit.isDeleted(readval.get())) {
          if (handleNonDelete(readkey,now,deletes,candidateKeys)) {
            foundCandidate=true;
            continue;
          }
        }
        HStoreKey copy=addCopyToDeletes(readkey,deletes);
        if (deletedOrExpiredRow == null) {
          deletedOrExpiredRow=copy;
        }
      }
    }
 while (map.next(readkey,readval) && (knownNoGoodKey == null || readkey.compareTo(knownNoGoodKey) < 0));
    if (!foundCandidate && deletedOrExpiredRow != null) {
      knownNoGoodKey=deletedOrExpiredRow;
      searchKey=new BeforeThisStoreKey(deletedOrExpiredRow);
    }
 else {
      break;
    }
  }
}
