{
  Path p=makeNewFile(tagUsage);
  FileSystem fs=TEST_UTIL.getTestFileSystem();
  Configuration conf=TEST_UTIL.getConfiguration();
  HFile.Reader reader=HFile.createReader(fs,p,new CacheConfig(conf),conf);
  reader.loadFileInfo();
  HFileScanner scanner=reader.getScanner(false,true);
  assertFalse(scanner.seekBefore(toKV("a",tagUsage)));
  assertFalse(scanner.seekBefore(toKV("c",tagUsage)));
  assertTrue(scanner.seekBefore(toKV("d",tagUsage)));
  assertEquals("c",toRowStr(scanner.getCell()));
  assertTrue(scanner.seekBefore(toKV("e",tagUsage)));
  assertEquals("c",toRowStr(scanner.getCell()));
  assertTrue(scanner.seekBefore(toKV("f",tagUsage)));
  assertEquals("e",toRowStr(scanner.getCell()));
  assertTrue(scanner.seekBefore(toKV("g",tagUsage)));
  assertEquals("e",toRowStr(scanner.getCell()));
  assertTrue(scanner.seekBefore(toKV("h",tagUsage)));
  assertEquals("g",toRowStr(scanner.getCell()));
  assertTrue(scanner.seekBefore(toKV("i",tagUsage)));
  assertEquals("g",toRowStr(scanner.getCell()));
  assertTrue(scanner.seekBefore(toKV("j",tagUsage)));
  assertEquals("i",toRowStr(scanner.getCell()));
  Cell cell=scanner.getCell();
  if (tagUsage != TagUsage.NO_TAG && cell.getTagsLength() > 0) {
    Iterator<Tag> tagsIterator=CellUtil.tagsIterator(cell);
    while (tagsIterator.hasNext()) {
      Tag next=tagsIterator.next();
      assertEquals("myTag1",Bytes.toString(TagUtil.cloneValue(next)));
    }
  }
  assertTrue(scanner.seekBefore(toKV("k",tagUsage)));
  assertEquals("i",toRowStr(scanner.getCell()));
  assertTrue(scanner.seekBefore(toKV("l",tagUsage)));
  assertEquals("k",toRowStr(scanner.getCell()));
  reader.close();
  deleteTestDir(fs);
}
