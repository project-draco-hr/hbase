{
  Path p=makeNewFile(tagUsage);
  HFile.Reader reader=HFile.createReader(fs,p,new CacheConfig(conf),conf);
  reader.loadFileInfo();
  HFileBlockIndex.BlockIndexReader blockIndexReader=reader.getDataBlockIndexReader();
  System.out.println(blockIndexReader.toString());
  int klen=toKV("a",tagUsage).getKey().length;
  assertEquals(-1,blockIndexReader.rootBlockContainingKey(toKV("a",tagUsage).getKey(),0,klen));
  assertEquals(0,blockIndexReader.rootBlockContainingKey(toKV("c",tagUsage).getKey(),0,klen));
  assertEquals(0,blockIndexReader.rootBlockContainingKey(toKV("d",tagUsage).getKey(),0,klen));
  assertEquals(0,blockIndexReader.rootBlockContainingKey(toKV("e",tagUsage).getKey(),0,klen));
  assertEquals(0,blockIndexReader.rootBlockContainingKey(toKV("g",tagUsage).getKey(),0,klen));
  assertEquals(0,blockIndexReader.rootBlockContainingKey(toKV("h",tagUsage).getKey(),0,klen));
  assertEquals(1,blockIndexReader.rootBlockContainingKey(toKV("i",tagUsage).getKey(),0,klen));
  assertEquals(1,blockIndexReader.rootBlockContainingKey(toKV("j",tagUsage).getKey(),0,klen));
  assertEquals(1,blockIndexReader.rootBlockContainingKey(toKV("k",tagUsage).getKey(),0,klen));
  assertEquals(1,blockIndexReader.rootBlockContainingKey(toKV("l",tagUsage).getKey(),0,klen));
  reader.close();
}
