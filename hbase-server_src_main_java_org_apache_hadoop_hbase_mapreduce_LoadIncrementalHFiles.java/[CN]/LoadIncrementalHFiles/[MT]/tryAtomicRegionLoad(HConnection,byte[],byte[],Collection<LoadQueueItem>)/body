{
  final List<Pair<byte[],String>> famPaths=new ArrayList<Pair<byte[],String>>(lqis.size());
  for (  LoadQueueItem lqi : lqis) {
    famPaths.add(Pair.newPair(lqi.family,lqi.hfilePath.toString()));
  }
  final RegionServerCallable<Boolean> svrCallable=new RegionServerCallable<Boolean>(conn,tableName,first){
    @Override public Boolean call() throws Exception {
      SecureBulkLoadClient secureClient=null;
      boolean success=false;
      try {
        LOG.debug("Going to connect to server " + getLocation() + " for row "+ Bytes.toStringBinary(getRow()));
        byte[] regionName=getLocation().getRegionInfo().getRegionName();
        if (!useSecure) {
          success=ProtobufUtil.bulkLoadHFile(getStub(),famPaths,regionName,assignSeqIds);
        }
 else {
          HTable table=new HTable(conn.getConfiguration(),getTableName());
          secureClient=new SecureBulkLoadClient(table);
          success=secureClient.bulkLoadHFiles(famPaths,userToken,bulkToken,getLocation().getRegionInfo().getStartKey());
        }
        return success;
      }
  finally {
        if (secureClient != null && !success) {
          FileSystem fs=FileSystem.get(cfg);
          for (          Pair<byte[],String> el : famPaths) {
            Path hfileStagingPath=null;
            Path hfileOrigPath=new Path(el.getSecond());
            try {
              hfileStagingPath=new Path(secureClient.getStagingPath(bulkToken,el.getFirst()),hfileOrigPath.getName());
              if (fs.rename(hfileStagingPath,hfileOrigPath)) {
                LOG.debug("Moved back file " + hfileOrigPath + " from "+ hfileStagingPath);
              }
 else               if (fs.exists(hfileStagingPath)) {
                LOG.debug("Unable to move back file " + hfileOrigPath + " from "+ hfileStagingPath);
              }
            }
 catch (            Exception ex) {
              LOG.debug("Unable to move back file " + hfileOrigPath + " from "+ hfileStagingPath,ex);
            }
          }
        }
      }
    }
  }
;
  try {
    List<LoadQueueItem> toRetry=new ArrayList<LoadQueueItem>();
    boolean success=new RpcRetryingCaller<Boolean>().callWithRetries(svrCallable,getConf());
    if (!success) {
      LOG.warn("Attempt to bulk load region containing " + Bytes.toStringBinary(first) + " into table "+ Bytes.toStringBinary(tableName)+ " with files "+ lqis+ " failed.  This is recoverable and they will be retried.");
      toRetry.addAll(lqis);
    }
    return toRetry;
  }
 catch (  IOException e) {
    LOG.error("Encountered unrecoverable error from region server",e);
    throw e;
  }
}
