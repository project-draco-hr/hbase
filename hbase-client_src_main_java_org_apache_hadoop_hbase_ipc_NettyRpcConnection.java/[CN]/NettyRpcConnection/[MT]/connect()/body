{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Connecting to " + remoteId.address);
  }
  this.channel=new Bootstrap().group(rpcClient.group).channel(rpcClient.channelClass).option(ChannelOption.TCP_NODELAY,rpcClient.isTcpNoDelay()).option(ChannelOption.SO_KEEPALIVE,rpcClient.tcpKeepAlive).option(ChannelOption.CONNECT_TIMEOUT_MILLIS,rpcClient.connectTO).handler(new BufferCallBeforeInitHandler()).localAddress(rpcClient.localAddr).remoteAddress(remoteId.address).connect().addListener(new ChannelFutureListener(){
    @Override public void operationComplete(    ChannelFuture future) throws Exception {
      Channel ch=future.channel();
      if (!future.isSuccess()) {
        failInit(ch,toIOE(future.cause()));
        rpcClient.failedServers.addToFailedServers(remoteId.address);
        return;
      }
      ch.writeAndFlush(connectionHeaderPreamble.retainedDuplicate());
      if (useSasl) {
        saslNegotiate(ch);
      }
 else {
        established(ch);
      }
    }
  }
).channel();
}
