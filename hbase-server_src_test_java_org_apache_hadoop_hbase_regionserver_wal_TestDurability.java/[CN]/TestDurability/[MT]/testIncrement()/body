{
  byte[] row1=Bytes.toBytes("row1");
  byte[] col1=Bytes.toBytes("col1");
  byte[] col2=Bytes.toBytes("col2");
  byte[] col3=Bytes.toBytes("col3");
  final WALFactory wals=new WALFactory(CONF,null,"TestIncrement");
  byte[] tableName=Bytes.toBytes("TestIncrement");
  final WAL wal=wals.getWAL(tableName,null);
  HRegion region=createHRegion(tableName,"increment",wal,Durability.USE_DEFAULT);
  Increment inc1=new Increment(row1);
  inc1.addColumn(FAMILY,col1,1);
  Result res=region.increment(inc1);
  assertEquals(1,res.size());
  assertEquals(1,Bytes.toLong(res.getValue(FAMILY,col1)));
  verifyWALCount(wals,wal,1);
  inc1=new Increment(row1);
  inc1.addColumn(FAMILY,col1,0);
  res=region.increment(inc1);
  assertEquals(1,res.size());
  assertEquals(1,Bytes.toLong(res.getValue(FAMILY,col1)));
  verifyWALCount(wals,wal,1);
  inc1=new Increment(row1);
  inc1.addColumn(FAMILY,col1,0);
  inc1.addColumn(FAMILY,col2,0);
  inc1.addColumn(FAMILY,col3,0);
  res=region.increment(inc1);
  assertEquals(3,res.size());
  assertEquals(1,Bytes.toLong(res.getValue(FAMILY,col1)));
  assertEquals(0,Bytes.toLong(res.getValue(FAMILY,col2)));
  assertEquals(0,Bytes.toLong(res.getValue(FAMILY,col3)));
  verifyWALCount(wals,wal,1);
  inc1=new Increment(row1);
  inc1.addColumn(FAMILY,col1,5);
  inc1.addColumn(FAMILY,col2,4);
  inc1.addColumn(FAMILY,col3,3);
  res=region.increment(inc1);
  assertEquals(3,res.size());
  assertEquals(6,Bytes.toLong(res.getValue(FAMILY,col1)));
  assertEquals(4,Bytes.toLong(res.getValue(FAMILY,col2)));
  assertEquals(3,Bytes.toLong(res.getValue(FAMILY,col3)));
  verifyWALCount(wals,wal,2);
}
