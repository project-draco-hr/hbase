{
  out.writeInt(results.size());
  for (  Map.Entry<byte[],List<Pair<Integer,Object>>> e : results.entrySet()) {
    Bytes.writeByteArray(out,e.getKey());
    List<Pair<Integer,Object>> lst=e.getValue();
    out.writeInt(lst.size());
    for (    Pair<Integer,Object> r : lst) {
      if (r == null) {
        out.writeInt(-1);
      }
 else {
        out.writeInt(r.getFirst());
        Object obj=r.getSecond();
        if (obj instanceof Throwable) {
          out.writeBoolean(true);
          Throwable t=(Throwable)obj;
          WritableUtils.writeString(out,t.getClass().getName());
          WritableUtils.writeString(out,StringUtils.stringifyException(t));
        }
 else {
          out.writeBoolean(false);
          if (!(obj instanceof Writable))           obj=null;
          HbaseObjectWritable.writeObject(out,r.getSecond(),obj != null ? obj.getClass() : Writable.class,null);
        }
      }
    }
  }
}
