{
  long pause=connection.getConfiguration().getLong(HConstants.HBASE_CLIENT_PAUSE,HConstants.DEFAULT_HBASE_CLIENT_PAUSE);
  int maxAttempts=getRetriesCount(connection.getConfiguration());
  RetryCounter counter=new RetryCounterFactory(maxAttempts,(int)pause).create();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Attempting to do an RPC to the primary region replica " + ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(region.getRegionInfo()).getEncodedName() + " of region "+ region.getRegionInfo().getEncodedName()+ " to trigger a flush");
  }
  while (!region.isClosing() && !region.isClosed() && !server.isAborted()&& !server.isStopped()) {
    FlushRegionCallable flushCallable=new FlushRegionCallable(connection,rpcControllerFactory,RegionReplicaUtil.getRegionInfoForDefaultReplica(region.getRegionInfo()),true);
    FlushRegionResponse response=null;
    try {
      response=rpcRetryingCallerFactory.<FlushRegionResponse>newCaller().callWithRetries(flushCallable,this.operationTimeout);
    }
 catch (    IOException ex) {
      if (ex instanceof TableNotFoundException || connection.isTableDisabled(region.getRegionInfo().getTable())) {
        return;
      }
      throw ex;
    }
    if (response.getFlushed()) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Successfully triggered a flush of primary region replica " + ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(region.getRegionInfo()).getEncodedName() + " of region "+ region.getRegionInfo().getEncodedName()+ " Now waiting and blocking reads until observing a full flush cycle");
      }
      break;
    }
 else {
      if (response.hasWroteFlushWalMarker()) {
        if (response.getWroteFlushWalMarker()) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Successfully triggered an empty flush marker(memstore empty) of primary " + "region replica " + ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(region.getRegionInfo()).getEncodedName() + " of region "+ region.getRegionInfo().getEncodedName()+ " Now waiting and "+ "blocking reads until observing a flush marker");
          }
          break;
        }
 else {
          if (!counter.shouldRetry()) {
            throw new IOException("Cannot cause primary to flush or drop a wal marker after " + "retries. Failing opening of this region replica " + region.getRegionInfo().getEncodedName());
          }
        }
      }
 else {
        LOG.warn("Was not able to trigger a flush from primary region due to old server version? " + "Continuing to open the secondary region replica: " + region.getRegionInfo().getEncodedName());
        region.setReadsEnabled(true);
        break;
      }
    }
    try {
      counter.sleepUntilNextRetry();
    }
 catch (    InterruptedException e) {
      throw new InterruptedIOException(e.getMessage());
    }
  }
}
