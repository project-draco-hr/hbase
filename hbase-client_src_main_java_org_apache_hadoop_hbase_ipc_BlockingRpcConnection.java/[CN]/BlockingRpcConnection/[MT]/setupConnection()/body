{
  short ioFailures=0;
  short timeoutFailures=0;
  while (true) {
    try {
      this.socket=this.rpcClient.socketFactory.createSocket();
      this.socket.setTcpNoDelay(this.rpcClient.isTcpNoDelay());
      this.socket.setKeepAlive(this.rpcClient.tcpKeepAlive);
      if (this.rpcClient.localAddr != null) {
        this.socket.bind(this.rpcClient.localAddr);
      }
      NetUtils.connect(this.socket,remoteId.getAddress(),this.rpcClient.connectTO);
      this.socket.setSoTimeout(this.rpcClient.readTO);
      return;
    }
 catch (    SocketTimeoutException toe) {
      handleConnectionFailure(timeoutFailures++,this.rpcClient.maxRetries,toe);
    }
catch (    IOException ie) {
      handleConnectionFailure(ioFailures++,this.rpcClient.maxRetries,ie);
    }
  }
}
