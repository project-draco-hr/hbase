{
  byte[] nextRowKey=null;
  for (  Pair<byte[],byte[]> fuzzyData : fuzzyKeysData) {
    byte[] nextRowKeyCandidate=getNextForFuzzyRule(isReversed(),currentCell.getRowArray(),currentCell.getRowOffset(),currentCell.getRowLength(),fuzzyData.getFirst(),fuzzyData.getSecond());
    if (nextRowKeyCandidate == null) {
      continue;
    }
    if (nextRowKey == null || (reversed && Bytes.compareTo(nextRowKeyCandidate,nextRowKey) > 0) || (!reversed && Bytes.compareTo(nextRowKeyCandidate,nextRowKey) < 0)) {
      nextRowKey=nextRowKeyCandidate;
    }
  }
  if (!reversed && nextRowKey == null) {
    throw new IllegalStateException("No next row key that satisfies fuzzy exists when" + " getNextKeyHint() is invoked." + " Filter: " + this.toString() + " currentKV: "+ currentCell);
  }
  return nextRowKey == null ? null : KeyValueUtil.createFirstOnRow(nextRowKey);
}
