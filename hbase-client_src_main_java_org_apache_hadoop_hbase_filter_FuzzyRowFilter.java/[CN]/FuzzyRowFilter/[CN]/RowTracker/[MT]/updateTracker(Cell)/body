{
  nextRows.clear();
  for (  Pair<byte[],byte[]> fuzzyData : fuzzyKeysData) {
    byte[] nextRowKeyCandidate=getNextForFuzzyRule(isReversed(),currentCell.getRowArray(),currentCell.getRowOffset(),currentCell.getRowLength(),fuzzyData.getFirst(),fuzzyData.getSecond());
    if (nextRowKeyCandidate == null) {
      continue;
    }
    nextRows.add(nextRowKeyCandidate);
  }
  Collections.sort(nextRows,new Comparator<byte[]>(){
    @Override public int compare(    byte[] o1,    byte[] o2){
      if (reversed) {
        return -Bytes.compareTo(o1,o2);
      }
 else {
        return Bytes.compareTo(o1,o2);
      }
    }
  }
);
  next=0;
  return nextRows.size() > 0;
}
