{
  Configuration conf=new Configuration(CONF);
  conf.setInt(RpcServer.MAX_REQUEST_SIZE,100);
  RpcServer rpcServer=new TestRpcServer(conf);
  AbstractRpcClient client=createRpcClient(conf);
  try {
    rpcServer.start();
    MethodDescriptor md=SERVICE.getDescriptorForType().findMethodByName("echo");
    EchoRequestProto param=EchoRequestProto.newBuilder().setMessage("hello.hello.hello.hello." + "hello.hello.hello.hello.hello.hello.hello.hello.hello.hello.hello.hello").build();
    InetSocketAddress address=rpcServer.getListenerAddress();
    if (address == null) {
      throw new IOException("Listener channel is closed");
    }
    try {
      client.call(new PayloadCarryingRpcController(CellUtil.createCellScanner(ImmutableList.<Cell>of(CELL))),md,param,md.getOutputType().toProto(),User.getCurrent(),address,new MetricsConnection.CallStats());
      fail("RPC should have failed because it exceeds max request size");
    }
 catch (    IOException ex) {
    }
  }
  finally {
    rpcServer.stop();
  }
}
