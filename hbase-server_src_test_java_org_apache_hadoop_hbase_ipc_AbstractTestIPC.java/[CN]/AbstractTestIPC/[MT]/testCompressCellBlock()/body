{
  Configuration conf=new Configuration(HBaseConfiguration.create());
  conf.set("hbase.client.rpc.compressor",GzipCodec.class.getCanonicalName());
  List<Cell> cells=new ArrayList<Cell>();
  int count=3;
  for (int i=0; i < count; i++) {
    cells.add(CELL);
  }
  AbstractRpcClient client=createRpcClient(conf);
  TestRpcServer rpcServer=new TestRpcServer();
  try {
    rpcServer.start();
    MethodDescriptor md=SERVICE.getDescriptorForType().findMethodByName("echo");
    EchoRequestProto param=EchoRequestProto.newBuilder().setMessage("hello").build();
    PayloadCarryingRpcController pcrc=new PayloadCarryingRpcController(CellUtil.createCellScanner(cells));
    InetSocketAddress address=rpcServer.getListenerAddress();
    if (address == null) {
      throw new IOException("Listener channel is closed");
    }
    Pair<Message,CellScanner> r=client.call(pcrc,md,param,md.getOutputType().toProto(),User.getCurrent(),address,new MetricsConnection.CallStats());
    int index=0;
    while (r.getSecond().advance()) {
      assertTrue(CELL.equals(r.getSecond().current()));
      index++;
    }
    assertEquals(count,index);
  }
  finally {
    client.close();
    rpcServer.stop();
  }
}
