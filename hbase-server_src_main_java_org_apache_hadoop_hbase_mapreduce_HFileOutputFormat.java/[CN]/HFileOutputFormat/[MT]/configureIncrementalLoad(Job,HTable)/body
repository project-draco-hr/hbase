{
  Configuration conf=job.getConfiguration();
  job.setOutputKeyClass(ImmutableBytesWritable.class);
  job.setOutputValueClass(KeyValue.class);
  job.setOutputFormatClass(HFileOutputFormat.class);
  if (KeyValue.class.equals(job.getMapOutputValueClass())) {
    job.setReducerClass(KeyValueSortReducer.class);
  }
 else   if (Put.class.equals(job.getMapOutputValueClass())) {
    job.setReducerClass(PutSortReducer.class);
  }
 else   if (Text.class.equals(job.getMapOutputValueClass())) {
    job.setReducerClass(TextSortReducer.class);
  }
 else {
    LOG.warn("Unknown map output value type:" + job.getMapOutputValueClass());
  }
  conf.setStrings("io.serializations",conf.get("io.serializations"),KeyValueSerialization.class.getName());
  LOG.info("Looking up current regions for table " + Bytes.toString(table.getTableName()));
  List<ImmutableBytesWritable> startKeys=getRegionStartKeys(table);
  LOG.info("Configuring " + startKeys.size() + " reduce partitions "+ "to match current region count");
  job.setNumReduceTasks(startKeys.size());
  configurePartitioner(job,startKeys);
  configureCompression(table,conf);
  configureBloomType(table,conf);
  TableMapReduceUtil.addDependencyJars(job);
  TableMapReduceUtil.initCredentials(job);
  LOG.info("Incremental table " + Bytes.toString(table.getTableName()) + " output configured.");
}
