{
  if (args.length < 6) {
    printUsage("Too few arguments");
  }
  int numReduceTasks=1;
  String iconfFile=null;
  String indexDir=null;
  String tableName=null;
  StringBuffer columnNames=null;
  for (int i=0; i < args.length - 1; i++) {
    if ("-r".equals(args[i])) {
      numReduceTasks=Integer.parseInt(args[++i]);
    }
 else     if ("-indexConf".equals(args[i])) {
      iconfFile=args[++i];
    }
 else     if ("-indexDir".equals(args[i])) {
      indexDir=args[++i];
    }
 else     if ("-table".equals(args[i])) {
      tableName=args[++i];
    }
 else     if ("-columns".equals(args[i])) {
      columnNames=new StringBuffer(args[++i]);
      while (i + 1 < args.length && !args[i + 1].startsWith("-")) {
        columnNames.append(" ");
        columnNames.append(args[++i]);
      }
    }
 else {
      printUsage("Unsupported option " + args[i]);
    }
  }
  if (indexDir == null || tableName == null || columnNames == null) {
    printUsage("Index directory, table name and at least one column must " + "be specified");
  }
  if (iconfFile != null) {
    String content=readContent(iconfFile);
    IndexConfiguration iconf=new IndexConfiguration();
    iconf.addFromXML(content);
    conf.set("hbase.index.conf",content);
  }
  Job job=new Job(conf,"build index for table " + tableName);
  job.setNumReduceTasks(numReduceTasks);
  Scan scan=new Scan();
  scan.addColumns(columnNames.toString());
  IdentityTableMapper.initJob(tableName,scan,IdentityTableMapper.class,job);
  job.setReducerClass(IndexTableReducer.class);
  FileOutputFormat.setOutputPath(job,new Path(indexDir));
  job.setOutputFormatClass(IndexOutputFormat.class);
  return job;
}
