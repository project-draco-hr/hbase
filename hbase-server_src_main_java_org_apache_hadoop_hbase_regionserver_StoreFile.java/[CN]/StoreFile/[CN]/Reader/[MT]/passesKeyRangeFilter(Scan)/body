{
  if (this.getFirstKey() == null || this.getLastKey() == null) {
    return false;
  }
  if (Bytes.equals(scan.getStartRow(),HConstants.EMPTY_START_ROW) && Bytes.equals(scan.getStopRow(),HConstants.EMPTY_END_ROW)) {
    return true;
  }
  KeyValue smallestScanKeyValue=scan.isReversed() ? KeyValueUtil.createFirstOnRow(scan.getStopRow()) : KeyValueUtil.createFirstOnRow(scan.getStartRow());
  KeyValue largestScanKeyValue=scan.isReversed() ? KeyValueUtil.createLastOnRow(scan.getStartRow()) : KeyValueUtil.createLastOnRow(scan.getStopRow());
  KeyValue.KeyOnlyKeyValue firstKeyKV=new KeyValue.KeyOnlyKeyValue(this.getFirstKey(),0,this.getFirstKey().length);
  KeyValue.KeyOnlyKeyValue lastKeyKV=new KeyValue.KeyOnlyKeyValue(this.getLastKey(),0,this.getLastKey().length);
  boolean nonOverLapping=((getComparator().compare(firstKeyKV,largestScanKeyValue)) > 0 && !Bytes.equals(scan.isReversed() ? scan.getStartRow() : scan.getStopRow(),HConstants.EMPTY_END_ROW)) || (getComparator().compare(lastKeyKV,smallestScanKeyValue)) < 0;
  return !nonOverLapping;
}
