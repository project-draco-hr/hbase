{
  StringBuilder s=new StringBuilder();
  boolean hasConfigKeys=false;
  for (  ImmutableBytesWritable k : values.keySet()) {
    if (!RESERVED_KEYWORDS.contains(k)) {
      hasConfigKeys=true;
      continue;
    }
    String key=Bytes.toString(k.get());
    String value=Bytes.toString(values.get(k).get());
    if (printDefaults || !DEFAULT_VALUES.containsKey(key) || !DEFAULT_VALUES.get(key).equalsIgnoreCase(value)) {
      s.append(", ");
      s.append(key);
      s.append(" => ");
      s.append('\'').append(value).append('\'');
    }
  }
  if (hasConfigKeys) {
    s.append(", ");
    s.append(HConstants.METADATA).append(" => ");
    s.append('{');
    boolean printComma=false;
    for (    ImmutableBytesWritable k : values.keySet()) {
      if (RESERVED_KEYWORDS.contains(k)) {
        continue;
      }
      String key=Bytes.toString(k.get());
      String value=Bytes.toString(values.get(k).get());
      if (printComma) {
        s.append(", ");
      }
      printComma=true;
      s.append('\'').append(key).append('\'');
      s.append(" => ");
      s.append('\'').append(value).append('\'');
    }
    s.append('}');
  }
  if (!configuration.isEmpty()) {
    s.append(", ");
    s.append(HConstants.CONFIGURATION).append(" => ");
    s.append('{');
    boolean printCommaForConfiguration=false;
    for (    Map.Entry<String,String> e : configuration.entrySet()) {
      if (printCommaForConfiguration)       s.append(", ");
      printCommaForConfiguration=true;
      s.append('\'').append(e.getKey()).append('\'');
      s.append(" => ");
      s.append('\'').append(e.getValue()).append('\'');
    }
    s.append("}");
  }
  return s;
}
