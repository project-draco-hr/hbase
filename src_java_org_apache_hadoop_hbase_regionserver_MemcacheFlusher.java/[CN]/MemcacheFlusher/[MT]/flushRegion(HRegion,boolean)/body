{
  int count=0;
  boolean triggered=false;
  while (count++ < (blockingWaitTime / 500)) {
    for (    Store hstore : region.stores.values()) {
      if (hstore.getStorefilesCount() > this.blockingStoreFilesNumber) {
        if (!triggered) {
          server.compactSplitThread.compactionRequested(region,getName());
          LOG.info("Too many store files for region " + region + ": "+ hstore.getStorefilesCount()+ ", waiting");
          triggered=true;
        }
        try {
          Thread.sleep(500);
        }
 catch (        InterruptedException e) {
        }
        continue;
      }
    }
    if (triggered) {
      LOG.info("Compaction completed on region " + region + ", proceeding");
    }
    break;
  }
synchronized (regionsInQueue) {
    if (regionsInQueue.remove(region) && removeFromQueue) {
      flushQueue.remove(region);
    }
    lock.lock();
  }
  try {
    if (region.flushcache() && !removeFromQueue) {
      server.compactSplitThread.compactionRequested(region,getName());
    }
  }
 catch (  DroppedSnapshotException ex) {
    LOG.fatal("Replay of hlog required. Forcing server shutdown",ex);
    server.abort();
    return false;
  }
catch (  IOException ex) {
    LOG.error("Cache flush failed" + (region != null ? (" for region " + Bytes.toString(region.getRegionName())) : ""),RemoteExceptionHandler.checkIOException(ex));
    if (!server.checkFileSystem()) {
      return false;
    }
  }
 finally {
    lock.unlock();
  }
  return true;
}
