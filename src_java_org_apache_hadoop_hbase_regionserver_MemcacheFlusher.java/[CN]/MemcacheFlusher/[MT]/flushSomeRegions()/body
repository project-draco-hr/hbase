{
  long globalMemcacheSize=-1;
  ArrayList<HRegion> regionsToCompact=new ArrayList<HRegion>();
  for (SortedMap<Long,HRegion> m=this.server.getCopyOfOnlineRegionsSortedBySize(); (globalMemcacheSize=server.getGlobalMemcacheSize()) >= this.globalMemcacheLimitLowMark; ) {
    if (m.size() <= 0) {
      LOG.info("No online regions to flush though we've been asked flush " + "some; globalMemcacheSize=" + StringUtils.humanReadableInt(globalMemcacheSize) + ", globalMemcacheLimitLowMark="+ StringUtils.humanReadableInt(this.globalMemcacheLimitLowMark));
      break;
    }
    HRegion biggestMemcacheRegion=m.remove(m.firstKey());
    LOG.info("Forced flushing of " + biggestMemcacheRegion.toString() + " because global memcache limit of "+ StringUtils.humanReadableInt(this.globalMemcacheLimit)+ " exceeded; currently "+ StringUtils.humanReadableInt(globalMemcacheSize)+ " and flushing till "+ StringUtils.humanReadableInt(this.globalMemcacheLimitLowMark));
    if (!flushRegion(biggestMemcacheRegion,true)) {
      LOG.warn("Flush failed");
      break;
    }
    regionsToCompact.add(biggestMemcacheRegion);
  }
  for (  HRegion region : regionsToCompact) {
    server.compactSplitThread.compactionRequested(region,getName());
  }
}
