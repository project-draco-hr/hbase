{
  Random rand=new Random();
  MemStoreLAB mslab=new HeapMemStoreLAB(conf);
  int expectedOff=0;
  byte[] lastBuffer=null;
  final byte[] rk=Bytes.toBytes("r1");
  final byte[] cf=Bytes.toBytes("f");
  final byte[] q=Bytes.toBytes("q");
  for (int i=0; i < 100; i++) {
    int valSize=rand.nextInt(1000);
    KeyValue kv=new KeyValue(rk,cf,q,new byte[valSize]);
    int size=KeyValueUtil.length(kv);
    KeyValue newKv=(KeyValue)mslab.copyCellInto(kv);
    if (newKv.getBuffer() != lastBuffer) {
      expectedOff=0;
      lastBuffer=newKv.getBuffer();
    }
    assertEquals(expectedOff,newKv.getOffset());
    assertTrue("Allocation overruns buffer",newKv.getOffset() + size <= newKv.getBuffer().length);
    expectedOff+=size;
  }
  mslab.close();
  int chunkCount=chunkPool.getPoolSize();
  assertTrue(chunkCount > 0);
  mslab=new HeapMemStoreLAB(conf);
  KeyValue kv=new KeyValue(rk,cf,q,new byte[10]);
  mslab.copyCellInto(kv);
  assertEquals(chunkCount - 1,chunkPool.getPoolSize());
}
