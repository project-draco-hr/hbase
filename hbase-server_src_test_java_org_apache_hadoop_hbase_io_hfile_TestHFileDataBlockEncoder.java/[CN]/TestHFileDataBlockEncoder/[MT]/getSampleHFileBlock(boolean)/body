{
  ByteBuffer keyValues=RedundantKVGenerator.convertKvToByteBuffer(generator.generateTestKeyValues(60,useTag),includesMemstoreTS);
  int size=keyValues.limit();
  ByteBuffer buf=ByteBuffer.allocate(size + HConstants.HFILEBLOCK_HEADER_SIZE);
  buf.position(HConstants.HFILEBLOCK_HEADER_SIZE);
  keyValues.rewind();
  buf.put(keyValues);
  HFileContext meta=new HFileContext();
  meta.setIncludesMvcc(includesMemstoreTS);
  meta.setIncludesTags(useTag);
  meta.setUsesHBaseChecksum(true);
  meta.setCompressAlgo(Algorithm.NONE);
  meta.setBlocksize(0);
  meta.setChecksumType(ChecksumType.NULL);
  HFileBlock b=new HFileBlock(BlockType.DATA,size,size,-1,buf,HFileBlock.FILL_HEADER,0,0,meta);
  return b;
}
