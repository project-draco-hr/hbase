{
  int headerSize=HConstants.HFILEBLOCK_HEADER_SIZE_NO_CHECKSUM;
  ByteBuffer keyValues=RedundantKVGenerator.convertKvToByteBuffer(generator.generateTestKeyValues(60,useTags),includesMemstoreTS);
  int size=keyValues.limit();
  ByteBuffer buf=ByteBuffer.allocate(size + headerSize);
  buf.position(headerSize);
  keyValues.rewind();
  buf.put(keyValues);
  HFileContext meta=new HFileContextBuilder().withHBaseCheckSum(false).withIncludesMvcc(includesMemstoreTS).withIncludesTags(useTags).withBlockSize(0).withChecksumType(ChecksumType.NULL).build();
  HFileBlock block=new HFileBlock(BlockType.DATA,size,size,-1,buf,HFileBlock.FILL_HEADER,0,0,meta);
  HFileBlock cacheBlock=blockEncoder.diskToCacheFormat(createBlockOnDisk(block,useTags),false);
  assertEquals(headerSize,cacheBlock.getDummyHeaderForVersion().length);
}
