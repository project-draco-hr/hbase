{
  if (timeout < 0)   throw new IllegalArgumentException();
  boolean notimeout=timeout == 0;
  long startTime=EnvironmentEdgeManager.currentTimeMillis();
  long remaining=timeout;
  if (refresh) {
    try {
      this.data=ZKUtil.getDataAndWatch(watcher,node);
    }
 catch (    KeeperException e) {
      LOG.warn("Unexpected exception handling blockUntilAvailable",e);
      abortable.abort("Unexpected exception handling blockUntilAvailable",e);
    }
  }
  boolean nodeExistsChecked=(!refresh || data != null);
  while (!this.stopped && (notimeout || remaining > 0) && this.data == null) {
    if (!nodeExistsChecked) {
      try {
        nodeExistsChecked=(ZKUtil.checkExists(watcher,node) != -1);
      }
 catch (      KeeperException e) {
        LOG.warn("Got exception while trying to check existence in  ZooKeeper" + " of the node: " + node + ", retrying if timeout not reached",e);
      }
      if (nodeExistsChecked) {
        LOG.info("Node " + node + " now exists, resetting a watcher");
        try {
          this.data=ZKUtil.getDataAndWatch(watcher,node);
        }
 catch (        KeeperException e) {
          LOG.warn("Unexpected exception handling blockUntilAvailable",e);
          abortable.abort("Unexpected exception handling blockUntilAvailable",e);
        }
      }
    }
    wait(100);
    remaining=timeout - (EnvironmentEdgeManager.currentTimeMillis() - startTime);
  }
  return this.data;
}
