{
  try {
    List<String> regionServers=tracker.getListOfRegionServers();
    if (regionServers == null) {
      return;
    }
    Set<String> rsSet=new HashSet<String>(regionServers);
    List<String> replicators=queues.getListOfReplicators();
    for (    String replicator : replicators) {
      try {
        String lockNode=queues.getLockZNode(replicator);
        byte[] data=ZKUtil.getData(zk,lockNode);
        if (data == null) {
          continue;
        }
        String rsServerNameZnode=Bytes.toString(data);
        String[] array=rsServerNameZnode.split("/");
        String znode=array[array.length - 1];
        if (!rsSet.contains(znode)) {
          Stat s=zk.getRecoverableZooKeeper().exists(lockNode,false);
          if (s != null && EnvironmentEdgeManager.currentTime() - s.getMtime() > this.ttl) {
            ZKUtil.deleteNode(zk,lockNode);
            LOG.info("Remove lock acquired by dead RS: " + lockNode + " by "+ znode);
          }
          continue;
        }
        LOG.info("Skip lock acquired by live RS: " + lockNode + " by "+ znode);
      }
 catch (      KeeperException.NoNodeException ignore) {
      }
catch (      InterruptedException e) {
        LOG.warn("zk operation interrupted",e);
        Thread.currentThread().interrupt();
      }
    }
  }
 catch (  KeeperException e) {
    LOG.warn("zk operation interrupted",e);
  }
}
