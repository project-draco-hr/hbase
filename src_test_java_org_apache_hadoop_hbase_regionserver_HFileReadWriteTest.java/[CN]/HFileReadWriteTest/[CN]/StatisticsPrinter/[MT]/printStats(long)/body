{
  long numSeeksL=numSeeks.get();
  double timeSec=elapsedTime / 1000.0;
  double seekPerSec=numSeeksL / timeSec;
  long kvCount=numKV.get();
  double kvPerSec=kvCount / timeSec;
  long bytes=totalBytes.get();
  double bytesPerSec=bytes / timeSec;
  totalSeekAndReads+=HFile.getReadOps();
  totalPositionalReads+=HFile.getPreadOps();
  long totalBlocksRead=totalSeekAndReads + totalPositionalReads;
  double blkReadPerSec=totalBlocksRead / timeSec;
  double seekReadPerSec=totalSeekAndReads / timeSec;
  double preadPerSec=totalPositionalReads / timeSec;
  boolean isRead=workload == Workload.RANDOM_READS;
  StringBuilder sb=new StringBuilder();
  sb.append("Time: " + (long)timeSec + " sec");
  if (isRead)   sb.append(", seek/sec: " + (long)seekPerSec);
  sb.append(", kv/sec: " + (long)kvPerSec);
  sb.append(", bytes/sec: " + (long)bytesPerSec);
  sb.append(", blk/sec: " + (long)blkReadPerSec);
  sb.append(", total KV: " + numKV);
  sb.append(", total bytes: " + totalBytes);
  sb.append(", total blk: " + totalBlocksRead);
  sb.append(", seekRead/sec: " + (long)seekReadPerSec);
  sb.append(", pread/sec: " + (long)preadPerSec);
  if (isRead)   sb.append(", unique keys: " + (long)keysRead.size());
  LOG.info(sb.toString());
}
