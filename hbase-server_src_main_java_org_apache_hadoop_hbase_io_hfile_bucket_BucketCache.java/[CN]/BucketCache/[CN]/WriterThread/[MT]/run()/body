{
  List<RAMQueueEntry> entries=new ArrayList<RAMQueueEntry>();
  try {
    while (cacheEnabled && writerEnabled) {
      try {
        try {
          entries.add(inputQueue.take());
          inputQueue.drainTo(entries);
synchronized (cacheWaitSignals[threadNO]) {
            cacheWaitSignals[threadNO].notifyAll();
          }
        }
 catch (        InterruptedException ie) {
          if (!cacheEnabled)           break;
        }
        doDrain(entries);
      }
 catch (      Exception ioe) {
        LOG.error("WriterThread encountered error",ioe);
      }
    }
  }
 catch (  Throwable t) {
    LOG.warn("Failed doing drain",t);
  }
  LOG.info(this.getName() + " exiting, cacheEnabled=" + cacheEnabled);
}
