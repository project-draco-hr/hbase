{
  long totalSize=bucketAllocator.getTotalSize();
  long usedSize=bucketAllocator.getUsedSize();
  long freeSize=totalSize - usedSize;
  long cacheSize=getRealCacheSize();
  LOG.info("failedBlockAdditions=" + getFailedBlockAdditions() + ", "+ "totalSize="+ StringUtils.byteDesc(totalSize)+ ", "+ "freeSize="+ StringUtils.byteDesc(freeSize)+ ", "+ "usedSize="+ StringUtils.byteDesc(usedSize)+ ", "+ "cacheSize="+ StringUtils.byteDesc(cacheSize)+ ", "+ "accesses="+ cacheStats.getRequestCount()+ ", "+ "hits="+ cacheStats.getHitCount()+ ", "+ "IOhitsPerSecond="+ cacheStats.getIOHitsPerSecond()+ ", "+ "IOTimePerHit="+ String.format("%.2f",cacheStats.getIOTimePerHit())+ ", "+ "hitRatio="+ (cacheStats.getHitCount() == 0 ? "0," : (StringUtils.formatPercent(cacheStats.getHitRatio(),2) + ", "))+ "cachingAccesses="+ cacheStats.getRequestCachingCount()+ ", "+ "cachingHits="+ cacheStats.getHitCachingCount()+ ", "+ "cachingHitsRatio="+ (cacheStats.getHitCachingCount() == 0 ? "0," : (StringUtils.formatPercent(cacheStats.getHitCachingRatio(),2) + ", "))+ "evictions="+ cacheStats.getEvictionCount()+ ", "+ "evicted="+ cacheStats.getEvictedCount()+ ", "+ "evictedPerRun="+ cacheStats.evictedPerEviction());
  cacheStats.reset();
}
