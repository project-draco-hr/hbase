{
  if (!cacheEnabled) {
    return false;
  }
  RAMQueueEntry removedBlock=checkRamCache(cacheKey);
  BucketEntry bucketEntry=backingMap.get(cacheKey);
  if (bucketEntry == null) {
    if (removedBlock != null) {
      cacheStats.evicted(0,cacheKey.isPrimary());
      return true;
    }
 else {
      return false;
    }
  }
  ReentrantReadWriteLock lock=offsetLock.getLock(bucketEntry.offset());
  try {
    lock.writeLock().lock();
    int refCount=bucketEntry.refCount.get();
    if (refCount == 0) {
      if (backingMap.remove(cacheKey,bucketEntry)) {
        blockEvicted(cacheKey,bucketEntry,removedBlock == null);
      }
 else {
        return false;
      }
    }
 else {
      if (!deletedBlock) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("This block " + cacheKey + " is still referred by "+ refCount+ " readers. Can not be freed now");
        }
        return false;
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug("This block " + cacheKey + " is still referred by "+ refCount+ " readers. Can not be freed now. Hence will mark this"+ " for evicting at a later point");
        }
        bucketEntry.markedForEvict=true;
      }
    }
  }
  finally {
    lock.writeLock().unlock();
  }
  cacheStats.evicted(bucketEntry.getCachedTime(),cacheKey.isPrimary());
  return true;
}
