{
  conf=UTIL.getConfiguration();
  enableSecurity(conf);
  SUPERUSER=User.createUserForTesting(conf,"admin",new String[]{"supergroup"});
  USER_GLOBAL_ADMIN=User.createUserForTesting(conf,"global_admin",new String[0]);
  USER_GLOBAL_CREATE=User.createUserForTesting(conf,"global_create",new String[0]);
  USER_GLOBAL_WRITE=User.createUserForTesting(conf,"global_write",new String[0]);
  USER_GLOBAL_READ=User.createUserForTesting(conf,"global_read",new String[0]);
  USER_GLOBAL_EXEC=User.createUserForTesting(conf,"global_exec",new String[0]);
  USER_NS_ADMIN=User.createUserForTesting(conf,"namespace_admin",new String[0]);
  USER_NS_CREATE=User.createUserForTesting(conf,"namespace_create",new String[0]);
  USER_NS_WRITE=User.createUserForTesting(conf,"namespace_write",new String[0]);
  USER_NS_READ=User.createUserForTesting(conf,"namespace_read",new String[0]);
  USER_NS_EXEC=User.createUserForTesting(conf,"namespace_exec",new String[0]);
  USER_TABLE_CREATE=User.createUserForTesting(conf,"table_create",new String[0]);
  USER_TABLE_WRITE=User.createUserForTesting(conf,"table_write",new String[0]);
  USER_GROUP_ADMIN=User.createUserForTesting(conf,"user_group_admin",new String[]{GROUP_ADMIN});
  USER_GROUP_NS_ADMIN=User.createUserForTesting(conf,"user_group_ns_admin",new String[]{GROUP_NS_ADMIN});
  USER_GROUP_CREATE=User.createUserForTesting(conf,"user_group_create",new String[]{GROUP_CREATE});
  USER_GROUP_READ=User.createUserForTesting(conf,"user_group_read",new String[]{GROUP_READ});
  USER_GROUP_WRITE=User.createUserForTesting(conf,"user_group_write",new String[]{GROUP_WRITE});
  UTIL.startMiniCluster();
  UTIL.waitTableAvailable(AccessControlLists.ACL_TABLE_NAME.getName(),30 * 1000);
  ACCESS_CONTROLLER=(AccessController)UTIL.getMiniHBaseCluster().getMaster().getRegionServerCoprocessorHost().findCoprocessor(AccessController.class.getName());
  UTIL.getHBaseAdmin().createNamespace(NamespaceDescriptor.create(TEST_NAMESPACE).build());
  UTIL.getHBaseAdmin().createNamespace(NamespaceDescriptor.create(TEST_NAMESPACE2).build());
  grantGlobal(UTIL,USER_GLOBAL_ADMIN.getShortName(),Permission.Action.ADMIN);
  grantGlobal(UTIL,USER_GLOBAL_CREATE.getShortName(),Permission.Action.CREATE);
  grantGlobal(UTIL,USER_GLOBAL_WRITE.getShortName(),Permission.Action.WRITE);
  grantGlobal(UTIL,USER_GLOBAL_READ.getShortName(),Permission.Action.READ);
  grantGlobal(UTIL,USER_GLOBAL_EXEC.getShortName(),Permission.Action.EXEC);
  grantOnNamespace(UTIL,USER_NS_ADMIN.getShortName(),TEST_NAMESPACE,Permission.Action.ADMIN);
  grantOnNamespace(UTIL,USER_NS_CREATE.getShortName(),TEST_NAMESPACE,Permission.Action.CREATE);
  grantOnNamespace(UTIL,USER_NS_WRITE.getShortName(),TEST_NAMESPACE,Permission.Action.WRITE);
  grantOnNamespace(UTIL,USER_NS_READ.getShortName(),TEST_NAMESPACE,Permission.Action.READ);
  grantOnNamespace(UTIL,USER_NS_EXEC.getShortName(),TEST_NAMESPACE,Permission.Action.EXEC);
  grantOnNamespace(UTIL,toGroupEntry(GROUP_NS_ADMIN),TEST_NAMESPACE,Permission.Action.ADMIN);
  grantOnNamespace(UTIL,USER_NS_ADMIN.getShortName(),TEST_NAMESPACE2,Permission.Action.ADMIN);
  grantGlobal(UTIL,toGroupEntry(GROUP_ADMIN),Permission.Action.ADMIN);
  grantGlobal(UTIL,toGroupEntry(GROUP_CREATE),Permission.Action.CREATE);
  grantGlobal(UTIL,toGroupEntry(GROUP_READ),Permission.Action.READ);
  grantGlobal(UTIL,toGroupEntry(GROUP_WRITE),Permission.Action.WRITE);
}
