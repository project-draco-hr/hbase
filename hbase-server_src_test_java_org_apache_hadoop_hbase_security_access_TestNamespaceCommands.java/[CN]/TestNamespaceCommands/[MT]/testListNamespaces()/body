{
  AccessTestAction listAction=new AccessTestAction(){
    @Override public Object run() throws Exception {
      Connection unmanagedConnection=ConnectionFactory.createConnection(UTIL.getConfiguration());
      Admin admin=unmanagedConnection.getAdmin();
      try {
        return Arrays.asList(admin.listNamespaceDescriptors());
      }
  finally {
        admin.close();
        unmanagedConnection.close();
      }
    }
  }
;
  verifyAllowed(listAction,SUPERUSER,USER_GLOBAL_ADMIN,USER_NS_ADMIN);
  assertEquals(4,((List)SUPERUSER.runAs(listAction)).size());
  assertEquals(4,((List)USER_GLOBAL_ADMIN.runAs(listAction)).size());
  assertEquals(2,((List)USER_NS_ADMIN.runAs(listAction)).size());
  assertEquals(0,((List)USER_GLOBAL_CREATE.runAs(listAction)).size());
  assertEquals(0,((List)USER_GLOBAL_WRITE.runAs(listAction)).size());
  assertEquals(0,((List)USER_GLOBAL_READ.runAs(listAction)).size());
  assertEquals(0,((List)USER_GLOBAL_EXEC.runAs(listAction)).size());
  assertEquals(0,((List)USER_NS_CREATE.runAs(listAction)).size());
  assertEquals(0,((List)USER_NS_WRITE.runAs(listAction)).size());
  assertEquals(0,((List)USER_NS_READ.runAs(listAction)).size());
  assertEquals(0,((List)USER_NS_EXEC.runAs(listAction)).size());
  assertEquals(0,((List)USER_TABLE_CREATE.runAs(listAction)).size());
  assertEquals(0,((List)USER_TABLE_WRITE.runAs(listAction)).size());
}
