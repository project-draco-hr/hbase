{
  Triple<Class<?>,Method,Class<?>> paramType=new Triple<Class<?>,Method,Class<?>>();
  Method[] methods=clazz.getMethods();
  paramType.setFirst(clazz);
  for (  Method method : methods) {
    if (clazz.isInterface() || method.getModifiers() == Modifier.PUBLIC) {
      if (!isInterfacePrivateMethod(method)) {
        Class<?>[] parameters=method.getParameterTypes();
        for (        Class<?> param : parameters) {
          if (param.getName().contains(HBASE_PROTOBUF)) {
            paramType.setSecond(method);
            paramType.setThird(param);
            protosParamType.add(paramType);
            break;
          }
        }
      }
    }
  }
}
