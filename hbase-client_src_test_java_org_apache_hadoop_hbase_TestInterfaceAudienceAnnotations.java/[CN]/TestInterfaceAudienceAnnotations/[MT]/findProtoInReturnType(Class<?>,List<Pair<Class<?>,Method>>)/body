{
  Pair<Class<?>,Method> returnTypePair=new Pair<Class<?>,Method>();
  Method[] methods=clazz.getMethods();
  returnTypePair.setFirst(clazz);
  for (  Method method : methods) {
    if (clazz.isInterface() || method.getModifiers() == Modifier.PUBLIC) {
      if (!isInterfacePrivateMethod(method)) {
        Class<?> returnType=method.getReturnType();
        if (returnType.getName().contains(HBASE_PROTOBUF)) {
          returnTypePair.setSecond(method);
          protosReturnType.add(returnTypePair);
          continue;
        }
      }
    }
  }
}
