{
  if (Bytes.equals(tableName,HConstants.ROOT_TABLE_NAME)) {
    ServerName serverName=catalogTracker.getRootLocation();
    List<Pair<HRegionInfo,ServerName>> list=new ArrayList<Pair<HRegionInfo,ServerName>>();
    list.add(new Pair<HRegionInfo,ServerName>(HRegionInfo.ROOT_REGIONINFO,serverName));
    return list;
  }
  CollectingVisitor<Pair<HRegionInfo,ServerName>> visitor=new CollectingVisitor<Pair<HRegionInfo,ServerName>>(){
    private Pair<HRegionInfo,ServerName> current=null;
    @Override public boolean visit(    Result r) throws IOException {
      HRegionInfo hri=parseHRegionInfoFromCatalogResult(r,HConstants.REGIONINFO_QUALIFIER);
      if (hri == null) {
        LOG.warn("No serialized HRegionInfo in " + r);
        return true;
      }
      if (!isInsideTable(hri,tableName))       return false;
      if (excludeOfflinedSplitParents && hri.isSplitParent())       return true;
      ServerName sn=getServerNameFromCatalogResult(r);
      this.current=new Pair<HRegionInfo,ServerName>(hri,sn);
      return super.visit(r);
    }
    @Override void add(    Result r){
      this.results.add(this.current);
    }
  }
;
  fullScan(catalogTracker,visitor,getTableStartRowForMeta(tableName),Bytes.equals(tableName,HConstants.META_TABLE_NAME));
  return visitor.getResults();
}
