{
  TableName tn=TableName.valueOf("testEnableReplicationForSetTableCfs");
  String peerId="2";
  if (admin2.isTableAvailable(tableName)) {
    admin2.disableTable(tableName);
    admin2.deleteTable(tableName);
  }
  assertFalse("Table should not exists in the peer cluster",admin2.isTableAvailable(tableName));
  Map<TableName,? extends Collection<String>> tableCfs=new HashMap<TableName,Collection<String>>();
  tableCfs.put(tn,null);
  try {
    adminExt.setPeerTableCFs(peerId,tableCfs);
    adminExt.enableTableRep(tableName);
    assertFalse("Table should not be created if user has set table cfs explicitly for the " + "peer and this is not part of that collection",admin2.isTableAvailable(tableName));
    tableCfs.put(tableName,null);
    adminExt.setPeerTableCFs(peerId,tableCfs);
    adminExt.enableTableRep(tableName);
    assertTrue("Table should be created if user has explicitly added table into table cfs collection",admin2.isTableAvailable(tableName));
  }
  finally {
    adminExt.removePeerTableCFs(peerId,adminExt.getPeerTableCFs(peerId));
    adminExt.disableTableRep(tableName);
  }
}
