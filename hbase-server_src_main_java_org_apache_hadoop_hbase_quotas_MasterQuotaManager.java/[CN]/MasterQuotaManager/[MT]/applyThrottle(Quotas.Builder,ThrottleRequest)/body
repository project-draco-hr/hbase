{
  Throttle.Builder throttle;
  if (req.hasType() && (req.hasTimedQuota() || quotas.hasThrottle())) {
    if (req.hasTimedQuota())     validateTimedQuota(req.getTimedQuota());
    throttle=quotas.hasThrottle() ? quotas.getThrottle().toBuilder() : Throttle.newBuilder();
switch (req.getType()) {
case REQUEST_NUMBER:
      if (req.hasTimedQuota()) {
        throttle.setReqNum(req.getTimedQuota());
      }
 else {
        throttle.clearReqNum();
      }
    break;
case REQUEST_SIZE:
  if (req.hasTimedQuota()) {
    throttle.setReqSize(req.getTimedQuota());
  }
 else {
    throttle.clearReqSize();
  }
break;
case WRITE_NUMBER:
if (req.hasTimedQuota()) {
throttle.setWriteNum(req.getTimedQuota());
}
 else {
throttle.clearWriteNum();
}
break;
case WRITE_SIZE:
if (req.hasTimedQuota()) {
throttle.setWriteSize(req.getTimedQuota());
}
 else {
throttle.clearWriteSize();
}
break;
case READ_NUMBER:
if (req.hasTimedQuota()) {
throttle.setReadNum(req.getTimedQuota());
}
 else {
throttle.clearReqNum();
}
break;
case READ_SIZE:
if (req.hasTimedQuota()) {
throttle.setReadSize(req.getTimedQuota());
}
 else {
throttle.clearReadSize();
}
break;
}
quotas.setThrottle(throttle.build());
}
 else {
quotas.clearThrottle();
}
}
