{
  try {
    table=new HTable(conf,TABLE);
    long lockid=table.startUpdate(ROW);
    table.put(lockid,COLUMN,VERSION1.getBytes(HConstants.UTF8_ENCODING));
    table.commit(lockid,T0);
    lockid=table.startUpdate(ROW);
    table.put(lockid,COLUMN,LATEST.getBytes(HConstants.UTF8_ENCODING));
    table.commit(lockid);
    lockid=table.startUpdate(ROW);
    table.delete(lockid,COLUMN);
    table.commit(lockid,T1);
    byte[] bytes=table.get(ROW,COLUMN);
    assertTrue(bytes != null && bytes.length != 0);
    assertTrue(LATEST.equals(new String(bytes,HConstants.UTF8_ENCODING)));
    byte[][] values=table.get(ROW,COLUMN,T1,3);
    assertNull(values);
    values=table.get(ROW,COLUMN,T0,3);
    assertTrue(values.length == 1 && VERSION1.equals(new String(values[0],HConstants.UTF8_ENCODING)));
    HRegionServer s=cluster.regionThreads.get(0).getRegionServer();
    for (    HRegion r : s.onlineRegions.values()) {
      r.flushcache(false);
    }
    bytes=table.get(ROW,COLUMN);
    assertTrue(bytes != null && bytes.length != 0);
    assertTrue(LATEST.equals(new String(bytes,HConstants.UTF8_ENCODING)));
    values=table.get(ROW,COLUMN,T1,3);
    assertNull(values);
    values=table.get(ROW,COLUMN,T0,3);
    assertTrue(values.length == 1 && VERSION1.equals(new String(values[0],HConstants.UTF8_ENCODING)));
    values=table.get(ROW,COLUMN,3);
    assertTrue(values.length == 1 && LATEST.equals(new String(values[0],HConstants.UTF8_ENCODING)));
    HScannerInterface scanner=table.obtainScanner(COLUMNS,HConstants.EMPTY_START_ROW);
    try {
      HStoreKey key=new HStoreKey();
      TreeMap<Text,byte[]> results=new TreeMap<Text,byte[]>();
      int count=0;
      while (scanner.next(key,results)) {
        count++;
      }
      assertEquals(count,1);
      assertEquals(results.size(),1);
    }
  finally {
      scanner.close();
    }
    scanner=table.obtainScanner(COLUMNS,HConstants.EMPTY_START_ROW,T1);
    try {
      HStoreKey key=new HStoreKey();
      TreeMap<Text,byte[]> results=new TreeMap<Text,byte[]>();
      int count=0;
      while (scanner.next(key,results)) {
        count++;
      }
      assertEquals(count,0);
      assertEquals(results.size(),0);
    }
  finally {
      scanner.close();
    }
    scanner=table.obtainScanner(COLUMNS,HConstants.EMPTY_START_ROW,T0);
    try {
      HStoreKey key=new HStoreKey();
      TreeMap<Text,byte[]> results=new TreeMap<Text,byte[]>();
      int count=0;
      while (scanner.next(key,results)) {
        count++;
      }
      assertEquals(count,0);
      assertEquals(results.size(),0);
    }
  finally {
      scanner.close();
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail();
  }
}
