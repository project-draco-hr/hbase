{
  Throwable curr=exp;
  if (accessDeniedClazz != null) {
    while (curr != null) {
      if (accessDeniedClazz.isAssignableFrom(curr.getClass())) {
        throw new SecurityException("Unauthorized" + CRLF + StringUtils.stringifyException(exp)+ CRLF);
      }
      curr=curr.getCause();
    }
  }
  if (exp instanceof TableNotFoundException || exp.getCause() instanceof TableNotFoundException) {
    throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND).type(MIMETYPE_TEXT).entity("Not found" + CRLF + StringUtils.stringifyException(exp)+ CRLF).build());
  }
  if (exp instanceof NoSuchColumnFamilyException) {
    throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND).type(MIMETYPE_TEXT).entity("Not found" + CRLF + StringUtils.stringifyException(exp)+ CRLF).build());
  }
  if (exp instanceof RuntimeException) {
    throw new WebApplicationException(Response.status(Response.Status.BAD_REQUEST).type(MIMETYPE_TEXT).entity("Bad request" + CRLF + StringUtils.stringifyException(exp)+ CRLF).build());
  }
  if (exp instanceof RetriesExhaustedWithDetailsException) {
    RetriesExhaustedWithDetailsException retryException=(RetriesExhaustedWithDetailsException)exp;
    processException(retryException.getCause(0));
  }
  throw new WebApplicationException(Response.status(Response.Status.SERVICE_UNAVAILABLE).type(MIMETYPE_TEXT).entity("Unavailable" + CRLF + StringUtils.stringifyException(exp)+ CRLF).build());
}
