{
  if (message != null && message.length() > 0) {
    System.err.println(message);
  }
  System.err.println("Usage: java " + this.getClass().getName() + " \\");
  System.err.println("  [--option] [--option=value] <command> <nclients>");
  System.err.println();
  System.err.println("Options:");
  System.err.println(" host          String. Specify Stargate endpoint.");
  System.err.println(" token         String. API access token.");
  System.err.println(" rows          Integer. Rows each client runs. Default: One million");
  System.err.println(" rowsPerPut    Integer. Rows each Stargate (multi)Put. Default: 100");
  System.err.println(" nomapred      (Flag) Run multiple clients using threads " + "(rather than use mapreduce)");
  System.err.println();
  System.err.println("Command:");
  for (  CmdDescriptor command : commands.values()) {
    System.err.println(String.format(" %-15s %s",command.getName(),command.getDescription()));
  }
  System.err.println();
  System.err.println("Args:");
  System.err.println(" nclients      Integer. Required. Total number of " + "clients (and HRegionServers)");
  System.err.println("               running: 1 <= value <= 500");
  System.err.println("Examples:");
  System.err.println(" To run a single evaluation client:");
  System.err.println(" $ bin/hbase " + this.getClass().getName() + " sequentialWrite 1");
}
