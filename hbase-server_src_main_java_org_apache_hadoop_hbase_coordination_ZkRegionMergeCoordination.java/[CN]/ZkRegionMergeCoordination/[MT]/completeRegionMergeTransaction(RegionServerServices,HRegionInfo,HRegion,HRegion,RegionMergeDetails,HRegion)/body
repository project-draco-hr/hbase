{
  ZkRegionMergeDetails zrmd=(ZkRegionMergeDetails)rmd;
  if (manager.getServer() == null || manager.getServer().getCoordinatedStateManager() == null) {
    return;
  }
  try {
    transitionMergingNode(mergedRegionInfo,region_a.getRegionInfo(),region_b.getRegionInfo(),manager.getServer().getServerName(),rmd,RS_ZK_REGION_MERGING,RS_ZK_REGION_MERGED);
    long startTime=EnvironmentEdgeManager.currentTimeMillis();
    int spins=0;
    do {
      if (spins % 10 == 0) {
        LOG.debug("Still waiting on the master to process the merge for " + mergedRegionInfo.getEncodedName() + ", waited "+ (EnvironmentEdgeManager.currentTimeMillis() - startTime)+ "ms");
      }
      Thread.sleep(100);
      transitionMergingNode(mergedRegionInfo,region_a.getRegionInfo(),region_b.getRegionInfo(),manager.getServer().getServerName(),rmd,RS_ZK_REGION_MERGED,RS_ZK_REGION_MERGED);
      spins++;
    }
 while (zrmd.getZnodeVersion() != -1 && !manager.getServer().isStopped() && !services.isStopping());
  }
 catch (  Exception e) {
    if (e instanceof InterruptedException) {
      Thread.currentThread().interrupt();
    }
    throw new IOException("Failed telling master about merge " + mergedRegionInfo.getEncodedName(),e);
  }
}
