{
  HTable table=null;
  try {
    latch=new CountDownLatch(1);
    getLatch=new CountDownLatch(1);
    TableName tableName=TableName.valueOf("testGetWithCellsInDifferentFiles");
    table=TEST_UTIL.createTable(tableName,FAMILIES_1,1,1024,CustomInnerRegionObserver.class.getName());
    RegionLocator locator=table.getRegionLocator();
    String regionName=locator.getAllRegionLocations().get(0).getRegionInfo().getEncodedName();
    Region region=TEST_UTIL.getRSForFirstRegionInTable(tableName).getFromOnlineRegions(regionName);
    Store store=region.getStores().iterator().next();
    CacheConfig cacheConf=store.getCacheConfig();
    cacheConf.setCacheDataOnWrite(true);
    cacheConf.setEvictOnClose(true);
    BlockCache cache=cacheConf.getBlockCache();
    Put put=new Put(ROW);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    region.flush(true);
    put=new Put(ROW1);
    put.addColumn(FAMILY,QUALIFIER,data);
    table.put(put);
    region.flush(true);
    byte[] QUALIFIER2=Bytes.add(QUALIFIER,QUALIFIER);
    put=new Put(ROW);
    put.addColumn(FAMILY,QUALIFIER2,data2);
    table.put(put);
    region.flush(true);
    System.out.println("Flushing cache");
    CustomInnerRegionObserver.waitForGets.set(true);
    GetThread[] getThreads=initiateGet(table,false,false);
    Thread.sleep(200);
    CustomInnerRegionObserver.getCdl().get().countDown();
    for (    GetThread thread : getThreads) {
      thread.join();
    }
    CustomInnerRegionObserver.waitForGets.set(true);
    checkForBlockEviction(cache,true,false);
    getLatch.countDown();
    System.out.println("Gets should have returned the bloks");
  }
  finally {
    if (table != null) {
      table.close();
    }
  }
}
