{
  LOG.debug("starting restore");
  Map<String,SnapshotRegionManifest> regionManifests=snapshotManifest.getRegionManifestsMap();
  if (regionManifests == null) {
    LOG.warn("Nothing to restore. Snapshot " + snapshotDesc + " looks empty");
    return null;
  }
  RestoreMetaChanges metaChanges=new RestoreMetaChanges(parentsMap);
  Set<String> regionNames=new HashSet<String>(regionManifests.keySet());
  HRegionInfo mobRegion=MobUtils.getMobRegionInfo(snapshotManifest.getTableDescriptor().getTableName());
  List<HRegionInfo> tableRegions=getTableRegions();
  if (tableRegions != null) {
    monitor.rethrowException();
    for (    HRegionInfo regionInfo : tableRegions) {
      String regionName=regionInfo.getEncodedName();
      if (regionNames.contains(regionName)) {
        LOG.info("region to restore: " + regionName);
        regionNames.remove(regionName);
        metaChanges.addRegionToRestore(regionInfo);
      }
 else {
        LOG.info("region to remove: " + regionName);
        metaChanges.addRegionToRemove(regionInfo);
      }
    }
    monitor.rethrowException();
    status.setStatus("Restoring table regions...");
    if (regionNames.contains(mobRegion.getEncodedName())) {
      List<HRegionInfo> mobRegions=new ArrayList<HRegionInfo>(1);
      mobRegions.add(mobRegion);
      restoreHdfsMobRegions(exec,regionManifests,mobRegions);
      regionNames.remove(mobRegion.getEncodedName());
    }
    restoreHdfsRegions(exec,regionManifests,metaChanges.getRegionsToRestore());
    status.setStatus("Finished restoring all table regions.");
    monitor.rethrowException();
    status.setStatus("Starting to delete excess regions from table");
    removeHdfsRegions(exec,metaChanges.getRegionsToRemove());
    status.setStatus("Finished deleting excess regions from table.");
  }
  if (regionNames.size() > 0) {
    List<HRegionInfo> regionsToAdd=new ArrayList<HRegionInfo>(regionNames.size());
    monitor.rethrowException();
    if (regionNames.contains(mobRegion.getEncodedName())) {
      cloneHdfsMobRegion(regionManifests,mobRegion);
      regionNames.remove(mobRegion.getEncodedName());
    }
    for (    String regionName : regionNames) {
      LOG.info("region to add: " + regionName);
      regionsToAdd.add(HRegionInfo.convert(regionManifests.get(regionName).getRegionInfo()));
    }
    monitor.rethrowException();
    status.setStatus("Cloning regions...");
    HRegionInfo[] clonedRegions=cloneHdfsRegions(exec,regionManifests,regionsToAdd);
    metaChanges.setNewRegions(clonedRegions);
    status.setStatus("Finished cloning regions.");
  }
  return metaChanges;
}
