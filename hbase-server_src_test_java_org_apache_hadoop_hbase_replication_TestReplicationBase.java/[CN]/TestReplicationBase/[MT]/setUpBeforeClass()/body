{
  conf1.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/1");
  conf1.setInt("replication.source.size.capacity",102400);
  conf1.setLong("replication.source.sleepforretries",100);
  conf1.setInt("hbase.regionserver.maxlogs",10);
  conf1.setLong("hbase.master.logcleaner.ttl",10);
  conf1.setInt("zookeeper.recovery.retry",1);
  conf1.setInt("zookeeper.recovery.retry.intervalmill",10);
  conf1.setLong(HConstants.THREAD_WAKE_FREQUENCY,100);
  conf1.setInt("replication.stats.thread.period.seconds",5);
  conf1.setBoolean("hbase.tests.use.shortcircuit.reads",false);
  conf1.setLong("replication.sleep.before.failover",2000);
  conf1.setInt("replication.source.maxretriesmultiplier",10);
  conf1.setFloat("replication.source.ratio",1.0f);
  utility1=new HBaseTestingUtility(conf1);
  utility1.startMiniZKCluster();
  MiniZooKeeperCluster miniZK=utility1.getZkCluster();
  conf1=utility1.getConfiguration();
  zkw1=new ZooKeeperWatcher(conf1,"cluster1",null,true);
  admin=new ReplicationAdmin(conf1);
  LOG.info("Setup first Zk");
  conf2=HBaseConfiguration.create(conf1);
  conf2.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/2");
  conf2.setInt(HConstants.HBASE_CLIENT_RETRIES_NUMBER,6);
  conf2.setBoolean("hbase.tests.use.shortcircuit.reads",false);
  utility2=new HBaseTestingUtility(conf2);
  utility2.setZkCluster(miniZK);
  zkw2=new ZooKeeperWatcher(conf2,"cluster2",null,true);
  ReplicationPeerConfig rpc=new ReplicationPeerConfig();
  rpc.setClusterKey(utility2.getClusterKey());
  admin.addPeer("2",rpc,null);
  LOG.info("Setup second Zk");
  CONF_WITH_LOCALFS=HBaseConfiguration.create(conf1);
  utility1.startMiniCluster(2);
  utility2.startMiniCluster(4);
  HTableDescriptor table=new HTableDescriptor(tableName);
  HColumnDescriptor fam=new HColumnDescriptor(famName);
  fam.setMaxVersions(100);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  table.addFamily(fam);
  fam=new HColumnDescriptor(noRepfamName);
  table.addFamily(fam);
  scopes=new TreeMap<byte[],Integer>(Bytes.BYTES_COMPARATOR);
  for (  HColumnDescriptor f : table.getColumnFamilies()) {
    scopes.put(f.getName(),f.getScope());
  }
  Connection connection1=ConnectionFactory.createConnection(conf1);
  Connection connection2=ConnectionFactory.createConnection(conf2);
  try (Admin admin1=connection1.getAdmin()){
    admin1.createTable(table,HBaseTestingUtility.KEYS_FOR_HBA_CREATE_TABLE);
  }
   try (Admin admin2=connection2.getAdmin()){
    admin2.createTable(table,HBaseTestingUtility.KEYS_FOR_HBA_CREATE_TABLE);
  }
   utility1.waitUntilAllRegionsAssigned(tableName);
  utility2.waitUntilAllRegionsAssigned(tableName);
  htable1=connection1.getTable(tableName);
  htable1.setWriteBufferSize(1024);
  htable2=connection2.getTable(tableName);
}
