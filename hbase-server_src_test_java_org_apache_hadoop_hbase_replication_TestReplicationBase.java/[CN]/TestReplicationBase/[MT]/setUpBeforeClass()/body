{
  conf1.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/1");
  conf1.setFloat("hbase.regionserver.logroll.multiplier",0.0003f);
  conf1.setInt("replication.source.size.capacity",10240);
  conf1.setLong("replication.source.sleepforretries",100);
  conf1.setInt("hbase.regionserver.maxlogs",10);
  conf1.setLong("hbase.master.logcleaner.ttl",10);
  conf1.setInt("zookeeper.recovery.retry",1);
  conf1.setInt("zookeeper.recovery.retry.intervalmill",10);
  conf1.setBoolean(HConstants.REPLICATION_ENABLE_KEY,true);
  conf1.setBoolean("dfs.support.append",true);
  conf1.setLong(HConstants.THREAD_WAKE_FREQUENCY,100);
  conf1.setInt("replication.stats.thread.period.seconds",5);
  utility1=new HBaseTestingUtility(conf1);
  utility1.startMiniZKCluster();
  MiniZooKeeperCluster miniZK=utility1.getZkCluster();
  conf1=utility1.getConfiguration();
  zkw1=new ZooKeeperWatcher(conf1,"cluster1",null,true);
  admin=new ReplicationAdmin(conf1);
  LOG.info("Setup first Zk");
  conf2=HBaseConfiguration.create(conf1);
  conf2.set(HConstants.ZOOKEEPER_ZNODE_PARENT,"/2");
  conf2.setInt("hbase.client.retries.number",6);
  conf2.setBoolean(HConstants.REPLICATION_ENABLE_KEY,true);
  conf2.setBoolean("dfs.support.append",true);
  utility2=new HBaseTestingUtility(conf2);
  utility2.setZkCluster(miniZK);
  zkw2=new ZooKeeperWatcher(conf2,"cluster2",null,true);
  admin.addPeer("2",utility2.getClusterKey());
  setIsReplication(true);
  LOG.info("Setup second Zk");
  CONF_WITH_LOCALFS=HBaseConfiguration.create(conf1);
  utility1.startMiniCluster(2);
  utility2.startMiniCluster(2);
  HTableDescriptor table=new HTableDescriptor(tableName);
  HColumnDescriptor fam=new HColumnDescriptor(famName);
  fam.setScope(HConstants.REPLICATION_SCOPE_GLOBAL);
  table.addFamily(fam);
  fam=new HColumnDescriptor(noRepfamName);
  table.addFamily(fam);
  HBaseAdmin admin1=new HBaseAdmin(conf1);
  HBaseAdmin admin2=new HBaseAdmin(conf2);
  admin1.createTable(table,HBaseTestingUtility.KEYS_FOR_HBA_CREATE_TABLE);
  admin2.createTable(table);
  htable1=new HTable(conf1,tableName);
  htable1.setWriteBufferSize(1024);
  htable2=new HTable(conf2,tableName);
}
