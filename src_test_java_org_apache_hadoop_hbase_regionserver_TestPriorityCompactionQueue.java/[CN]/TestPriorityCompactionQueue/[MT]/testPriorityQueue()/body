{
  PriorityCompactionQueue pq=new PriorityCompactionQueue();
  HRegion r1=new DummyHRegion("r1");
  HRegion r2=new DummyHRegion("r2");
  HRegion r3=new DummyHRegion("r3");
  HRegion r4=new DummyHRegion("r4");
  HRegion r5=new DummyHRegion("r5");
  addRegion(pq,r1,Priority.HIGH_BLOCKING);
  addRegion(pq,r2,Priority.HIGH_BLOCKING);
  addRegion(pq,r3,Priority.HIGH_BLOCKING);
  addRegion(pq,r4,Priority.HIGH_BLOCKING);
  addRegion(pq,r5,Priority.HIGH_BLOCKING);
  getAndCheckRegion(pq,r1);
  getAndCheckRegion(pq,r2);
  getAndCheckRegion(pq,r3);
  getAndCheckRegion(pq,r4);
  getAndCheckRegion(pq,r5);
  addRegion(pq,r1,null);
  addRegion(pq,r2,null);
  addRegion(pq,r3,null);
  addRegion(pq,r4,null);
  addRegion(pq,r5,null);
  getAndCheckRegion(pq,r1);
  getAndCheckRegion(pq,r2);
  getAndCheckRegion(pq,r3);
  getAndCheckRegion(pq,r4);
  getAndCheckRegion(pq,r5);
  addRegion(pq,r1,Priority.HIGH_BLOCKING);
  addRegion(pq,r2,Priority.NORMAL);
  addRegion(pq,r3,Priority.HIGH_BLOCKING);
  addRegion(pq,r4,Priority.NORMAL);
  addRegion(pq,r5,Priority.HIGH_BLOCKING);
  getAndCheckRegion(pq,r1);
  getAndCheckRegion(pq,r3);
  getAndCheckRegion(pq,r5);
  getAndCheckRegion(pq,r2);
  getAndCheckRegion(pq,r4);
  addRegion(pq,r1,Priority.NORMAL);
  addRegion(pq,r2,Priority.NORMAL);
  addRegion(pq,r3,Priority.NORMAL);
  addRegion(pq,r4,Priority.NORMAL);
  addRegion(pq,r5,Priority.HIGH_BLOCKING);
  getAndCheckRegion(pq,r5);
  getAndCheckRegion(pq,r1);
  getAndCheckRegion(pq,r2);
  getAndCheckRegion(pq,r3);
  getAndCheckRegion(pq,r4);
  addRegion(pq,r1,Priority.NORMAL);
  addRegion(pq,r2,Priority.HIGH_BLOCKING);
  addRegion(pq,r3,Priority.NORMAL);
  Thread.sleep(1000);
  addRegion(pq,r4,Priority.NORMAL);
  addRegion(pq,r5,Priority.HIGH_BLOCKING);
  getAndCheckRegion(pq,r2);
  getAndCheckRegion(pq,r5);
  getAndCheckRegion(pq,r1);
  getAndCheckRegion(pq,r3);
  getAndCheckRegion(pq,r4);
  pq=new PriorityCompactionQueue();
  addRegion(pq,r1,Priority.NORMAL);
  addRegion(pq,r2,Priority.NORMAL);
  addRegion(pq,r3,Priority.NORMAL);
  addRegion(pq,r4,Priority.NORMAL);
  addRegion(pq,r5,Priority.NORMAL);
  addRegion(pq,r3,Priority.HIGH_BLOCKING);
  getAndCheckRegion(pq,r3);
  getAndCheckRegion(pq,r1);
  getAndCheckRegion(pq,r2);
  getAndCheckRegion(pq,r4);
  getAndCheckRegion(pq,r5);
  Assert.assertTrue("Queue should be empty.",pq.size() == 0);
  addRegion(pq,r1,Priority.NORMAL);
  addRegion(pq,r2,Priority.NORMAL);
  addRegion(pq,r3,Priority.NORMAL);
  addRegion(pq,r4,Priority.NORMAL);
  addRegion(pq,r5,Priority.NORMAL);
  addRegion(pq,r1,Priority.NORMAL);
  addRegion(pq,r2,Priority.NORMAL);
  addRegion(pq,r3,Priority.NORMAL);
  addRegion(pq,r4,Priority.NORMAL);
  addRegion(pq,r5,Priority.NORMAL);
  getAndCheckRegion(pq,r1);
  getAndCheckRegion(pq,r2);
  getAndCheckRegion(pq,r3);
  getAndCheckRegion(pq,r4);
  getAndCheckRegion(pq,r5);
  Assert.assertTrue("Queue should be empty.",pq.size() == 0);
}
