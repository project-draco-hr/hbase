{
  BitSetNode n1=buildBitSetNode(new long[]{1L},new long[]{1L},new long[]{});
  BitSetNode n2=buildBitSetNode(new long[]{1L},new long[]{},new long[]{});
  assertFalse(n1.subtract(n2));
  n1=buildBitSetNode(new long[]{1L},new long[]{1L},new long[]{});
  n2=buildBitSetNode(new long[]{1L},new long[]{1L},new long[]{});
  assertTrue(n1.subtract(n2));
  n1=buildBitSetNode(new long[]{1L},new long[]{1L},new long[]{1L});
  n2=buildBitSetNode(new long[]{1L},new long[]{1L},new long[]{});
  assertFalse(n1.subtract(n2));
  n1=buildBitSetNode(new long[]{1L},new long[]{1L},new long[]{});
  n2=buildBitSetNode(new long[]{1L},new long[]{1L},new long[]{1L});
  assertTrue(n1.subtract(n2));
  n1=buildBitSetNode(new long[]{0L,10L,20L,30L},new long[]{0L,10L,20L,30L},new long[]{20L});
  n2=buildBitSetNode(new long[]{0L,10L,20L,30L},new long[]{0L,20L,30L},new long[]{0L});
  assertTrue(n1.subtract(n2));
}
