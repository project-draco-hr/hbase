{
  long vals[]={239L,240L,2286L,2287L,67822L,67823L,16777214L,16777215L,4294967294L,4294967295L,1099511627774L,1099511627775L,281474976710654L,281474976710655L,72057594037927934L,72057594037927935L,Long.MAX_VALUE - 1,Long.MAX_VALUE,Long.MIN_VALUE + 1,Long.MIN_VALUE,-2L,-1L};
  int lens[]={1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,9,9,9,9};
  assertEquals("Broken test!",vals.length,lens.length);
  for (  boolean comp : new boolean[]{true,false}) {
    for (int i=0; i < vals.length; i++) {
      byte[] a=new byte[lens[i] + 2];
      PositionedByteRange buf=new SimplePositionedByteRange(a,1,lens[i]);
      assertEquals("Surprising return value.",lens[i],OrderedBytes.putVaruint64(buf,vals[i],comp));
      assertEquals("Surprising serialized length.",lens[i],buf.getPosition());
      assertEquals("Buffer underflow.",0,a[0]);
      assertEquals("Buffer overflow.",0,a[a.length - 1]);
      buf.setPosition(0);
      assertEquals("Surprising return value.",lens[i],OrderedBytes.skipVaruint64(buf,comp));
      assertEquals("Did not skip enough bytes.",lens[i],buf.getPosition());
      buf.setPosition(0);
      assertEquals("Deserialization failed.",vals[i],OrderedBytes.getVaruint64(buf,comp));
      assertEquals("Did not consume enough bytes.",lens[i],buf.getPosition());
    }
  }
}
