{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.row=iprot.readBinary();
  struct.setRowIsSet(true);
{
    org.apache.thrift.protocol.TList _list45=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.columnValues=new ArrayList<TColumnValue>(_list45.size);
    TColumnValue _elem46;
    for (int _i47=0; _i47 < _list45.size; ++_i47) {
      _elem46=new TColumnValue();
      _elem46.read(iprot);
      struct.columnValues.add(_elem46);
    }
  }
  struct.setColumnValuesIsSet(true);
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TMap _map48=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map48.size);
      ByteBuffer _key49;
      ByteBuffer _val50;
      for (int _i51=0; _i51 < _map48.size; ++_i51) {
        _key49=iprot.readBinary();
        _val50=iprot.readBinary();
        struct.attributes.put(_key49,_val50);
      }
    }
    struct.setAttributesIsSet(true);
  }
  if (incoming.get(2)) {
    struct.durability=org.apache.hadoop.hbase.thrift2.generated.TDurability.findByValue(iprot.readI32());
    struct.setDurabilityIsSet(true);
  }
  if (incoming.get(3)) {
    struct.cellVisibility=new TCellVisibility();
    struct.cellVisibility.read(iprot);
    struct.setCellVisibilityIsSet(true);
  }
}
