{
  int rowUpperLimit=rowLimit > 0 ? rowLimit : Integer.MAX_VALUE;
  byte[] startRow;
  try (Table metaTable=new HTable(TableName.META_TABLE_NAME,connection,null)){
    if (row != null) {
      Result startRowResult=getClosestRowOrBefore(metaTable,tableName,row);
      if (startRowResult == null) {
        throw new TableNotFoundException("Cannot find row in " + metaTable.getName() + " for table: "+ tableName+ ", row="+ Bytes.toStringBinary(row));
      }
      HRegionInfo regionInfo=getHRegionInfo(startRowResult);
      if (regionInfo == null) {
        throw new IOException("HRegionInfo was null or empty in Meta for " + tableName + ", row="+ Bytes.toStringBinary(row));
      }
      byte[] rowBefore=regionInfo.getStartKey();
      startRow=HRegionInfo.createRegionName(tableName,rowBefore,HConstants.ZEROES,false);
    }
 else     if (tableName == null || tableName.getName().length == 0) {
      startRow=HConstants.EMPTY_START_ROW;
    }
 else {
      startRow=HRegionInfo.createRegionName(tableName,HConstants.EMPTY_START_ROW,HConstants.ZEROES,false);
    }
    final Scan scan=new Scan(startRow).addFamily(HConstants.CATALOG_FAMILY);
    int scannerCaching=connection.getConfiguration().getInt(HConstants.HBASE_META_SCANNER_CACHING,HConstants.DEFAULT_HBASE_META_SCANNER_CACHING);
    if (rowUpperLimit <= scannerCaching) {
      scan.setSmall(true);
    }
    int rows=Math.min(rowLimit,scannerCaching);
    scan.setCaching(rows);
    if (LOG.isTraceEnabled()) {
      LOG.trace("Scanning " + metaTableName.getNameAsString() + " starting at row="+ Bytes.toStringBinary(startRow)+ " for max="+ rowUpperLimit+ " with caching="+ rows);
    }
    try (ResultScanner resultScanner=metaTable.getScanner(scan)){
      Result result;
      int processedRows=0;
      while ((result=resultScanner.next()) != null) {
        if (visitor != null) {
          if (!visitor.processRow(result))           break;
        }
        processedRows++;
        if (processedRows >= rowUpperLimit)         break;
      }
    }
   }
  finally {
    if (visitor != null) {
      try {
        visitor.close();
      }
 catch (      Throwable t) {
        ExceptionUtil.rethrowIfInterrupt(t);
        LOG.debug("Got exception in closing the meta scanner visitor",t);
      }
    }
  }
}
