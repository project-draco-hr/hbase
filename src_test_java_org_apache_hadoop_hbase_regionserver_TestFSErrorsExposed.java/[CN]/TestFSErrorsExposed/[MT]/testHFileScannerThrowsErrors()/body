{
  Path hfilePath=new Path(new Path(HBaseTestingUtility.getTestDir("internalScannerExposesErrors"),"regionname"),"familyname");
  FaultyFileSystem fs=new FaultyFileSystem(util.getTestFileSystem());
  StoreFile.Writer writer=StoreFile.createWriter(fs,hfilePath,2 * 1024);
  TestStoreFile.writeStoreFile(writer,Bytes.toBytes("cf"),Bytes.toBytes("qual"));
  StoreFile sf=new StoreFile(fs,writer.getPath(),false,util.getConfiguration(),StoreFile.BloomType.NONE,false);
  HFile.Reader reader=sf.createReader();
  HFileScanner scanner=reader.getScanner(false,true);
  FaultyInputStream inStream=fs.inStreams.get(0).get();
  assertNotNull(inStream);
  scanner.seekTo();
  assertTrue(scanner.next());
  inStream.startFaults();
  try {
    int scanned=0;
    while (scanner.next()) {
      scanned++;
    }
    fail("Scanner didn't throw after faults injected");
  }
 catch (  IOException ioe) {
    LOG.info("Got expected exception",ioe);
    assertTrue(ioe.getMessage().contains("Fault"));
  }
  reader.close();
}
