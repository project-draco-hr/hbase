{
  final Admin admin=TEST_UTIL.getHBaseAdmin();
  final String userName=User.getCurrent().getShortName();
  final String NAMESPACE="default";
  admin.setQuota(QuotaSettingsFactory.throttleTable(TABLE_NAMES[0],ThrottleType.REQUEST_NUMBER,6,TimeUnit.MINUTES));
  triggerTableCacheRefresh(false,TABLE_NAMES[0]);
  admin.setQuota(QuotaSettingsFactory.throttleNamespace(NAMESPACE,ThrottleType.REQUEST_NUMBER,13,TimeUnit.MINUTES));
  triggerNamespaceCacheRefresh(false,TABLE_NAMES[1]);
  assertEquals(6,doPuts(100,tables[0]));
  assertEquals(7,doGets(100,tables[1]));
  waitMinuteQuota();
  admin.setQuota(QuotaSettingsFactory.bypassGlobals(userName,true));
  admin.setQuota(QuotaSettingsFactory.throttleUser(userName,TABLE_NAMES[2],ThrottleType.REQUEST_NUMBER,6,TimeUnit.MINUTES));
  triggerUserCacheRefresh(false,TABLE_NAMES[2]);
  assertEquals(30,doGets(30,tables[0]));
  assertEquals(30,doGets(30,tables[1]));
  waitMinuteQuota();
  admin.setQuota(QuotaSettingsFactory.bypassGlobals(userName,false));
  admin.setQuota(QuotaSettingsFactory.unthrottleUser(userName,TABLE_NAMES[2]));
  triggerUserCacheRefresh(true,TABLE_NAMES[2]);
  assertEquals(6,doPuts(100,tables[0]));
  assertEquals(7,doGets(100,tables[1]));
  admin.setQuota(QuotaSettingsFactory.unthrottleTable(TABLE_NAMES[0]));
  admin.setQuota(QuotaSettingsFactory.unthrottleNamespace(NAMESPACE));
  waitMinuteQuota();
  triggerTableCacheRefresh(true,TABLE_NAMES[0]);
  triggerNamespaceCacheRefresh(true,TABLE_NAMES[1]);
  assertEquals(30,doGets(30,tables[0]));
  assertEquals(30,doGets(30,tables[1]));
}
