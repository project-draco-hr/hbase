{
  final Admin admin=TEST_UTIL.getHBaseAdmin();
  final String userName=User.getCurrent().getShortName();
  admin.setQuota(QuotaSettingsFactory.throttleUser(userName,TABLE_NAMES[0],ThrottleType.REQUEST_NUMBER,6,TimeUnit.MINUTES));
  triggerUserCacheRefresh(false,TABLE_NAMES[0]);
  admin.setQuota(QuotaSettingsFactory.throttleUser(userName,ThrottleType.REQUEST_NUMBER,12,TimeUnit.MINUTES));
  triggerUserCacheRefresh(false,TABLE_NAMES[1],TABLE_NAMES[2]);
  admin.setQuota(QuotaSettingsFactory.throttleTable(TABLE_NAMES[1],ThrottleType.REQUEST_NUMBER,8,TimeUnit.MINUTES));
  triggerTableCacheRefresh(false,TABLE_NAMES[1]);
  admin.setQuota(QuotaSettingsFactory.throttleTable(TABLE_NAMES[0],ThrottleType.REQUEST_NUMBER,3,TimeUnit.MINUTES));
  triggerTableCacheRefresh(false,TABLE_NAMES[0]);
  assertEquals(12,doGets(100,tables[2]));
  waitMinuteQuota();
  assertEquals(8,doGets(100,tables[1]));
  waitMinuteQuota();
  assertEquals(3,doPuts(100,tables[0]));
  admin.setQuota(QuotaSettingsFactory.unthrottleUser(userName,TABLE_NAMES[0]));
  admin.setQuota(QuotaSettingsFactory.unthrottleUser(userName));
  triggerUserCacheRefresh(true,TABLE_NAMES[0],TABLE_NAMES[1]);
  admin.setQuota(QuotaSettingsFactory.unthrottleTable(TABLE_NAMES[1]));
  triggerTableCacheRefresh(true,TABLE_NAMES[1]);
  waitMinuteQuota();
  assertEquals(40,doGets(40,tables[1]));
  admin.setQuota(QuotaSettingsFactory.unthrottleTable(TABLE_NAMES[0]));
  triggerTableCacheRefresh(true,TABLE_NAMES[0]);
  waitMinuteQuota();
  assertEquals(40,doGets(40,tables[0]));
}
