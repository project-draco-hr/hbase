{
  final Path corruptDir=new Path(FSUtils.getRootDir(conf),HConstants.CORRUPT_DIR_NAME);
  if (conf.get("hbase.regionserver.hlog.splitlog.corrupt.dir") != null) {
    LOG.warn("hbase.regionserver.hlog.splitlog.corrupt.dir is deprecated. Default to " + corruptDir);
  }
  if (!fs.mkdirs(corruptDir)) {
    LOG.info("Unable to mkdir " + corruptDir);
  }
  fs.mkdirs(oldLogDir);
  for (  Path corrupted : corruptedLogs) {
    Path p=new Path(corruptDir,corrupted.getName());
    if (fs.exists(corrupted)) {
      if (!fs.rename(corrupted,p)) {
        LOG.warn("Unable to move corrupted log " + corrupted + " to "+ p);
      }
 else {
        LOG.warn("Moved corrupted log " + corrupted + " to "+ p);
      }
    }
  }
  for (  Path p : processedLogs) {
    Path newPath=AbstractFSWAL.getWALArchivePath(oldLogDir,p);
    if (fs.exists(p)) {
      if (!FSUtils.renameAndSetModifyTime(fs,p,newPath)) {
        LOG.warn("Unable to move  " + p + " to "+ newPath);
      }
 else {
        LOG.info("Archived processed log " + p + " to "+ newPath);
      }
    }
  }
}
