{
  List<IndexSpecification> indexesToUpdate=new LinkedList<IndexSpecification>();
  for (  IndexSpecification indexSpec : getIndexes()) {
    if (indexSpec.containsColumn(column)) {
      indexesToUpdate.add(indexSpec);
    }
  }
  Set<byte[]> neededColumns=getColumnsForIndexes(indexesToUpdate);
  Map<byte[],Cell> oldColumnCells=super.getFull(row,neededColumns,HConstants.LATEST_TIMESTAMP,1,null);
  SortedMap<byte[],byte[]> oldColumnValues=convertToValueMap(oldColumnCells);
  for (  IndexSpecification indexSpec : indexesToUpdate) {
    removeOldIndexEntry(indexSpec,row,oldColumnValues);
  }
  if (ts != HConstants.LATEST_TIMESTAMP) {
    Map<byte[],Cell> currentColumnCells=super.getFull(row,neededColumns,ts,1,null);
    SortedMap<byte[],byte[]> currentColumnValues=convertToValueMap(currentColumnCells);
    for (    IndexSpecification indexSpec : getIndexes()) {
      if (doesApplyToIndex(indexSpec,currentColumnValues)) {
        updateIndex(indexSpec,row,currentColumnValues);
      }
    }
  }
  super.deleteAll(row,column,ts,lockid);
}
