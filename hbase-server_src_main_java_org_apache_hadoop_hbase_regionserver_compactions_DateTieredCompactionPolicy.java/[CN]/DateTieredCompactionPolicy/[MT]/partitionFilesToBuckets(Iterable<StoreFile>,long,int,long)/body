{
  List<ArrayList<StoreFile>> buckets=Lists.newArrayList();
  Window window=getInitialWindow(now,baseWindowSizeMillis);
  List<Pair<StoreFile,Long>> storefileMaxTimestampPairs=Lists.newArrayListWithCapacity(Iterables.size(storeFiles));
  long maxTimestampSeen=Long.MIN_VALUE;
  for (  StoreFile storeFile : storeFiles) {
    maxTimestampSeen=Math.max(maxTimestampSeen,storeFile.getMaximumTimestamp());
    storefileMaxTimestampPairs.add(new Pair<StoreFile,Long>(storeFile,maxTimestampSeen));
  }
  Collections.reverse(storefileMaxTimestampPairs);
  PeekingIterator<Pair<StoreFile,Long>> it=Iterators.peekingIterator(storefileMaxTimestampPairs.iterator());
  while (it.hasNext()) {
    int compResult=window.compareToTimestamp(it.peek().getSecond());
    if (compResult > 0) {
      window=window.nextWindow(windowsPerTier);
    }
 else {
      ArrayList<StoreFile> bucket=Lists.newArrayList();
      while (it.hasNext() && window.compareToTimestamp(it.peek().getSecond()) <= 0) {
        bucket.add(it.next().getFirst());
      }
      if (!bucket.isEmpty()) {
        buckets.add(bucket);
      }
    }
  }
  return buckets;
}
