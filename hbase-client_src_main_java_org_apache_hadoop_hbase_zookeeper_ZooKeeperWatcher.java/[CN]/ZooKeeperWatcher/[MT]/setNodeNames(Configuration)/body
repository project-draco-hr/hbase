{
  baseZNode=conf.get(HConstants.ZOOKEEPER_ZNODE_PARENT,HConstants.DEFAULT_ZOOKEEPER_ZNODE_PARENT);
  metaReplicaZnodes.put(0,ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.metaserver","meta-region-server")));
  int numMetaReplicas=conf.getInt(HConstants.META_REPLICAS_NUM,HConstants.DEFAULT_META_REPLICA_NUM);
  for (int i=1; i < numMetaReplicas; i++) {
    String str=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.metaserver","meta-region-server") + "-" + i);
    metaReplicaZnodes.put(i,str);
  }
  rsZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.rs","rs"));
  drainingZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.draining.rs","draining"));
  masterAddressZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.master","master"));
  backupMasterAddressesZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.backup.masters","backup-masters"));
  clusterStateZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.state","running"));
  tableZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.tableEnableDisable","table"));
  clusterIdZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.clusterId","hbaseid"));
  splitLogZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.splitlog",HConstants.SPLIT_LOGDIR_NAME));
  balancerZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.balancer","balancer"));
  regionNormalizerZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.regionNormalizer","normalizer"));
  switchZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.switch","switch"));
  switchLockZNode=ZKUtil.joinZNode(switchZNode,"locks");
  tableLockZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.tableLock","table-lock"));
  recoveringRegionsZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.recovering.regions","recovering-regions"));
  namespaceZNode=ZKUtil.joinZNode(baseZNode,conf.get("zookeeper.znode.namespace","namespace"));
}
