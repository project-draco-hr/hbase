{
  byte[] TEST_FAMILY2=Bytes.toBytes("cf2");
  Table table=ConnectionFactory.createConnection(TEST_UTIL.getConfiguration()).getTable(tableName);
  admin.disableTable(tableName);
  HColumnDescriptor hcd=new HColumnDescriptor(TEST_FAMILY2);
  hcd.setMobEnabled(true);
  hcd.setMobThreshold(3L);
  admin.addColumn(tableName,hcd);
  admin.enableTable(tableName);
  assertEquals(2,table.getTableDescriptor().getFamilies().size());
  HTableDescriptor htd=admin.getTableDescriptor(tableName);
  assertEquals(2,htd.getFamilies().size());
  SnapshotTestingUtils.loadData(TEST_UTIL,tableName,500,TEST_FAMILY2);
  long snapshot2Rows=snapshot1Rows + 500;
  assertEquals(snapshot2Rows,MobSnapshotTestingUtils.countMobRows(table));
  assertEquals(500,MobSnapshotTestingUtils.countMobRows(table,TEST_FAMILY2));
  Set<String> fsFamilies=getFamiliesFromFS(tableName);
  assertEquals(2,fsFamilies.size());
  admin.disableTable(tableName);
  admin.snapshot(snapshotName2,tableName);
  admin.restoreSnapshot(snapshotName0);
  admin.enableTable(tableName);
  assertEquals(1,table.getTableDescriptor().getFamilies().size());
  try {
    MobSnapshotTestingUtils.countMobRows(table,TEST_FAMILY2);
    fail("family '" + Bytes.toString(TEST_FAMILY2) + "' should not exists");
  }
 catch (  NoSuchColumnFamilyException e) {
  }
  assertEquals(snapshot0Rows,MobSnapshotTestingUtils.countMobRows(table));
  htd=admin.getTableDescriptor(tableName);
  assertEquals(1,htd.getFamilies().size());
  fsFamilies=getFamiliesFromFS(tableName);
  assertEquals(1,fsFamilies.size());
  admin.disableTable(tableName);
  admin.restoreSnapshot(snapshotName2);
  admin.enableTable(tableName);
  htd=admin.getTableDescriptor(tableName);
  assertEquals(2,htd.getFamilies().size());
  assertEquals(2,table.getTableDescriptor().getFamilies().size());
  assertEquals(500,MobSnapshotTestingUtils.countMobRows(table,TEST_FAMILY2));
  assertEquals(snapshot2Rows,MobSnapshotTestingUtils.countMobRows(table));
  fsFamilies=getFamiliesFromFS(tableName);
  assertEquals(2,fsFamilies.size());
  table.close();
}
