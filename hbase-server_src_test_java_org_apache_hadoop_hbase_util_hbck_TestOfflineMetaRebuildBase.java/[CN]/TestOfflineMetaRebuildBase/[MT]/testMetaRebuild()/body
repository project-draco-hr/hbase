{
  wipeOutMeta();
  assertEquals(1,scanMeta());
  assertErrors(doFsck(conf,false),new ERROR_CODE[]{ERROR_CODE.NOT_IN_META_OR_DEPLOYED,ERROR_CODE.NOT_IN_META_OR_DEPLOYED,ERROR_CODE.NOT_IN_META_OR_DEPLOYED,ERROR_CODE.NOT_IN_META_OR_DEPLOYED});
  TEST_UTIL.shutdownMiniHBaseCluster();
  TEST_UTIL.shutdownMiniZKCluster();
  HBaseFsck fsck=new HBaseFsck(conf);
  assertTrue(fsck.rebuildMeta(false));
  assertTrue("HBCK meta recovery WAL directory exist.",validateHBCKMetaRecoveryWALDir());
  TEST_UTIL.startMiniZKCluster();
  TEST_UTIL.restartHBaseCluster(3);
  try (Connection connection=ConnectionFactory.createConnection(TEST_UTIL.getConfiguration())){
    Admin admin=connection.getAdmin();
    if (admin.isTableDisabled(table))     admin.enableTable(table);
    LOG.info("Waiting for no more RIT");
    TEST_UTIL.waitUntilNoRegionsInTransition(60000);
    LOG.info("No more RIT in ZK, now doing final test verification");
    assertEquals(5,scanMeta());
    TableName[] tableNames=TEST_UTIL.getHBaseAdmin().listTableNames();
    for (    TableName tableName : tableNames) {
      HTableDescriptor tableDescriptor=TEST_UTIL.getHBaseAdmin().getTableDescriptor(tableName);
      assertNotNull(tableDescriptor);
      assertTrue(TEST_UTIL.getHBaseAdmin().isTableEnabled(tableName));
    }
    HTableDescriptor[] htbls=admin.listTables();
    LOG.info("Tables present after restart: " + Arrays.toString(htbls));
    assertEquals(1,htbls.length);
  }
   assertErrors(doFsck(conf,false),new ERROR_CODE[]{});
  LOG.info("Table " + table + " has "+ tableRowCount(conf,table)+ " entries.");
  assertEquals(16,tableRowCount(conf,table));
}
