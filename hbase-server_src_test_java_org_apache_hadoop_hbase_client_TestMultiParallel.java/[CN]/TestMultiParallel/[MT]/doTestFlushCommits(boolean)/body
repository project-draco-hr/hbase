{
  LOG.info("get new table");
  HTable table=new HTable(UTIL.getConfiguration(),TEST_TABLE);
  table.setAutoFlush(false);
  table.setWriteBufferSize(10 * 1024 * 1024);
  LOG.info("constructPutRequests");
  List<Row> puts=constructPutRequests();
  for (  Row put : puts) {
    table.put((Put)put);
  }
  LOG.info("puts");
  table.flushCommits();
  if (doAbort) {
    LOG.info("Aborted=" + UTIL.getMiniHBaseCluster().abortRegionServer(0));
    while (UTIL.getMiniHBaseCluster().getRegionServer(0).getNumberOfOnlineRegions() != 0) {
      Thread.sleep(10);
    }
    puts=constructPutRequests();
    for (    Row put : puts) {
      table.put((Put)put);
    }
    table.flushCommits();
  }
  LOG.info("validating loaded data");
  validateLoadedData(table);
  List<JVMClusterUtil.RegionServerThread> liveRSs=UTIL.getMiniHBaseCluster().getLiveRegionServerThreads();
  int count=0;
  for (  JVMClusterUtil.RegionServerThread t : liveRSs) {
    count++;
    LOG.info("Count=" + count + ", Alive="+ t.getRegionServer());
  }
  LOG.info("Count=" + count);
  Assert.assertEquals("Server count=" + count + ", abort="+ doAbort,(doAbort ? 1 : 2),count);
  for (  JVMClusterUtil.RegionServerThread t : liveRSs) {
    int regions=ProtobufUtil.getOnlineRegions(t.getRegionServer()).size();
    Assert.assertTrue("Count of regions=" + regions,regions > 10);
  }
  table.close();
  LOG.info("done");
}
