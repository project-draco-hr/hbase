{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  getRowsWithColumnsTs_args typedOther=(getRowsWithColumnsTs_args)other;
  lastComparison=Boolean.valueOf(isSetTableName()).compareTo(isSetTableName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(tableName,typedOther.tableName);
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=Boolean.valueOf(isSetRows()).compareTo(isSetRows());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(rows,typedOther.rows);
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=Boolean.valueOf(isSetColumns()).compareTo(isSetColumns());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(columns,typedOther.columns);
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=Boolean.valueOf(isSetTimestamp()).compareTo(isSetTimestamp());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(timestamp,typedOther.timestamp);
  if (lastComparison != 0) {
    return lastComparison;
  }
  return 0;
}
