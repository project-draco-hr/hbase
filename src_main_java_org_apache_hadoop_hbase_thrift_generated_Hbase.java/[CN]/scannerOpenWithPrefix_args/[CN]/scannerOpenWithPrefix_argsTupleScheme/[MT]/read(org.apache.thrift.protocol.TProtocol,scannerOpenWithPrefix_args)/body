{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.startAndPrefix=iprot.readBinary();
    struct.setStartAndPrefixIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list491=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.columns=new ArrayList<ByteBuffer>(_list491.size);
      for (int _i492=0; _i492 < _list491.size; ++_i492) {
        ByteBuffer _elem493;
        _elem493=iprot.readBinary();
        struct.columns.add(_elem493);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map494=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map494.size);
      for (int _i495=0; _i495 < _map494.size; ++_i495) {
        ByteBuffer _key496;
        ByteBuffer _val497;
        _key496=iprot.readBinary();
        _val497=iprot.readBinary();
        struct.attributes.put(_key496,_val497);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
