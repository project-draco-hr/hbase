{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(6);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.row=iprot.readBinary();
    struct.setRowIsSet(true);
  }
  if (incoming.get(2)) {
    struct.column=iprot.readBinary();
    struct.setColumnIsSet(true);
  }
  if (incoming.get(3)) {
    struct.timestamp=iprot.readI64();
    struct.setTimestampIsSet(true);
  }
  if (incoming.get(4)) {
    struct.numVersions=iprot.readI32();
    struct.setNumVersionsIsSet(true);
  }
  if (incoming.get(5)) {
{
      org.apache.thrift.protocol.TMap _map102=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map102.size);
      for (int _i103=0; _i103 < _map102.size; ++_i103) {
        ByteBuffer _key104;
        ByteBuffer _val105;
        _key104=iprot.readBinary();
        _val105=iprot.readBinary();
        struct.attributes.put(_key104,_val105);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
