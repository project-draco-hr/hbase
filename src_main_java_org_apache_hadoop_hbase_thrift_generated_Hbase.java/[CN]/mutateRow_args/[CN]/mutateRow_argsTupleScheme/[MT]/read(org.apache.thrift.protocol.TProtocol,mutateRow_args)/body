{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(4);
  if (incoming.get(0)) {
    struct.tableName=iprot.readBinary();
    struct.setTableNameIsSet(true);
  }
  if (incoming.get(1)) {
    struct.row=iprot.readBinary();
    struct.setRowIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list333=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.mutations=new ArrayList<Mutation>(_list333.size);
      for (int _i334=0; _i334 < _list333.size; ++_i334) {
        Mutation _elem335;
        _elem335=new Mutation();
        _elem335.read(iprot);
        struct.mutations.add(_elem335);
      }
    }
    struct.setMutationsIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map336=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map336.size);
      for (int _i337=0; _i337 < _map336.size; ++_i337) {
        ByteBuffer _key338;
        ByteBuffer _val339;
        _key338=iprot.readBinary();
        _val339=iprot.readBinary();
        struct.attributes.put(_key338,_val339);
      }
    }
    struct.setAttributesIsSet(true);
  }
}
