{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
    _Fields fieldId=_Fields.findByThriftId(field.id);
    if (fieldId == null) {
      TProtocolUtil.skip(iprot,field.type);
    }
 else {
switch (fieldId) {
case SUCCESS:
        if (field.type == TType.LIST) {
{
            TList _list142=iprot.readListBegin();
            this.success=new ArrayList<TRowResult>(_list142.size);
            for (int _i143=0; _i143 < _list142.size; ++_i143) {
              TRowResult _elem144;
              _elem144=new TRowResult();
              _elem144.read(iprot);
              this.success.add(_elem144);
            }
            iprot.readListEnd();
          }
        }
 else {
          TProtocolUtil.skip(iprot,field.type);
        }
      break;
case IO:
    if (field.type == TType.STRUCT) {
      this.io=new IOError();
      this.io.read(iprot);
    }
 else {
      TProtocolUtil.skip(iprot,field.type);
    }
  break;
case IA:
if (field.type == TType.STRUCT) {
  this.ia=new IllegalArgument();
  this.ia.read(iprot);
}
 else {
  TProtocolUtil.skip(iprot,field.type);
}
break;
}
iprot.readFieldEnd();
}
}
iprot.readStructEnd();
validate();
}
