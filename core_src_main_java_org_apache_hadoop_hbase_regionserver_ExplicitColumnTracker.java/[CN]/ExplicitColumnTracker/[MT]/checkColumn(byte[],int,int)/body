{
  if (this.columns.size() == 0) {
    return MatchCode.DONE;
  }
  if (this.column == null) {
    return MatchCode.NEXT;
  }
  int ret=Bytes.compareTo(column.getBuffer(),column.getOffset(),column.getLength(),bytes,offset,length);
  if (ret == 0) {
    if (this.column.decrement() == 0) {
      this.columns.remove(this.index);
      if (this.columns.size() == this.index) {
        this.column=null;
      }
 else {
        this.column=this.columns.get(this.index);
      }
    }
    return MatchCode.INCLUDE;
  }
  if (ret <= -1) {
    if (++this.index == this.columns.size()) {
      return MatchCode.NEXT;
    }
    this.column=this.columns.get(this.index);
    return checkColumn(bytes,offset,length);
  }
  return MatchCode.SKIP;
}
