{
  this();
  int mutable_bitField0_=0;
  org.apache.hadoop.hbase.shaded.com.google.protobuf.UnknownFieldSet.Builder unknownFields=org.apache.hadoop.hbase.shaded.com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    int rawValue=input.readEnum();
    org.apache.hadoop.hbase.shaded.protobuf.generated.ZooKeeperProtos.SplitLogTask.State value=org.apache.hadoop.hbase.shaded.protobuf.generated.ZooKeeperProtos.SplitLogTask.State.valueOf(rawValue);
    if (value == null) {
      unknownFields.mergeVarintField(1,rawValue);
    }
 else {
      bitField0_|=0x00000001;
      state_=rawValue;
    }
    break;
  }
case 18:
{
  org.apache.hadoop.hbase.shaded.protobuf.generated.HBaseProtos.ServerName.Builder subBuilder=null;
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    subBuilder=serverName_.toBuilder();
  }
  serverName_=input.readMessage(org.apache.hadoop.hbase.shaded.protobuf.generated.HBaseProtos.ServerName.PARSER,extensionRegistry);
  if (subBuilder != null) {
    subBuilder.mergeFrom(serverName_);
    serverName_=subBuilder.buildPartial();
  }
  bitField0_|=0x00000002;
  break;
}
case 24:
{
int rawValue=input.readEnum();
org.apache.hadoop.hbase.shaded.protobuf.generated.ZooKeeperProtos.SplitLogTask.RecoveryMode value=org.apache.hadoop.hbase.shaded.protobuf.generated.ZooKeeperProtos.SplitLogTask.RecoveryMode.valueOf(rawValue);
if (value == null) {
  unknownFields.mergeVarintField(3,rawValue);
}
 else {
  bitField0_|=0x00000004;
  mode_=rawValue;
}
break;
}
}
}
}
 catch (org.apache.hadoop.hbase.shaded.com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new org.apache.hadoop.hbase.shaded.com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
}
 finally {
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
