{
  if (memoizedHashCode != 0) {
    return memoizedHashCode;
  }
  int hash=41;
  hash=(19 * hash) + getDescriptorForType().hashCode();
  if (hasTableName()) {
    hash=(37 * hash) + TABLE_NAME_FIELD_NUMBER;
    hash=(53 * hash) + getTableName().hashCode();
  }
  if (hasLockOwner()) {
    hash=(37 * hash) + LOCK_OWNER_FIELD_NUMBER;
    hash=(53 * hash) + getLockOwner().hashCode();
  }
  if (hasThreadId()) {
    hash=(37 * hash) + THREAD_ID_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getThreadId());
  }
  if (hasIsShared()) {
    hash=(37 * hash) + IS_SHARED_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashBoolean(getIsShared());
  }
  if (hasPurpose()) {
    hash=(37 * hash) + PURPOSE_FIELD_NUMBER;
    hash=(53 * hash) + getPurpose().hashCode();
  }
  if (hasCreateTime()) {
    hash=(37 * hash) + CREATE_TIME_FIELD_NUMBER;
    hash=(53 * hash) + org.apache.hadoop.hbase.shaded.com.google.protobuf.Internal.hashLong(getCreateTime());
  }
  hash=(29 * hash) + unknownFields.hashCode();
  memoizedHashCode=hash;
  return hash;
}
