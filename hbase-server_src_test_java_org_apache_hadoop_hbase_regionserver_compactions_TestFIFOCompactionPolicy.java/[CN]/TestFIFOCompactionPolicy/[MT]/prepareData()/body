{
  HBaseAdmin admin=TEST_UTIL.getHBaseAdmin();
  if (admin.tableExists(tableName)) {
    admin.disableTable(tableName);
    admin.deleteTable(tableName);
  }
  HTableDescriptor desc=new HTableDescriptor(tableName);
  desc.setConfiguration(DefaultStoreEngine.DEFAULT_COMPACTION_POLICY_CLASS_KEY,FIFOCompactionPolicy.class.getName());
  desc.setConfiguration(HConstants.HBASE_REGION_SPLIT_POLICY_KEY,DisabledRegionSplitPolicy.class.getName());
  HColumnDescriptor colDesc=new HColumnDescriptor(family);
  colDesc.setTimeToLive(1);
  desc.addFamily(colDesc);
  admin.createTable(desc);
  Table table=TEST_UTIL.getConnection().getTable(tableName);
  Random rand=new Random();
  TimeOffsetEnvironmentEdge edge=(TimeOffsetEnvironmentEdge)EnvironmentEdgeManager.getDelegate();
  for (int i=0; i < 10; i++) {
    for (int j=0; j < 10; j++) {
      byte[] value=new byte[128 * 1024];
      rand.nextBytes(value);
      table.put(new Put(Bytes.toBytes(i * 10 + j)).addColumn(family,qualifier,value));
    }
    admin.flush(tableName);
    edge.increment(1001);
  }
  return getStoreWithName(tableName);
}
