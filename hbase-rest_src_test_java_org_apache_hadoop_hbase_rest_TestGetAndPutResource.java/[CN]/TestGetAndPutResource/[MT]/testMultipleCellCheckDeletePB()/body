{
  Response response=getValuePB(TABLE,ROW_1,COLUMN_1);
  assertEquals(response.getCode(),404);
  response=putValuePB(TABLE,ROW_1,COLUMN_1,VALUE_1);
  assertEquals(response.getCode(),200);
  checkValuePB(TABLE,ROW_1,COLUMN_1,VALUE_1);
  response=putValuePB(TABLE,ROW_1,COLUMN_2,VALUE_2);
  assertEquals(response.getCode(),200);
  checkValuePB(TABLE,ROW_1,COLUMN_2,VALUE_2);
  response=putValuePB(TABLE,ROW_1,COLUMN_3,VALUE_3);
  assertEquals(response.getCode(),200);
  checkValuePB(TABLE,ROW_1,COLUMN_3,VALUE_3);
  HashMap<String,String> cellsToDelete=new HashMap<String,String>();
  cellsToDelete.put(COLUMN_2,VALUE_2);
  cellsToDelete.put(COLUMN_3,VALUE_3);
  response=checkAndDeletePB(TABLE,ROW_1,COLUMN_1,VALUE_1,cellsToDelete);
  assertEquals(response.getCode(),200);
  checkValuePB(TABLE,ROW_1,COLUMN_1,VALUE_1);
  response=getValuePB(TABLE,ROW_1,COLUMN_2);
  assertEquals(response.getCode(),404);
  response=getValuePB(TABLE,ROW_1,COLUMN_3);
  assertEquals(response.getCode(),404);
  response=putValuePB(TABLE,ROW_1,COLUMN_2,VALUE_2);
  assertEquals(response.getCode(),200);
  checkValuePB(TABLE,ROW_1,COLUMN_2,VALUE_2);
  response=putValuePB(TABLE,ROW_1,COLUMN_3,VALUE_3);
  assertEquals(response.getCode(),200);
  checkValuePB(TABLE,ROW_1,COLUMN_3,VALUE_3);
  response=checkAndDeletePB(TABLE,ROW_1,COLUMN_1,VALUE_3,cellsToDelete);
  assertEquals(response.getCode(),304);
  checkValuePB(TABLE,ROW_1,COLUMN_1,VALUE_1);
  checkValuePB(TABLE,ROW_1,COLUMN_2,VALUE_2);
  checkValuePB(TABLE,ROW_1,COLUMN_3,VALUE_3);
  response=deleteRow(TABLE,ROW_1);
  assertEquals(response.getCode(),200);
}
