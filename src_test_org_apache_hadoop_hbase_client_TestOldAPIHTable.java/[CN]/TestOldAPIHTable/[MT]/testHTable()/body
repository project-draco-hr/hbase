{
  byte[] value="value".getBytes(UTF8_ENCODING);
  try {
    new HTable(conf,nosuchTable);
  }
 catch (  TableNotFoundException e) {
  }
catch (  IOException e) {
    e.printStackTrace();
    fail();
  }
  HTableDescriptor tableAdesc=new HTableDescriptor(tableAname);
  tableAdesc.addFamily(column);
  HTableDescriptor tableBdesc=new HTableDescriptor(tableBname);
  tableBdesc.addFamily(column);
  HBaseAdmin admin=new HBaseAdmin(conf);
  admin.createTable(tableAdesc);
  admin.createTable(tableBdesc);
  HTable a=new HTable(conf,tableAname);
  HTableDescriptor meta=a.getConnection().getHTableDescriptor(tableAdesc.getName());
  assertTrue(meta.equals(tableAdesc));
  BatchUpdate batchUpdate=new BatchUpdate(row);
  batchUpdate.put(COLUMN_FAMILY,value);
  a.commit(batchUpdate);
  HTable newA=new HTable(conf,tableAname);
  HTable b=new HTable(conf,tableBname);
  Scanner s=newA.getScanner(COLUMN_FAMILY_ARRAY,EMPTY_START_ROW);
  try {
    for (    RowResult r : s) {
      batchUpdate=new BatchUpdate(r.getRow());
      for (      Map.Entry<byte[],Cell> e : r.entrySet()) {
        batchUpdate.put(e.getKey(),e.getValue().getValue());
      }
      b.commit(batchUpdate);
    }
  }
  finally {
    s.close();
  }
  try {
    HTable anotherA=new HTable(conf,tableAname);
    anotherA.get(row,COLUMN_FAMILY);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail();
  }
  try {
    HTableDescriptor desc=new HTableDescriptor(a.getTableDescriptor());
    admin.disableTable(tableAname);
    desc.setValue(attrName,attrValue);
    for (    HColumnDescriptor c : desc.getFamilies())     c.setValue(attrName,attrValue);
    admin.modifyTable(tableAname,HConstants.Modify.TABLE_SET_HTD,desc);
    admin.enableTable(tableAname);
    desc=a.getTableDescriptor();
    if (Bytes.compareTo(desc.getName(),tableAname) != 0)     fail("wrong table descriptor returned");
    value=desc.getValue(attrName);
    if (value == null)     fail("missing HTD attribute value");
    if (Bytes.compareTo(value,attrValue) != 0)     fail("HTD attribute value is incorrect");
    for (    HColumnDescriptor c : desc.getFamilies()) {
      value=c.getValue(attrName);
      if (value == null)       fail("missing HCD attribute value");
      if (Bytes.compareTo(value,attrValue) != 0)       fail("HCD attribute value is incorrect");
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail();
  }
}
