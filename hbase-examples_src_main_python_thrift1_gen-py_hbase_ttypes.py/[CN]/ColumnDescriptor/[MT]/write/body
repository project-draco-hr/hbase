def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('ColumnDescriptor')
    if (self.name is not None):
        oprot.writeFieldBegin('name', TType.STRING, 1)
        oprot.writeString(self.name)
        oprot.writeFieldEnd()
    if (self.maxVersions is not None):
        oprot.writeFieldBegin('maxVersions', TType.I32, 2)
        oprot.writeI32(self.maxVersions)
        oprot.writeFieldEnd()
    if (self.compression is not None):
        oprot.writeFieldBegin('compression', TType.STRING, 3)
        oprot.writeString(self.compression)
        oprot.writeFieldEnd()
    if (self.inMemory is not None):
        oprot.writeFieldBegin('inMemory', TType.BOOL, 4)
        oprot.writeBool(self.inMemory)
        oprot.writeFieldEnd()
    if (self.bloomFilterType is not None):
        oprot.writeFieldBegin('bloomFilterType', TType.STRING, 5)
        oprot.writeString(self.bloomFilterType)
        oprot.writeFieldEnd()
    if (self.bloomFilterVectorSize is not None):
        oprot.writeFieldBegin('bloomFilterVectorSize', TType.I32, 6)
        oprot.writeI32(self.bloomFilterVectorSize)
        oprot.writeFieldEnd()
    if (self.bloomFilterNbHashes is not None):
        oprot.writeFieldBegin('bloomFilterNbHashes', TType.I32, 7)
        oprot.writeI32(self.bloomFilterNbHashes)
        oprot.writeFieldEnd()
    if (self.blockCacheEnabled is not None):
        oprot.writeFieldBegin('blockCacheEnabled', TType.BOOL, 8)
        oprot.writeBool(self.blockCacheEnabled)
        oprot.writeFieldEnd()
    if (self.timeToLive is not None):
        oprot.writeFieldBegin('timeToLive', TType.I32, 9)
        oprot.writeI32(self.timeToLive)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
