{
  if (useCoordinatedStateManager(server)) {
    if (std == null) {
      std=((BaseCoordinatedStateManager)server.getCoordinatedStateManager()).getSplitTransactionCoordination().getDefaultDetails();
    }
    ((BaseCoordinatedStateManager)server.getCoordinatedStateManager()).getSplitTransactionCoordination().startSplitTransaction(parent,server.getServerName(),hri_a,hri_b);
  }
 else   if (services != null && !useZKForAssignment) {
    if (!services.reportRegionStateTransition(TransitionCode.READY_TO_SPLIT,parent.getRegionInfo(),hri_a,hri_b)) {
      throw new IOException("Failed to get ok from master to split " + parent.getRegionNameAsString());
    }
  }
  this.journal.add(JournalEntry.SET_SPLITTING);
  if (useCoordinatedStateManager(server)) {
    ((BaseCoordinatedStateManager)server.getCoordinatedStateManager()).getSplitTransactionCoordination().waitForSplitTransaction(services,parent,hri_a,hri_b,std);
  }
  this.parent.getRegionFileSystem().createSplitsDir();
  this.journal.add(JournalEntry.CREATE_SPLIT_DIR);
  Map<byte[],List<StoreFile>> hstoreFilesToSplit=null;
  Exception exceptionToThrow=null;
  try {
    hstoreFilesToSplit=this.parent.close(false);
  }
 catch (  Exception e) {
    exceptionToThrow=e;
  }
  if (exceptionToThrow == null && hstoreFilesToSplit == null) {
    exceptionToThrow=closedByOtherException;
  }
  if (exceptionToThrow != closedByOtherException) {
    this.journal.add(JournalEntry.CLOSED_PARENT_REGION);
  }
  if (exceptionToThrow != null) {
    if (exceptionToThrow instanceof IOException)     throw (IOException)exceptionToThrow;
    throw new IOException(exceptionToThrow);
  }
  if (!testing) {
    services.removeFromOnlineRegions(this.parent,null);
  }
  this.journal.add(JournalEntry.OFFLINED_PARENT);
  splitStoreFiles(hstoreFilesToSplit);
  this.journal.add(JournalEntry.STARTED_REGION_A_CREATION);
  HRegion a=this.parent.createDaughterRegionFromSplits(this.hri_a);
  this.journal.add(JournalEntry.STARTED_REGION_B_CREATION);
  HRegion b=this.parent.createDaughterRegionFromSplits(this.hri_b);
  return new PairOfSameType<HRegion>(a,b);
}
