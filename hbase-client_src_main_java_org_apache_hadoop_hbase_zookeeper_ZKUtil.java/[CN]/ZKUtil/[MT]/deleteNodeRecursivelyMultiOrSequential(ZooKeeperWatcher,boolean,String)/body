{
  if (pathRoots == null || pathRoots.length <= 0) {
    LOG.warn("Given path is not valid!");
    return;
  }
  List<ZKUtilOp> ops=new ArrayList<ZKUtil.ZKUtilOp>();
  for (  String eachRoot : pathRoots) {
    List<String> children=listChildrenBFSAndWatchThem(zkw,eachRoot);
    for (int i=children.size() - 1; i >= 0; --i) {
      ops.add(ZKUtilOp.deleteNodeFailSilent(children.get(i)));
    }
    try {
      if (zkw.getRecoverableZooKeeper().exists(eachRoot,zkw) != null) {
        ops.add(ZKUtilOp.deleteNodeFailSilent(eachRoot));
      }
    }
 catch (    InterruptedException e) {
      zkw.interruptedException(e);
    }
  }
  if (ops.size() > 0) {
    multiOrSequential(zkw,ops,runSequentialOnMultiFailure);
  }
}
