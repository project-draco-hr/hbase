{
  boolean supported=false;
  if (UNSAFE != null) {
    try {
      Class<?> clazz=UNSAFE.getClass();
      clazz.getMethod("objectFieldOffset",Field.class);
      clazz.getMethod("allocateInstance",Class.class);
      clazz.getMethod("arrayBaseOffset",Class.class);
      clazz.getMethod("getByte",Object.class,long.class);
      clazz.getMethod("putByte",Object.class,long.class,byte.class);
      clazz.getMethod("getBoolean",Object.class,long.class);
      clazz.getMethod("putBoolean",Object.class,long.class,boolean.class);
      clazz.getMethod("getInt",Object.class,long.class);
      clazz.getMethod("putInt",Object.class,long.class,int.class);
      clazz.getMethod("getLong",Object.class,long.class);
      clazz.getMethod("putLong",Object.class,long.class,long.class);
      clazz.getMethod("getFloat",Object.class,long.class);
      clazz.getMethod("putFloat",Object.class,long.class,float.class);
      clazz.getMethod("getDouble",Object.class,long.class);
      clazz.getMethod("putDouble",Object.class,long.class,double.class);
      clazz.getMethod("getObject",Object.class,long.class);
      clazz.getMethod("putObject",Object.class,long.class,Object.class);
      clazz.getMethod("copyMemory",Object.class,long.class,Object.class,long.class,long.class);
      supported=true;
    }
 catch (    Throwable e) {
    }
  }
  return supported;
}
