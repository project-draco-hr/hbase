{
  byte[] ROW=Bytes.toBytes("testRow");
  byte[] TABLE=Bytes.toBytes(this.getClass().getSimpleName());
  byte[] A=Bytes.toBytes("A");
  byte[][] FAMILIES=new byte[][]{A};
  Configuration conf=HBaseConfiguration.create();
  HRegion region=initHRegion(TABLE,getClass().getName(),conf,FAMILIES);
  RegionCoprocessorHost h=region.getCoprocessorHost();
  h.load(ObserverA.class,Coprocessor.PRIORITY_HIGHEST,conf);
  h.load(ObserverB.class,Coprocessor.PRIORITY_USER,conf);
  h.load(ObserverC.class,Coprocessor.PRIORITY_LOWEST,conf);
  Put put=new Put(ROW);
  put.add(A,A,A);
  region.put(put);
  Coprocessor c=h.findCoprocessor(ObserverA.class.getName());
  long idA=((ObserverA)c).id;
  c=h.findCoprocessor(ObserverB.class.getName());
  long idB=((ObserverB)c).id;
  c=h.findCoprocessor(ObserverC.class.getName());
  long idC=((ObserverC)c).id;
  assertTrue(idA < idB);
  assertTrue(idB < idC);
  HBaseTestingUtility.closeRegionAndWAL(region);
}
