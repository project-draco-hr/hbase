{
  Preconditions.checkState(!hasSplit,"An HLogSplitter instance may only be used once");
  hasSplit=true;
  status=TaskMonitor.get().createStatus("Splitting logs in " + srcDir);
  long startTime=EnvironmentEdgeManager.currentTimeMillis();
  status.setStatus("Determining files to split...");
  List<Path> splits=null;
  if (!fs.exists(srcDir)) {
    status.markComplete("No log directory existed to split.");
    return splits;
  }
  FileStatus[] logfiles=fs.listStatus(srcDir);
  if (logfiles == null || logfiles.length == 0) {
    return splits;
  }
  logAndReport("Splitting " + logfiles.length + " hlog(s) in "+ srcDir.toString());
  splits=splitLog(logfiles);
  splitTime=EnvironmentEdgeManager.currentTimeMillis() - startTime;
  String msg="hlog file splitting completed in " + splitTime + " ms for "+ srcDir.toString();
  status.markComplete(msg);
  LOG.info(msg);
  return splits;
}
