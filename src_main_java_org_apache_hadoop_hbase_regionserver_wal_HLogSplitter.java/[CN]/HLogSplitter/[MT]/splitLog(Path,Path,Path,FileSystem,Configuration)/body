{
  long startTime=System.currentTimeMillis();
  List<Path> splits=null;
  if (!fs.exists(srcDir)) {
    return splits;
  }
  FileStatus[] logfiles=fs.listStatus(srcDir);
  if (logfiles == null || logfiles.length == 0) {
    return splits;
  }
  LOG.info("Splitting " + logfiles.length + " hlog(s) in "+ srcDir.toString());
  splits=splitLog(rootDir,srcDir,oldLogDir,logfiles,fs,conf);
  try {
    FileStatus[] files=fs.listStatus(srcDir);
    for (    FileStatus file : files) {
      Path newPath=HLog.getHLogArchivePath(oldLogDir,file.getPath());
      LOG.info("Moving " + FSUtils.getPath(file.getPath()) + " to "+ FSUtils.getPath(newPath));
      if (!fs.rename(file.getPath(),newPath)) {
        throw new IOException("Unable to rename " + file.getPath() + " to "+ newPath);
      }
    }
    LOG.debug("Moved " + files.length + " log files to "+ FSUtils.getPath(oldLogDir));
    if (!fs.delete(srcDir,true)) {
      throw new IOException("Unable to delete " + srcDir);
    }
  }
 catch (  IOException e) {
    e=RemoteExceptionHandler.checkIOException(e);
    IOException io=new IOException("Cannot delete: " + srcDir);
    io.initCause(e);
    throw io;
  }
  splitTime=System.currentTimeMillis() - startTime;
  LOG.info("hlog file splitting completed in " + splitTime + " ms for "+ srcDir.toString());
  return splits;
}
