{
  Path oldRegionPath=r.getRegionDir();
  Text midKey=r.compactStores();
  assertNotNull(midKey);
  long startTime=System.currentTimeMillis();
  HRegion subregions[]=r.splitRegion(this,midKey);
  if (subregions != null) {
    LOG.info("Split region elapsed time: " + ((System.currentTimeMillis() - startTime) / 1000.0));
    assertEquals("Number of subregions",subregions.length,2);
    for (int i=0; i < subregions.length; i++) {
      subregions[i]=openClosedRegion(subregions[i]);
      subregions[i].compactStores();
    }
    Path oldRegion1=subregions[0].getRegionDir();
    Path oldRegion2=subregions[1].getRegionDir();
    startTime=System.currentTimeMillis();
    r=HRegion.mergeAdjacent(subregions[0],subregions[1]);
    region=new HRegionIncommon(r);
    LOG.info("Merge regions elapsed time: " + ((System.currentTimeMillis() - startTime) / 1000.0));
    fs.delete(oldRegion1);
    fs.delete(oldRegion2);
    fs.delete(oldRegionPath);
  }
  LOG.info("splitAndMerge completed.");
}
