{
  byte[] tableName=Bytes.toBytes("testtable");
  byte[][] families={fam3};
  HBaseConfiguration hc=initSplit();
  String method=this.getName();
  initHRegion(tableName,method,hc,families);
  try {
    addContent(region,fam3);
    region.flushcache();
    final byte[] midkey=region.compactStores();
    assertNotNull(midkey);
    byte[][] cols={fam3};
    Scan scan=new Scan();
    scan.addColumns(cols);
    final InternalScanner s=region.getScanner(scan);
    final HRegion regionForThread=region;
    Thread splitThread=new Thread(){
      @Override public void run(){
        try {
          split(regionForThread,midkey);
        }
 catch (        IOException e) {
          fail("Unexpected exception " + e);
        }
      }
    }
;
    splitThread.start();
    for (int i=0; i < 6; i++) {
      try {
        Put put=new Put(region.getRegionInfo().getStartKey());
        put.add(fam3,null,Bytes.toBytes("val"));
        region.put(put);
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
        fail("Unexpected exception " + e);
      }
    }
    s.next(new ArrayList<KeyValue>());
    s.close();
  }
 catch (  UnknownScannerException ex) {
    ex.printStackTrace();
    fail("Got the " + ex);
  }
}
