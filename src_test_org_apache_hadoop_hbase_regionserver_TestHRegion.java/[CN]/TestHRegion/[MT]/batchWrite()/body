{
  long totalFlush=0;
  long totalCompact=0;
  long totalLog=0;
  long startTime=System.currentTimeMillis();
  int valsize=1000;
  for (int k=FIRST_ROW; k <= N_ROWS; k++) {
    String randstr1="" + System.currentTimeMillis();
    StringBuffer buf1=new StringBuffer("val_" + k + "__");
    while (buf1.length() < valsize) {
      buf1.append(randstr1);
    }
    BatchUpdate batchUpdate=new BatchUpdate(new Text("row_" + k),System.currentTimeMillis());
    batchUpdate.put(CONTENTS_BODY,buf1.toString().getBytes(HConstants.UTF8_ENCODING));
    region.commit(batchUpdate);
    if (k > 0 && k % (N_ROWS / 100) == 0) {
      LOG.info("Flushing write #" + k);
      long flushStart=System.currentTimeMillis();
      region.flushcache();
      long flushEnd=System.currentTimeMillis();
      totalFlush+=(flushEnd - flushStart);
      if (k % (N_ROWS / 10) == 0) {
        System.err.print("Rolling log...");
        long logStart=System.currentTimeMillis();
        log.rollWriter();
        long logEnd=System.currentTimeMillis();
        totalLog+=(logEnd - logStart);
        LOG.info("  elapsed time: " + ((logEnd - logStart) / 1000.0));
      }
    }
  }
  long startCompact=System.currentTimeMillis();
  r.compactStores();
  totalCompact=System.currentTimeMillis() - startCompact;
  LOG.info("Region compacted - elapsedTime: " + (totalCompact / 1000.0));
  long endTime=System.currentTimeMillis();
  long totalElapsed=(endTime - startTime);
  LOG.info("");
  LOG.info("Batch-write complete.");
  LOG.info("Wrote " + N_ROWS + " rows, each of ~"+ valsize+ " bytes");
  LOG.info("Total flush-time: " + (totalFlush / 1000.0));
  LOG.info("Total compact-time: " + (totalCompact / 1000.0));
  LOG.info("Total log-time: " + (totalLog / 1000.0));
  LOG.info("Total time elapsed: " + (totalElapsed / 1000.0));
  LOG.info("Total time, rows/second: " + (N_ROWS / (totalElapsed / 1000.0)));
  LOG.info("Adjusted time (not including flush, compact, or log): " + ((totalElapsed - totalFlush - totalCompact- totalLog) / 1000.0));
  LOG.info("Adjusted time, rows/second: " + (N_ROWS / ((totalElapsed - totalFlush - totalCompact- totalLog) / 1000.0)));
  LOG.info("");
  LOG.info("batchWrite completed.");
}
