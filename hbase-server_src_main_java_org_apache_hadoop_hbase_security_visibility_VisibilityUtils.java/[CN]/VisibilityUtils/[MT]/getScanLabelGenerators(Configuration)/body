{
  String slgClassesCommaSeparated=conf.get(VISIBILITY_LABEL_GENERATOR_CLASS);
  List<ScanLabelGenerator> slgs=new ArrayList<ScanLabelGenerator>();
  if (StringUtils.isNotEmpty(slgClassesCommaSeparated)) {
    String[] slgClasses=slgClassesCommaSeparated.split(COMMA);
    for (    String slgClass : slgClasses) {
      Class<? extends ScanLabelGenerator> slgKlass;
      try {
        slgKlass=(Class<? extends ScanLabelGenerator>)conf.getClassByName(slgClass.trim());
        slgs.add(ReflectionUtils.newInstance(slgKlass,conf));
      }
 catch (      ClassNotFoundException e) {
        throw new IllegalArgumentException("Unable to find " + slgClass,e);
      }
    }
  }
  if (slgs.isEmpty()) {
    slgs.add(ReflectionUtils.newInstance(FeedUserAuthScanLabelGenerator.class,conf));
    slgs.add(ReflectionUtils.newInstance(DefinedSetFilterScanLabelGenerator.class,conf));
  }
  return slgs;
}
