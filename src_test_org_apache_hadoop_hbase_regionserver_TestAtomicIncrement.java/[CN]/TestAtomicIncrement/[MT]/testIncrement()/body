{
  try {
    HTable table=null;
    HTableDescriptor desc=new HTableDescriptor(getName());
    desc.addFamily(new HColumnDescriptor(CONTENTS,1,HColumnDescriptor.DEFAULT_COMPRESSION,HColumnDescriptor.DEFAULT_IN_MEMORY,HColumnDescriptor.DEFAULT_BLOCKCACHE,HColumnDescriptor.DEFAULT_LENGTH,HColumnDescriptor.DEFAULT_TTL,false));
    HBaseAdmin admin=new HBaseAdmin(conf);
    admin.createTable(desc);
    try {
      Thread.sleep(conf.getLong(HConstants.THREAD_WAKE_FREQUENCY,10 * 1000) * 10);
    }
 catch (    InterruptedException e) {
    }
    table=new HTable(conf,desc.getName());
    byte[] row=Bytes.toBytes("foo");
    byte[] column="contents:1".getBytes(HConstants.UTF8_ENCODING);
    assertEquals(1L,table.incrementColumnValue(row,column,1));
    row=Bytes.toBytes("foo2");
    byte[] value={0,0,2};
    BatchUpdate bu=new BatchUpdate(row);
    bu.put(column,value);
    table.commit(bu);
    assertEquals(3L,table.incrementColumnValue(row,column,1));
    assertEquals(-2L,table.incrementColumnValue(row,column,-5));
    assertEquals(-502L,table.incrementColumnValue(row,column,-500));
    assertEquals(1500L,table.incrementColumnValue(row,column,2002));
    assertEquals(1501L,table.incrementColumnValue(row,column,1));
    row=Bytes.toBytes("foo3");
    byte[] value2={1,2,3,4,5,6,7,8,9};
    bu=new BatchUpdate(row);
    bu.put(column,value2);
    table.commit(bu);
    try {
      table.incrementColumnValue(row,column,1);
      fail();
    }
 catch (    IOException e) {
      System.out.println("Expected exception: " + e);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    if (e instanceof IOException) {
      IOException i=(IOException)e;
      throw i;
    }
    fail();
  }
}
