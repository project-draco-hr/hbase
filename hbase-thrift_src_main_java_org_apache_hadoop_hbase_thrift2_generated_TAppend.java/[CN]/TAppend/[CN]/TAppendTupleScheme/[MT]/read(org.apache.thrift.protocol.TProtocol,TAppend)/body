{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.row=iprot.readBinary();
  struct.setRowIsSet(true);
{
    org.apache.thrift.protocol.TList _list91=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.columns=new ArrayList<TColumnValue>(_list91.size);
    for (int _i92=0; _i92 < _list91.size; ++_i92) {
      TColumnValue _elem93;
      _elem93=new TColumnValue();
      _elem93.read(iprot);
      struct.columns.add(_elem93);
    }
  }
  struct.setColumnsIsSet(true);
  BitSet incoming=iprot.readBitSet(2);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TMap _map94=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map94.size);
      for (int _i95=0; _i95 < _map94.size; ++_i95) {
        ByteBuffer _key96;
        ByteBuffer _val97;
        _key96=iprot.readBinary();
        _val97=iprot.readBinary();
        struct.attributes.put(_key96,_val97);
      }
    }
    struct.setAttributesIsSet(true);
  }
  if (incoming.get(1)) {
    struct.durability=TDurability.findByValue(iprot.readI32());
    struct.setDurabilityIsSet(true);
  }
}
