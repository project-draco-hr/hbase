{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.row=iprot.readBinary();
  struct.setRowIsSet(true);
{
    org.apache.thrift.protocol.TList _list99=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.columns=new ArrayList<TColumnValue>(_list99.size);
    for (int _i100=0; _i100 < _list99.size; ++_i100) {
      TColumnValue _elem101;
      _elem101=new TColumnValue();
      _elem101.read(iprot);
      struct.columns.add(_elem101);
    }
  }
  struct.setColumnsIsSet(true);
  BitSet incoming=iprot.readBitSet(3);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TMap _map102=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.attributes=new HashMap<ByteBuffer,ByteBuffer>(2 * _map102.size);
      for (int _i103=0; _i103 < _map102.size; ++_i103) {
        ByteBuffer _key104;
        ByteBuffer _val105;
        _key104=iprot.readBinary();
        _val105=iprot.readBinary();
        struct.attributes.put(_key104,_val105);
      }
    }
    struct.setAttributesIsSet(true);
  }
  if (incoming.get(1)) {
    struct.durability=TDurability.findByValue(iprot.readI32());
    struct.setDurabilityIsSet(true);
  }
  if (incoming.get(2)) {
    struct.cellVisibility=new TCellVisibility();
    struct.cellVisibility.read(iprot);
    struct.setCellVisibilityIsSet(true);
  }
}
