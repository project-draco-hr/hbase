{
  Table meta=getMetaHTable(connection);
  try {
    HRegionInfo copyOfMerged=new HRegionInfo(mergedRegion);
    long time=Math.max(EnvironmentEdgeManager.currentTime(),masterSystemTime);
    Put putOfMerged=makePutFromRegionInfo(copyOfMerged,time);
    putOfMerged.addImmutable(HConstants.CATALOG_FAMILY,HConstants.MERGEA_QUALIFIER,regionA.toByteArray());
    putOfMerged.addImmutable(HConstants.CATALOG_FAMILY,HConstants.MERGEB_QUALIFIER,regionB.toByteArray());
    Delete deleteA=makeDeleteFromRegionInfo(regionA,time);
    Delete deleteB=makeDeleteFromRegionInfo(regionB,time);
    addLocation(putOfMerged,sn,1,-1,mergedRegion.getReplicaId());
    for (int i=1; i < regionReplication; i++) {
      addEmptyLocation(putOfMerged,i);
    }
    byte[] tableRow=Bytes.toBytes(mergedRegion.getRegionNameAsString() + HConstants.DELIMITER);
    Mutation[] mutations;
    if (saveBarrier) {
      Put putBarrierA=makeSerialDaughterPut(regionA.getEncodedNameAsBytes(),Bytes.toBytes(mergedRegion.getEncodedName()));
      Put putBarrierB=makeSerialDaughterPut(regionB.getEncodedNameAsBytes(),Bytes.toBytes(mergedRegion.getEncodedName()));
      mutations=new Mutation[]{putOfMerged,deleteA,deleteB,putBarrierA,putBarrierB};
    }
 else {
      mutations=new Mutation[]{putOfMerged,deleteA,deleteB};
    }
    multiMutate(meta,tableRow,mutations);
  }
  finally {
    meta.close();
  }
}
