{
  this.assignmentManager.getTableStateManager().setTableState(this.tableName,TableState.State.ENABLING);
  boolean done=false;
  ServerManager serverManager=((HMaster)this.server).getServerManager();
  List<Pair<HRegionInfo,ServerName>> tableRegionsAndLocations=MetaTableAccessor.getTableRegionsAndLocations(this.server.getZooKeeper(),this.server.getShortCircuitConnection(),tableName,true);
  int countOfRegionsInTable=tableRegionsAndLocations.size();
  Map<HRegionInfo,ServerName> regionsToAssign=regionsToAssignWithServerName(tableRegionsAndLocations);
  if (services != null) {
    List<HRegionInfo> unrecordedReplicas=AssignmentManager.replicaRegionsNotRecordedInMeta(new HashSet<HRegionInfo>(regionsToAssign.keySet()),services);
    Map<ServerName,List<HRegionInfo>> srvToUnassignedRegs=this.assignmentManager.getBalancer().roundRobinAssignment(unrecordedReplicas,serverManager.getOnlineServersList());
    if (srvToUnassignedRegs != null) {
      for (      Map.Entry<ServerName,List<HRegionInfo>> entry : srvToUnassignedRegs.entrySet()) {
        for (        HRegionInfo h : entry.getValue()) {
          regionsToAssign.put(h,entry.getKey());
        }
      }
    }
  }
  int regionsCount=regionsToAssign.size();
  if (regionsCount == 0) {
    done=true;
  }
  LOG.info("Table '" + this.tableName + "' has "+ countOfRegionsInTable+ " regions, of which "+ regionsCount+ " are offline.");
  List<ServerName> onlineServers=serverManager.createDestinationServersList();
  Map<ServerName,List<HRegionInfo>> bulkPlan=this.assignmentManager.getBalancer().retainAssignment(regionsToAssign,onlineServers);
  LOG.info("Bulk assigning " + regionsCount + " region(s) across "+ bulkPlan.size()+ " server(s), retainAssignment=true");
  BulkAssigner ba=new GeneralBulkAssigner(this.server,bulkPlan,this.assignmentManager,true);
  try {
    if (ba.bulkAssign()) {
      done=true;
    }
  }
 catch (  InterruptedException e) {
    LOG.warn("Enable operation was interrupted when enabling table '" + this.tableName + "'");
    Thread.currentThread().interrupt();
  }
  if (done) {
    this.assignmentManager.getTableStateManager().setTableState(this.tableName,TableState.State.ENABLED);
    LOG.info("Table '" + this.tableName + "' was successfully enabled. Status: done="+ done);
  }
 else {
    LOG.warn("Table '" + this.tableName + "' wasn't successfully enabled. Status: done="+ done);
  }
}
